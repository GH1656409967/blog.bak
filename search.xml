<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>【分享】kuangbin带你飞专题目录链接</title>
    <url>/%E5%88%86%E4%BA%AB/%E3%80%90%E5%88%86%E4%BA%AB%E3%80%91kuangbin%E5%B8%A6%E4%BD%A0%E9%A3%9E%E4%B8%93%E9%A2%98%E7%9B%AE%E5%BD%95%E9%93%BE%E6%8E%A5/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:48:59 GMT+0800 (GMT+08:00) --><p>更好的目录链接：<a href="https://vjudge.net/article/187" target="_blank" rel="noopener">https://vjudge.net/article/187</a> 快去全绿吧</p><hr><p><a href="https://vjudge.net/contest/65959" target="_blank" rel="noopener">[kuangbin带你飞]专题一 简单搜索</a><br><a href="https://vjudge.net/contest/65997" target="_blank" rel="noopener">[kuangbin带你飞]专题二 搜索进阶</a><br><a href="https://vjudge.net/contest/65998" target="_blank" rel="noopener">[kuangbin带你飞]专题三 Dancing Links</a><br><a href="https://vjudge.net/contest/66569" target="_blank" rel="noopener">[kuangbin带你飞]专题四 最短路练习</a><br><a href="https://vjudge.net/contest/66964" target="_blank" rel="noopener">[kuangbin带你飞]专题五 并查集</a><br><a href="https://vjudge.net/contest/66965" target="_blank" rel="noopener">[kuangbin带你飞]专题六 最小生成树</a><br><a href="https://vjudge.net/contest/66989" target="_blank" rel="noopener">[kuangbin带你飞]专题七 线段树</a><br><a href="https://vjudge.net/contest/67265" target="_blank" rel="noopener">[kuangbin带你飞]专题八 生成树</a><br><a href="https://vjudge.net/contest/67418" target="_blank" rel="noopener">[kuangbin带你飞]专题九 连通图</a><br><a href="https://vjudge.net/contest/68127" target="_blank" rel="noopener">[kuangbin带你飞]专题十 匹配问题</a><br><a href="https://vjudge.net/contest/68128" target="_blank" rel="noopener">[kuangbin带你飞]专题十一 网络流</a><br><a href="https://vjudge.net/contest/68966" target="_blank" rel="noopener">[kuangbin带你飞]专题十二 基础DP1</a><br><a href="https://vjudge.net/contest/68968" target="_blank" rel="noopener">[kuangbin带你飞]专题十三 基础计算几何</a><br><a href="https://vjudge.net/contest/70017" target="_blank" rel="noopener">[kuangbin带你飞]专题十四 数论基础</a><br><a href="https://vjudge.net/contest/70324" target="_blank" rel="noopener">[kuangbin带你飞]专题十五 数位DP</a><br><a href="https://vjudge.net/contest/70325" target="_blank" rel="noopener">[kuangbin带你飞]专题十六 KMP &amp; 扩展KMP &amp; Manacher</a><br><a href="https://vjudge.net/contest/70326" target="_blank" rel="noopener">[kuangbin带你飞]专题十七 AC自动机</a><br><a href="https://vjudge.net/contest/70655" target="_blank" rel="noopener">[kuangbin带你飞]专题十八 后缀数组</a><br><a href="https://vjudge.net/contest/71746" target="_blank" rel="noopener">[kuangbin带你飞]专题十九 矩阵</a><br><a href="https://vjudge.net/contest/76380" target="_blank" rel="noopener">[kuangbin带你飞]专题二十 斜率DP</a><br><a href="https://vjudge.net/contest/76505" target="_blank" rel="noopener">[kuangbin带你飞]专题二十一 概率&amp;期望</a><br><a href="https://vjudge.net/contest/77874" target="_blank" rel="noopener">[kuangbin带你飞]专题二十二 区间DP</a><br><a href="https://vjudge.net/contest/105570" target="_blank" rel="noopener">[kuangbin带你飞]专题二十三 计算几何之半平面交</a></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>分享</category>
      </categories>
      <tags>
        <tag>kuangbin</tag>
      </tags>
  </entry>
  <entry>
    <title>【专题】博弈论</title>
    <url>/%E4%B8%93%E9%A2%98/%E3%80%90%E4%B8%93%E9%A2%98%E3%80%91%E5%8D%9A%E5%BC%88%E8%AE%BA/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:48:59 GMT+0800 (GMT+08:00) --><h1 id="Blowing-Fuses-ZOJ-1195"><a href="#Blowing-Fuses-ZOJ-1195" class="headerlink" title="Blowing Fuses (ZOJ - 1195)"></a>Blowing Fuses (<a href="https://vjudge.net/problem/ZOJ-1195" target="_blank" rel="noopener">ZOJ - 1195</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>Maybe you are familiar with the following situation. You have plugged in a lot of electrical devices, such as toasters, refrigerators, microwave ovens, computers, stereos, etc, and have them all running. But at the moment when you turn on the TV, the fuse blows, since the power drawn from all the machines is greater than the capacity of the fuse. Of course this is a great safety feature, avoiding that houses burn down too often due to fires ignited by overheating wires. But it is also annoying to walk down to the basement (or some other inconvenient place) to replace to fuse or switch it back on.</p><p>What one would like to have is a program that checks before turning on an electrical device whether the combined power drawn by all running devices exceeds the fuses capacity (and it blows), or whether it is safe to turn it on.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>The input consists of several test cases. Each test case describes a set of electrical devices and gives a sequence of turn on/off operations for these devices.</p><p>The first line of each test case contains three integers n, m and c, where n is the number of devices (n &lt;= 20), m the number of operations performed on these devices and c is the capacity of the fuse (in Amperes). The following n lines contain one positive integer ci each, the consumption (in Amperes) of the i-th device.</p><p>This is followed by m lines also containing one integer each, between 1 and n inclusive. They describe a sequence of turn on/turn off operations performed on the devices. For every number, the state of that particular devices is toggled, i.e. if it is currently running, it is turned off, and if it is currently turned off, it will by switched on. At the beginning all devices are turned off.</p><p>The input will be terminated by a test case starting with n = m = c = 0. This test case should not be processed.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For each test case, first output the number of the test case. Then output whether the fuse was blown during the operation sequence. The fuse will be blown if the sum of the power consumptions ci of turned on devices at some point exceeds the capacity of the fuse c.</p><p>If the fuse is not blown, output the maximal power consumption by turned on devices that occurred during the sequence.</p><p>Output a blank line after each test case.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2 2 10</span><br><span class="line">5</span><br><span class="line">7</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3 6 10</span><br><span class="line">2</span><br><span class="line">5</span><br><span class="line">7</span><br><span class="line">2</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">1</span><br><span class="line">3</span><br><span class="line">0 0 0</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Sequence 1</span><br><span class="line">Fuse was blown.</span><br><span class="line"></span><br><span class="line">Sequence 2</span><br><span class="line">Fuse was not blown.</span><br><span class="line">Maximal power consumption was 9 amperes.</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[<span class="number">30</span>][<span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> n, m, c, num = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (~<span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>, &amp;n, &amp;m, &amp;c) &amp;&amp; n &amp;&amp; m &amp;&amp; c) &#123;</span><br><span class="line">        <span class="built_in">memset</span>(a, <span class="number">0</span>, <span class="keyword">sizeof</span>(a));</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++) &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i][<span class="number">0</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> mx = <span class="number">0</span>, sum = <span class="number">0</span>, t;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++) &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;t);</span><br><span class="line">            <span class="keyword">if</span>(a[t][<span class="number">1</span>]==<span class="number">0</span>) &#123;</span><br><span class="line">                a[t][<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">                sum += a[t][<span class="number">0</span>];</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                a[t][<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">                sum -= a[t][<span class="number">0</span>];</span><br><span class="line">            &#125;</span><br><span class="line">            mx = max(sum, mx);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Sequence %d\n"</span>, num++);</span><br><span class="line">        <span class="keyword">if</span>(mx&gt;c) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Fuse was blown.\n"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Fuse was not blown.\n"</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Maximal power consumption was %d amperes.\n"</span>, mx);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>专题</category>
      </categories>
      <tags>
        <tag>博弈论</tag>
      </tags>
  </entry>
  <entry>
    <title>【分享】增重方法推荐</title>
    <url>/%E5%88%86%E4%BA%AB/%E3%80%90%E5%88%86%E4%BA%AB%E3%80%91%E5%A2%9E%E9%87%8D%E6%96%B9%E6%B3%95%E6%8E%A8%E8%8D%90/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:48:59 GMT+0800 (GMT+08:00) --><h1 id="一、怎么吃都不胖的原因"><a href="#一、怎么吃都不胖的原因" class="headerlink" title="一、怎么吃都不胖的原因"></a>一、怎么吃都不胖的原因</h1><ol><li><p>基因表达，身体倾向于将多余的营养代谢而不是储存</p></li><li><p>饮食习惯，客观上吃得少</p></li><li><p>身体不需要</p></li></ol><h1 id="二、增重为什么要增肌"><a href="#二、增重为什么要增肌" class="headerlink" title="二、增重为什么要增肌"></a>二、增重为什么要增肌</h1><ul><li><p>增肌：肌肉增长可控，锻炼哪增哪</p></li><li><p>增脂：脂肪增长不可控，增长的位置由基因决定</p></li></ul><h1 id="三、怎么练容易显壮"><a href="#三、怎么练容易显壮" class="headerlink" title="三、怎么练容易显壮"></a>三、怎么练容易显壮</h1><p>增肌的基本原理就是通过力量训练，不断刺激肌肉，让肌纤维撕裂，让肌糖原消耗，然后补充足够的营养，让肌肉进行超量恢复，同时负荷渐进。关于增肌有以下要点：</p><ol><li><p>优先练胸、背、臀腿等大肌群。</p><div><div class="fold_hider"><div class="close hider_title">查看详细</div></div><div class="fold"><p>一方面，大肌群的肌肉量占比大，增肌对体型变化的效果更加明显（肩部、手臂、腰腹、小腿则为小肌群，但是由于三角肌在身体两侧，练大了，从正面看人会马上变宽，所以肩部也可以和大肌群在前期安排优先的训练）。另一方面，大肌群的训练会带动小肌群，大部分练胸背的动作，手臂都是有一起参与发力的。很多练臀腿的动作，由于对核心稳定的要求非常高，腰腹核心肌群都是会被一起练到的。</p></div></div></li><li><p>使用大重量训练。</p><div><div class="fold_hider"><div class="close hider_title">查看详细</div></div><div class="fold"><p>何谓“大”，一般来说一口气能做5~10个的动作的重量就足够了。肌肉分为两种，红肌纤维（力量小、耐力强、体积小、体积增长潜力小），白肌纤维（力量大、耐力差、体积大、体积增长潜力大）。所以快速增重，需要增长白肌纤维，也就是使用大重量去刺激。</p></div></div></li><li><p>以复合动作为主。</p><div><div class="fold_hider"><div class="close hider_title">查看详细</div></div><div class="fold"><p>复合动作可以同时满足以上两个条件，大肌群带动小肌群和使用大重量训练。负重训练可以分为两种类型，复合动作和孤立动作。</p><p>复合动作，就是同时要用到多块肌肉，多个关节一起运动的动作。例如，卧推、推举、俯卧撑，可以同时练到胸部、肩部前束和手臂的肱三头肌；引体向上、划船，可以同时练到背部和手臂的肱二头肌；深蹲可以同时练到大腿的前侧、后侧和臀部，对腰腹核心也有刺激；硬拉就更厉害了，除了整个臀部腿部、腰腹核心、背部，甚至前臂都有一定刺激。</p><p>孤立动作，例如弯举，只能针对单一方面的肌肉，但是也特别重要，有些复合动作覆盖不到的地方，或者需要特别加强的地方，就可以使用孤立动作进行补充。</p></div></div></li><li><p>优先选择自由重量，即杠铃哑铃等。</p><div><div class="fold_hider"><div class="close hider_title">查看详细</div></div><div class="fold"><p>自由重量的效果会比固定器械要更好。一方面，是肌肉的受力范围。固定器械的动作轨迹太过单一，只能够刺激到某块肌肉的某个局部。另一方面，是安全性。长期只使用固定器械，会开始依赖固定器械的稳定性，自己反而没有办法学会控制肌肉的稳定性。</p><p>合理的方法应该是由最轻的自由重量开始练。刚开始使用杠铃哑铃，会感觉动作不稳，这是正常的，但由于重量小所以不必担心受伤。多练几次后动作控制很稳了，再逐步循序渐进地增加重量。</p></div></div></li></ol><h1 id="四、训练计划"><a href="#四、训练计划" class="headerlink" title="四、训练计划"></a>四、训练计划</h1><p>训练前需要热身，可以慢跑5~10分钟，再对全身做一些简单的短时间拉伸。</p><ol><li><p>双分化双循环训练（初学者建议）</p><div><div class="fold_hider"><div class="close hider_title">查看详细</div></div><div class="fold"><p>也就是把全身划分为上下两个部分，每次只练其中一个部分，然后一周四练。例如说，周一、四练上半身（胸、背、肩、手臂），周二、五练下半身（腿、臀、小腿、核心）。这样每个部位每周就能训练到两次，训练容量和训练频率都有保障。</p></div></div></li><li><p>躯干 + 四肢（快速显壮）</p><div><div class="fold_hider"><div class="close hider_title">查看详细</div></div><div class="fold"><p>躯干主要就是胸部和背部两方面，胸背练大了，人就不会显得单薄。四肢主要是大腿、肩部和手臂，这些部分夏天特别容易外露，练壮了比较容易突出肌肉感。一周四练的话，周一、四进行躯干训练（胸大肌、背部肌群），周二、五进行四肢训练（臀腿肌群、三角肌中后、肱二头肌）。</p></div></div></li></ol><p><strong>接下来给出【躯干 + 四肢】的训练方案</strong></p><h2 id="躯干-基础"><a href="#躯干-基础" class="headerlink" title="躯干 - 基础"></a>躯干 - 基础</h2><ul><li><p>胸部训练，哑铃卧推</p><div><div class="fold_hider"><div class="close hider_title">查看详细</div></div><div class="fold"><p>自由重量，先把肩胛骨收紧，仰躺在卧推椅上，肩部再往中间收一收，双手垂直在身体上方，然后缓慢有控制地把哑铃往下放，放到最低点再用力往上推，注意小臂全程是垂直地面的，可以想想把两边的手肘往中间夹，这样胸肌挤压的感觉会强烈很多。</p><p>组数：4组<br>次数：8次<br>间歇：1~2分钟<br>练法：最后一组力竭</p></div></div></li><li><p>背部训练，引体向上</p><div><div class="fold_hider"><div class="close hider_title">查看详细</div></div><div class="fold"><p>双手比肩部略宽握着吊杆，身体挺直，先把肩胛骨往下压，然后把整个身体用力拉上去，然后再缓慢有控制地往下放。注意三个问题，①拉起来的过程中不要耸肩，②身体不要往后仰太多，③动作要尽量做完全程。</p><p>组数：自定<br>次数：共30个<br>间歇：1~2分钟<br>练法：完成目标数量即可</p></div></div></li><li><p>胸部训练，上斜卧推</p><div><div class="fold_hider"><div class="close hider_title">查看详细</div></div><div class="fold"><p>上斜卧推，使用杠铃哑铃或者史密斯机，同样先收紧肩胛骨，仰躺在卧推椅上，双手垂直放在身体上方，然后缓慢有控制地把哑铃往下放，放到最低点再用力往上推，同样注意小臂全程是垂直地面的。</p><p>组数：4组<br>次数：8次<br>间歇：1~2分钟<br>练法：最后一组力竭</p></div></div></li><li><p>背部训练，坐姿划船</p><div><div class="fold_hider"><div class="close hider_title">查看详细</div></div><div class="fold"><p>坐在凳子上，双脚踩稳，挺直腰背，核心收紧，用力把把手拉起来，然后缓慢有控制的往下放，身体可能会有小幅度的摆动，但是要保持身体挺直，摆动的幅度也不要太大，要特别注意，往后拉的时候，背部要使劲地往中间夹，这样背部才能练出感觉来。</p><p>组数：4组<br>次数：12次<br>间歇：1~2分钟<br>练法：最后一组力竭</p></div></div></li></ul><h2 id="躯干-附加"><a href="#躯干-附加" class="headerlink" title="躯干 - 附加"></a>躯干 - 附加</h2><ul><li><p>胸部训练，绳索夹胸</p><div><div class="fold_hider"><div class="close hider_title">查看详细</div></div><div class="fold"><p>胸部孤立动作，夹胸，龙门架或者夹胸器械等，可以帮助新手尽快找到胸部肌肉挤压发力的感觉，而且也不会增加手臂的疲劳，注意肩胛骨保持收紧状态。想着把手肘从两边往中间夹，胸肌就有感觉了。</p><p>组数：3组<br>次数：15<del>20次<br>间歇：45</del>60秒<br>练法：每组力竭</p></div></div></li><li><p>背部训练，单臂哑铃划船</p><div><div class="fold_hider"><div class="close hider_title">查看详细</div></div><div class="fold"><p>算不上孤立动作，但是可以尽可能的让背部肌肉往后收缩，同样有利于新手找发力感觉的训练，要注意身体的稳定，不要左右摇晃，充分感受肩部和背部往后移动的感觉。</p><p>组数：3组<br>次数：12<del>15次<br>间歇：45</del>60秒<br>练法：每组力竭</p></div></div></li></ul><h2 id="躯干-放松"><a href="#躯干-放松" class="headerlink" title="躯干 - 放松"></a>躯干 - 放松</h2><div><div class="fold_hider"><div class="close hider_title">查看详细</div></div><div class="fold"><ul><li>拉伸胸肌</li><li>拉伸背阔肌</li><li>拉伸中背部</li><li>放松大圆肌</li><li>放松胸小肌</li><li>补充糖原（香蕉、增肌粉）</li></ul></div></div><h2 id="四肢-基础"><a href="#四肢-基础" class="headerlink" title="四肢 - 基础"></a>四肢 - 基础</h2><ul><li><p>腿部训练，高脚杯深蹲</p><div><div class="fold_hider"><div class="close hider_title">查看详细</div></div><div class="fold"><p>双手撑着哑铃，紧贴胸前，挺胸收背，双脚站距比肩宽略宽，然后臀部往后推，膝盖往两边打开，适当地往脚尖的方向滑动，顺势蹲下，然后大腿和臀部发力，用力站起来。注意，重心保持在足弓处，腰背要挺直成一条直线，膝盖的朝向要和脚尖的方向一致。</p><p>组数：4组<br>次数：8次<br>间歇：1~2分钟<br>练法：最后一组力竭</p></div></div></li></ul><ul><li><p>腿部训练，罗马尼亚硬拉</p><div><div class="fold_hider"><div class="close hider_title">查看详细</div></div><div class="fold"><p>半程的硬拉，双手握着杠铃或者哑铃，挺直腰背，核心收紧然后往前缓慢有控制地俯身下去，再用力把杠铃拉起来，拉起来地过程不是腰部发力，腰腹核心全程收紧，把髋部往前顶，用臀部发力。</p><p>组数：4组<br>次数：12次<br>间歇：1~2分钟<br>练法：最后一组力竭</p></div></div></li><li><p>肩部训练，侧平举</p><div><div class="fold_hider"><div class="close hider_title">查看详细</div></div><div class="fold"><p>双手握着哑铃在身体的两侧，身体站直，把哑铃往两边抬起来，抬到肩部水平的高度，就可以缓慢有控制地往下放了。要注意身体要稳住，不要前后晃动，不要耸肩，手臂的角度也不要有变化。</p><p>组数：4组<br>次数：15<del>20次<br>间歇：30</del>45秒<br>练法：每组力竭</p></div></div></li><li><p>肩部训练，面拉</p><div><div class="fold_hider"><div class="close hider_title">查看详细</div></div><div class="fold"><p>练肩部后束，把手上的绳索以一个往后拉往外旋的方式拉近自己的脸部，注意手肘不要低于肩，双手不要低于手肘。</p><p>组数：4组<br>次数：12<del>15次<br>间歇：45</del>60秒<br>练法：每组力竭</p></div></div></li><li><p>手臂训练，杠铃弯举</p><div><div class="fold_hider"><div class="close hider_title">查看详细</div></div><div class="fold"><p>身体不要晃动，动作要做够全程</p><p>组数：3组<br>次数：12次<br>间歇：45~60秒<br>练法：每组力竭</p></div></div></li><li><p>手臂训练，锤式弯举</p><div><div class="fold_hider"><div class="close hider_title">查看详细</div></div><div class="fold"><p>拿起两个哑铃，虎口朝前，左右交替做锤式弯举，身体不要乱晃。</p><p>组数：3组<br>次数：12次<br>间歇：45~60秒<br>练法：每组力竭</p></div></div></li></ul><h2 id="四肢-放松"><a href="#四肢-放松" class="headerlink" title="四肢 - 放松"></a>四肢 - 放松</h2><div><div class="fold_hider"><div class="close hider_title">查看详细</div></div><div class="fold"><ul><li><p>拉伸大腿前侧</p></li><li><p>拉伸大腿后侧</p></li><li><p>蛙趴（大腿内侧）</p></li><li><p>拉伸肩部</p></li><li><p>拉伸肱二头肌</p></li><li><p>放松髂胫束</p></li><li><p>放松股四头肌</p></li></ul></div></div><h1 id="五、饮食"><a href="#五、饮食" class="headerlink" title="五、饮食"></a>五、饮食</h1><p>肌肉不是在训练时增长的，而是在恢复中。没吃够，就没有原料支持肌纤维的超量恢复。三分练，七分吃。</p><ul><li><p>蛋白质，每天每公斤体重1.8克</p><div><div class="fold_hider"><div class="close hider_title">查看详细</div></div><div class="fold"><p>训练强度足够的增肌训练者，每天每公斤体重需要摄入1.5~2克蛋白质。以每天每公斤体重1.8克为例，体重55kg，则需要摄入55 × 1.8 = 99g 蛋白质。肉、蛋、奶和豆类都有丰富的蛋白质，但是注意增肌更需要动物蛋白。</p></div></div></li><li><p>碳水化合物，每天每公斤体重6克</p><div><div class="fold_hider"><div class="close hider_title">查看详细</div></div><div class="fold"><p>同时，肌肉增长还需要补充碳水化合物，用以支持蛋白质的摄入。每天每公斤需要摄入4~8克碳水化合物，以6克碳水化合物为例，体重55kg需要摄入55 × 6 = 330g 碳水化合物。对于体型瘦的人来说，很难吃够这个量，因此来说增肌粉效果通常好于蛋白粉。</p></div></div></li><li><p>不饱和脂肪酸，坚果类等随意</p><div><div class="fold_hider"><div class="close hider_title">查看详细</div></div><div class="fold"><p>坚果类、牛油果、三文鱼都不错，虽然不是增肌的重点，但是适当摄入有益身体健康。</p></div></div></li></ul><p><strong>饮食计算</strong></p><p>使用薄荷营养师等APP以及食物秤，计算每日摄入量是否达标。</p><p><strong>加餐</strong></p><p>可以安排一天6餐。前期困难的话可以循序渐进。</p><p><strong>简单粗暴</strong></p><p>每周一称体重，如果有上升，说明吃够了，反之没有，需要加量。</p><h1 id="六、休息"><a href="#六、休息" class="headerlink" title="六、休息"></a>六、休息</h1><ul><li>不要训练过度，需要注意超量恢复原理，休息很重要。</li><li>连续训练两到三天，需要彻底休息一天。</li><li>同一块肌肉，不要安排连续两天训练。</li><li>每2~3个月安排一周恢复周，训练减半或者完全不练。</li><li>拒绝熬夜，让皮质醇降下去。</li></ul><h1 id="附、家庭计划"><a href="#附、家庭计划" class="headerlink" title="附、家庭计划"></a>附、家庭计划</h1><p>使用弹力带。</p><p>周一四，躯干训练：</p><ul><li>弹力带俯卧撑</li><li>坐姿上斜推胸</li><li>弹力带夹胸</li><li>弹力带俯身划船</li><li>弹力带坐姿划船</li><li>弹力带直臂下压</li></ul><p>周二五，四肢训练：</p><ul><li>弹力带深蹲</li><li>弹力带硬拉</li><li>弹力带侧平举</li><li>弹力带面拉</li><li>弹力带弯举</li><li>弹力带锤式弯举</li></ul><p>此外可以关注本文内容主要来源，B站up及wx公众号“卓叔增重”。</p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>分享</category>
      </categories>
      <tags>
        <tag>健身</tag>
      </tags>
  </entry>
  <entry>
    <title>【测试】nexT的markdown支持</title>
    <url>/%E6%B5%8B%E8%AF%95/%E3%80%90%E6%B5%8B%E8%AF%95%E3%80%91nexT%E7%9A%84markdown%E6%94%AF%E6%8C%81/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:48:59 GMT+0800 (GMT+08:00) --><p>[TOC]</p><p>This is a test!</p><p>这是一个测试</p><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><h3 id="Markdown"><a href="#Markdown" class="headerlink" title="Markdown"></a>Markdown</h3><p>字体 <strong>加粗</strong> 显示<br>字体 <strong>加粗</strong> 显示<br>字体 <em>斜体</em> 显示<br>字体 <em>斜体</em> 显示<br>字体 <strong><em>加粗并斜体</em></strong> 显示<br>字体 <strong><em>加粗并斜体</em></strong> 显示<br>组合 <em><strong>加粗并斜体</strong></em> 显示</p><blockquote><p>引用</p><blockquote><p>引用引用</p></blockquote></blockquote><p>这样来 <del>删除一段文本</del></p><ul><li><p>无序</p><ul><li>无序<ul><li>无序</li></ul></li></ul></li><li><p>无序</p></li><li><p>无序</p><ul><li>无序</li></ul></li></ul><ol><li>有序</li><li>有序<ol><li>有序</li><li>有序</li></ol></li><li>有序</li></ol><table><thead><tr><th>表头</th><th>表头</th></tr></thead><tbody><tr><td>单元格</td><td>单元格</td></tr><tr><td>单元格</td><td>单元格</td></tr></tbody></table><table><thead><tr><th>表头</th><th>表头</th></tr></thead><tbody><tr><td>单元格</td><td>单元格</td></tr><tr><td>单元格</td><td>单元格</td></tr></tbody></table><p>$$<br>a = b * c / d - (e + f)<br>$$</p><p><a href="http://localhost:4000/" target="_blank" rel="noopener">首页</a></p><p>首页: <a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a></p><hr><h3 id="C"><a href="#C" class="headerlink" title="C++"></a>C++</h3><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//#pragma GCC optimize(3,"Ofast","inline")</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unordered_map&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Mid ((l+r)/2)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mp make_pair</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls ((rt)&lt;&lt;1)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs ((rt)&lt;&lt;1|1)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> sq(u) ((u)*(u))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Abs(u) ((u)&gt;0?(u):-(u))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ze(u) (Abs(u)&lt;eps)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eq(u, v) (ze((u)-(v)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Sgn(u) ((u)&gt;eps?1:((u)&lt;-eps?-1:0))</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> UL;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">double</span> DB;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> LL INF = <span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> DB eps = <span class="number">1e-8</span>;</span><br><span class="line"><span class="keyword">const</span> DB pi = <span class="built_in">acos</span>(<span class="number">-1.0</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = (<span class="keyword">int</span>)<span class="number">1e5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M = (<span class="keyword">int</span>)<span class="number">4e3</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = N + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxm = M + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line">LL ans = <span class="number">1e18</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">SUM</span><span class="params">(LL a, LL b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LL cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (a /= b; a; a /= b) cnt += a;</span><br><span class="line">    <span class="keyword">return</span> cnt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">LL sum = <span class="number">0</span>, upperlim = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">(LL row, LL ld, LL rd)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (row != upperlim)</span><br><span class="line">    &#123;</span><br><span class="line">        LL pos = upperlim &amp; ~(row | ld | rd);</span><br><span class="line">        <span class="keyword">while</span> (pos)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">long</span> p = pos &amp; -pos;</span><br><span class="line">            pos -= p;</span><br><span class="line">            test(row + p, (ld + p) &lt;&lt; <span class="number">1</span>, (rd + p) &gt;&gt; <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        sum++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">LL f[<span class="number">84</span>] = &#123; <span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">2</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fib</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">3</span>; i &lt;= <span class="number">83</span>; i++) &#123;</span><br><span class="line">        f[i] = f[i - <span class="number">1</span>] + f[i - <span class="number">2</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//int T; scanf("%d", &amp;T);</span></span><br><span class="line">    <span class="comment">//int n; scanf("%d", &amp;n);</span></span><br><span class="line">    fib();</span><br><span class="line"></span><br><span class="line">    LL x, m;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld %lld"</span>, &amp;x, &amp;m);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    LL v = <span class="number">1</span>, flag = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (v = <span class="number">1</span>; v &lt;= <span class="number">83</span>; v++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (x == f[v]) &#123;</span><br><span class="line">            flag = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">        <span class="keyword">for</span> (LL i = <span class="number">2</span>; i * i &lt;= m; ++i)</span><br><span class="line">        &#123;</span><br><span class="line">            LL cnt = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span> (m % i == <span class="number">0</span>)++cnt, m /= i;</span><br><span class="line">            <span class="keyword">if</span> (cnt)ans = <span class="built_in">min</span>(ans, SUM(x, i) / cnt);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (m &gt; <span class="number">1</span>)ans = <span class="built_in">min</span>(ans, SUM(x, m));</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, ans);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> n = x % <span class="built_in">min</span>(<span class="number">13L</span>L, m) + <span class="number">1L</span>L;</span><br><span class="line"></span><br><span class="line">    upperlim = (upperlim &lt;&lt; n) - <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    test(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, sum);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure></div></div><h3 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h3><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.jee.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.LocaleResolver;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.InterceptorRegistry;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.WebMvcConfigurer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.i18n.LocaleChangeInterceptor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.i18n.SessionLocaleResolver;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Locale;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyMvcConfiger</span> <span class="keyword">implements</span> <span class="title">WebMvcConfigurer</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addInterceptors</span><span class="params">(InterceptorRegistry registry)</span> </span>&#123;</span><br><span class="line">        registry.addInterceptor(localeChangeInterceptor());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> LocaleResolver <span class="title">localeResolver</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        SessionLocaleResolver sessionLocaleResolver = <span class="keyword">new</span> SessionLocaleResolver();</span><br><span class="line">        sessionLocaleResolver.setDefaultLocale(Locale.CHINA);</span><br><span class="line">        <span class="keyword">return</span> sessionLocaleResolver;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> LocaleChangeInterceptor <span class="title">localeChangeInterceptor</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        LocaleChangeInterceptor localeChangeInterceptor = <span class="keyword">new</span> LocaleChangeInterceptor();</span><br><span class="line">        localeChangeInterceptor.setParamName(<span class="string">"lang"</span>);</span><br><span class="line">        <span class="keyword">return</span> localeChangeInterceptor;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><h3 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h3><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> unittest</span><br><span class="line"></span><br><span class="line">file = open(<span class="string">"test.txt"</span>, <span class="string">"r+"</span>)</span><br><span class="line">article = file.read()</span><br><span class="line"></span><br><span class="line"><span class="meta">@profile</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">count_char_1</span><span class="params">()</span>:</span></span><br><span class="line">    num = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> article:</span><br><span class="line">        <span class="keyword">for</span> word <span class="keyword">in</span> line.split():</span><br><span class="line">            num = num + len(word)</span><br><span class="line">    <span class="keyword">return</span> num</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@profile</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">count_char_2</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> sum([len(word) <span class="keyword">for</span> line <span class="keyword">in</span> article <span class="keyword">for</span> word <span class="keyword">in</span> line.split()])</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="meta">@profile</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">count_char_3</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> sum(len(word) <span class="keyword">for</span> line <span class="keyword">in</span> article <span class="keyword">for</span> word <span class="keyword">in</span> line.split())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    count_char_1()</span><br><span class="line">    count_char_2()</span><br><span class="line">    count_char_3()</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>测试</category>
      </categories>
      <tags>
        <tag>测试</tag>
      </tags>
  </entry>
  <entry>
    <title>【配置】CentOS7配置MySQL和JDBC</title>
    <url>/%E9%85%8D%E7%BD%AE/%E3%80%90%E9%85%8D%E7%BD%AE%E3%80%91CentOS7%E9%85%8D%E7%BD%AEMySQL%E5%92%8CJDBC/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:48:59 GMT+0800 (GMT+08:00) --><hr><h1 id="一、准备"><a href="#一、准备" class="headerlink" title="一、准备"></a>一、准备</h1><p>卸载已存在的MySQL</p><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"># rpm -qa | grep -i mysql</span><br></pre></td></tr></table></figure><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"># rpm -e --nodeps PackageName</span><br></pre></td></tr></table></figure><p>于MySQL官网根据需要下载，参考链接：</p><ul><li><a href="https://dev.mysql.com/downloads/file/?id=484922" target="_blank" rel="noopener">mysql80-community-release-el7-3.noarch.rpm</a></li><li><a href="https://dev.mysql.com/downloads/file/?id=485761" target="_blank" rel="noopener">mysql-connector-java-8.0.16-1.el7.noarch.rpm</a></li></ul><hr><h1 id="二、MySQL"><a href="#二、MySQL" class="headerlink" title="二、MySQL"></a>二、MySQL</h1><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>更新MySQL的yum源</p><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"># rpm -ivh mysql80-community-release-el7-<span class="number">3</span>.noarch.rpm</span><br></pre></td></tr></table></figure><p>yum安装</p><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"># yum install mysql-community-server</span><br></pre></td></tr></table></figure><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>启动MySQL服务</p><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"># systemctl <span class="built_in">start</span> mysqld.service</span><br></pre></td></tr></table></figure><p>查看MySQL的初始密码</p><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"># grep 'password' /var/log/mysqld.log</span><br></pre></td></tr></table></figure><p>登录</p><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"># mysql -uroot -p</span><br></pre></td></tr></table></figure><p>修改密码</p><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">mysql&gt; ALTER USER 'root'@'localhost' IDENTIFIED BY 'new password';</span><br></pre></td></tr></table></figure><p>使用简单密码则需要先执行以下两条</p><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">set</span> global validate_password_policy=<span class="number">0</span>;</span><br><span class="line">mysql&gt; <span class="built_in">set</span> global validate_password_length=<span class="number">1</span>;</span><br></pre></td></tr></table></figure><p>exit退出后即可使用新密码重新登录</p><p>附上:<br>关闭MySQL服务</p><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"># systemctl stop mysqld.service</span><br></pre></td></tr></table></figure><p>MySQL的yum源移除</p><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"># yum remove mysql80-community-release-el7-<span class="number">3</span>.noarch.rpm</span><br></pre></td></tr></table></figure><hr><h1 id="三、JDBC"><a href="#三、JDBC" class="headerlink" title="三、JDBC"></a>三、JDBC</h1><h2 id="配置-1"><a href="#配置-1" class="headerlink" title="配置"></a>配置</h2><p>将 mysql-connector-java-8.0.16-1.el7.noarch.rpm 解压，找到 mysql-connector-java.jar，将jar置于java的lib目录下/ext中。以本机为参考，目录是：/usr/lib/jvm/jre/lib/ext/</p><h2 id="测试-1"><a href="#测试-1" class="headerlink" title="测试"></a>测试</h2><p>写一个简单测试 test.java如下，编译运行查看结果即可。</p><div><div class="fold_hider"><div class="close hider_title">查看详细</div></div><div class="fold"><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//Class.forName("com.mysql.jdbc.Driver");</span></span><br><span class="line">            String url = <span class="string">"jdbc:mysql://localhost"</span>;</span><br><span class="line">            Connection con = DriverManager.getConnection(url, <span class="string">"root"</span>, <span class="string">"password"</span>);</span><br><span class="line">            <span class="keyword">if</span> (con != <span class="keyword">null</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">"success..."</span>);</span><br><span class="line">                con.close();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">"failure!!!"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>配置</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>【配置】Windows10配置Hadoop2.9.2单机版</title>
    <url>/%E9%85%8D%E7%BD%AE/%E3%80%90%E9%85%8D%E7%BD%AE%E3%80%91Windows10%E9%85%8D%E7%BD%AEHadoop2.9.2%E5%8D%95%E6%9C%BA%E7%89%88/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:48:59 GMT+0800 (GMT+08:00) --><hr><h1 id="一、准备"><a href="#一、准备" class="headerlink" title="一、准备"></a>一、准备</h1><p>基本信息</p><ul><li>操作系统: Windows10</li><li>jdk版本: 1.8</li><li>Hadoop版本: 2.9.2</li></ul><p>下载并解压</p><ul><li><p>Apache Hadoop: <a href="https://hadoop.apache.org/releases.html" target="_blank" rel="noopener">官网</a> 或者 <a href="https://mirrors.tuna.tsinghua.edu.cn/apache/hadoop/common/" target="_blank" rel="noopener">清华源</a></p></li><li><p>winutils: <a href="https://github.com/cdarlint/winutils" target="_blank" rel="noopener">github/cdarlint</a></p></li></ul><hr><h1 id="二、配置"><a href="#二、配置" class="headerlink" title="二、配置"></a>二、配置</h1><h2 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h2><ul><li><p>新建系统变量 <code>HADOOP_HOME</code> 至所在目录，如 <code>D:\environment\hadoop-2.9.2</code></p><p><img src="/%E9%85%8D%E7%BD%AE/%E3%80%90%E9%85%8D%E7%BD%AE%E3%80%91Windows10%E9%85%8D%E7%BD%AEHadoop2.9.2%E5%8D%95%E6%9C%BA%E7%89%88/HadoopHOME.png" alt="HadoopHOME"></p></li><li><p>在 <code>path</code> 中添加 <code>%HADOOP_HOME%\bin</code> 及 <code>%HADOOP_HOME%\sbin</code> 并以 <code>;</code> (英文分号)与其他项隔开。</p><p><img src="/%E9%85%8D%E7%BD%AE/%E3%80%90%E9%85%8D%E7%BD%AE%E3%80%91Windows10%E9%85%8D%E7%BD%AEHadoop2.9.2%E5%8D%95%E6%9C%BA%E7%89%88/path.png" alt="path"></p></li></ul><h2 id="Hadoop配置文件"><a href="#Hadoop配置文件" class="headerlink" title="Hadoop配置文件"></a>Hadoop配置文件</h2><p>均在 <code>%HADOOP_HOME%\etc\hadoop\</code> 下面:</p><ol><li><p>修改 <code>hadoop-env.cmd</code> ，查找 <code>set JAVA_HOME</code> ，将后面内容改为JDK目录。</p><div><div class="fold_hider"><div class="close hider_title">查看详细</div></div><div class="fold"><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">@rem The java implementation to use.  Required.</span><br><span class="line">@rem <span class="built_in">set</span> JAVA_HOME=%JAVA_HOME%</span><br><span class="line"><span class="built_in">set</span> JAVA_HOME=D:\environment\Java\jdk1.8.0_201</span><br></pre></td></tr></table></figure></div></div></li><li><p>修改 <code>core-site.xml</code></p><div><div class="fold_hider"><div class="close hider_title">查看详细</div></div><div class="fold"><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>fs.defaultFS<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>hdfs://localhost:9000<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure></div></div></li><li><p>修改 <code>hdfs-site.xml</code></p><div><div class="fold_hider"><div class="close hider_title">查看详细</div></div><div class="fold"><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.replication<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>1<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.name.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>/D:/environment/hadoop-2.9.2/data/namenode<span class="tag">&lt;/<span class="name">value</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.datanode.data.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>/D:/environment/hadoop-2.9.2/data/datanode<span class="tag">&lt;/<span class="name">value</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure></div></div></li><li><p>修改 <code>yarn-site.xml</code></p><div><div class="fold_hider"><div class="close hider_title">查看详细</div></div><div class="fold"><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.nodemanager.aux-services<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>mapreduce_shuffle<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure></div></div></li></ol><h2 id="winutils"><a href="#winutils" class="headerlink" title="winutils"></a>winutils</h2><p>把之前下载的 <code>winutils</code> 解压，找到对应版本，将内容覆盖到 <code>hadoop-2.9.2\bin</code> 中。</p><h2 id="格式化namenode"><a href="#格式化namenode" class="headerlink" title="格式化namenode"></a>格式化namenode</h2><p>以<strong>管理员权限</strong>启动命令行，运行 <code>hdfs namenode -format</code> ，这项命令只用在第一次启动前执行。如果结果中看到有 <code>successfully</code> ，说明以上配置成功。</p><p><img src="/%E9%85%8D%E7%BD%AE/%E3%80%90%E9%85%8D%E7%BD%AE%E3%80%91Windows10%E9%85%8D%E7%BD%AEHadoop2.9.2%E5%8D%95%E6%9C%BA%E7%89%88/format.png" alt="format"></p><h1 id="三、测试"><a href="#三、测试" class="headerlink" title="三、测试"></a>三、测试</h1><p>以<strong>管理员权限</strong>启动命令行，如果之前没有在 <code>path</code> 中配置 <code>sbin</code> ，那么 <code>cd</code> 至 <code>%HADOOP_HOME%\sbin</code> 中，运行 <code>start-all</code> 启动，出现以下四个窗口：</p><p><img src="/%E9%85%8D%E7%BD%AE/%E3%80%90%E9%85%8D%E7%BD%AE%E3%80%91Windows10%E9%85%8D%E7%BD%AEHadoop2.9.2%E5%8D%95%E6%9C%BA%E7%89%88/start.png" alt="start"></p><p>即对应运行 <code>jps</code> 显示以下五个进程名称：</p><p><img src="/%E9%85%8D%E7%BD%AE/%E3%80%90%E9%85%8D%E7%BD%AE%E3%80%91Windows10%E9%85%8D%E7%BD%AEHadoop2.9.2%E5%8D%95%E6%9C%BA%E7%89%88/jps.png" alt="jps"></p><p>访问 <a href="http://localhost:8088" target="_blank" rel="noopener">http://localhost:8088</a> 查看集群状态：</p><p><img src="/%E9%85%8D%E7%BD%AE/%E3%80%90%E9%85%8D%E7%BD%AE%E3%80%91Windows10%E9%85%8D%E7%BD%AEHadoop2.9.2%E5%8D%95%E6%9C%BA%E7%89%88/8088.png" alt="8088"></p><p>访问 <a href="http://localhost:50070" target="_blank" rel="noopener">http://localhost:50070</a> 查看Hadoop状态：</p><p><img src="/%E9%85%8D%E7%BD%AE/%E3%80%90%E9%85%8D%E7%BD%AE%E3%80%91Windows10%E9%85%8D%E7%BD%AEHadoop2.9.2%E5%8D%95%E6%9C%BA%E7%89%88/50070.png" alt="50070"></p><p>命令行运行 <code>stop-all</code> 关闭。</p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>配置</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>Hadoop</tag>
      </tags>
  </entry>
  <entry>
    <title>【配置】Windows10配置MySQL和JDBC</title>
    <url>/%E9%85%8D%E7%BD%AE/%E3%80%90%E9%85%8D%E7%BD%AE%E3%80%91Windows10%E9%85%8D%E7%BD%AEMySQL%E5%92%8CJDBC/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:48:59 GMT+0800 (GMT+08:00) --><hr><h1 id="一、准备"><a href="#一、准备" class="headerlink" title="一、准备"></a>一、准备</h1><p>于MySQL官网根据需要下载，参考链接：</p><ul><li><a href="https://dev.mysql.com/downloads/file/?id=490026" target="_blank" rel="noopener">mysql-8.0.18-winx64.zip</a></li><li><a href="https://dev.mysql.com/downloads/file/?id=490495" target="_blank" rel="noopener">mysql-connector-java-8.0.18.zip</a></li></ul><hr><h1 id="二、MySQL"><a href="#二、MySQL" class="headerlink" title="二、MySQL"></a>二、MySQL</h1><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>配置系统环境变量，或者以管理员身份运行cmd，进入解压目录下的bin目录中运行命令，例如<br>D:\Program Files (x86)\mysql-8.0.18-winx64\bin&gt;</p><p>生成data目录</p><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">&gt; mysqld --initialize-insecure --user=mysql</span><br></pre></td></tr></table></figure><p>安装MySQL</p><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">&gt; mysqld -install</span><br></pre></td></tr></table></figure><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>启动MySQL服务</p><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">&gt; <span class="built_in">net</span> <span class="built_in">start</span> mysql</span><br></pre></td></tr></table></figure><p>登录MySQL（密码为空，直接回车即可）</p><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">&gt; mysql -u root -p</span><br></pre></td></tr></table></figure><p>如果密码不为空，先关闭服务</p><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">&gt; <span class="built_in">net</span> stop mysql</span><br></pre></td></tr></table></figure><p>执行以下命令后，再重启服务，然后重新登录</p><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">&gt; mysqld -nt --skip-grant-tables</span><br></pre></td></tr></table></figure><p>修改密码</p><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">mysql&gt; ALTER USER 'root'@'localhost' IDENTIFIED BY 'new password';</span><br></pre></td></tr></table></figure><hr><h1 id="三、JDBC"><a href="#三、JDBC" class="headerlink" title="三、JDBC"></a>三、JDBC</h1><h2 id="配置-1"><a href="#配置-1" class="headerlink" title="配置"></a>配置</h2><p>将 mysql-connector-java-8.0.18.zip 解压，找到 mysql-connector-java-8.0.18.jar，将jar置于java jre的lib目录下 <strong>/ext</strong> 中。以本机为参考，目录是：<br>C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext</p><h2 id="测试-1"><a href="#测试-1" class="headerlink" title="测试"></a>测试</h2><p>写一个简单测试 test.java如下，编译运行查看结果即可。</p><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Class.forName(<span class="string">"com.mysql.cj.jdbc.Driver"</span>);</span><br><span class="line">            String url = <span class="string">"jdbc:mysql://localhost?useUnicode=true&amp;characterEncoding=UTF-8&amp;serverTimezone=UTC"</span>;</span><br><span class="line">            Connection con = DriverManager.getConnection(url, <span class="string">"root"</span>, <span class="string">"123456"</span>);</span><br><span class="line">            <span class="keyword">if</span> (con != <span class="keyword">null</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">"success..."</span>);</span><br><span class="line">                con.close();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">"failure!!!"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><p>附：</p><ol><li>mysql-connector-java 5中使用<code>com.mysql.jdbc.Driver</code>，而mysql-connector-java 6中则使用<code>com.mysql.cj.jdbc.Driver</code></li><li>连接字符串后加<code>?useUnicode=true&amp;characterEncoding=UTF-8</code>解决中文乱码问题</li><li>连接字符串后加<code>?serverTimezone=UTC</code>解决时区问题</li></ol><!-- rebuild by neat -->]]></content>
      <categories>
        <category>配置</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title>【配置】Windows10配置Scala和Spark</title>
    <url>/%E9%85%8D%E7%BD%AE/%E3%80%90%E9%85%8D%E7%BD%AE%E3%80%91Windows10%E9%85%8D%E7%BD%AEScala%E5%92%8CSpark/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:48:59 GMT+0800 (GMT+08:00) --><hr><h1 id="一、准备"><a href="#一、准备" class="headerlink" title="一、准备"></a>一、准备</h1><p>基本信息</p><ul><li>操作系统: Windows10</li><li>jdk版本: 1.8</li><li>Hadoop版本: 2.9.2<img src="/%E9%85%8D%E7%BD%AE/%E3%80%90%E9%85%8D%E7%BD%AE%E3%80%91Windows10%E9%85%8D%E7%BD%AEScala%E5%92%8CSpark/java.png" alt="java"></li></ul><p>下载并解压</p><ul><li>Scala： <a href="https://www.scala-lang.org/download/" target="_blank" rel="noopener">官网</a> 或者 <a href="https://downloads.lightbend.com/scala/2.13.2/scala-2.13.2.zip" target="_blank" rel="noopener">scala-2.13.2.zip</a></li><li>Spark：<a href="http://spark.apache.org/downloads.html" target="_blank" rel="noopener">官网</a> 或者 <a href="https://mirror.bit.edu.cn/apache/spark/spark-3.0.0-preview2/spark-3.0.0-preview2-bin-hadoop2.7.tgz" target="_blank" rel="noopener">spark-3.0.0-preview2-bin-hadoop2.7.tgz</a></li></ul><hr><h1 id="二、Scala"><a href="#二、Scala" class="headerlink" title="二、Scala"></a>二、Scala</h1><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><ul><li><p>新建系统变量 <code>SCALA_HOME</code> 至所在目录，如 <code>D:\environment\scala-2.13.2</code></p><p><img src="/%E9%85%8D%E7%BD%AE/%E3%80%90%E9%85%8D%E7%BD%AE%E3%80%91Windows10%E9%85%8D%E7%BD%AEScala%E5%92%8CSpark/scala_home.png" alt="scala_home"></p></li><li><p>在 <code>path</code> 中添加 <code>%SCALA_HOME%\bin</code></p><p><img src="/%E9%85%8D%E7%BD%AE/%E3%80%90%E9%85%8D%E7%BD%AE%E3%80%91Windows10%E9%85%8D%E7%BD%AEScala%E5%92%8CSpark/scala_bin.png" alt="scala_bin"></p></li></ul><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>启动命令行，运行 <code>scala -version</code> ，出现以下结果说明成功</p><p><img src="/%E9%85%8D%E7%BD%AE/%E3%80%90%E9%85%8D%E7%BD%AE%E3%80%91Windows10%E9%85%8D%E7%BD%AEScala%E5%92%8CSpark/scala_version.png" alt="scala_version"></p><h1 id="三、Spark"><a href="#三、Spark" class="headerlink" title="三、Spark"></a>三、Spark</h1><p>启动命令行，配置环境变量或者<code>cd</code> 至 Spark的 <code>bin</code> 目录下，运行 <code>spark-shell</code> 出现以下结果说明成功。若出现错误，则依据错误提示安装Python或者Hadoop。</p><p><img src="/%E9%85%8D%E7%BD%AE/%E3%80%90%E9%85%8D%E7%BD%AE%E3%80%91Windows10%E9%85%8D%E7%BD%AEScala%E5%92%8CSpark/spark.png" alt="spark"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>配置</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>Scala</tag>
        <tag>Spark</tag>
      </tags>
  </entry>
  <entry>
    <title>【配置】hexo及NexT主题的配置</title>
    <url>/%E9%85%8D%E7%BD%AE/%E3%80%90%E9%85%8D%E7%BD%AE%E3%80%91hexo%E5%8F%8ANexT%E4%B8%BB%E9%A2%98%E7%9A%84%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:48:59 GMT+0800 (GMT+08:00) --><h1 id="一、网站标题栏背景颜色"><a href="#一、网站标题栏背景颜色" class="headerlink" title="一、网站标题栏背景颜色"></a>一、网站标题栏背景颜色</h1><p>打开 <code>themes/next/source/css/_custom/custom.styl</code> , 在里面写下如下代码：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.site-meta &#123;</span><br><span class="line">  background: rgb(85, 85, 85);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="二、开启加载动画"><a href="#二、开启加载动画" class="headerlink" title="二、开启加载动画"></a>二、开启加载动画</h1><p>修改 <code>themes/next/_config.yml</code>，搜索关键字 <code>pace</code> 并把 <code>false</code>修改为 <code>true</code> ，加载条有许多样式，可自行更换。</p><h1 id="三、浏览页面的时候显示当前浏览进度"><a href="#三、浏览页面的时候显示当前浏览进度" class="headerlink" title="三、浏览页面的时候显示当前浏览进度"></a>三、浏览页面的时候显示当前浏览进度</h1><p>修改 <code>themes/next/_config.yml</code> ，搜索关键字 <code>scrollpercent</code> ， 并把 <code>false</code> 改为 <code>true</code>。</p><h1 id="四、背景的设置"><a href="#四、背景的设置" class="headerlink" title="四、背景的设置"></a>四、背景的设置</h1><p>在主题配置文件中，查找<code>canvas</code>：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Canvas-nest</span></span><br><span class="line"><span class="attr">canvas_nest:</span> <span class="literal">false</span></span><br><span class="line"><span class="comment"># three_waves</span></span><br><span class="line"><span class="attr">three_waves:</span> <span class="literal">false</span></span><br><span class="line"><span class="comment"># canvas_lines</span></span><br><span class="line"><span class="attr">canvas_lines:</span> <span class="literal">false</span></span><br><span class="line"><span class="comment"># canvas_sphere</span></span><br><span class="line"><span class="attr">canvas_sphere:</span> <span class="literal">false</span></span><br><span class="line"><span class="comment"># Only fit scheme Pisces</span></span><br><span class="line"><span class="comment"># Canvas-ribbon</span></span><br><span class="line"><span class="attr">canvas_ribbon:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>开启相应的背景，只要把对应的<code>false</code>设置为<code>true</code>，记得把其他都改为<code>false</code></p><h1 id="五、修改内容区域宽度"><a href="#五、修改内容区域宽度" class="headerlink" title="五、修改内容区域宽度"></a>五、修改内容区域宽度</h1><p>Next 对内容的宽度的设定如下：</p><ul><li>700px，当屏幕宽度 &lt; 1600px</li><li>900px，当屏幕宽度 &gt;= 1600px</li><li>移动设备下，宽度自适应</li></ul><p>在主题目录下的 <code>source\css_variables\custom.styl</code> 文件，新增变量：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 修改成你期望的宽度</span></span><br><span class="line">$content-desktop = <span class="number">700</span>px</span><br><span class="line"><span class="comment">// 当视窗超过 1600px 后的宽度</span></span><br><span class="line">$content-desktop-large = <span class="number">900</span>px</span><br></pre></td></tr></table></figure><p>此方法不适用于 <code>Pisces Scheme</code>， <code>Pisces Scheme</code> 编辑<code>themes\next\source\css\_schemes\Picses\_layout.styl</code>文件，更改以下 css 选项定义值：</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.header</span> &#123;<span class="attribute">width</span>: <span class="number">1150px</span>;&#125;</span><br><span class="line"><span class="selector-class">.container</span> <span class="selector-class">.main-inner</span> &#123;<span class="attribute">width</span>: <span class="number">1150px</span>;&#125;</span><br><span class="line"><span class="selector-class">.content-wrap</span> &#123;<span class="attribute">width</span>: <span class="built_in">calc</span>(<span class="number">100%</span> - <span class="number">260px</span>);&#125;</span><br></pre></td></tr></table></figure><h1 id="六、NexT主题分页的翻页箭头显示"><a href="#六、NexT主题分页的翻页箭头显示" class="headerlink" title="六、NexT主题分页的翻页箭头显示"></a>六、NexT主题分页的翻页箭头显示</h1><ul><li><p>修改: <code>themes\next\layout\_partials\pagination.swig</code> 为</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;% if page.prev or page.next %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">"pagination"</span>&gt;</span></span><br><span class="line">      &#123;&#123;</span><br><span class="line">        paginator(&#123;</span><br><span class="line">          prev_text: '<span class="tag">&lt;<span class="name">',</span></span></span><br><span class="line"><span class="tag">          <span class="attr">next_text:</span> '&gt;</span>',</span><br><span class="line">          mid_size: 1</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line">  &#123;% endif %&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="七、添加自定义menu菜单"><a href="#七、添加自定义menu菜单" class="headerlink" title="七、添加自定义menu菜单"></a>七、添加自定义menu菜单</h1><ol><li>修改<code>themes/next/_config.yml</code>，在menu下添加菜单项，格式为 <code>Key: /link || icon</code> ，icon即为 <a href="http://fontawesome.dashgame.com/" target="_blank" rel="noopener">Font Awesome</a> 提供的图标。注意统一缩进，如果出现地址多了 <code>%20/</code> 无法访问，则删去 <code>||</code> 前的空格， 例如 <code>skill: skill|| book</code>。</li><li>修改 <code>themes/next/languages/zh-Hans.yml</code> ，在menu下添加对应Key的中文，例如 <code>skill: 技能</code> ，注意统一缩进。</li><li>在博客根目录，即执行hexo操作的目录，运行 <code>hexo new page &quot;skill&quot;</code>，也就是第1步对应添加的Key然后编辑新建的 <code>source/skill/index.md</code> 即可。同样，我们也可以使用 <code>技术: /tags/tech || wrench</code>，实现按照标签进行自定义菜单。</li></ol><h1 id="八、搜索功能"><a href="#八、搜索功能" class="headerlink" title="八、搜索功能"></a>八、搜索功能</h1><ul><li><p>安装插件</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure></li><li><p>打开 <code>themes/next/_config.yml</code> ，搜索关键字 <code>local_search</code> ，设置为 <code>true</code></p></li><li><p>打开hexo的站点配置 <code>_config.yml</code>，添加</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span></span><br><span class="line">  <span class="attr">format:</span> <span class="string">html</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">10000</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="九、统计功能"><a href="#九、统计功能" class="headerlink" title="九、统计功能"></a>九、统计功能</h1><p>显示文章字数统计、阅读时长及总字数，</p><ul><li><p>安装插件</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm i --save hexo-wordcount</span><br></pre></td></tr></table></figure></li><li><p>打开 <code>themes/next/_config.yml</code> ，搜索关键字 <code>post_wordcount</code>，将所需选项的 <code>false</code> 改为 <code>true</code></p></li><li><p>打开 <code>themes/next/layout/_macro/post.swig</code>，搜索关键词 <code>post.wordcount</code>，添加 <code>字</code> 到末尾</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">title</span>=<span class="string">"&#123;&#123; __('post.wordcount') &#125;&#125;"</span>&gt;</span></span><br><span class="line">    &#123;&#123; wordcount(post.content) &#125;&#125; 字</span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><p>同理，搜索关键词 <code>post.min2read</code>，添加 <code>分钟</code> 到末尾</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">title</span>=<span class="string">"&#123;&#123; __('post.min2read') &#125;&#125;"</span>&gt;</span></span><br><span class="line">    &#123;&#123; min2read(post.content) &#125;&#125; 分钟</span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="十、文章加密访问"><a href="#十、文章加密访问" class="headerlink" title="十、文章加密访问"></a>十、文章加密访问</h1><p>打开 <code>themes/next/layout/_partials/head.swig</code>文件插入代码：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    (function()&#123;</span><br><span class="line">        if(&#39;&#123;&#123; page.password &#125;&#125;&#39;)&#123;</span><br><span class="line">            if (prompt(&#39;请输入密码&#39;) !&#x3D;&#x3D; &#39;&#123;&#123; page.password &#125;&#125;&#39;)&#123;</span><br><span class="line">                alert(&#39;密码错误&#39;);</span><br><span class="line">                history.back();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)();</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>写文章时加上<code>password: *</code>：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 2018</span><br><span class="line">date: 2018-10-25 16:10:03</span><br><span class="line">password: 123456</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h1 id="十一、hexo在文章中添加图片"><a href="#十一、hexo在文章中添加图片" class="headerlink" title="十一、hexo在文章中添加图片"></a>十一、hexo在文章中添加图片</h1><ol><li><p>安装图片上传插件<code>npm install hexo-asset-image --save</code></p></li><li><p>在<code>_config.yml</code>配置文件中，修改为 <code>post_asset_folder: true</code></p></li><li><p>修改: <code>/node_modules/hexo-asset-image/index.js</code> 为</p><div><div class="fold_hider"><div class="close hider_title">查看详细</div></div><div class="fold"><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"> ...</span><br><span class="line">    </span><br><span class="line">  <span class="keyword">if</span>(config.post_asset_folder)&#123;</span><br><span class="line">    <span class="keyword">var</span> link = data.permalink;</span><br><span class="line">    <span class="comment">/* 注释以下内容</span></span><br><span class="line"><span class="comment">    var beginPos = getPosition(link, '/', 3) + 1;</span></span><br><span class="line"><span class="comment">    var appendLink = '';</span></span><br><span class="line"><span class="comment">    // In hexo 3.1.1, the permalink of "about" page is like ".../about/index.html".</span></span><br><span class="line"><span class="comment">    // if not with index.html endpos = link.lastIndexOf('.') + 1 support hexo-abbrlink</span></span><br><span class="line"><span class="comment">    if(/.*\/index\.html$/.test(link)) &#123;</span></span><br><span class="line"><span class="comment">      // when permalink is end with index.html, for example 2019/02/20/xxtitle/index.html</span></span><br><span class="line"><span class="comment">      // image in xxtitle/ will go to xxtitle/index/</span></span><br><span class="line"><span class="comment">      appendLink = 'index/';</span></span><br><span class="line"><span class="comment">      var endPos = link.lastIndexOf('/');</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    else &#123;</span></span><br><span class="line"><span class="comment">      var endPos = link.lastIndexOf('.');</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    link = link.substring(beginPos, endPos) + '/' + appendLink;</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="comment">/* 修改为下面四行 */</span></span><br><span class="line">    <span class="keyword">var</span> link = data.permalink;</span><br><span class="line">    <span class="keyword">var</span> beginPos = getPosition(link, <span class="string">'/'</span>, <span class="number">3</span>) + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">var</span> endPos = link.lastIndexOf(<span class="string">'/'</span>) + <span class="number">1</span>;</span><br><span class="line">    link = link.substring(beginPos, endPos);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> toprocess = [<span class="string">'excerpt'</span>, <span class="string">'more'</span>, <span class="string">'content'</span>];</span><br><span class="line"></span><br><span class="line">...</span><br></pre></td></tr></table></figure></div></div></li><li><p>然后每次<code>hexo n &quot;文章标题&quot;</code>时，<code>_posts</code>文件夹里都会新建一个<code>文章标题</code>的文件夹，把你的图片素材统一放这里，然后md格式的文章正文里引用 <code>[图片说明](文章标题/图片名.扩展名)</code></p></li></ol><h1 id="十二、部分图片禁用fancybox"><a href="#十二、部分图片禁用fancybox" class="headerlink" title="十二、部分图片禁用fancybox"></a>十二、部分图片禁用fancybox</h1><p>打开 <code>theme/next/source/js/src/utils.js</code>，添加 <code>if ($(this).hasClass(&#39;nofancybox&#39;)) return;</code></p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">wrapImageWithFancyBox: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    $(<span class="string">'.content img'</span>)</span><br><span class="line">      .not(<span class="string">'[hidden]'</span>)</span><br><span class="line">      .not(<span class="string">'.group-picture img, .post-gallery img'</span>)</span><br><span class="line">      .each(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> $image = $(<span class="keyword">this</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> ($(<span class="keyword">this</span>).hasClass(<span class="string">'nofancybox'</span>)) <span class="keyword">return</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">var</span> imageTitle = $image.attr(<span class="string">'title'</span>);</span><br><span class="line">        <span class="keyword">var</span> $imageWrapLink = $image.parent(<span class="string">'a'</span>);</span><br></pre></td></tr></table></figure><p>使用时，在img标签使用的时候加上 <code>class=&quot;nofancybox&quot;</code> 即可。</p><h1 id="十三、添加代码块折叠功能"><a href="#十三、添加代码块折叠功能" class="headerlink" title="十三、添加代码块折叠功能"></a>十三、添加代码块折叠功能</h1><ol><li><p>先创建 <code>themes/next/scripts/custom/fold_tag.js</code>，</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* global hexo */</span></span><br><span class="line"><span class="comment">// Usage: &#123;% fold ???? %&#125; Something &#123;% endfold %&#125;</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fold</span> (<span class="params">args, content</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> text = args[<span class="number">0</span>];</span><br><span class="line">  <span class="keyword">if</span>(!text) text = <span class="string">"点击显/隐"</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">'&lt;div&gt;&lt;div class="fold_hider"&gt;&lt;div class="close hider_title"&gt;'</span> + text + <span class="string">'&lt;/div&gt;&lt;/div&gt;&lt;div class="fold"&gt;\n'</span> + hexo.render.renderSync(&#123;<span class="attr">text</span>: content, <span class="attr">engine</span>: <span class="string">'markdown'</span>&#125;) + <span class="string">'\n&lt;/div&gt;&lt;/div&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line">hexo.extend.tag.register(<span class="string">'fold'</span>, fold, &#123;<span class="attr">ends</span>: <span class="literal">true</span>&#125;);</span><br></pre></td></tr></table></figure></li><li><p>以及 <code>themes/next/source/custom/fold_action.js</code>文件，</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $(<span class="built_in">document</span>).on(<span class="string">'click'</span>, <span class="string">'.fold_hider'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        $(<span class="string">'&gt;.fold'</span>, <span class="keyword">this</span>.parentNode).slideToggle();</span><br><span class="line">        $(<span class="string">'&gt;:first'</span>, <span class="keyword">this</span>).toggleClass(<span class="string">'open'</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">//默认情况下折叠</span></span><br><span class="line">    $(<span class="string">"div.fold"</span>).css(<span class="string">"display"</span>,<span class="string">"none"</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li><p>然后创建文件 <code>themes/next/layout/_custom/post-details.swig</code></p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;# hexo-theme-next/layout/_custom/post-details.swig</span><br><span class="line">add to: themes/hexo-theme-next/layout/_scripts/pages/post-details.swig</span><br><span class="line">#&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"&#123;&#123; url_for(theme.custom) &#125;&#125;/fold_action.js?v=&#123;&#123; version &#125;&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>并在``themes/next/layout/_scripts/pages/post-details.swig`的末尾加上</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% include &#39;..&#x2F;..&#x2F;_custom&#x2F;post-details.swig&#39; %&#125;</span><br></pre></td></tr></table></figure></li><li><p>修改主题下的<code>_config.yml</code> ，添加 <code>custom: custom</code>， 注意空格</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Assets</span></span><br><span class="line"><span class="attr">css:</span> <span class="string">css</span></span><br><span class="line"><span class="attr">js:</span> <span class="string">js</span></span><br><span class="line"><span class="attr">images:</span> <span class="string">images</span></span><br><span class="line"><span class="attr">custom:</span> <span class="string">custom</span></span><br></pre></td></tr></table></figure></li><li><p>最后修改 <code>themes/next/source/css/_custom/custom.styl</code>，添加</p><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">.hider_title&#123;</span><br><span class="line">	<span class="attribute">font-family</span>: <span class="string">"Microsoft Yahei"</span>;</span><br><span class="line">	<span class="attribute">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.close</span>:before&#123;</span><br><span class="line">	<span class="attribute">content</span>: <span class="string">"▼"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.open</span>:before&#123;</span><br><span class="line">	<span class="attribute">content</span>: <span class="string">"▲"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h1 id="十四、文章目录修改"><a href="#十四、文章目录修改" class="headerlink" title="十四、文章目录修改"></a>十四、文章目录修改</h1><ul><li><p>目录默认展开。打开 <code>themes/next/source/css/_custom/custom.styl</code> 添加以下内容</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;文章目录默认展开</span><br><span class="line">.post-toc .nav .nav-child &#123; display: block; &#125;</span><br></pre></td></tr></table></figure></li><li><p>取消自动编号，开启自动换行。打开 <code>themes/next/_config.yml</code>，搜索关键词 <code>toc</code></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">toc:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Automatically add list number to toc.</span></span><br><span class="line">  <span class="attr">number:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># If true, all words will placed on next lines if header width longer then sidebar width.</span></span><br><span class="line">  <span class="attr">wrap:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="十五、文章结束语"><a href="#十五、文章结束语" class="headerlink" title="十五、文章结束语"></a>十五、文章结束语</h1><ul><li><p>添加模板文件</p><p>在主题目录下<code>\layout\_macro</code>中新建 <code>passage-end-tag.swig</code>文件,并添加以下内容：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    &#123;% if not is_index %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"text-align:center;color: #ccc;font-size:14px;"</span>&gt;</span></span><br><span class="line">              -------------本文结束<span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-paw"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>感谢您的阅读-------------</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>导入模板文件</p><p>在<code>\layout\_macro\post.swig</code>文件中，找到：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&#123;<span class="comment">#####################&#125;</span></span><br><span class="line">&#123;<span class="comment">### END POST BODY ###&#125;</span></span><br><span class="line">&#123;<span class="comment">#####################&#125;</span></span><br></pre></td></tr></table></figure><p>在上面代码之前添加：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      &#123;% if not is_index %&#125;</span><br><span class="line">          &#123;% include 'passage-end-tag.swig' %&#125;</span><br><span class="line">      &#123;% endif %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>配置<br>在主题配置文件中添加：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 文章末尾添加“本文结束”标记</span></span><br><span class="line">passage_end_tag:</span><br><span class="line">  enabled: <span class="literal">true</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="十六、增强文章底部标签"><a href="#十六、增强文章底部标签" class="headerlink" title="十六、增强文章底部标签"></a>十六、增强文章底部标签</h1><p>修改模板<code>/themes/next/layout/_macro/post.swig</code>，搜索 <code>rel=”tag”&gt;#</code>，将 <code>#</code>换成</p><figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;i class="fa fa-tag"&gt;&lt;/i&gt;</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
      <categories>
        <category>配置</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>NexT</tag>
      </tags>
  </entry>
  <entry>
    <title>【随笔】hexo文章操作</title>
    <url>/%E9%9A%8F%E7%AC%94/%E3%80%90%E9%9A%8F%E7%AC%94%E3%80%91hexo%E6%96%87%E7%AB%A0%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:48:59 GMT+0800 (GMT+08:00) --><h1 id="一、创建文章"><a href="#一、创建文章" class="headerlink" title="一、创建文章"></a>一、创建文章</h1><p>命令：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure><p>参数说明：</p><ul><li>layout可以为以下三种：</li></ul><table><thead><tr><th>参数名</th><th>功能</th><th>文章路径</th></tr></thead><tbody><tr><td>post</td><td>新建博文</td><td>source/_posts</td></tr><tr><td>page</td><td>新建页面（如404，分类）</td><td>source</td></tr><tr><td>draft</td><td>草稿</td><td>source/_drafts</td></tr></tbody></table><p>草稿可通过一下命令发布：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo publish [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure><p>注意，<code>title</code> 并不是博文的标题，而是博文markdown文件的名字，也就是博文链接的后缀（例如 <code>https://gh1656409967.github.io/随笔/【随笔】hexo文章操作/</code> 中的 <code>【随笔】hexo文章操作</code> ）</p><h1 id="二、文章模版"><a href="#二、文章模版" class="headerlink" title="二、文章模版"></a>二、文章模版</h1><ul><li><p>创建模版</p><p>在新建文章时，hexo 会根据 <code>scaffolds</code> 文件夹内相对应的文件来建立文件，例如：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo new blog &quot;foo&quot;</span><br></pre></td></tr></table></figure><p>在执行这行指令时，hexo 会尝试在 <code>scaffolds</code> 文件夹中寻找 <code>blog.md</code>，并根据其内容建立文章。</p></li><li><p>修改参数</p><p>以下是可以在模版中使用的变量：</p></li></ul><table><thead><tr><th>变量</th><th>描述</th></tr></thead><tbody><tr><td>layout</td><td>布局</td></tr><tr><td>title</td><td>标题</td></tr><tr><td>date</td><td>文件建立日期</td></tr></tbody></table><h1 id="三、Front-matter"><a href="#三、Front-matter" class="headerlink" title="三、Front-matter"></a>三、Front-matter</h1><p>就是博文最上方以 <code>---</code> 分隔的那部分。</p><p>默认可以使用的Front-matter：</p><table><thead><tr><th>参数</th><th>描述</th><th>默认值</th></tr></thead><tbody><tr><td><code>layout</code></td><td>布局</td><td></td></tr><tr><td><code>title</code></td><td>标题</td><td></td></tr><tr><td><code>date</code></td><td>建立日期</td><td>文件建立日期</td></tr><tr><td><code>updated</code></td><td>更新日期</td><td>文件更新日期</td></tr><tr><td><code>comments</code></td><td>开启文章的评论功能</td><td>true</td></tr><tr><td><code>tags</code></td><td>标签（不适用于分页）</td><td></td></tr><tr><td><code>categories</code></td><td>分类（不适用于分页）</td><td></td></tr><tr><td><code>permalink</code></td><td>覆盖文章网址</td><td></td></tr></tbody></table><!-- rebuild by neat -->]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>【随笔】使用Gpg4win加密邮件</title>
    <url>/%E9%9A%8F%E7%AC%94/%E3%80%90%E9%9A%8F%E7%AC%94%E3%80%91%E4%BD%BF%E7%94%A8Gpg4win%E5%8A%A0%E5%AF%86%E9%82%AE%E4%BB%B6/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:48:59 GMT+0800 (GMT+08:00) --><h1 id="一、准备"><a href="#一、准备" class="headerlink" title="一、准备"></a>一、准备</h1><p>下载并安装以下两项:</p><ul><li><p><a href="https://www.gpg4win.org/get-gpg4win.html" target="_blank" rel="noopener">Gpg4win</a></p></li><li><p><a href="https://www.thunderbird.net/zh-CN/" target="_blank" rel="noopener">Thunderbird</a></p></li></ul><h1 id="二、配置Gpg4win"><a href="#二、配置Gpg4win" class="headerlink" title="二、配置Gpg4win"></a>二、配置Gpg4win</h1><ol><li><p>一路next安装。</p></li><li><p>新建密钥对，按提示进行。</p></li><li><p>可以点击 <code>导出...</code> 导出 <code>.asc</code>文件。</p></li></ol><h1 id="三、配置Thunderbird"><a href="#三、配置Thunderbird" class="headerlink" title="三、配置Thunderbird"></a>三、配置Thunderbird</h1><ol><li><p>一路next安装。</p></li><li><p>开启邮箱的IMAP服务。以QQ邮箱为例，启动QQ邮箱网页版，打开 <code>设置 &gt; 账户</code> 下拉找到该项，并选择开启IMAP/SMTP服务。</p><p><img src="/%E9%9A%8F%E7%AC%94/%E3%80%90%E9%9A%8F%E7%AC%94%E3%80%91%E4%BD%BF%E7%94%A8Gpg4win%E5%8A%A0%E5%AF%86%E9%82%AE%E4%BB%B6/%E3%80%90%E9%9A%8F%E7%AC%94%E3%80%91%E4%BD%BF%E7%94%A8Gpg4win%E5%8A%A0%E5%AF%86%E9%82%AE%E4%BB%B6%5C%E5%BC%80%E5%90%AF%E6%9C%8D%E5%8A%A1.png" alt="开启服务"></p><p>保存提示中的授权码</p><p><img src="/%E9%9A%8F%E7%AC%94/%E3%80%90%E9%9A%8F%E7%AC%94%E3%80%91%E4%BD%BF%E7%94%A8Gpg4win%E5%8A%A0%E5%AF%86%E9%82%AE%E4%BB%B6/%E3%80%90%E9%9A%8F%E7%AC%94%E3%80%91%E4%BD%BF%E7%94%A8Gpg4win%E5%8A%A0%E5%AF%86%E9%82%AE%E4%BB%B6%5C%E6%8E%88%E6%9D%83%E7%A0%81.png" alt="授权码"></p></li><li><p>在Thunderbird中配置邮箱，密码一栏中填写授权码即可。</p></li><li><p>点开 <code>显示菜单</code> 找到 <code>附加组件</code> ，搜索并安装 <code>Enigmail</code> 插件。</p><p><img src="/%E9%9A%8F%E7%AC%94/%E3%80%90%E9%9A%8F%E7%AC%94%E3%80%91%E4%BD%BF%E7%94%A8Gpg4win%E5%8A%A0%E5%AF%86%E9%82%AE%E4%BB%B6/%E3%80%90%E9%9A%8F%E7%AC%94%E3%80%91%E4%BD%BF%E7%94%A8Gpg4win%E5%8A%A0%E5%AF%86%E9%82%AE%E4%BB%B6%5C%E9%99%84%E5%8A%A0%E7%BB%84%E4%BB%B6.png" alt="附加组件"></p><p><img src="/%E9%9A%8F%E7%AC%94/%E3%80%90%E9%9A%8F%E7%AC%94%E3%80%91%E4%BD%BF%E7%94%A8Gpg4win%E5%8A%A0%E5%AF%86%E9%82%AE%E4%BB%B6/%E3%80%90%E9%9A%8F%E7%AC%94%E3%80%91%E4%BD%BF%E7%94%A8Gpg4win%E5%8A%A0%E5%AF%86%E9%82%AE%E4%BB%B6%5CEnigmail.png" alt="Enigmail"></p></li><li><p>重启应用后，在Thunderbird菜单栏中找到 <code>Enigmail &gt; 密钥管理</code> ，点击 <code>文件 &gt; 从文件导入密钥</code> 可以导入某个邮箱地址的公钥文件，或者在搜索框中通过输入邮箱地址或密钥ID在公钥服务器上搜索对应的公钥，也可以是邮件等方式传递的Gpg4win导出的 <code>.asc</code> 文件。</p></li></ol><h1 id="四、发送-amp-接收邮件"><a href="#四、发送-amp-接收邮件" class="headerlink" title="四、发送&amp;接收邮件"></a>四、发送&amp;接收邮件</h1><ul><li><p>发送邮件</p><p>假设我们需要向<a href="mailto:XXX@XXX.XXX">XXX@XXX.XXX</a>这个电子邮件地址发送GPG加密邮件，首先应该导入<a href="mailto:XXX@XXX.XXX">XXX@XXX.XXX</a>对应的公钥文件（该文件将用于加密邮件），或者通过邮件地址<a href="mailto:XXX@XXX.XXX">XXX@XXX.XXX</a>或对方的密钥ID在公钥服务器上搜索其公钥，搜索到的公钥需要进行指纹验证以确保该公钥不是伪造的。</p><p>在新建邮件界面选中 <code>加密</code> 和 <code>签名邮件</code> 按钮即可。</p><p><img src="/%E9%9A%8F%E7%AC%94/%E3%80%90%E9%9A%8F%E7%AC%94%E3%80%91%E4%BD%BF%E7%94%A8Gpg4win%E5%8A%A0%E5%AF%86%E9%82%AE%E4%BB%B6/%E3%80%90%E9%9A%8F%E7%AC%94%E3%80%91%E4%BD%BF%E7%94%A8Gpg4win%E5%8A%A0%E5%AF%86%E9%82%AE%E4%BB%B6%5C%E6%8C%89%E9%92%AE.png" alt="按钮"></p></li><li><p>接收邮件</p><p>打开接收到的加密邮件，会提示验证密码，验证完即可查看内容。</p></li></ul><h1 id="附、疑难解决"><a href="#附、疑难解决" class="headerlink" title="附、疑难解决"></a>附、疑难解决</h1><ul><li>问: Thunderbird添加新邮箱时提示 <code>接受服务器已存在</code> 如何解决？</li><li>答: 彻底退出Thunderbird ( 包括关闭后台进程 )，再重新打开即可。</li></ul><!-- rebuild by neat -->]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>信息安全</tag>
        <tag>GPG</tag>
      </tags>
  </entry>
  <entry>
    <title>【随笔】凯撒密码的简单实现</title>
    <url>/%E9%9A%8F%E7%AC%94/%E3%80%90%E9%9A%8F%E7%AC%94%E3%80%91%E5%87%AF%E6%92%92%E5%AF%86%E7%A0%81%E7%9A%84%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:48:59 GMT+0800 (GMT+08:00) --><h1 id="一、恺撒密码简介"><a href="#一、恺撒密码简介" class="headerlink" title="一、恺撒密码简介"></a>一、恺撒密码简介</h1><p>在密码学中，恺撒密码（英语：Caesar cipher），或称恺撒加密、恺撒变换、变换加密，是一种最简单且最广为人知的加密技术。它是一种替换加密的技术，明文中的所有字母都在字母表上向后（或向前）按照一个固定数目进行偏移后被替换成密文。例如，当偏移量是3的时候，所有的字母A将被替换成D，B变成E，以此类推。这个加密方法是以罗马共和时期恺撒的名字命名的，当年恺撒曾用此方法与其将军们进行联系。</p><p>根据偏移量的不同，还存在若干特定的恺撒密码名称：</p><ul><li>偏移量为10：Avocat(A→K)</li><li>偏移量为13：ROT13</li><li>偏移量为-5：Cassis (K 6)</li><li>偏移量为-6：Cassette (K 7)</li></ul><h1 id="二、C-简单实现"><a href="#二、C-简单实现" class="headerlink" title="二、C++简单实现"></a>二、C++简单实现</h1><div><div class="fold_hider"><div class="close hider_title">查看详细</div></div><div class="fold"><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> SIZ = <span class="number">100000</span>;</span><br><span class="line"><span class="keyword">char</span> src[SIZ], enc[SIZ];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">caesar</span><span class="params">(<span class="keyword">char</span> src[], <span class="keyword">char</span> enc[], <span class="keyword">int</span> key)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    key %= <span class="number">26</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; src[i]; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> ((src[i]&lt;<span class="string">'A'</span>) || (src[i]&gt;<span class="string">'Z'</span> &amp;&amp; src[i]&lt;<span class="string">'a'</span>) || src[i]&gt;<span class="string">'z'</span>) &#123;</span><br><span class="line">            enc[i] = src[i]; <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (src[i] &gt;= <span class="string">'a'</span>)</span><br><span class="line">            enc[i] = (src[i] - <span class="string">'a'</span> + key + <span class="number">26</span>) % <span class="number">26</span> + <span class="string">'a'</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            enc[i] = (src[i] - <span class="string">'A'</span> + key + <span class="number">26</span>) % <span class="number">26</span> + <span class="string">'A'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    system(<span class="string">"chcp 65001"</span>);</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"-- 凯撒密码 加/解密 -- \n"</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"1. 加密 \n2. 解密 \n3. 退出 \n"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> select, key; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;select);</span><br><span class="line">        <span class="keyword">if</span> (select == <span class="number">3</span>) <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"请输入原文: "</span>); <span class="built_in">scanf</span>(<span class="string">"%s"</span>, src);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"请输入密钥: "</span>); <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;key);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (select == <span class="number">2</span>) key = -key;</span><br><span class="line">        <span class="built_in">memset</span>(enc, <span class="number">0</span>, <span class="keyword">sizeof</span>(enc));</span><br><span class="line"></span><br><span class="line">        caesar(src, enc, key); <span class="built_in">printf</span>(<span class="string">"密文: %s\n"</span>, enc);</span><br><span class="line">        system(<span class="string">"pause"</span>); system(<span class="string">"cls"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>信息安全</tag>
        <tag>加密技术</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】FZU-2150 Fire Game</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%90%9C%E7%B4%A2/BFS/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91FZU-2150%20Fire%20Game/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:48:59 GMT+0800 (GMT+08:00) --><h1 id="Fire-Game-FZU-2150"><a href="#Fire-Game-FZU-2150" class="headerlink" title="Fire Game (FZU - 2150)"></a>Fire Game (<a href="https://vjudge.net/problem/FZU-2150" target="_blank" rel="noopener">FZU - 2150</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>Fat brother and Maze are playing a kind of special (hentai) game on an N*M board (N rows, M columns). At the beginning, each grid of this board is consisting of grass or just empty and then they start to fire all the grass. Firstly they choose two grids which are consisting of grass and set fire. As we all know, the fire can spread among the grass. If the grid (x, y) is firing at time t, the grid which is adjacent to this grid will fire at time t+1 which refers to the grid (x+1, y), (x-1, y), (x, y+1), (x, y-1). This process ends when no new grid get fire. If then all the grid which are consisting of grass is get fired, Fat brother and Maze will stand in the middle of the grid and playing a MORE special (hentai) game. (Maybe it’s the OOXX game which decrypted in the last problem, who knows.)</p><p>You can assume that the grass in the board would never burn out and the empty grid would never get fire.</p><p>Note that the two grids they choose can be the same.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>The first line of the date is an integer T, which is the number of the text cases.</p><p>Then T cases follow, each case contains two integers N and M indicate the size of the board. Then goes N line, each line with M character shows the board. “#” Indicates the grass. You can assume that there is at least one grid which is consisting of grass in the board.</p><p>1 &lt;= T &lt;=100, 1 &lt;= n &lt;=10, 1 &lt;= m &lt;=10</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For each case, output the case number first, if they can play the MORE special (hentai) game (fire all the grass), output the minimal time they need to wait after they set fire, otherwise just output -1. See the sample input and output for more details.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">4</span><br><span class="line">3 3</span><br><span class="line">.#.</span><br><span class="line">###</span><br><span class="line">.#.</span><br><span class="line">3 3</span><br><span class="line">.#.</span><br><span class="line">#.#</span><br><span class="line">.#.</span><br><span class="line">3 3</span><br><span class="line">...</span><br><span class="line">#.#</span><br><span class="line">...</span><br><span class="line">3 3</span><br><span class="line">###</span><br><span class="line">..#</span><br><span class="line">#.#</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Case 1: 1</span><br><span class="line">Case 2: -1</span><br><span class="line">Case 3: 0</span><br><span class="line">Case 4: 2</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>暴力枚举两个起火点跑bfs，统计最小值，注意草的数量少于等于2时可以特判</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e2</span>+<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> b[N][N] = &#123;&#123;<span class="number">0</span>&#125;&#125;;</span><br><span class="line"><span class="keyword">bool</span> vis[N][N] = &#123;&#123;<span class="number">0</span>&#125;&#125;;</span><br><span class="line"><span class="keyword">int</span> T, n, m;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> dx[] = &#123; <span class="number">1</span>, <span class="number">-1</span>,  <span class="number">0</span>,  <span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> dy[] = &#123; <span class="number">0</span>,  <span class="number">0</span>,  <span class="number">1</span>, <span class="number">-1</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">P</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> x, y;</span><br><span class="line">    <span class="keyword">int</span> step;</span><br><span class="line">&#125; p[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">bfs</span><span class="params">(P sp1, P sp2)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(vis, <span class="number">0</span>, <span class="keyword">sizeof</span>(vis));</span><br><span class="line"></span><br><span class="line">    <span class="built_in">queue</span>&lt;P&gt; q;</span><br><span class="line">    q.push(sp1);</span><br><span class="line">    q.push(sp2);</span><br><span class="line">    vis[sp1.x][sp1.y] = <span class="number">1</span>;</span><br><span class="line">    vis[sp2.x][sp2.y] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> t = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(!q.empty()) &#123;</span><br><span class="line">        P tp = q.front();</span><br><span class="line">        q.pop();</span><br><span class="line"></span><br><span class="line">        t = max(t, tp.step);</span><br><span class="line">        P np = tp;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">4</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> x = np.x = tp.x+dx[i];</span><br><span class="line">            <span class="keyword">int</span> y = np.y = tp.y+dy[i];</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(x&lt;<span class="number">0</span> || x&gt;=n || y&lt;<span class="number">0</span> || y&gt;=m) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(!vis[x][y] &amp;&amp; b[x][y]==<span class="string">'#'</span>) &#123;</span><br><span class="line">                np.step = tp.step+<span class="number">1</span>;</span><br><span class="line">                q.push(np);</span><br><span class="line">                vis[x][y] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> t;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">ok</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> m)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;m; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(!vis[i][j] &amp;&amp; b[i][j]==<span class="string">'#'</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> cs=<span class="number">1</span>; cs&lt;=T; cs++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;m);</span><br><span class="line">        <span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;m; j++) &#123;</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">" %c"</span>, &amp;b[i][j]);</span><br><span class="line">                <span class="keyword">if</span>(b[i][j]==<span class="string">'#'</span>) &#123;</span><br><span class="line">                    p[num].x = i;</span><br><span class="line">                    p[num].y = j;</span><br><span class="line">                    p[num].step = <span class="number">0</span>;</span><br><span class="line">                    num++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Case %d: "</span>, cs);</span><br><span class="line">        <span class="keyword">if</span>(num&lt;=<span class="number">2</span>) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"0\n"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">int</span> mi = inf;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;num; i++) &#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>; j&lt;num; j++) &#123;</span><br><span class="line">                    <span class="keyword">int</span> t = bfs(p[i], p[j]);</span><br><span class="line">                    <span class="keyword">if</span>(ok(n, m))</span><br><span class="line">                        mi = min(mi, t);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(mi==inf)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"-1\n"</span>);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, mi);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>搜索</category>
        <category>BFS</category>
      </categories>
      <tags>
        <tag>FZU</tag>
        <tag>BFS</tag>
        <tag>kuangbin 专题一</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】HDU-1029 Ignatius and the Princess IV</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E5%9F%BA%E7%A1%80DP/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91HDU-1029%20Ignatius%20and%20the%20Princess%20IV/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:48:59 GMT+0800 (GMT+08:00) --><h1 id="Ignatius-and-the-Princess-IV-HDU-1029"><a href="#Ignatius-and-the-Princess-IV-HDU-1029" class="headerlink" title="Ignatius and the Princess IV (HDU - 1029)"></a>Ignatius and the Princess IV (<a href="https://vjudge.net/problem/HDU-1029" target="_blank" rel="noopener">HDU - 1029</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>“OK, you are not too bad, em… But you can never pass the next test.” feng5166 says.</p><p>“I will tell you an odd number N, and then N integers. There will be a special integer among them, you have to tell me which integer is the special one after I tell you all the integers.” feng5166 says.</p><p>“But what is the characteristic of the special integer?” Ignatius asks.</p><p>“The integer will appear at least (N+1)/2 times. If you can’t find the right integer, I will kill the Princess, and you will be my dinner, too. Hahahaha…..” feng5166 says.</p><p>Can you find the special integer for Ignatius?</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>The input contains several test cases. Each test case contains two lines. The first line consists of an odd integer N(1&lt;=N&lt;=999999) which indicate the number of the integers feng5166 will tell our hero. The second line contains the N integers. The input is terminated by the end of file.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For each test case, you have to output only one line which contains the special number you have found.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">5</span><br><span class="line">1 3 2 3 3</span><br><span class="line">11</span><br><span class="line">1 1 1 1 1 5 5 5 5 5 5</span><br><span class="line">7</span><br><span class="line">1 1 1 1 1 1 1</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3</span><br><span class="line">5</span><br><span class="line">1</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[N];</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n)) &#123;</span><br><span class="line">        <span class="keyword">int</span> num=<span class="number">0</span>, ans=<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]);</span><br><span class="line">            <span class="keyword">if</span>(num==<span class="number">0</span>) &#123;</span><br><span class="line">                num++;</span><br><span class="line">                ans = a[i];</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span>(ans!=a[i])</span><br><span class="line">                    num--;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    num++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>动态规划</category>
        <category>基础DP</category>
      </categories>
      <tags>
        <tag>HDU</tag>
        <tag>DP</tag>
        <tag>kuangbin 专题十二</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】HDU-1043 Eight</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%90%9C%E7%B4%A2/BFS/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91HDU-1043%20Eight/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:48:59 GMT+0800 (GMT+08:00) --><h1 id="Eight-HDU-1043"><a href="#Eight-HDU-1043" class="headerlink" title="Eight (HDU - 1043)"></a>Eight (<a href="https://vjudge.net/problem/HDU-1043" target="_blank" rel="noopener">HDU - 1043</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>The 15-puzzle has been around for over 100 years; even if you don’t know it by that name, you’ve seen it. It is constructed with 15 sliding tiles, each with a number from 1 to 15 on it, and all packed into a 4 by 4 frame with one tile missing. Let’s call the missing tile ‘x’; the object of the puzzle is to arrange the tiles so that they are ordered as:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> 1  2  3  4</span><br><span class="line"> 5  6  7  8</span><br><span class="line"> 9 10 11 12</span><br><span class="line">13 14 15  x</span><br></pre></td></tr></table></figure><p>where the only legal operation is to exchange ‘x’ with one of the tiles with which it shares an edge. As an example, the following sequence of moves solves a slightly scrambled puzzle:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> 1  2  3  4     1  2  3  4     1  2  3  4     1  2  3  4</span><br><span class="line"> 5  6  7  8     5  6  7  8     5  6  7  8     5  6  7  8</span><br><span class="line"> 9  x 10 12     9 10  x 12     9 10 11 12     9 10 11 12</span><br><span class="line">13 14 11 15    13 14 11 15    13 14  x 15    13 14 15  x</span><br><span class="line">            r-&gt;            d-&gt;            r-&gt;</span><br></pre></td></tr></table></figure><p>The letters in the previous row indicate which neighbor of the ‘x’ tile is swapped with the ‘x’ tile at each step; legal values are ‘r’,’l’,’u’ and ‘d’, for right, left, up, and down, respectively.</p><p>Not all puzzles can be solved; in 1870, a man named Sam Loyd was famous for distributing an unsolvable version of the puzzle, and<br>frustrating many people. In fact, all you have to do to make a regular puzzle into an unsolvable one is to swap two tiles (not counting the missing ‘x’ tile, of course).</p><p>In this problem, you will write a program for solving the less well-known 8-puzzle, composed of tiles on a three by three<br>arrangement.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>You will receive, several descriptions of configuration of the 8 puzzle. One description is just a list of the tiles in their initial positions, with the rows listed from top to bottom, and the tiles listed from left to right within a row, where the tiles are represented by numbers 1 to 8, plus ‘x’. For example, this puzzle</p><p>1 2 3<br>x 4 6<br>7 5 8</p><p>is described by this list:</p><p>1 2 3 x 4 6 7 5 8</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>You will print to standard output either the word ``unsolvable’’, if the puzzle has no solution, or a string consisting entirely of the letters ‘r’, ‘l’, ‘u’ and ‘d’ that describes a series of moves that produce a solution. The string should include no spaces and start at the beginning of the line. Do not print a blank line between cases.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2  3  4  1  5  x  7  6  8</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ullddrurdllurdruldr</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>考虑多次bfs会TLE，而目标状态是确定的，且由此bfs出的所有状态也是有限的(<strong>9!</strong>)，所以这题不是bfs直接搜出来的，而是bfs打表。<br>暂时没用康拓展开，不过最好去看看，同时感兴趣的圣雄甘地可以了解一下八数码八境界…</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e2</span>+<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n = <span class="number">9</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> dx[] = &#123; <span class="number">1</span>, <span class="number">-1</span>,  <span class="number">0</span>,  <span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> dy[] = &#123; <span class="number">0</span>,  <span class="number">0</span>,  <span class="number">1</span>, <span class="number">-1</span>&#125;;</span><br><span class="line"><span class="keyword">char</span> dir[] = <span class="string">"udlr"</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">P</span> &#123;</span></span><br><span class="line">    <span class="built_in">string</span> s, p;</span><br><span class="line">    <span class="keyword">int</span> x;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="built_in">string</span>&gt; mp;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bfs</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    P sp;</span><br><span class="line">    sp.s = <span class="string">"123456789"</span>;</span><br><span class="line">    sp.p = <span class="string">""</span>;</span><br><span class="line">    sp.x = n<span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">queue</span>&lt;P&gt; q;</span><br><span class="line">    q.push(sp);</span><br><span class="line">    mp[<span class="number">123456789</span>] = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(!q.empty()) &#123;</span><br><span class="line">        P tp = q.front();</span><br><span class="line">        q.pop();</span><br><span class="line"></span><br><span class="line">        P np;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">4</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> x = tp.x/<span class="number">3</span>+dx[i];</span><br><span class="line">            <span class="keyword">int</span> y = tp.x%<span class="number">3</span>+dy[i];</span><br><span class="line">            <span class="keyword">if</span>(x&lt;<span class="number">0</span> || x&gt;=<span class="number">3</span> || y&lt;<span class="number">0</span> || y&gt;=<span class="number">3</span>) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            np = tp;</span><br><span class="line">            np.x = x*<span class="number">3</span>+y;</span><br><span class="line">            swap(np.s[np.x], np.s[tp.x]);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">int</span> d=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">                d = d*<span class="number">10</span>+np.s[i]-<span class="string">'0'</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(mp.find(d)==mp.end()) &#123;</span><br><span class="line">                np.p += i+<span class="string">'0'</span>;</span><br><span class="line">                q.push(np);</span><br><span class="line">                mp[d] = np.p;</span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    bfs();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">char</span> c;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">" %c"</span>, &amp;c)==<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">int</span> d;</span><br><span class="line">        <span class="keyword">if</span>(c==<span class="string">'x'</span>) &#123;</span><br><span class="line">            d = <span class="number">9</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            d = c-<span class="string">'0'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;n; i++) &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">" %c"</span>, &amp;c);</span><br><span class="line">            <span class="keyword">if</span>(c==<span class="string">'x'</span>) &#123;</span><br><span class="line">                d = d*<span class="number">10</span>+<span class="number">9</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                d = d*<span class="number">10</span>+c-<span class="string">'0'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(mp.find(d)==mp.end()) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"unsolvable\n"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">string</span> p = mp[d];</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=p.length()<span class="number">-1</span>; i&gt;=<span class="number">0</span>; i--)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%c"</span>, dir[p[i]-<span class="string">'0'</span>]);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>搜索</category>
        <category>BFS</category>
      </categories>
      <tags>
        <tag>BFS</tag>
        <tag>HDU</tag>
        <tag>kuangbin 专题二</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】HDU-1069 Monkey and Banana</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E5%9F%BA%E7%A1%80DP/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91HDU-1069%20Monkey%20and%20Banana/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:48:59 GMT+0800 (GMT+08:00) --><h1 id="Monkey-and-Banana-HDU-1069"><a href="#Monkey-and-Banana-HDU-1069" class="headerlink" title="Monkey and Banana (HDU - 1069)"></a>Monkey and Banana (<a href="https://vjudge.net/problem/HDU-1069" target="_blank" rel="noopener">HDU - 1069</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>A group of researchers are designing an experiment to test the IQ of a monkey. They will hang a banana at the roof of a building, and at the mean time, provide the monkey with some blocks. If the monkey is clever enough, it shall be able to reach the banana by placing one block on the top another to build a tower and climb up to get its favorite food.</p><p>The researchers have n types of blocks, and an unlimited supply of blocks of each type. Each type-i block was a rectangular solid with linear dimensions (xi, yi, zi). A block could be reoriented so that any two of its three dimensions determined the dimensions of the base and the other dimension was the height.</p><p>They want to make sure that the tallest tower possible by stacking blocks can reach the roof. The problem is that, in building a tower, one block could only be placed on top of another block as long as the two base dimensions of the upper block were both strictly smaller than the corresponding base dimensions of the lower block because there has to be some space for the monkey to step on. This meant, for example, that blocks oriented to have equal-sized bases couldn’t be stacked.</p><p>Your job is to write a program that determines the height of the tallest tower the monkey can build with a given set of blocks.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>The input file will contain one or more test cases. The first line of each test case contains an integer n,<br>representing the number of different blocks in the following data set. The maximum value for n is 30.<br>Each of the next n lines contains three integers representing the values xi, yi and zi.<br>Input is terminated by a value of zero (0) for n.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For each test case, print one line containing the case number (they are numbered sequentially starting from 1) and the height of the tallest possible tower in the format “Case case: maximum height = height”.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1</span><br><span class="line">10 20 30</span><br><span class="line">2</span><br><span class="line">6 8 10</span><br><span class="line">5 5 5</span><br><span class="line">7</span><br><span class="line">1 1 1</span><br><span class="line">2 2 2</span><br><span class="line">3 3 3</span><br><span class="line">4 4 4</span><br><span class="line">5 5 5</span><br><span class="line">6 6 6</span><br><span class="line">7 7 7</span><br><span class="line">5</span><br><span class="line">31 41 59</span><br><span class="line">26 53 58</span><br><span class="line">97 93 23</span><br><span class="line">84 62 64</span><br><span class="line">33 83 27</span><br><span class="line">0</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Case 1: maximum height &#x3D; 40</span><br><span class="line">Case 2: maximum height &#x3D; 21</span><br><span class="line">Case 3: maximum height &#x3D; 28</span><br><span class="line">Case 4: maximum height &#x3D; 342</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">2e2</span> + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">sc</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> l, w, h;</span><br><span class="line">&#125; a[N];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> f[N] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> n, num = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(sc x, sc y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x.l != y.l)</span><br><span class="line">        <span class="keyword">return</span> x.l &lt; y.l;</span><br><span class="line">    <span class="keyword">return</span> x.w &lt; y.w;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n) &amp;&amp; n) &#123;</span><br><span class="line">        <span class="keyword">int</span> l, w, h, t = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>, &amp;l, &amp;w, &amp;h);</span><br><span class="line">            a[t].l=l, a[t].w=w, a[t++].h=h;</span><br><span class="line">            a[t].l=l, a[t].w=h, a[t++].h=w;</span><br><span class="line">            a[t].l=w, a[t].w=l, a[t++].h=h;</span><br><span class="line">            a[t].l=w, a[t].w=h, a[t++].h=l;</span><br><span class="line">            a[t].l=h, a[t].w=l, a[t++].h=w;</span><br><span class="line">            a[t].l=h, a[t].w=w, a[t++].h=l;</span><br><span class="line">        &#125;</span><br><span class="line">        sort(a, a+t, cmp);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;t; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> mx=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;i; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(a[j].l&lt;a[i].l &amp;&amp; a[j].w&lt;a[i].w)</span><br><span class="line">                    mx = max(mx, f[j]);</span><br><span class="line">            &#125;</span><br><span class="line">            f[i] = a[i].h+mx;</span><br><span class="line">            ans = max(ans, f[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Case %d: maximum height = %d\n"</span>, num++, ans);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>动态规划</category>
        <category>基础DP</category>
      </categories>
      <tags>
        <tag>HDU</tag>
        <tag>DP</tag>
        <tag>kuangbin 专题十二</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】HDU-1160 FatMouse&#39;s Speed</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/LIS/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91HDU-1160%20FatMouse&#39;s%20Speed/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:48:59 GMT+0800 (GMT+08:00) --><h1 id="FatMouse’s-Speed-HDU-1160"><a href="#FatMouse’s-Speed-HDU-1160" class="headerlink" title="FatMouse’s Speed (HDU - 1160)"></a>FatMouse’s Speed (<a href="https://vjudge.net/problem/HDU-1160" target="_blank" rel="noopener">HDU - 1160</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>FatMouse believes that the fatter a mouse is, the faster it runs. To disprove this, you want to take the data on a collection of mice and put as large a subset of this data as possible into a sequence so that the weights are increasing, but the speeds are decreasing.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>Input contains data for a bunch of mice, one mouse per line, terminated by end of file.</p><p>The data for a particular mouse will consist of a pair of integers: the first representing its size in grams and the second representing its speed in centimeters per second. Both integers are between 1 and 10000. The data in each test case will contain information for at most 1000 mice.</p><p>Two mice may have the same weight, the same speed, or even the same weight and speed.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>Your program should output a sequence of lines of data; the first line should contain a number n; the remaining n lines should each contain a single positive integer (each one representing a mouse). If these n integers are m[1], m[2],…, m[n] then it must be the case that</p><p>W[m[1]] &lt; W[m[2]] &lt; … &lt; W[m[n]]</p><p>and</p><p>S[m[1]] &gt; S[m[2]] &gt; … &gt; S[m[n]]</p><p>In order for the answer to be correct, n should be as large as possible.<br>All inequalities are strict: weights must be strictly increasing, and speeds must be strictly decreasing. There may be many correct outputs for a given input, your program only needs to find one.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">6008 1300</span><br><span class="line">6000 2100</span><br><span class="line">500 2000</span><br><span class="line">1000 4000</span><br><span class="line">1100 3000</span><br><span class="line">6000 2000</span><br><span class="line">8000 1400</span><br><span class="line">6000 1200</span><br><span class="line">2000 1900</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">4</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">9</span><br><span class="line">7</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e3</span>+<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">P</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> w, s, id;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">P a[N];</span><br><span class="line"><span class="keyword">int</span> dp[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(P a, P b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a.w==b.w)</span><br><span class="line">        <span class="keyword">return</span> a.s &gt; b.s;</span><br><span class="line">    <span class="keyword">return</span> a.w &lt; b.w;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;a[n].w, &amp;a[n].s)==<span class="number">2</span>) &#123;</span><br><span class="line">        a[n].id = n+<span class="number">1</span>;</span><br><span class="line">        n++;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(a, a+n, cmp);</span><br><span class="line">    <span class="keyword">int</span> mx = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">        dp[i] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;i; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(a[j].w&lt;a[i].w &amp;&amp; a[j].s&gt;a[i].s) &#123;</span><br><span class="line">                dp[i] = max(dp[i], dp[j]+<span class="number">1</span>);</span><br><span class="line">                mx = max(mx, dp[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, mx);</span><br><span class="line">    <span class="built_in">stack</span>&lt;<span class="keyword">int</span>&gt; st;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=n<span class="number">-1</span>; i&gt;=<span class="number">0</span>; i--) &#123;</span><br><span class="line">        <span class="keyword">if</span>(dp[i]==mx) &#123;</span><br><span class="line">            st.push(a[i].id);</span><br><span class="line">            mx--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(st.size()) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, st.top());</span><br><span class="line">        st.pop();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>动态规划</category>
        <category>LIS</category>
      </categories>
      <tags>
        <tag>HDU</tag>
        <tag>DP</tag>
        <tag>kuangbin 专题十二</tag>
        <tag>LIS</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】HDU-1171 Big Event in HDU</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E8%83%8C%E5%8C%85/%E5%A4%9A%E9%87%8D%E8%83%8C%E5%8C%85/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91HDU-1171%20Big%20Event%20in%20HDU/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:48:59 GMT+0800 (GMT+08:00) --><h1 id="Big-Event-in-HDU-HDU-1171"><a href="#Big-Event-in-HDU-HDU-1171" class="headerlink" title="Big Event in HDU (HDU - 1171)"></a>Big Event in HDU (<a href="https://vjudge.net/problem/HDU-1171" target="_blank" rel="noopener">HDU - 1171</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>Nowadays, we all know that Computer College is the biggest department in HDU. But, maybe you don’t know that Computer College had ever been split into Computer College and Software College in 2002.<br>The splitting is absolutely a big event in HDU! At the same time, it is a trouble thing too. All facilities must go halves. First, all facilities are assessed, and two facilities are thought to be same if they have the same value. It is assumed that there is N (0&lt;N&lt;1000) kinds of facilities (different value, different kinds).</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>Input contains multiple test cases. Each test case starts with a number N (0 &lt; N &lt;= 50 – the total number of different facilities). The next N lines contain an integer V (0&lt;V&lt;=50 –value of facility) and an integer M (0&lt;M&lt;=100 –corresponding number of the facilities) each. You can assume that all V are different.<br>A test case starting with a negative integer terminates input and this test case is not to be processed.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For each case, print one line containing two integers A and B which denote the value of Computer College and Software College will get respectively. A and B should be as equal as possible. At the same time, you should guarantee that A is not less than B.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2</span><br><span class="line">10 1</span><br><span class="line">20 1</span><br><span class="line">3</span><br><span class="line">10 1 </span><br><span class="line">20 2</span><br><span class="line">30 1</span><br><span class="line">-1</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">20 10</span><br><span class="line">40 40</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>01背包</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e3</span>+<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> w[<span class="number">5000</span>+<span class="number">5</span>];</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> dp[<span class="number">250000</span>+<span class="number">5</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n)==<span class="number">1</span> &amp;&amp; n&gt;<span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">memset</span>(dp, <span class="number">0</span>, <span class="keyword">sizeof</span>(dp));</span><br><span class="line">        <span class="keyword">int</span> sum=<span class="number">0</span>, tot=<span class="number">0</span>, val, num;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;val, &amp;num);</span><br><span class="line">            <span class="keyword">while</span>(num--)&#123;</span><br><span class="line">                w[tot++] = val;</span><br><span class="line">                sum += val;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;tot; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=sum/<span class="number">2</span>; j&gt;=w[i]; j--) &#123;</span><br><span class="line">                dp[j] = max(dp[j], dp[j-w[i]]+w[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>, sum-dp[sum/<span class="number">2</span>], dp[sum/<span class="number">2</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>动态规划</category>
        <category>背包</category>
        <category>多重背包</category>
      </categories>
      <tags>
        <tag>HDU</tag>
        <tag>DP</tag>
        <tag>背包</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】HDU-1241 Oil Deposits</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%90%9C%E7%B4%A2/BFS/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91HDU-1241%20Oil%20Deposits/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:48:59 GMT+0800 (GMT+08:00) --><h1 id="Oil-Deposits-HDU-1241"><a href="#Oil-Deposits-HDU-1241" class="headerlink" title="Oil Deposits (HDU - 1241)"></a>Oil Deposits (<a href="https://vjudge.net/problem/HDU-1241" target="_blank" rel="noopener">HDU - 1241</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>The GeoSurvComp geologic survey company is responsible for detecting underground oil deposits. GeoSurvComp works with one large rectangular region of land at a time, and creates a grid that divides the land into numerous square plots. It then analyzes each plot separately, using sensing equipment to determine whether or not the plot contains oil. A plot containing oil is called a pocket. If two pockets are adjacent, then they are part of the same oil deposit. Oil deposits can be quite large and may contain numerous pockets. Your job is to determine how many different oil deposits are contained in a grid.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>The input file contains one or more grids. Each grid begins with a line containing m and n, the number of rows and columns in the grid, separated by a single space. If m = 0 it signals the end of the input; otherwise 1 &lt;= m &lt;= 100 and 1 &lt;= n &lt;= 100. Following this are m lines of n characters each (not counting the end-of-line characters). Each character corresponds to one plot, and is either ‘*’, representing the absence of oil, or ‘@’, representing an oil pocket.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For each grid, output the number of distinct oil deposits. Two different pockets are part of the same oil deposit if they are adjacent horizontally, vertically, or diagonally. An oil deposit will not contain more than 100 pockets.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1 1</span><br><span class="line">*</span><br><span class="line">3 5</span><br><span class="line">*@*@*</span><br><span class="line">**@**</span><br><span class="line">*@*@*</span><br><span class="line">1 8</span><br><span class="line">@@****@*</span><br><span class="line">5 5 </span><br><span class="line">****@</span><br><span class="line">*@@*@</span><br><span class="line">*@**@</span><br><span class="line">@@@*@</span><br><span class="line">@@**@</span><br><span class="line">0 0</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">0</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">2</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>bfs求连通块</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e2</span>+<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> b[N][N] = &#123;&#123;<span class="number">0</span>&#125;&#125;;</span><br><span class="line"><span class="keyword">bool</span> vis[N][N] = &#123;&#123;<span class="number">0</span>&#125;&#125;;</span><br><span class="line"><span class="keyword">int</span> n, m, ans = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> dx[] = &#123; <span class="number">1</span>, <span class="number">-1</span>,  <span class="number">0</span>,  <span class="number">0</span>,  <span class="number">1</span>,  <span class="number">1</span>, <span class="number">-1</span>, <span class="number">-1</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> dy[] = &#123; <span class="number">0</span>,  <span class="number">0</span>,  <span class="number">1</span>, <span class="number">-1</span>,  <span class="number">1</span>, <span class="number">-1</span>,  <span class="number">1</span>, <span class="number">-1</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">P</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> x, y;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bfs</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    P sp;</span><br><span class="line">    sp.x = x;</span><br><span class="line">    sp.y = y;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">queue</span>&lt;P&gt; q;</span><br><span class="line">    q.push(sp);</span><br><span class="line">    vis[sp.x][sp.y] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(!q.empty()) &#123;</span><br><span class="line">        P tp = q.front();</span><br><span class="line">        q.pop();</span><br><span class="line"></span><br><span class="line">        P np = tp;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">8</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> x = np.x = tp.x+dx[i];</span><br><span class="line">            <span class="keyword">int</span> y = np.y = tp.y+dy[i];</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(x&lt;<span class="number">0</span> || x&gt;=n || y&lt;<span class="number">0</span> || y&gt;=m) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(!vis[x][y] &amp;&amp; b[x][y]==<span class="string">'@'</span>) &#123;</span><br><span class="line">                q.push(np);</span><br><span class="line">                vis[x][y] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;m)==<span class="number">2</span> &amp;&amp; n &amp;&amp; m) &#123;</span><br><span class="line">        <span class="built_in">memset</span>(vis, <span class="number">0</span>, <span class="keyword">sizeof</span>(vis));</span><br><span class="line">        ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;m; j++) &#123;</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">" %c"</span>, &amp;b[i][j]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;m; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(!vis[i][j] &amp;&amp; b[i][j]==<span class="string">'@'</span>) &#123;</span><br><span class="line">                    bfs(i, j);</span><br><span class="line">                    ans++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>搜索</category>
        <category>BFS</category>
      </categories>
      <tags>
        <tag>BFS</tag>
        <tag>kuangbin 专题一</tag>
        <tag>HDU</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】HDU-1269 迷宫城堡</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9B%BE%E8%AE%BA/%E8%BF%9E%E9%80%9A%E6%80%A7/%E5%BC%BA%E8%BF%9E%E9%80%9A%E5%88%86%E9%87%8F/Tarjan/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91HDU-1269%20%E8%BF%B7%E5%AE%AB%E5%9F%8E%E5%A0%A1/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:48:59 GMT+0800 (GMT+08:00) --><h1 id="迷宫城堡-HDU-1269"><a href="#迷宫城堡-HDU-1269" class="headerlink" title="迷宫城堡 (HDU - 1269)"></a>迷宫城堡 (<a href="https://vjudge.net/problem/HDU-1269" target="_blank" rel="noopener">HDU - 1269</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>为了训练小希的方向感，Gardon建立了一座大城堡，里面有N个房间(N&lt;=10000)和M条通道(M&lt;=100000)，每个通道都是单向的，就是说若称某通道连通了A房间和B房间，只说明可以通过这个通道由A房间到达B房间，但并不说明通过它可以由B房间到达A房间。Gardon需要请你写个程序确认一下是否任意两个房间都是相互连通的，即：对于任意的i和j，至少存在一条路径可以从房间i到房间j，也存在一条路径可以从房间j到房间i。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入包含多组数据，输入的第一行有两个数：N和M，接下来的M行每行有两个数a和b，表示了一条通道可以从A房间来到B房间。文件最后以两个0结束。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>对于输入的每组数据，如果任意两个房间都是相互连接的，输出”Yes”，否则输出”No”。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3 3</span><br><span class="line">1 2</span><br><span class="line">2 3</span><br><span class="line">3 1</span><br><span class="line">3 3</span><br><span class="line">1 2</span><br><span class="line">2 3</span><br><span class="line">3 2</span><br><span class="line">0 0</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Yes</span><br><span class="line">No</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e4</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M = <span class="number">1e5</span>+<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">E</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> to, next;</span><br><span class="line">&#125; e[M];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> H[N], tot;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> S[N], top;</span><br><span class="line"><span class="keyword">int</span> dfn[N], low[N], bel[N], idx, scc;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="keyword">int</span> u, v;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> from, <span class="keyword">int</span> to)</span> </span>&#123;</span><br><span class="line">    e[tot] = &#123;to, H[from]&#125;;</span><br><span class="line">    H[from] = tot++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u)</span> </span>&#123;</span><br><span class="line">    dfn[u] = low[u] = ++idx;</span><br><span class="line">    S[++top]=u;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=H[u]; ~i; i=e[i].next) &#123;</span><br><span class="line">        <span class="keyword">int</span> v = e[i].to;</span><br><span class="line">        <span class="keyword">if</span>(!dfn[v]) &#123;</span><br><span class="line">            dfs(v);</span><br><span class="line">            low[u] = min(low[u], low[v]);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(!bel[v])</span><br><span class="line">            low[u] = min(low[u], dfn[v]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(low[u]==dfn[u]) &#123;</span><br><span class="line">        scc++;</span><br><span class="line">        <span class="keyword">int</span> t;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            t=S[top--];</span><br><span class="line">            bel[t]=scc;</span><br><span class="line">        &#125; <span class="keyword">while</span>(t!=u);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">tarjan</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(dfn, <span class="number">0</span>, <span class="keyword">sizeof</span>(dfn));</span><br><span class="line">    <span class="built_in">memset</span>(bel, <span class="number">0</span>, <span class="keyword">sizeof</span>(bel));</span><br><span class="line">    idx = scc = top = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(!dfn[i])</span><br><span class="line">            dfs(i);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m)==<span class="number">2</span> &amp;&amp; (n || m)) &#123;</span><br><span class="line">        <span class="built_in">memset</span>(H, <span class="number">-1</span>, <span class="keyword">sizeof</span>(H));</span><br><span class="line">        tot = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;m; i++) &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;u, &amp;v);</span><br><span class="line">            add(u, v);</span><br><span class="line">        &#125;</span><br><span class="line">        tarjan();</span><br><span class="line">        <span class="keyword">if</span>(scc==<span class="number">1</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Yes\n"</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"No\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>图论</category>
        <category>连通性</category>
        <category>强连通分量</category>
        <category>Tarjan</category>
      </categories>
      <tags>
        <tag>HDU</tag>
        <tag>Tarjan</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】HDU-1495 非常可乐</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%90%9C%E7%B4%A2/BFS/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91HDU-1495%20%E9%9D%9E%E5%B8%B8%E5%8F%AF%E4%B9%90/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:00 GMT+0800 (GMT+08:00) --><h1 id="非常可乐-HDU-1495"><a href="#非常可乐-HDU-1495" class="headerlink" title="非常可乐 (HDU - 1495)"></a>非常可乐 (<a href="https://vjudge.net/problem/HDU-1495" target="_blank" rel="noopener">HDU - 1495</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>大家一定觉的运动以后喝可乐是一件很惬意的事情，但是seeyou却不这么认为。因为每次当seeyou买了可乐以后，阿牛就要求和seeyou一起分享这一瓶可乐，而且一定要喝的和seeyou一样多。但seeyou的手中只有两个杯子，它们的容量分别是N 毫升和M 毫升 可乐的体积为S （S&lt;101）毫升　(正好装满一瓶) ，它们三个之间可以相互倒可乐 (都是没有刻度的，且 S==N+M，101＞S＞0，N＞0，M＞0) 。聪明的ACMER你们说他们能平分吗？如果能请输出倒可乐的最少的次数，如果不能输出”NO”。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>三个整数 : S 可乐的体积 , N 和 M是两个杯子的容量，以”0 0 0”结束。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>如果能平分的话请输出最少要倒的次数，否则输出”NO”。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">7 4 3</span><br><span class="line">4 1 3</span><br><span class="line">0 0 0</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">NO</span><br><span class="line">3</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>倒水问题，当S为奇数时无解。数论有简便解法</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> out(a) (cout&lt;&lt;__LINE__&lt;&lt;<span class="meta-string">" : "</span>#a<span class="meta-string">" = "</span>&lt;&lt;(a)&lt;&lt;endl)</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e2</span>+<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> vis[N][N][N] = &#123;&#123;&#123;<span class="number">0</span>&#125;&#125;&#125;;</span><br><span class="line"><span class="keyword">int</span> s, n, m, ans = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">P</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> n, m, s;</span><br><span class="line">    <span class="keyword">int</span> step;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(vis, <span class="number">0</span>, <span class="keyword">sizeof</span>(vis));</span><br><span class="line"></span><br><span class="line">    P sp;</span><br><span class="line">    sp.s = s;</span><br><span class="line">    sp.n = <span class="number">0</span>;</span><br><span class="line">    sp.m = <span class="number">0</span>;</span><br><span class="line">    sp.step = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">queue</span>&lt;P&gt; q;</span><br><span class="line">    q.push(sp);</span><br><span class="line">    vis[sp.s][sp.n][sp.m] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(!q.empty()) &#123;</span><br><span class="line">        P tp = q.front();</span><br><span class="line">        q.pop();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>((!tp.n&amp;&amp;tp.m==tp.s) || (!tp.m&amp;&amp;tp.n==tp.s) || (!tp.s&amp;&amp;tp.n==tp.m)) &#123;</span><br><span class="line">            ans = tp.step;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        P np = tp;</span><br><span class="line">        <span class="keyword">int</span> t;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(tp.n) &#123;</span><br><span class="line">            t = tp.n+tp.m;</span><br><span class="line">            <span class="keyword">if</span>(t&gt;m) &#123;</span><br><span class="line">                np.m = m;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                np.m = t;</span><br><span class="line">            &#125;</span><br><span class="line">            np.n = t-np.m;</span><br><span class="line">            np.s = tp.s;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(!vis[np.s][np.n][np.m]) &#123;</span><br><span class="line">                np.step = tp.step+<span class="number">1</span>;</span><br><span class="line">                q.push(np);</span><br><span class="line">                vis[np.s][np.n][np.m] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            t = tp.n+tp.s;</span><br><span class="line">            <span class="keyword">if</span>(t&gt;s) &#123;</span><br><span class="line">                np.s = s;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                np.s = t;</span><br><span class="line">            &#125;</span><br><span class="line">            np.n = t-np.s;</span><br><span class="line">            np.m = tp.m;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(!vis[np.s][np.n][np.m]) &#123;</span><br><span class="line">                np.step = tp.step+<span class="number">1</span>;</span><br><span class="line">                q.push(np);</span><br><span class="line">                vis[np.s][np.n][np.m] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(tp.m) &#123;</span><br><span class="line">            t = tp.m+tp.n;</span><br><span class="line">            <span class="keyword">if</span>(t&gt;n) &#123;</span><br><span class="line">                np.n = n;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                np.n = t;</span><br><span class="line">            &#125;</span><br><span class="line">            np.m = t-np.n;</span><br><span class="line">            np.s = tp.s;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(!vis[np.s][np.n][np.m]) &#123;</span><br><span class="line">                np.step = tp.step+<span class="number">1</span>;</span><br><span class="line">                q.push(np);</span><br><span class="line">                vis[np.s][np.n][np.m] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            t = tp.m+tp.s;</span><br><span class="line">            <span class="keyword">if</span>(t&gt;s) &#123;</span><br><span class="line">                np.s = s;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                np.s = t;</span><br><span class="line">            &#125;</span><br><span class="line">            np.m = t-np.s;</span><br><span class="line">            np.n = tp.n;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(!vis[np.s][np.n][np.m]) &#123;</span><br><span class="line">                np.step = tp.step+<span class="number">1</span>;</span><br><span class="line">                q.push(np);</span><br><span class="line">                vis[np.s][np.n][np.m] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(tp.s) &#123;</span><br><span class="line">            t = tp.s+tp.n;</span><br><span class="line">            <span class="keyword">if</span>(t&gt;n) &#123;</span><br><span class="line">                np.n = n;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                np.n = t;</span><br><span class="line">            &#125;</span><br><span class="line">            np.s = t-np.n;</span><br><span class="line">            np.m = tp.m;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(!vis[np.s][np.n][np.m]) &#123;</span><br><span class="line">                np.step = tp.step+<span class="number">1</span>;</span><br><span class="line">                q.push(np);</span><br><span class="line">                vis[np.s][np.n][np.m] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            t = tp.s+tp.m;</span><br><span class="line">            <span class="keyword">if</span>(t&gt;m) &#123;</span><br><span class="line">                np.m = m;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                np.m = t;</span><br><span class="line">            &#125;</span><br><span class="line">            np.s = t-np.m;</span><br><span class="line">            np.n = tp.n;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(!vis[np.s][np.n][np.m]) &#123;</span><br><span class="line">                np.step = tp.step+<span class="number">1</span>;</span><br><span class="line">                q.push(np);</span><br><span class="line">                vis[np.s][np.n][np.m] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>, &amp;s, &amp;n, &amp;m)==<span class="number">3</span> &amp;&amp; s &amp;&amp; n &amp;&amp; m) &#123;</span><br><span class="line">        <span class="keyword">if</span>(s%<span class="number">2</span>==<span class="number">0</span> &amp;&amp; bfs()) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"NO\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>搜索</category>
        <category>BFS</category>
      </categories>
      <tags>
        <tag>BFS</tag>
        <tag>kuangbin 专题一</tag>
        <tag>HDU</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】HDU-1686 Oulipo</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%AD%97%E7%AC%A6%E4%B8%B2/%E6%A8%A1%E5%BC%8F%E5%8C%B9%E9%85%8D/KMP/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91HDU-1686%20Oulipo/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:00 GMT+0800 (GMT+08:00) --><h1 id="Oulipo-HDU-1686"><a href="#Oulipo-HDU-1686" class="headerlink" title="Oulipo (HDU - 1686)"></a>Oulipo (<a href="https://vjudge.net/problem/HDU-1686" target="_blank" rel="noopener">HDU - 1686</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>The French author Georges Perec (1936–1982) once wrote a book, La disparition, without the letter ‘e’. He was a member of the Oulipo group. A quote from the book:</p><p>Tout avait Pair normal, mais tout s’affirmait faux. Tout avait Fair normal, d’abord, puis surgissait l’inhumain, l’affolant. Il aurait voulu savoir où s’articulait l’association qui l’unissait au roman : stir son tapis, assaillant à tout instant son imagination, l’intuition d’un tabou, la vision d’un mal obscur, d’un quoi vacant, d’un non-dit : la vision, l’avision d’un oubli commandant tout, où s’abolissait la raison : tout avait l’air normal mais…</p><p>Perec would probably have scored high (or rather, low) in the following contest. People are asked to write a perhaps even meaningful text on some subject with as few occurrences of a given “word” as possible. Our task is to provide the jury with a program that counts these occurrences, in order to obtain a ranking of the competitors. These competitors often write very long texts with nonsense meaning; a sequence of 500,000 consecutive ‘T’s is not unusual. And they never use spaces.</p><p>So we want to quickly find out how often a word, i.e., a given string, occurs in a text. More formally: given the alphabet {‘A’, ‘B’, ‘C’, …, ‘Z’} and two finite strings over that alphabet, a word W and a text T, count the number of occurrences of W in T. All the consecutive characters of W must exactly match consecutive characters of T. Occurrences may overlap.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>The first line of the input file contains a single number: the number of test cases to follow. Each test case has the following format:</p><p>One line with the word W, a string over {‘A’, ‘B’, ‘C’, …, ‘Z’}, with 1 ≤ |W| ≤ 10,000 (here |W| denotes the length of the string W).<br>One line with the text T, a string over {‘A’, ‘B’, ‘C’, …, ‘Z’}, with |W| ≤ |T| ≤ 1,000,000.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For every test case in the input file, the output should contain a single number, on a single line: the number of occurrences of the word W in the text T.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3</span><br><span class="line">BAPC</span><br><span class="line">BAPC</span><br><span class="line">AZA</span><br><span class="line">AZAZAZA</span><br><span class="line">VERDI</span><br><span class="line">AVERDXIVYERDIAN</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1</span><br><span class="line">3</span><br><span class="line">0</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e6</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M = <span class="number">1e4</span>+<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> T, ans;</span><br><span class="line"><span class="keyword">char</span> s[N], t[M];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> nxt[M]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getnxt</span><span class="params">(<span class="keyword">char</span> *t)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>, j=<span class="number">-1</span>;</span><br><span class="line">    nxt[<span class="number">0</span>]=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">while</span>(t[i]) &#123;</span><br><span class="line">        <span class="keyword">if</span>(j==<span class="number">-1</span> || t[i]==t[j]) &#123;</span><br><span class="line">            i++, j++;</span><br><span class="line">            <span class="keyword">if</span>(t[i]==t[j]) &#123;</span><br><span class="line">                nxt[i] = nxt[j];</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                nxt[i] = j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span></span><br><span class="line">            j = nxt[j];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">kmp</span><span class="params">(<span class="keyword">char</span> *s, <span class="keyword">char</span> *t)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>, j=<span class="number">0</span>, ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(s[i]) &#123;</span><br><span class="line">        <span class="keyword">if</span>(j==<span class="number">-1</span> || s[i]==t[j]) &#123;</span><br><span class="line">            i++, j++;</span><br><span class="line">            <span class="keyword">if</span>(!t[j]) &#123;</span><br><span class="line">                ans++;</span><br><span class="line">                j = nxt[j];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span></span><br><span class="line">            j = nxt[j];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s%s"</span>, t, s);</span><br><span class="line">        getnxt(t);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, kmp(s, t));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>字符串</category>
        <category>模式匹配</category>
        <category>KMP</category>
      </categories>
      <tags>
        <tag>HDU</tag>
        <tag>KMP</tag>
        <tag>kuangbin 专题十六</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】HDU-1827 Summer Holiday</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9B%BE%E8%AE%BA/%E8%BF%9E%E9%80%9A%E6%80%A7/%E5%BC%BA%E8%BF%9E%E9%80%9A%E5%88%86%E9%87%8F/Tarjan/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91HDU-1827%20Summer%20Holiday/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:00 GMT+0800 (GMT+08:00) --><h1 id="Summer-Holiday-HDU-1827"><a href="#Summer-Holiday-HDU-1827" class="headerlink" title="Summer Holiday (HDU - 1827)"></a>Summer Holiday (<a href="https://vjudge.net/problem/HDU-1827" target="_blank" rel="noopener">HDU - 1827</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>To see a World in a Grain of Sand<br>And a Heaven in a Wild Flower,<br>Hold Infinity in the palm of your hand<br>And Eternity in an hour.<br>—— William Blake</p><p>听说lcy帮大家预定了新马泰7日游，Wiskey真是高兴的夜不能寐啊，他想着得快点把这消息告诉大家，虽然他手上有所有人的联系方式，但是一个一个联系过去实在太耗时间和电话费了。他知道其他人也有一些别人的联系方式，这样他可以通知其他人，再让其他人帮忙通知一下别人。你能帮Wiskey计算出至少要通知多少人，至少得花多少电话费就能让所有人都被通知到吗？</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>多组测试数组，以EOF结束。<br>第一行两个整数N和M（1&lt;=N&lt;=1000, 1&lt;=M&lt;=2000），表示人数和联系对数。<br>接下一行有N个整数，表示Wiskey联系第i个人的电话费用。<br>接着有M行，每行有两个整数X，Y，表示X能联系到Y，但是不表示Y也能联系X。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>输出最小联系人数和最小花费。<br>每个CASE输出答案一行。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">12 16</span><br><span class="line">2 2 2 2 2 2 2 2 2 2 2 2 </span><br><span class="line">1 3</span><br><span class="line">3 2</span><br><span class="line">2 1</span><br><span class="line">3 4</span><br><span class="line">2 4</span><br><span class="line">3 5</span><br><span class="line">5 4</span><br><span class="line">4 6</span><br><span class="line">6 4</span><br><span class="line">7 4</span><br><span class="line">7 12</span><br><span class="line">7 8</span><br><span class="line">8 7</span><br><span class="line">8 9</span><br><span class="line">10 9</span><br><span class="line">11 10</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3 6</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">2e4</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M = <span class="number">5e4</span>+<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">E</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> to, next;</span><br><span class="line">&#125; e[M];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> H[N], tot;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> S[N], top;</span><br><span class="line"><span class="keyword">int</span> dfn[N], low[N], bel[N], idx, scc;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m, cost[N];</span><br><span class="line"><span class="keyword">int</span> u, v;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> sc[N], id[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> from, <span class="keyword">int</span> to)</span> </span>&#123;</span><br><span class="line">    e[tot] = &#123;to, H[from]&#125;;</span><br><span class="line">    H[from] = tot++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u)</span> </span>&#123;</span><br><span class="line">    dfn[u] = low[u] = ++idx;</span><br><span class="line">    S[++top]=u;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=H[u]; ~i; i=e[i].next) &#123;</span><br><span class="line">        <span class="keyword">int</span> v = e[i].to;</span><br><span class="line">        <span class="keyword">if</span>(!dfn[v]) &#123;</span><br><span class="line">            dfs(v);</span><br><span class="line">            low[u] = min(low[u], low[v]);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(!bel[v])</span><br><span class="line">            low[u] = min(low[u], dfn[v]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(low[u]==dfn[u]) &#123;</span><br><span class="line">        scc++;</span><br><span class="line">        <span class="keyword">int</span> t;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            t=S[top--];</span><br><span class="line">            bel[t]=scc;</span><br><span class="line">        &#125; <span class="keyword">while</span>(t!=u);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">tarjan</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(dfn, <span class="number">0</span>, <span class="keyword">sizeof</span>(dfn));</span><br><span class="line">    <span class="built_in">memset</span>(bel, <span class="number">0</span>, <span class="keyword">sizeof</span>(bel));</span><br><span class="line">    idx = scc = top = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(!dfn[i])</span><br><span class="line">            dfs(i);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">(<span class="keyword">int</span> &amp;num, <span class="keyword">int</span> &amp;sum)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(sc, inf, <span class="keyword">sizeof</span>(sc));</span><br><span class="line">    <span class="built_in">memset</span>(id, <span class="number">0</span>, <span class="keyword">sizeof</span>(id));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        sc[bel[i]] = min(sc[bel[i]], cost[i]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> u=<span class="number">1</span>; u&lt;=n; u++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=H[u]; ~i; i=e[i].next) &#123;</span><br><span class="line">            <span class="keyword">int</span> v = e[i].to;</span><br><span class="line">            <span class="keyword">if</span>(bel[u]!=bel[v]) &#123;</span><br><span class="line">                id[bel[v]]++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> a=<span class="number">0</span>, b=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=scc; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(!id[i])</span><br><span class="line">            num++, sum+=sc[i];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;m)==<span class="number">2</span>) &#123;</span><br><span class="line">        <span class="built_in">memset</span>(H, <span class="number">-1</span>, <span class="keyword">sizeof</span>(H));</span><br><span class="line">        tot = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;cost[i]);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;m; i++) &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;u, &amp;v);</span><br><span class="line">            add(u, v);</span><br><span class="line">        &#125;</span><br><span class="line">        tarjan();</span><br><span class="line">        <span class="keyword">int</span> num=<span class="number">0</span>, sum=<span class="number">0</span>;</span><br><span class="line">        solve(num, sum);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>, num, sum);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>图论</category>
        <category>连通性</category>
        <category>强连通分量</category>
        <category>Tarjan</category>
      </categories>
      <tags>
        <tag>HDU</tag>
        <tag>Tarjan</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】HDU-2191 悼念512</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E8%83%8C%E5%8C%85/%E5%A4%9A%E9%87%8D%E8%83%8C%E5%8C%85/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91HDU-2191%20%E6%82%BC%E5%BF%B5512/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:00 GMT+0800 (GMT+08:00) --><h1 id="悼念512汶川大地震遇难同胞——珍惜现在，感恩生活-HDU-2191"><a href="#悼念512汶川大地震遇难同胞——珍惜现在，感恩生活-HDU-2191" class="headerlink" title="悼念512汶川大地震遇难同胞——珍惜现在，感恩生活 (HDU - 2191)"></a>悼念512汶川大地震遇难同胞——珍惜现在，感恩生活 (<a href="https://vjudge.net/problem/HDU-2191" target="_blank" rel="noopener">HDU - 2191</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>急！灾区的食物依然短缺！<br>为了挽救灾区同胞的生命，心系灾区同胞的你准备自己采购一些粮食支援灾区，现在假设你一共有资金n元，而市场有m种大米，每种大米都是袋装产品，其价格不等，并且只能整袋购买。<br>请问：你用有限的资金最多能采购多少公斤粮食呢？</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入数据首先包含一个正整数C，表示有C组测试用例，每组测试用例的第一行是两个整数n和m(1&lt;=n&lt;=100, 1&lt;=m&lt;=100),分别表示经费的金额和大米的种类，然后是m行数据，每行包含3个数p，h和c(1&lt;=p&lt;=20,1&lt;=h&lt;=200,1&lt;=c&lt;=20)，分别表示每袋的价格、每袋的重量以及对应种类大米的袋数。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>对于每组测试数据，请输出能够购买大米的最多重量，你可以假设经费买不光所有的大米，并且经费你可以不用完。每个实例的输出占一行。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1</span><br><span class="line">8 2</span><br><span class="line">2 100 4</span><br><span class="line">4 100 2</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">400</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e2</span>+<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> w, c, num;</span><br><span class="line"><span class="keyword">int</span> T, n, m;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> dp[N], q[N], k[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--) &#123;</span><br><span class="line">        <span class="built_in">memset</span>(dp, <span class="number">0</span>, <span class="keyword">sizeof</span>(dp));</span><br><span class="line">        <span class="built_in">memset</span>(q, <span class="number">0</span>, <span class="keyword">sizeof</span>(q));</span><br><span class="line">        <span class="built_in">memset</span>(k, <span class="number">0</span>, <span class="keyword">sizeof</span>(k));</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;m, &amp;n);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>, &amp;c, &amp;w, &amp;num);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> b=<span class="number">0</span>; b&lt;c; b++) &#123;</span><br><span class="line">                <span class="keyword">int</span> head=<span class="number">0</span>, tail=<span class="number">-1</span>;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j*c+b&lt;=m; j++) &#123;</span><br><span class="line">                    <span class="keyword">int</span> tmp = dp[j*c+b]-j*w;</span><br><span class="line">                    <span class="keyword">while</span>(head&lt;=tail &amp;&amp; q[tail]&lt;=tmp)</span><br><span class="line">                        tail--;</span><br><span class="line">                    k[++tail] = j;</span><br><span class="line">                    q[tail] = tmp;</span><br><span class="line">                    dp[j*c+b] = q[head]+j*w;</span><br><span class="line">                    <span class="keyword">if</span>(k[head]==j-num)</span><br><span class="line">                        head++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, dp[m]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>动态规划</category>
        <category>背包</category>
        <category>多重背包</category>
      </categories>
      <tags>
        <tag>HDU</tag>
        <tag>DP</tag>
        <tag>背包</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】HDU-2546 饭卡</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E8%83%8C%E5%8C%85/01%E8%83%8C%E5%8C%85/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91HDU-2546%20%E9%A5%AD%E5%8D%A1/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:00 GMT+0800 (GMT+08:00) --><h1 id="饭卡-HDU-2546"><a href="#饭卡-HDU-2546" class="headerlink" title="饭卡 (HDU - 2546)"></a>饭卡 (<a href="https://vjudge.net/problem/HDU-2546" target="_blank" rel="noopener">HDU - 2546</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>电子科大本部食堂的饭卡有一种很诡异的设计，即在购买之前判断余额。如果购买一个商品之前，卡上的剩余金额大于或等于5元，就一定可以购买成功（即使购买后卡上余额为负），否则无法购买（即使金额足够）。所以大家都希望尽量使卡上的余额最少。<br>某天，食堂中有n种菜出售，每种菜可购买一次。已知每种菜的价格以及卡上的余额，问最少可使卡上的余额为多少。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>多组数据。对于每组数据：<br>第一行为正整数n，表示菜的数量。n&lt;=1000。<br>第二行包括n个正整数，表示每种菜的价格。价格不超过50。<br>第三行包括一个正整数m，表示卡上的余额。m&lt;=1000。</p><p>n=0表示数据结束。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>对于每组输入,输出一行,包含一个整数，表示卡上可能的最小余额。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1</span><br><span class="line">50</span><br><span class="line">5</span><br><span class="line">10</span><br><span class="line">1 2 3 2 1 1 2 3 2 1</span><br><span class="line">50</span><br><span class="line">0</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-45</span><br><span class="line">32</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e3</span>+<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> w[N];</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> dp[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n)==<span class="number">1</span> &amp;&amp; n) &#123;</span><br><span class="line">        <span class="built_in">memset</span>(dp, <span class="number">0</span>, <span class="keyword">sizeof</span>(dp));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;w[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        sort(w, w+n);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;m);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(m&lt;<span class="number">5</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, m);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n<span class="number">-1</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=m<span class="number">-5</span>; j&gt;=w[i]; j--) &#123;</span><br><span class="line">                    dp[j] = max(dp[j], dp[j-w[i]]+w[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, m-dp[m<span class="number">-5</span>]-w[n<span class="number">-1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>动态规划</category>
        <category>背包</category>
        <category>01背包</category>
      </categories>
      <tags>
        <tag>HDU</tag>
        <tag>DP</tag>
        <tag>背包</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】HDU-2602 Bone Collector</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E8%83%8C%E5%8C%85/01%E8%83%8C%E5%8C%85/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91HDU-2602%20Bone%20Collector/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:00 GMT+0800 (GMT+08:00) --><h1 id="Bone-Collector-HDU-2602"><a href="#Bone-Collector-HDU-2602" class="headerlink" title="Bone Collector (HDU - 2602)"></a>Bone Collector (<a href="https://vjudge.net/problem/HDU-2602" target="_blank" rel="noopener">HDU - 2602</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>Many years ago , in Teddy’s hometown there was a man who was called “Bone Collector”. This man like to collect varies of bones , such as dog’s , cow’s , also he went to the grave …<br>The bone collector had a big bag with a volume of V ,and along his trip of collecting there are a lot of bones , obviously , different bone has different value and different volume, now given the each bone’s value along his trip , can you calculate out the maximum of the total value the bone collector can get ?</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>The first line contain a integer T , the number of cases.<br>Followed by T cases , each case three lines , the first line contain two integer N , V, (N &lt;= 1000 , V &lt;= 1000 )representing the number of bones and the volume of his bag. And the second line contain N integers representing the value of each bone. The third line contain N integers representing the volume of each bone.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>One integer per line representing the maximum of the total value (this number will be less than 2^31).</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1</span><br><span class="line">5 10</span><br><span class="line">1 2 3 4 5</span><br><span class="line">5 4 3 2 1</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">14</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e3</span>+<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> T, n, m;</span><br><span class="line"><span class="keyword">int</span> c[N], w[N];</span><br><span class="line"><span class="keyword">int</span> dp[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;m);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;w[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;c[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">memset</span>(dp, <span class="number">0</span>, <span class="keyword">sizeof</span>(dp));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=m; j&gt;=c[i]; j--) &#123;</span><br><span class="line">                dp[j] = max(dp[j], dp[j-c[i]]+w[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, dp[m]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>动态规划</category>
        <category>背包</category>
        <category>01背包</category>
      </categories>
      <tags>
        <tag>HDU</tag>
        <tag>DP</tag>
        <tag>背包</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】HDU-2612 Find a way</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%90%9C%E7%B4%A2/BFS/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91HDU-2612%20Find%20a%20way/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:00 GMT+0800 (GMT+08:00) --><h1 id="Find-a-way-HDU-2612"><a href="#Find-a-way-HDU-2612" class="headerlink" title="Find a way (HDU - 2612)"></a>Find a way (<a href="https://vjudge.net/problem/HDU-2612" target="_blank" rel="noopener">HDU - 2612</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>Pass a year learning in Hangzhou, yifenfei arrival hometown Ningbo at finally. Leave Ningbo one year, yifenfei have many people to meet. Especially a good friend Merceki.<br>Yifenfei’s home is at the countryside, but Merceki’s home is in the center of city. So yifenfei made arrangements with Merceki to meet at a KFC. There are many KFC in Ningbo, they want to choose one that let the total time to it be most smallest.<br>Now give you a Ningbo map, Both yifenfei and Merceki can move up, down ,left, right to the adjacent road by cost 11 minutes.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>The input contains multiple test cases.<br>Each test case include, first two integers n, m. (2&lt;=n,m&lt;=200).<br>Next n lines, each line included m character.<br>‘Y’ express yifenfei initial position.<br>‘M’ express Merceki initial position.<br>‘#’ forbid road;<br>‘.’ Road.<br>‘@’ KCF</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For each test case output the minimum total time that both yifenfei and Merceki to arrival one of KFC.You may sure there is always have a KFC that can let them meet.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">4 4</span><br><span class="line">Y.#@</span><br><span class="line">....</span><br><span class="line">.#..</span><br><span class="line">@..M</span><br><span class="line">4 4</span><br><span class="line">Y.#@</span><br><span class="line">....</span><br><span class="line">.#..</span><br><span class="line">@#.M</span><br><span class="line">5 5</span><br><span class="line">Y..@.</span><br><span class="line">.#...</span><br><span class="line">.#...</span><br><span class="line">@..M.</span><br><span class="line">#...#</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">66</span><br><span class="line">88</span><br><span class="line">66</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>跑两遍bfs记录Y和M到达kfc的时间并求和，再遍历总时间寻找最短的。注意有的kfc可能无法到达，时间初始化应为inf</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e3</span>+<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> b[N][N] = &#123;&#123;<span class="number">0</span>&#125;&#125;;</span><br><span class="line"><span class="keyword">bool</span> vis[N][N] = &#123;&#123;<span class="number">0</span>&#125;&#125;;</span><br><span class="line"><span class="keyword">int</span> t[N][N] = &#123;&#123;<span class="number">0</span>&#125;&#125;;</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> dx[] = &#123; <span class="number">1</span>, <span class="number">-1</span>,  <span class="number">0</span>,  <span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> dy[] = &#123; <span class="number">0</span>,  <span class="number">0</span>,  <span class="number">1</span>, <span class="number">-1</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">P</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> x, y;</span><br><span class="line">    <span class="keyword">int</span> step;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bfs</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(vis, <span class="number">0</span>, <span class="keyword">sizeof</span>(vis));</span><br><span class="line"></span><br><span class="line">    P sp;</span><br><span class="line">    sp.x = x;</span><br><span class="line">    sp.y = y;</span><br><span class="line">    sp.step = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">queue</span>&lt;P&gt; q;</span><br><span class="line">    q.push(sp);</span><br><span class="line">    vis[sp.x][sp.y] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(!q.empty()) &#123;</span><br><span class="line">        P tp = q.front();</span><br><span class="line">        q.pop();</span><br><span class="line"></span><br><span class="line">        P np = tp;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">4</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> x = np.x = tp.x+dx[i];</span><br><span class="line">            <span class="keyword">int</span> y = np.y = tp.y+dy[i];</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(x&lt;<span class="number">0</span> || x&gt;=n || y&lt;<span class="number">0</span> || y&gt;=m) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(!vis[x][y] &amp;&amp; b[x][y]!=<span class="string">'#'</span>) &#123;</span><br><span class="line">                np.step = tp.step+<span class="number">1</span>;</span><br><span class="line">                q.push(np);</span><br><span class="line">                vis[x][y] = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span>(t[x][y]==inf)</span><br><span class="line">                    t[x][y] = np.step;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    t[x][y] += np.step;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;m)==<span class="number">2</span>) &#123;</span><br><span class="line">        <span class="built_in">memset</span>(t, inf, <span class="keyword">sizeof</span>(t));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;m; j++) &#123;</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">" %c"</span>, &amp;b[i][j]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;m; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(b[i][j]==<span class="string">'Y'</span> || b[i][j]==<span class="string">'M'</span>) &#123;</span><br><span class="line">                    bfs(i, j);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> mi = inf;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;m; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(b[i][j]==<span class="string">'@'</span>)</span><br><span class="line">                    mi = min(mi, t[i][j]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, mi*<span class="number">11</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>搜索</category>
        <category>BFS</category>
      </categories>
      <tags>
        <tag>BFS</tag>
        <tag>kuangbin 专题一</tag>
        <tag>HDU</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】HDU-2639 Bone Collector II</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E8%83%8C%E5%8C%85/01%E8%83%8C%E5%8C%85/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91HDU-2639%20Bone%20Collector%20II/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:00 GMT+0800 (GMT+08:00) --><h1 id="Bone-Collector-II-HDU-2639"><a href="#Bone-Collector-II-HDU-2639" class="headerlink" title="Bone Collector II (HDU - 2639)"></a>Bone Collector II (<a href="https://vjudge.net/problem/HDU-2639" target="_blank" rel="noopener">HDU - 2639</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>The title of this problem is familiar,isn’t it?yeah,if you had took part in the “Rookie Cup” competition,you must have seem this title.If you haven’t seen it before,it doesn’t matter,I will give you a link:</p><p>Here is the link: <a href="http://acm.hdu.edu.cn/showproblem.php?pid=2602" target="_blank" rel="noopener">http://acm.hdu.edu.cn/showproblem.php?pid=2602</a></p><p>Today we are not desiring the maximum value of bones,but the K-th maximum value of the bones.NOTICE that,we considerate two ways that get the same value of bones are the same.That means,it will be a strictly decreasing sequence from the 1st maximum , 2nd maximum .. to the K-th maximum.</p><p>If the total number of different values is less than K,just ouput 0.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>The first line contain a integer T , the number of cases.<br>Followed by T cases , each case three lines , the first line contain two integer N , V, K(N &lt;= 100 , V &lt;= 1000 , K &lt;= 30)representing the number of bones and the volume of his bag and the K we need. And the second line contain N integers representing the value of each bone. The third line contain N integers representing the volume of each bone.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>One integer per line representing the K-th maximum of the total value (this number will be less than 2^31).</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3</span><br><span class="line">5 10 2</span><br><span class="line">1 2 3 4 5</span><br><span class="line">5 4 3 2 1</span><br><span class="line">5 10 12</span><br><span class="line">1 2 3 4 5</span><br><span class="line">5 4 3 2 1</span><br><span class="line">5 10 16</span><br><span class="line">1 2 3 4 5</span><br><span class="line">5 4 3 2 1</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">12</span><br><span class="line">2</span><br><span class="line">0</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e3</span>+<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> w[N], c[N];</span><br><span class="line"><span class="keyword">int</span> T, n, v, m;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> dp[N][N], a[N], b[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>, &amp;n, &amp;v, &amp;m);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;w[i]);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;c[i]);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">memset</span>(dp, <span class="number">0</span>, <span class="keyword">sizeof</span>(dp));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=v; j&gt;=c[i]; j--) &#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>; k&lt;=m; k++) &#123;</span><br><span class="line">                    a[k] = dp[j][k];</span><br><span class="line">                    b[k] = dp[j-c[i]][k]+w[i];</span><br><span class="line">                &#125;</span><br><span class="line">                a[m+<span class="number">1</span>] = b[m+<span class="number">1</span>] = <span class="number">-1</span>;</span><br><span class="line">                <span class="keyword">int</span> di=<span class="number">1</span>, ai=<span class="number">1</span>, bi=<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">while</span>(di&lt;=m &amp;&amp; (ai&lt;=m || bi&lt;=m)) &#123;</span><br><span class="line">                    <span class="keyword">if</span>(a[ai]&gt;b[bi])</span><br><span class="line">                        dp[j][di] = a[ai++];</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                        dp[j][di] = b[bi++];</span><br><span class="line">                    <span class="keyword">if</span>(dp[j][di]!=dp[j][di<span class="number">-1</span>])</span><br><span class="line">                        di++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, dp[v][m]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>动态规划</category>
        <category>背包</category>
        <category>01背包</category>
      </categories>
      <tags>
        <tag>HDU</tag>
        <tag>DP</tag>
        <tag>背包</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】HDU-2767 Proving Equivalences</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9B%BE%E8%AE%BA/%E8%BF%9E%E9%80%9A%E6%80%A7/%E5%BC%BA%E8%BF%9E%E9%80%9A%E5%88%86%E9%87%8F/Tarjan/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91HDU-2767%20Proving%20Equivalences/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:00 GMT+0800 (GMT+08:00) --><h1 id="Proving-Equivalences-HDU-2767"><a href="#Proving-Equivalences-HDU-2767" class="headerlink" title="Proving Equivalences (HDU - 2767)"></a>Proving Equivalences (<a href="https://vjudge.net/problem/HDU-2767" target="_blank" rel="noopener">HDU - 2767</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>Consider the following exercise, found in a generic linear algebra textbook.</p><p>Let A be an n × n matrix. Prove that the following statements are equivalent:</p><p>\1. A is invertible.<br>\2. Ax = b has exactly one solution for every n × 1 matrix b.<br>\3. Ax = b is consistent for every n × 1 matrix b.<br>\4. Ax = 0 has only the trivial solution x = 0.</p><p>The typical way to solve such an exercise is to show a series of implications. For instance, one can proceed by showing that (a) implies (b), that (b) implies (c), that (c) implies (d), and finally that (d) implies (a). These four implications show that the four statements are equivalent.</p><p>Another way would be to show that (a) is equivalent to (b) (by proving that (a) implies (b) and that (b) implies (a)), that (b) is equivalent to (c), and that (c) is equivalent to (d). However, this way requires proving six implications, which is clearly a lot more work than just proving four implications!</p><p>I have been given some similar tasks, and have already started proving some implications. Now I wonder, how many more implications do I have to prove? Can you help me determine this?</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>On the first line one positive number: the number of testcases, at most 100. After that per testcase:</p><p>* One line containing two integers n (1 ≤ n ≤ 20000) and m (0 ≤ m ≤ 50000): the number of statements and the number of implications that have already been proved.<br>* m lines with two integers s1 and s2 (1 ≤ s1, s2 ≤ n and s1 ≠ s2) each, indicating that it has been proved that statement s1 implies statement s2.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>Per testcase:</p><p>* One line with the minimum number of additional implications that need to be proved in order to prove that all statements are equivalent.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2</span><br><span class="line">4 0</span><br><span class="line">3 2</span><br><span class="line">1 2</span><br><span class="line">1 3</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">4</span><br><span class="line">2</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e4</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M = <span class="number">1e5</span>+<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">E</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> to, next;</span><br><span class="line">&#125; e[M];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> H[N], tot;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> S[N], top;</span><br><span class="line"><span class="keyword">int</span> dfn[N], low[N], bel[N], idx, scc;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> T, n, m;</span><br><span class="line"><span class="keyword">int</span> u, v;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> id[N], od[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> from, <span class="keyword">int</span> to)</span> </span>&#123;</span><br><span class="line">    e[tot] = &#123;to, H[from]&#125;;</span><br><span class="line">    H[from] = tot++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u)</span> </span>&#123;</span><br><span class="line">    dfn[u] = low[u] = ++idx;</span><br><span class="line">    S[++top]=u;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=H[u]; ~i; i=e[i].next) &#123;</span><br><span class="line">        <span class="keyword">int</span> v = e[i].to;</span><br><span class="line">        <span class="keyword">if</span>(!dfn[v]) &#123;</span><br><span class="line">            dfs(v);</span><br><span class="line">            low[u] = min(low[u], low[v]);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(!bel[v])</span><br><span class="line">            low[u] = min(low[u], dfn[v]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(low[u]==dfn[u]) &#123;</span><br><span class="line">        scc++;</span><br><span class="line">        <span class="keyword">int</span> t;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            t=S[top--];</span><br><span class="line">            bel[t]=scc;</span><br><span class="line">        &#125; <span class="keyword">while</span>(t!=u);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">tarjan</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(dfn, <span class="number">0</span>, <span class="keyword">sizeof</span>(dfn));</span><br><span class="line">    <span class="built_in">memset</span>(bel, <span class="number">0</span>, <span class="keyword">sizeof</span>(bel));</span><br><span class="line">    idx = scc = top = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(!dfn[i])</span><br><span class="line">            dfs(i);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(scc==<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">memset</span>(id, <span class="number">0</span>, <span class="keyword">sizeof</span>(id));</span><br><span class="line">    <span class="built_in">memset</span>(od, <span class="number">0</span>, <span class="keyword">sizeof</span>(od));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> u=<span class="number">1</span>; u&lt;=n; u++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=H[u]; ~i; i=e[i].next) &#123;</span><br><span class="line">            <span class="keyword">int</span> v = e[i].to;</span><br><span class="line">            <span class="keyword">if</span>(bel[u]!=bel[v]) &#123;</span><br><span class="line">                od[bel[u]]++;</span><br><span class="line">                id[bel[v]]++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> a=<span class="number">0</span>, b=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=scc; i++) &#123;</span><br><span class="line">        a+=!id[i];</span><br><span class="line">        b+=!od[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> max(a, b);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;m);</span><br><span class="line">        <span class="built_in">memset</span>(H, <span class="number">-1</span>, <span class="keyword">sizeof</span>(H));</span><br><span class="line">        tot = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;m; i++) &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;u, &amp;v);</span><br><span class="line">            add(u, v);</span><br><span class="line">        &#125;</span><br><span class="line">        tarjan();</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, solve());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>图论</category>
        <category>连通性</category>
        <category>强连通分量</category>
        <category>Tarjan</category>
      </categories>
      <tags>
        <tag>HDU</tag>
        <tag>Tarjan</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】HDU-2955 Robberies</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E8%83%8C%E5%8C%85/01%E8%83%8C%E5%8C%85/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91HDU-2955%20Robberies/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:00 GMT+0800 (GMT+08:00) --><h1 id="Robberies-HDU-2955"><a href="#Robberies-HDU-2955" class="headerlink" title="Robberies (HDU - 2955)"></a>Robberies (<a href="https://vjudge.net/problem/HDU-2955" target="_blank" rel="noopener">HDU - 2955</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>The aspiring Roy the Robber has seen a lot of American movies, and knows that the bad guys usually gets caught in the end, often because they become too greedy. He has decided to work in the lucrative business of bank robbery only for a short while, before retiring to a comfortable job at a university.</p><p>For a few months now, Roy has been assessing the security of various banks and the amount of cash they hold. He wants to make a calculated risk, and grab as much money as possible.</p><p>His mother, Ola, has decided upon a tolerable probability of getting caught. She feels that he is safe enough if the banks he robs together give a probability less than this.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>The first line of input gives T, the number of cases. For each scenario, the first line of input gives a floating point number P, the probability Roy needs to be below, and an integer N, the number of banks he has plans for. Then follow N lines, where line j gives an integer Mj and a floating point number Pj .<br>Bank j contains Mj millions, and the probability of getting caught from robbing it is Pj .</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For each test case, output a line with the maximum number of millions he can expect to get while the probability of getting caught is less than the limit set.</p><p>Notes and Constraints<br>0 &lt; T &lt;= 100<br>0.0 &lt;= P &lt;= 1.0<br>0 &lt; N &lt;= 100<br>0 &lt; Mj &lt;= 100<br>0.0 &lt;= Pj &lt;= 1.0<br>A bank goes bankrupt if it is robbed, and you may assume that all probabilities are independent as the police have very low funds.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3</span><br><span class="line">0.04 3</span><br><span class="line">1 0.02</span><br><span class="line">2 0.03</span><br><span class="line">3 0.05</span><br><span class="line">0.06 3</span><br><span class="line">2 0.03</span><br><span class="line">2 0.03</span><br><span class="line">3 0.05</span><br><span class="line">0.10 3</span><br><span class="line">1 0.03</span><br><span class="line">2 0.02</span><br><span class="line">3 0.05</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2</span><br><span class="line">4</span><br><span class="line">6</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e2</span>+<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">double</span> m, w[N];</span><br><span class="line"><span class="keyword">int</span> T, n, c[N];</span><br><span class="line"></span><br><span class="line"><span class="keyword">double</span> dp[N*N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lf%d"</span>, &amp;m, &amp;n);</span><br><span class="line">        <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d%lf"</span>, &amp;c[i], &amp;w[i]);</span><br><span class="line">            sum += c[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">memset</span>(dp, <span class="number">0</span>, <span class="keyword">sizeof</span>(dp));</span><br><span class="line">        dp[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=sum; j&gt;=c[i]; j--) &#123;</span><br><span class="line">                dp[j] = max(dp[j], dp[j-c[i]]*(<span class="number">1.0</span>-w[i]));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> ans;</span><br><span class="line">        <span class="keyword">for</span>(ans=sum; dp[ans]&lt;=<span class="number">1</span>-m; ans--);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>动态规划</category>
        <category>背包</category>
        <category>01背包</category>
      </categories>
      <tags>
        <tag>HDU</tag>
        <tag>DP</tag>
        <tag>背包</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】HDU-3639 Hawk-and-Chicken</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9B%BE%E8%AE%BA/%E8%BF%9E%E9%80%9A%E6%80%A7/%E5%BC%BA%E8%BF%9E%E9%80%9A%E5%88%86%E9%87%8F/Tarjan/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91HDU-3639%20Hawk-and-Chicken/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:00 GMT+0800 (GMT+08:00) --><h1 id="Hawk-and-Chicken-HDU-3639"><a href="#Hawk-and-Chicken-HDU-3639" class="headerlink" title="Hawk-and-Chicken (HDU - 3639)"></a>Hawk-and-Chicken (<a href="https://vjudge.net/problem/HDU-3639" target="_blank" rel="noopener">HDU - 3639</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>Kids in kindergarten enjoy playing a game called Hawk-and-Chicken. But there always exists a big problem: every kid in this game want to play the role of Hawk.<br>So the teacher came up with an idea: Vote. Every child have some nice handkerchiefs, and if he/she think someone is suitable for the role of Hawk, he/she gives a handkerchief to this kid, which means this kid who is given the handkerchief win the support. Note the support can be transmitted. Kids who get the most supports win in the vote and able to play the role of Hawk.(A note:if A can win<br>support from B(A != B) A can win only one support from B in any case the number of the supports transmitted from B to A are many. And A can’t win the support from himself in any case.<br>If two or more kids own the same number of support from others, we treat all of them as winner.<br>Here’s a sample: 3 kids A, B and C, A gives a handkerchief to B, B gives a handkerchief to C, so C wins 2 supports and he is choosen to be the Hawk.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>There are several test cases. First is a integer T(T &lt;= 50), means the number of test cases.<br>Each test case start with two integer n, m in a line (2 &lt;= n &lt;= 5000, 0 &lt;m &lt;= 30000). n means there are n children(numbered from 0 to n - 1). Each of the following m lines contains two integers A and B(A != B) denoting that the child numbered A give a handkerchief to B.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For each test case, the output should first contain one line with “Case x:”, here x means the case number start from 1. Followed by one number which is the total supports the winner(s) get.<br>Then follow a line contain all the Hawks’ number. The numbers must be listed in increasing order and separated by single spaces.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2</span><br><span class="line">4 3</span><br><span class="line">3 2</span><br><span class="line">2 0</span><br><span class="line">2 1</span><br><span class="line"></span><br><span class="line">3 3</span><br><span class="line">1 0</span><br><span class="line">2 1</span><br><span class="line">0 2</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Case 1: 2</span><br><span class="line">0 1</span><br><span class="line">Case 2: 2</span><br><span class="line">0 1 2</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">5e3</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M = <span class="number">3e4</span>+<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">E</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> to, next;</span><br><span class="line">&#125; e[M];</span><br><span class="line"><span class="keyword">int</span> H[N], tot, R[N];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> S[N], top;</span><br><span class="line"><span class="keyword">int</span> dfn[N], low[N], bel[N], idx, scc;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> T, n, m;</span><br><span class="line"><span class="keyword">int</span> u, v;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> od[N], num[N], sum[N];</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> *H, <span class="keyword">int</span> from, <span class="keyword">int</span> to)</span> </span>&#123;</span><br><span class="line">    e[tot] = &#123;to, H[from]&#125;;</span><br><span class="line">    H[from] = tot++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u)</span> </span>&#123;</span><br><span class="line">    dfn[u] = low[u] = ++idx;</span><br><span class="line">    S[++top]=u;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=H[u]; ~i; i=e[i].next) &#123;</span><br><span class="line">        <span class="keyword">int</span> v = e[i].to;</span><br><span class="line">        <span class="keyword">if</span>(!dfn[v]) &#123;</span><br><span class="line">            dfs(v);</span><br><span class="line">            low[u] = min(low[u], low[v]);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(!bel[v])</span><br><span class="line">            low[u] = min(low[u], dfn[v]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(low[u]==dfn[u]) &#123;</span><br><span class="line">        scc++;</span><br><span class="line">        <span class="keyword">int</span> t;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            t=S[top--];</span><br><span class="line">            bel[t]=scc;</span><br><span class="line">        &#125; <span class="keyword">while</span>(t!=u);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">tarjan</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(dfn, <span class="number">0</span>, <span class="keyword">sizeof</span>(dfn));</span><br><span class="line">    <span class="built_in">memset</span>(bel, <span class="number">0</span>, <span class="keyword">sizeof</span>(bel));</span><br><span class="line">    idx = scc = top = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(!dfn[i])</span><br><span class="line">            dfs(i);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">stat</span><span class="params">(<span class="keyword">int</span> u)</span> </span>&#123;</span><br><span class="line">    vis[u] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> t = num[u];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=R[u]; ~i; i=e[i].next) &#123;</span><br><span class="line">        <span class="keyword">int</span> v = e[i].to;</span><br><span class="line">        <span class="keyword">if</span>(!vis[v]) &#123;</span><br><span class="line">            t += stat(v);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> t;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(od, <span class="number">0</span>, <span class="keyword">sizeof</span>(od));</span><br><span class="line">    <span class="built_in">memset</span>(num, <span class="number">0</span>, <span class="keyword">sizeof</span>(num));</span><br><span class="line">    <span class="built_in">memset</span>(sum, <span class="number">0</span>, <span class="keyword">sizeof</span>(sum));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++) &#123;</span><br><span class="line">        num[bel[i]]++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> u=<span class="number">1</span>; u&lt;=n; u++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=H[u]; ~i; i=e[i].next) &#123;</span><br><span class="line">            <span class="keyword">int</span> v = e[i].to;</span><br><span class="line">            <span class="keyword">if</span>(bel[u]!=bel[v]) &#123;</span><br><span class="line">                add(R, bel[v], bel[u]);</span><br><span class="line">                od[bel[u]]++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=scc; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(!od[i]) &#123;</span><br><span class="line">            <span class="built_in">memset</span>(vis, <span class="number">0</span>, <span class="keyword">sizeof</span>(vis));</span><br><span class="line">            sum[i] = stat(i)<span class="number">-1</span>;</span><br><span class="line">            ans = max(ans, sum[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> cs=<span class="number">1</span>; cs&lt;=T; cs++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;m);</span><br><span class="line">        <span class="built_in">memset</span>(H, <span class="number">-1</span>, <span class="keyword">sizeof</span>(H));</span><br><span class="line">        <span class="built_in">memset</span>(R, <span class="number">-1</span>, <span class="keyword">sizeof</span>(R));</span><br><span class="line">        tot = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;m; i++) &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;u, &amp;v);</span><br><span class="line">            add(H, u+<span class="number">1</span>, v+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        tarjan();</span><br><span class="line">        <span class="keyword">int</span> ans = solve(), flag = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Case %d: %d\n"</span>, cs, ans);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(sum[bel[i]]==ans) &#123;</span><br><span class="line">                <span class="keyword">if</span>(flag)</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    flag = <span class="number">1</span>;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%d"</span>, i<span class="number">-1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>图论</category>
        <category>连通性</category>
        <category>强连通分量</category>
        <category>Tarjan</category>
      </categories>
      <tags>
        <tag>HDU</tag>
        <tag>Tarjan</tag>
        <tag>DFS</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】HDU-6699 Block Breaker</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%90%9C%E7%B4%A2/BFS/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91HDU-6699%20Block%20Breaker/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:00 GMT+0800 (GMT+08:00) --><h1 id="Block-Breaker-HDU-6699"><a href="#Block-Breaker-HDU-6699" class="headerlink" title="Block Breaker (HDU - 6699)"></a>Block Breaker (<a href="https://vjudge.net/problem/HDU-6699" target="_blank" rel="noopener">HDU - 6699</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>Given a rectangle frame of size <strong>n × m.</strong> Initially, the frame is strewn with <strong>n × m</strong> square blocks of size <strong>1 × 1</strong>. Due to the friction with the frame and each other, the blocks are stable and will not drop.</p><p>However, the blocks can be knocked down. When a block is knocked down, other remaining blocks may also drop since the friction provided by other remaining blocks may not sustain them anymore. Formally, a block will drop if it is knocked or not stable, which means that at least one of the left block and the right block has been dropped and at least one of the front block and the back block has been dropped. Especially, the frame can be regarded as a huge stable block, which means that if one block’s left is the frame, only when its right block has been dropped and at least one of the front block and the back block has been dropped can it drop. The rest situations are similar.</p><p>Now you, the block breaker, want to knock down the blocks. Formally, you will do it <strong>q</strong> times. In each time, you may choose a position <strong>(xi, yi)</strong> If there remains a block at the chosen position, you will knock it down; otherwise, nothing will happen. Moreover, after knocking down the block, you will wait until no unstable blocks are going to drop and then do the next operation.</p><p>For example, please look at the following illustration, the frame is of size <strong>2 × 2</strong> and the block <strong>(1, 1)</strong> and <strong>(1, 2)</strong> have been dropped. If we are going to knock the block <strong>(2, 1)</strong> , not only itself but also the block <strong>(2 , 1)</strong> will drop in this knocking operation.</p><p>![img](【题解】HDU-6699 Block Breaker/HDU6699.png)</p><p>You want to know how many blocks will drop in total in each knocking operation. Specifically, if nothing happens in one operation, the answer should be regarded as <strong>0</strong>.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>The first line contains one positive integer *<em>T ( 1 ≤ T ≤ 10 ) *</em> , denoting the number of test cases.</p><p>For each test case:</p><p>The first line contains three positive integers <strong>n, m</strong> and <strong>q ( 1 ≤ n , m ≤ 2000, 1 ≤ q ≤ 100000 )</strong> , denoting the sizes in two dimensions of the frame and the number of knocking operations.</p><p>Each of the following <strong>q</strong> lines contains two positive integers <strong>xi</strong> and *<em>yi ( 1 ≤ xi ≤ n , 1 ≤ yi ≤ m ) *</em>, describing a knocking operation.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For each test case, output <strong>q</strong> lines, each of which contains a non-negative integer, denoting the number of dropped blocks in the corresponding knocking operation.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2</span><br><span class="line">2 2 3</span><br><span class="line">1 1</span><br><span class="line">1 2</span><br><span class="line">2 2</span><br><span class="line">4 4 6</span><br><span class="line">1 1</span><br><span class="line">1 2</span><br><span class="line">2 1</span><br><span class="line">2 2</span><br><span class="line">4 4</span><br><span class="line">3 3</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">1</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">0</span><br><span class="line">1</span><br><span class="line">11</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">2e3</span> + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> vis[N][N];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> T, n, m, q;</span><br><span class="line"><span class="keyword">int</span> x, y;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">P</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> x, y;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> dx[] = &#123;<span class="number">1</span>, <span class="number">-1</span>, <span class="number">0</span>, <span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> dy[] = &#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">-1</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">ok</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> ((x + <span class="number">1</span> &gt; n || !vis[x + <span class="number">1</span>][y]) &amp;&amp; (x - <span class="number">1</span> &lt;= <span class="number">0</span> || !vis[x - <span class="number">1</span>][y]))</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> ((y + <span class="number">1</span> &gt; m || !vis[x][y + <span class="number">1</span>]) &amp;&amp; (y - <span class="number">1</span> &lt;= <span class="number">0</span> || !vis[x][y - <span class="number">1</span>]))</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">solve</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (vis[x][y])</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">1</span>;</span><br><span class="line">    vis[x][y] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    P sp;</span><br><span class="line">    sp.x = x;</span><br><span class="line">    sp.y = y;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">queue</span>&lt;P&gt; q;</span><br><span class="line">    q.push(sp);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (!q.empty()) &#123;</span><br><span class="line">        P tp = q.front();</span><br><span class="line">        q.pop();</span><br><span class="line"></span><br><span class="line">        P np = tp;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> xi = np.x = tp.x + dx[i];</span><br><span class="line">            <span class="keyword">int</span> yi = np.y = tp.y + dy[i];</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (xi &lt;= <span class="number">0</span> || xi &gt; n || yi &lt;= <span class="number">0</span> || yi &gt; m)</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (!vis[xi][yi] &amp;&amp; !ok(xi, yi)) &#123;</span><br><span class="line">                sum++;</span><br><span class="line">                q.push(np);</span><br><span class="line">                vis[xi][yi] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">while</span> (T--) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>, &amp;n, &amp;m, &amp;q);</span><br><span class="line">        <span class="built_in">memset</span>(vis, <span class="number">0</span>, <span class="keyword">sizeof</span>(vis));</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; q; i++) &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;x, &amp;y);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, solve(x, y));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>搜索</category>
        <category>BFS</category>
      </categories>
      <tags>
        <tag>BFS</tag>
        <tag>HDU</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】HDU-3567 Eight II</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%90%9C%E7%B4%A2/BFS/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91HDU-3567%20Eight%20II/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:00 GMT+0800 (GMT+08:00) --><h1 id="Eight-II-（HDU-3567"><a href="#Eight-II-（HDU-3567" class="headerlink" title="Eight II （HDU - 3567)"></a>Eight II （<a href="https://vjudge.net/problem/HDU-3567" target="_blank" rel="noopener">HDU - 3567</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>Eight-puzzle, which is also called “Nine grids”, comes from an old game.</p><p>In this game, you are given a 3 by 3 board and 8 tiles. The tiles are numbered from 1 to 8 and each covers a grid. As you see, there is a blank grid which can be represented as an ‘X’. Tiles in grids having a common edge with the blank grid can be moved into that blank grid. This operation leads to an exchange of ‘X’ with one tile.</p><p>We use the symbol ‘r’ to represent exchanging ‘X’ with the tile on its right side, and ‘l’ for the left side, ‘u’ for the one above it, ‘d’ for the one below it.</p><p>![img](【题解】HDU-3567 Eight II/HDU3567-1.png)</p><p>A state of the board can be represented by a string S using the rule showed below.</p><p>![img](【题解】HDU-3567 Eight II/HDU3567-2.png)</p><p>The problem is to operate an operation list of ‘r’, ‘u’, ‘l’, ‘d’ to turn the state of the board from state A to state B. You are required to find the result which meets the following constrains:<br>\1. It is of minimum length among all possible solutions.<br>\2. It is the lexicographically smallest one of all solutions of minimum length.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>The first line is T (T &lt;= 200), which means the number of test cases of this problem.</p><p>The input of each test case consists of two lines with state A occupying the first line and state B on the second line.<br>It is guaranteed that there is an available solution from state A to B.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For each test case two lines are expected.</p><p>The first line is in the format of “Case x: d”, in which x is the case number counted from one, d is the minimum length of operation list you need to turn A to B.<br>S is the operation list meeting the constraints and it should be showed on the second line.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2</span><br><span class="line">12X453786</span><br><span class="line">12345678X</span><br><span class="line">564178X23</span><br><span class="line">7568X4123</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Case 1: 2</span><br><span class="line">dd</span><br><span class="line">Case 2: 8</span><br><span class="line">urrulldr</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>思考一下，’X’在9个不同位置的目标状态可以反推所有情况。这时我们只需要简单映射一下：</p><p><strong>564178<em>X</em>23→123456<em>X</em>78</strong></p><p><strong>7568<em>X</em>4123→5126<em>X</em>3478</strong></p><p>大致思路就很明确了。继续思考字典序的问题，由于推导顺序和题目要求一致，则不需要和Eight(<a href="https://vjudge.net/problem/HDU-1043" target="_blank" rel="noopener">HDU - 1043</a>)一般将方向颠倒，只用按字典序(dlru)排就行<br>注意参考代码中最后的路径是由pre数组链接的，直接倒推回去恰好和我们需要的相反，所以存入串中再逆序输出。而初始状态的方向被随意的存了一个1(vis数组)，所以在数量上和最后输出中都要-1<br>用了康拓展开，感觉再用上逆展开太耗时了，没想到好的方法，就在结构体里面丢了一个数组。尽管本题时间和空间限制范围都挺大。以后还得好好深入一下八数码八境界</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">4e5</span>+<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> vis[<span class="number">9</span>][N], pre[<span class="number">9</span>][N];</span><br><span class="line"><span class="keyword">int</span> T, n = <span class="number">9</span>;</span><br><span class="line"><span class="keyword">int</span> fac[] = &#123;<span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">6</span>, <span class="number">24</span>, <span class="number">120</span>, <span class="number">720</span>, <span class="number">5040</span>, <span class="number">40320</span>, <span class="number">362880</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> dx[] = &#123; <span class="number">1</span>,  <span class="number">0</span>,  <span class="number">0</span>, <span class="number">-1</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> dy[] = &#123; <span class="number">0</span>, <span class="number">-1</span>,  <span class="number">1</span>,  <span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">char</span> dir[] = <span class="string">"dlru"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> s[][<span class="number">9</span>] = &#123;</span><br><span class="line">    &#123;<span class="number">9</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>&#125;,</span><br><span class="line">    &#123;<span class="number">1</span>, <span class="number">9</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>&#125;,</span><br><span class="line">    &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">9</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>&#125;,</span><br><span class="line">    &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">9</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>&#125;,</span><br><span class="line">    &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>&#125;,</span><br><span class="line">    &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">9</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>&#125;,</span><br><span class="line">    &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">7</span>, <span class="number">8</span>&#125;,</span><br><span class="line">    &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">8</span>&#125;,</span><br><span class="line">    &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">P</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> a[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">int</span> h, x;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cantor</span><span class="params">(<span class="keyword">int</span> *s)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">        <span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>; j&lt;n; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(s[j]&lt;s[i])</span><br><span class="line">                num++;</span><br><span class="line">        &#125;</span><br><span class="line">        sum += num*fac[n-i<span class="number">-1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">decantor</span><span class="params">(<span class="keyword">int</span> sum, <span class="keyword">int</span> *t)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> vis[<span class="number">10</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">        <span class="keyword">int</span> tmp = sum/fac[n-i<span class="number">-1</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;=tmp; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(vis[j])</span><br><span class="line">                tmp++;</span><br><span class="line">        &#125;</span><br><span class="line">        t[i] = tmp+<span class="number">1</span>;</span><br><span class="line">        vis[tmp] = <span class="number">1</span>;</span><br><span class="line">        sum %= fac[n-i<span class="number">-1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bfs</span><span class="params">(<span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">    P sp;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">        sp.a[i] = s[k][i];</span><br><span class="line">    &#125;</span><br><span class="line">    sp.h = cantor(sp.a);</span><br><span class="line">    sp.x = k;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">queue</span>&lt;P&gt; q;</span><br><span class="line">    q.push(sp);</span><br><span class="line">    vis[k][sp.h] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(!q.empty()) &#123;</span><br><span class="line">        P tp = q.front();</span><br><span class="line">        q.pop();</span><br><span class="line"></span><br><span class="line">        P np;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">4</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> x = tp.x/<span class="number">3</span>+dx[i];</span><br><span class="line">            <span class="keyword">int</span> y = tp.x%<span class="number">3</span>+dy[i];</span><br><span class="line">            <span class="keyword">if</span>(x&lt;<span class="number">0</span> || x&gt;=<span class="number">3</span> || y&lt;<span class="number">0</span> || y&gt;=<span class="number">3</span>) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            np = tp;</span><br><span class="line">            np.x = x*<span class="number">3</span>+y;</span><br><span class="line"></span><br><span class="line">            swap(np.a[np.x], np.a[tp.x]);</span><br><span class="line">            np.h = cantor(np.a);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(vis[k][np.h]==<span class="number">-1</span>) &#123;</span><br><span class="line">                q.push(np);</span><br><span class="line">                vis[k][np.h] = i;</span><br><span class="line">                pre[k][np.h] = tp.h;</span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(vis, <span class="number">-1</span>, <span class="keyword">sizeof</span>(vis));</span><br><span class="line">    <span class="built_in">memset</span>(pre, <span class="number">-1</span>, <span class="keyword">sizeof</span>(pre));</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">        bfs(i);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> cs=<span class="number">1</span>; cs&lt;=T; cs++) &#123;</span><br><span class="line">        <span class="keyword">char</span> str[<span class="number">10</span>];</span><br><span class="line">        <span class="keyword">int</span> k, num[<span class="number">10</span>], t[<span class="number">10</span>];</span><br><span class="line"></span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>, str);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>, j=<span class="number">1</span>; i&lt;n; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(str[i]==<span class="string">'X'</span>)</span><br><span class="line">                k = i;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                num[str[i]-<span class="string">'0'</span>] = j++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>, str);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(str[i]==<span class="string">'X'</span>)</span><br><span class="line">                t[i] = <span class="number">9</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                t[i] = num[str[i]-<span class="string">'0'</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> h = cantor(t);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">string</span> path = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">while</span>(h!=<span class="number">-1</span>) &#123;</span><br><span class="line">            path += dir[vis[k][h]];</span><br><span class="line">            h = pre[k][h];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Case %d: %d\n"</span>, cs, path.length()<span class="number">-1</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=path.length()<span class="number">-2</span>; i&gt;=<span class="number">0</span>; i--)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%c"</span>, path[i]);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>搜索</category>
        <category>BFS</category>
      </categories>
      <tags>
        <tag>BFS</tag>
        <tag>HDU</tag>
        <tag>kuangbin 专题二</tag>
        <tag>康拓展开</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1001 害死人不偿命的(3n+1)猜想</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1001%20%E5%AE%B3%E6%AD%BB%E4%BA%BA%E4%B8%8D%E5%81%BF%E5%91%BD%E7%9A%84(3n+1)%E7%8C%9C%E6%83%B3/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:00 GMT+0800 (GMT+08:00) --><h1 id="害死人不偿命的-3n-1-猜想-PATB-1001"><a href="#害死人不偿命的-3n-1-猜想-PATB-1001" class="headerlink" title="害死人不偿命的(3n+1)猜想 (PATB-1001)"></a>害死人不偿命的(3n+1)猜想 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805325918486528" target="_blank" rel="noopener">PATB-1001</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>卡拉兹(Callatz)猜想：</p><p>对任何一个正整数 n，如果它是偶数，那么把它砍掉一半；如果它是奇数，那么把 (3n+1) 砍掉一半。这样一直反复砍下去，最后一定在某一步得到 n=1。卡拉兹在 1950 年的世界数学家大会上公布了这个猜想，传说当时耶鲁大学师生齐动员，拼命想证明这个貌似很傻很天真的命题，结果闹得学生们无心学业，一心只证 (3n+1)，以至于有人说这是一个阴谋，卡拉兹是在蓄意延缓美国数学界教学与科研的进展……</p><p>我们今天的题目不是证明卡拉兹猜想，而是对给定的任一不超过 1000 的正整数 n，简单地数一下，需要多少步（砍几下）才能得到 n=1？</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>每个测试输入包含 1 个测试用例，即给出正整数 n 的值。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>输出从 n 计算到 1 需要的步数。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">5</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> T;</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    m = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (n != <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (n &amp; <span class="number">1</span>)</span><br><span class="line">            n = (<span class="number">3</span> * n + <span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            n /= <span class="number">2</span>;</span><br><span class="line">        m++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, m);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1003 我要通过！</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1003%20%E6%88%91%E8%A6%81%E9%80%9A%E8%BF%87%EF%BC%81/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:00 GMT+0800 (GMT+08:00) --><h1 id="我要通过！-PATB-1003"><a href="#我要通过！-PATB-1003" class="headerlink" title="我要通过！ (PATB-1003)"></a>我要通过！ (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805323154440192" target="_blank" rel="noopener">PATB-1003</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>“<strong>答案正确</strong>”是自动判题系统给出的最令人欢喜的回复。本题属于 PAT 的“<strong>答案正确</strong>”大派送 —— 只要读入的字符串满足下列条件，系统就输出“<strong>答案正确</strong>”，否则输出“<strong>答案错误</strong>”。</p><p>得到“<strong>答案正确</strong>”的条件是：</p><ol><li>字符串中必须仅有 <code>P</code>、 <code>A</code>、 <code>T</code>这三种字符，不可以包含其它字符；</li><li>任意形如 <code>xPATx</code> 的字符串都可以获得“<strong>答案正确</strong>”，其中 <code>x</code> 或者是空字符串，或者是仅由字母 <code>A</code> 组成的字符串；</li><li>如果 <code>aPbTc</code> 是正确的，那么 <code>aPbATca</code> 也是正确的，其中 <code>a</code>、 <code>b</code>、 <code>c</code> 均或者是空字符串，或者是仅由字母 <code>A</code> 组成的字符串。</li></ol><p>现在就请你为 PAT 写一个自动裁判程序，判定哪些字符串是可以获得“<strong>答案正确</strong>”的。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>每个测试输入包含 1 个测试用例。第 1 行给出一个正整数 n (&lt;10)，是需要检测的字符串个数。接下来每个字符串占一行，字符串长度不超过 100，且不包含空格。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>每个字符串的检测结果占一行，如果该字符串可以获得“<strong>答案正确</strong>”，则输出 <code>YES</code>，否则输出 <code>NO</code>。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">8</span><br><span class="line">PAT</span><br><span class="line">PAAT</span><br><span class="line">AAPATAA</span><br><span class="line">AAPAATAAAA</span><br><span class="line">xPATx</span><br><span class="line">PT</span><br><span class="line">Whatever</span><br><span class="line">APAAATAA</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">YES</span><br><span class="line">YES</span><br><span class="line">YES</span><br><span class="line">YES</span><br><span class="line">NO</span><br><span class="line">NO</span><br><span class="line">NO</span><br><span class="line">NO</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> s[<span class="number">105</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    <span class="keyword">while</span> (n--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> err = <span class="number">0</span>, p = <span class="number">0</span>, t = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> la = <span class="number">0</span>, ma = <span class="number">0</span>, ra = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>, s);</span><br><span class="line">        <span class="keyword">int</span> len = <span class="built_in">strlen</span>(s);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (s[i] == <span class="string">'P'</span>) </span><br><span class="line">            &#123;</span><br><span class="line">                p++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (s[i] == <span class="string">'A'</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (!p)</span><br><span class="line">                    la++;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (!t)</span><br><span class="line">                    ma++;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (t)</span><br><span class="line">                    ra++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (s[i] == <span class="string">'T'</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (p &amp;&amp; ma)</span><br><span class="line">                    t++;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    err = <span class="number">1</span>;    </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                err = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (p != <span class="number">1</span> || ma == <span class="number">0</span> || t != <span class="number">1</span> || la * ma != ra)</span><br><span class="line">        &#123;</span><br><span class="line">            err = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (err)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"NO\n"</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"YES\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1002 写出这个数</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1002%20%E5%86%99%E5%87%BA%E8%BF%99%E4%B8%AA%E6%95%B0/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:00 GMT+0800 (GMT+08:00) --><h1 id="写出这个数-PATB-1002"><a href="#写出这个数-PATB-1002" class="headerlink" title="写出这个数 (PATB-1002)"></a>写出这个数 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805324509200384" target="_blank" rel="noopener">PATB-1002</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>读入一个正整数 n，计算其各位数字之和，用汉语拼音写出和的每一位数字。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>每个测试输入包含 1 个测试用例，即给出自然数 n 的值。这里保证 n 小于 10^100。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>在一行内输出 n 的各位数字之和的每一位，拼音数字间有 1 空格，但一行中最后一个拼音数字后没有空格。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1234567890987654321123456789</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yi san wu</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> T;</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> s[][<span class="number">5</span>] = &#123;</span><br><span class="line">    <span class="string">"ling"</span>, <span class="string">"yi"</span>, <span class="string">"er"</span>, <span class="string">"san"</span>, <span class="string">"si"</span>,</span><br><span class="line">    <span class="string">"wu"</span>, <span class="string">"liu"</span>, <span class="string">"qi"</span>, <span class="string">"ba"</span>, <span class="string">"jiu"</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> c;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (~<span class="built_in">scanf</span>(<span class="string">"%c"</span>, &amp;c) &amp;&amp; c != <span class="string">'\n'</span>) </span><br><span class="line">    &#123;</span><br><span class="line">        n += c - <span class="string">'0'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">char</span> t[<span class="number">5</span>] = <span class="string">""</span>;</span><br><span class="line">    <span class="built_in">sprintf</span>(t, <span class="string">"%d"</span>, n);</span><br><span class="line">    <span class="keyword">int</span> len = <span class="built_in">strlen</span>(t);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (i)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%s"</span>, s[t[i] - <span class="string">'0'</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1004 成绩排名</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1004%20%E6%88%90%E7%BB%A9%E6%8E%92%E5%90%8D/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:00 GMT+0800 (GMT+08:00) --><h1 id="成绩排名-PATB-1004"><a href="#成绩排名-PATB-1004" class="headerlink" title="成绩排名 (PATB-1004)"></a>成绩排名 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805321640296448" target="_blank" rel="noopener">PATB-1004</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>读入 n（&gt;0）名学生的姓名、学号、成绩，分别输出成绩最高和成绩最低学生的姓名和学号。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>每个测试输入包含 1 个测试用例，格式为</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">第 1 行：正整数 n</span><br><span class="line">第 2 行：第 1 个学生的姓名 学号 成绩</span><br><span class="line">第 3 行：第 2 个学生的姓名 学号 成绩</span><br><span class="line">  ... ... ...</span><br><span class="line">第 n+1 行：第 n 个学生的姓名 学号 成绩</span><br></pre></td></tr></table></figure><p>其中<code>姓名</code>和<code>学号</code>均为不超过 10 个字符的字符串，成绩为 0 到 100 之间的一个整数，这里保证在一组测试用例中没有两个学生的成绩是相同的。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>对每个测试用例输出 2 行，第 1 行是成绩最高学生的姓名和学号，第 2 行是成绩最低学生的姓名和学号，字符串间有 1 空格。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3</span><br><span class="line">Joe Math990112 89</span><br><span class="line">Mike CS991301 100</span><br><span class="line">Mary EE990830 95</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Mike CS991301</span><br><span class="line">Joe Math990112</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">P</span> &#123;</span></span><br><span class="line">    <span class="keyword">char</span> a[<span class="number">15</span>];</span><br><span class="line">    <span class="keyword">char</span> b[<span class="number">15</span>];</span><br><span class="line">    <span class="keyword">int</span> c;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    P t;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s %s %d"</span>, t.a, t.b, &amp;t.c);</span><br><span class="line">    P mx = t, mi = t;</span><br><span class="line">    n--;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (n--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s %s %d"</span>, t.a, t.b, &amp;t.c);</span><br><span class="line">        <span class="keyword">if</span> (t.c &gt; mx.c)</span><br><span class="line">            mx = t;</span><br><span class="line">        <span class="keyword">if</span> (t.c &lt; mi.c)</span><br><span class="line">            mi = t;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%s %s\n"</span>, mx.a, mx.b);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%s %s\n"</span>, mi.a, mi.b);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1005 继续(3n+1)猜想</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1005%20%E7%BB%A7%E7%BB%AD(3n+1)%E7%8C%9C%E6%83%B3/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:00 GMT+0800 (GMT+08:00) --><h1 id="继续-3n-1-猜想-PATB-1005"><a href="#继续-3n-1-猜想-PATB-1005" class="headerlink" title="继续(3n+1)猜想 (PATB-1005)"></a>继续(3n+1)猜想 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805320306507776" target="_blank" rel="noopener">PATB-1005</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>卡拉兹(Callatz)猜想已经在1001中给出了描述。在这个题目里，情况稍微有些复杂。</p><p>当我们验证卡拉兹猜想的时候，为了避免重复计算，可以记录下递推过程中遇到的每一个数。例如对 n=3 进行验证的时候，我们需要计算 3、5、8、4、2、1，则当我们对 n=5、8、4、2 进行验证的时候，就可以直接判定卡拉兹猜想的真伪，而不需要重复计算，因为这 4 个数已经在验证3的时候遇到过了，我们称 5、8、4、2 是被 3“覆盖”的数。我们称一个数列中的某个数 n 为“关键数”，如果 n 不能被数列中的其他数字所覆盖。</p><p>现在给定一系列待验证的数字，我们只需要验证其中的几个关键数，就可以不必再重复验证余下的数字。你的任务就是找出这些关键数字，并按从大到小的顺序输出它们。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>每个测试输入包含 1 个测试用例，第 1 行给出一个正整数 K (&lt;100)，第 2 行给出 K 个互不相同的待验证的正整数 n (1&lt;n≤100)的值，数字间用空格隔开。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>每个测试用例的输出占一行，按从大到小的顺序输出关键数字。数字间用 1 个空格隔开，但一行中最后一个数字后没有空格。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">6</span><br><span class="line">3 5 6 7 8 11</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">7 6</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> vis[<span class="number">105</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(vis, <span class="number">0</span>, <span class="keyword">sizeof</span> vis);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;m);</span><br><span class="line">        vis[m] = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">100</span>; i &gt;= <span class="number">1</span>; i--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!vis[i])</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> t = i; t != <span class="number">1</span>;)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (t &amp; <span class="number">1</span>)</span><br><span class="line">                t = (<span class="number">3</span> * t + <span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                t = t / <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (t &lt;= <span class="number">100</span>)</span><br><span class="line">                vis[t] = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> nf = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">100</span>; i &gt;= <span class="number">1</span>; i--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (vis[i])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (nf)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                nf = <span class="number">1</span>;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d"</span>, i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1006 换个格式输出整数</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1006%20%E6%8D%A2%E4%B8%AA%E6%A0%BC%E5%BC%8F%E8%BE%93%E5%87%BA%E6%95%B4%E6%95%B0/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:00 GMT+0800 (GMT+08:00) --><h1 id="换个格式输出整数-PATB-1006"><a href="#换个格式输出整数-PATB-1006" class="headerlink" title="换个格式输出整数 (PATB-1006)"></a>换个格式输出整数 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805318855278592" target="_blank" rel="noopener">PATB-1006</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>让我们用字母 <code>B</code> 来表示“百”、字母 <code>S</code> 表示“十”，用 <code>12...n</code> 来表示不为零的个位数字 <code>n</code>（&lt;10），换个格式来输出任一个不超过 3 位的正整数。例如 <code>234</code> 应该被输出为 <code>BBSSS1234</code>，因为它有 2 个“百”、3 个“十”、以及个位的 4。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>每个测试输入包含 1 个测试用例，给出正整数 n（&lt;1000）。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>每个测试用例的输出占一行，用规定的格式输出 n。</p></blockquote><h2 id="样例输入1"><a href="#样例输入1" class="headerlink" title="样例输入1"></a>样例输入1</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">234</span><br></pre></td></tr></table></figure><h2 id="样例输出1"><a href="#样例输出1" class="headerlink" title="样例输出1"></a>样例输出1</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">BBSSS1234</span><br></pre></td></tr></table></figure><h2 id="样例输入2"><a href="#样例输入2" class="headerlink" title="样例输入2"></a>样例输入2</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">23</span><br></pre></td></tr></table></figure><h2 id="样例输出2"><a href="#样例输出2" class="headerlink" title="样例输出2"></a>样例输出2</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SS123</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    <span class="keyword">int</span> b = n / <span class="number">100</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; b; i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"B"</span>);</span><br><span class="line">    <span class="keyword">int</span> s = n / <span class="number">10</span> % <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; s; i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"S"</span>);</span><br><span class="line">    <span class="keyword">int</span> x = n % <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= x; i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d"</span>, i);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1007 素数对猜想</title>
    <url>/%E9%A2%98%E8%A7%A3/%E6%95%B0%E8%AE%BA/%E7%B4%A0%E6%95%B0/%E7%B4%A0%E6%95%B0%E7%AD%9B/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1007%20%E7%B4%A0%E6%95%B0%E5%AF%B9%E7%8C%9C%E6%83%B3/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:00 GMT+0800 (GMT+08:00) --><h1 id="素数对猜想-PATB-1007"><a href="#素数对猜想-PATB-1007" class="headerlink" title="素数对猜想 (PATB-1007)"></a>素数对猜想 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805317546655744" target="_blank" rel="noopener">PATB-1007</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>让我们定义dn为：dn=pn+1−pn，其中pi是第i个素数。显然有d1=1，且对于n&gt;1有dn是偶数。“素数对猜想”认为“存在无穷多对相邻且差为2的素数”。</p><p>现给定任意正整数<code>N</code>(&lt;10^5)，请计算不超过<code>N</code>的满足猜想的素数对的个数。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在一行给出正整数<code>N</code>。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>在一行中输出不超过<code>N</code>的满足猜想的素数对的个数。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">20</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">4</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> isP[mxn];</span><br><span class="line"><span class="keyword">int</span> prime[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">euler</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(isP, <span class="number">1</span>, <span class="keyword">sizeof</span> isP);</span><br><span class="line">    isP[<span class="number">0</span>] = isP[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (isP[i]) prime[++cnt] = i;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= cnt; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (i * prime[j] &gt; n) <span class="keyword">break</span>;</span><br><span class="line">            isP[i * prime[j]] = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span> (i % prime[j] == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> cnt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> cnt = euler(N);</span><br><span class="line">    <span class="built_in">memset</span>(a, <span class="number">0</span>, <span class="keyword">sizeof</span> a);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">3</span>; i &lt;= N; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (isP[i] &amp;&amp; isP[i - <span class="number">2</span>])</span><br><span class="line">            a[i] = a[i - <span class="number">1</span>] + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            a[i] = a[i - <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, a[n]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>数论</category>
        <category>素数</category>
        <category>素数筛</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
        <tag>素数</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1008 数组元素循环右移问题</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1008%20%E6%95%B0%E7%BB%84%E5%85%83%E7%B4%A0%E5%BE%AA%E7%8E%AF%E5%8F%B3%E7%A7%BB%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:00 GMT+0800 (GMT+08:00) --><h1 id="数组元素循环右移问题-PATB-1008"><a href="#数组元素循环右移问题-PATB-1008" class="headerlink" title="数组元素循环右移问题 (PATB-1008)"></a>数组元素循环右移问题 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805316250615808" target="_blank" rel="noopener">PATB-1008</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>一个数组A中存有N（&gt;0）个整数，在不允许使用另外数组的前提下，将每个整数循环向右移M（≥0）个位置，即将A中的数据由（A0A1⋯AN−1）变换为（AN−M⋯AN−1A0A1⋯AN−M−1）（最后M个数循环移至最前面的M个位置）。如果需要考虑程序移动数据的次数尽量少，要如何设计移动的方法？</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>每个输入包含一个测试用例，第1行输入N（1≤N≤100）和M（≥0）；第2行输入N个整数，之间用空格分隔。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>在一行中输出循环右移M位以后的整数序列，之间用空格分隔，序列结尾不能有多余空格。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">6 2</span><br><span class="line">1 2 3 4 5 6</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">5 6 1 2 3 4</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> a[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;n, &amp;m);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> nf = <span class="number">0</span>, t = n - (m % n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = t; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (nf)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            nf = <span class="number">1</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d"</span>, a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; t; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (nf)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            nf = <span class="number">1</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d"</span>, a[i]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1009 说反话</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1009%20%E8%AF%B4%E5%8F%8D%E8%AF%9D/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:00 GMT+0800 (GMT+08:00) --><h1 id="说反话-PATB-1009"><a href="#说反话-PATB-1009" class="headerlink" title="说反话 (PATB-1009)"></a>说反话 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805314941992960" target="_blank" rel="noopener">PATB-1009</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>给定一句英语，要求你编写程序，将句中所有单词的顺序颠倒输出。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>测试输入包含一个测试用例，在一行内给出总长度不超过 80 的字符串。字符串由若干单词和若干空格组成，其中单词是由英文字母（大小写有区分）组成的字符串，单词之间用 1 个空格分开，输入保证句子末尾没有多余的空格。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>每个测试用例的输出占一行，输出倒序后的句子。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Hello World Here I Come</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Come I Here World Hello</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> s[<span class="number">105</span>][<span class="number">105</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (n = <span class="number">0</span>; ~<span class="built_in">scanf</span>(<span class="string">"%s"</span>, s[n]); n++);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=n<span class="number">-1</span>; i &gt;= <span class="number">0</span>; i--) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (i != n - <span class="number">1</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%s"</span>, s[i]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1010 一元多项式求导</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1010%20%E4%B8%80%E5%85%83%E5%A4%9A%E9%A1%B9%E5%BC%8F%E6%B1%82%E5%AF%BC/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:00 GMT+0800 (GMT+08:00) --><h1 id="一元多项式求导-PATB-1010"><a href="#一元多项式求导-PATB-1010" class="headerlink" title="一元多项式求导 (PATB-1010)"></a>一元多项式求导 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805313708867584" target="_blank" rel="noopener">PATB-1010</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>设计函数求一元多项式的导数。（注：x^n（n为整数）的一阶导数为nx^n−1。）</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>以指数递降方式输入多项式非零项系数和指数（绝对值均为不超过 1000 的整数）。数字间以空格分隔。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>以与输入相同的格式输出导数多项式非零项的系数和指数。数字间以空格分隔，但结尾不能有多余空格。注意“零多项式”的指数和系数都是 0，但是表示为 <code>0 0</code>。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3 4 -5 2 6 1 -2 0</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">12 3 -10 1 6 0</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> nf = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (~<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;m) &amp;&amp; m)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (nf)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            nf = <span class="number">1</span>;      </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d %d"</span>, n * m, m - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!nf)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"0 0"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1011 A+B 和 C</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1011%20A+B%20%E5%92%8C%20C/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:00 GMT+0800 (GMT+08:00) --><h1 id="A-B-和-C-PATB-1011"><a href="#A-B-和-C-PATB-1011" class="headerlink" title="A+B 和 C (PATB-1011)"></a>A+B 和 C (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805312417021952" target="_blank" rel="noopener">PATB-1011</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>给定区间 [−2^31,2^31] 内的 3 个整数 A、B 和 C，请判断 A+B 是否大于 C。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入第 1 行给出正整数 T (≤10)，是测试用例的个数。随后给出 T 组测试用例，每组占一行，顺序给出 A、B 和 C。整数间以空格分隔。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>对每组测试用例，在一行中输出 <code>Case #X: true</code> 如果 A+B&gt;C，否则输出 <code>Case #X: false</code>，其中 <code>X</code> 是测试用例的编号（从 1 开始）。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">4</span><br><span class="line">1 2 3</span><br><span class="line">2 3 4</span><br><span class="line">2147483647 0 2147483646</span><br><span class="line">0 -2147483648 -2147483647</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Case #1: false</span><br><span class="line">Case #2: true</span><br><span class="line">Case #3: true</span><br><span class="line">Case #4: false</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        LL a, b, c;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld %lld %lld"</span>, &amp;a, &amp;b, &amp;c);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Case #%d: "</span>, i);</span><br><span class="line">        <span class="keyword">if</span> (a + b &gt; c)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"true\n"</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"false\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1012 数字分类</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1012%20%E6%95%B0%E5%AD%97%E5%88%86%E7%B1%BB/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:00 GMT+0800 (GMT+08:00) --><h1 id="数字分类-PATB-1012"><a href="#数字分类-PATB-1012" class="headerlink" title="数字分类 (PATB-1012)"></a>数字分类 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805311146147840" target="_blank" rel="noopener">PATB-1012</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>给定一系列正整数，请按要求对数字进行分类，并输出以下 5 个数字：</p><ul><li>A1 = 能被 5 整除的数字中所有偶数的和；</li><li>A2 = 将被 5 除后余 1 的数字按给出顺序进行交错求和，即计算 n1−n2+n3−n4⋯；</li><li>A3 = 被 5 除后余 2 的数字的个数；</li><li>A4 = 被 5 除后余 3 的数字的平均数，精确到小数点后 1 位；</li><li>A5 = 被 5 除后余 4 的数字中最大数字。</li></ul></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>每个输入包含 1 个测试用例。每个测试用例先给出一个不超过 1000 的正整数 N，随后给出 N 个不超过 1000 的待分类的正整数。数字间以空格分隔。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>对给定的 N 个正整数，按题目要求计算 A1~A5 并在一行中顺序输出。数字间以空格分隔，但行末不得有多余空格。</p><p>若其中某一类数字不存在，则在相应位置输出 <code>N</code>。</p></blockquote><h2 id="样例输入1"><a href="#样例输入1" class="headerlink" title="样例输入1"></a>样例输入1</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">13 1 2 3 4 5 6 7 8 9 10 20 16 18</span><br></pre></td></tr></table></figure><h2 id="样例输出1"><a href="#样例输出1" class="headerlink" title="样例输出1"></a>样例输出1</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">30 11 2 9.7 9</span><br></pre></td></tr></table></figure><h2 id="样例输入2"><a href="#样例输入2" class="headerlink" title="样例输入2"></a>样例输入2</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">8 1 2 4 5 6 7 9 16</span><br></pre></td></tr></table></figure><h2 id="样例输出2"><a href="#样例输出2" class="headerlink" title="样例输出2"></a>样例输出2</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">N 11 2 N 9</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> a1 = <span class="number">0</span>, a2 = <span class="number">0</span>, a3 = <span class="number">0</span>, a5 = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> c1 = <span class="number">0</span>, c2 = <span class="number">0</span>, c4 = <span class="number">0</span>, c5 = <span class="number">0</span>;</span><br><span class="line">    DB a4 = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;m);</span><br><span class="line">        <span class="keyword">switch</span> (m % <span class="number">5</span>)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">if</span> (m % <span class="number">2</span> == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                c1++;</span><br><span class="line">                a1 += m;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            c2++;</span><br><span class="line">            a2 = a2 + m * ((c2 &amp; <span class="number">1</span>) ? <span class="number">1</span> : <span class="number">-1</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            a3++;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            c4++, a4 += m;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">            c5++;</span><br><span class="line">            a5 = max(a5, m);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (c1)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d"</span>, a1);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"N"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (c2)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">" %d"</span>, a2);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">" N"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (a3)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">" %d"</span>, a3);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">" N"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (c4)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">" %.1lf"</span>, a4 / c4);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">" N"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (c5)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">" %d"</span>, a5);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">" N"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1014 福尔摩斯的约会</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1014%20%E7%A6%8F%E5%B0%94%E6%91%A9%E6%96%AF%E7%9A%84%E7%BA%A6%E4%BC%9A/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:00 GMT+0800 (GMT+08:00) --><h1 id="福尔摩斯的约会-PATB-1014"><a href="#福尔摩斯的约会-PATB-1014" class="headerlink" title="福尔摩斯的约会 (PATB-1014)"></a>福尔摩斯的约会 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805308755394560" target="_blank" rel="noopener">PATB-1014</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>大侦探福尔摩斯接到一张奇怪的字条：<code>我们约会吧！ 3485djDkxh4hhGE 2984akDfkkkkggEdsb s&amp;hgsfdk d&amp;Hyscvnm</code>。大侦探很快就明白了，字条上奇怪的乱码实际上就是约会的时间<code>星期四 14:04</code>，因为前面两字符串中第 1 对相同的大写英文字母（大小写有区分）是第 4 个字母 <code>D</code>，代表星期四；第 2 对相同的字符是 <code>E</code> ，那是第 5 个英文字母，代表一天里的第 14 个钟头（于是一天的 0 点到 23 点由数字 0 到 9、以及大写字母 <code>A</code> 到 <code>N</code> 表示）；后面两字符串第 1 对相同的英文字母 <code>s</code> 出现在第 4 个位置（从 0 开始计数）上，代表第 4 分钟。现给定两对字符串，请帮助福尔摩斯解码得到约会的时间。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在 4 行中分别给出 4 个非空、不包含空格、且长度不超过 60 的字符串。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>在一行中输出约会的时间，格式为 <code>DAY HH:MM</code>，其中 <code>DAY</code> 是某星期的 3 字符缩写，即 <code>MON</code> 表示星期一，<code>TUE</code> 表示星期二，<code>WED</code> 表示星期三，<code>THU</code> 表示星期四，<code>FRI</code> 表示星期五，<code>SAT</code> 表示星期六，<code>SUN</code> 表示星期日。题目输入保证每个测试存在唯一解。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3485djDkxh4hhGE </span><br><span class="line">2984akDfkkkkggEdsb </span><br><span class="line">s&amp;hgsfdk </span><br><span class="line">d&amp;Hyscvnm</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">THU 14:04</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> day[][<span class="number">5</span>] = &#123; <span class="string">"MON"</span>,<span class="string">"TUE"</span>,<span class="string">"WED"</span>,<span class="string">"THU"</span>,<span class="string">"FRI"</span>,<span class="string">"SAT"</span>,<span class="string">"SUN"</span> &#125;;</span><br><span class="line"><span class="keyword">char</span> HH[] = <span class="string">"0123456789ABCDEFGHIJKLMN"</span>;</span><br><span class="line"><span class="keyword">char</span> s1[<span class="number">105</span>], s2[<span class="number">105</span>], s3[<span class="number">105</span>], s4[<span class="number">105</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s %s %s %s"</span>, s1, s2, s3, s4);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> len = min(<span class="built_in">strlen</span>(s1), <span class="built_in">strlen</span>(s2)), flag = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (s1[i] == s2[i])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="string">'A'</span> &lt;= s1[i] &amp;&amp; s1[i] &lt;= <span class="string">'G'</span> &amp;&amp; flag)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%s "</span>, day[s1[i] - <span class="string">'A'</span>]);</span><br><span class="line">                flag = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> ((<span class="built_in">isdigit</span>(s1[i]) || (<span class="string">'A'</span> &lt;= s1[i] &amp;&amp; s1[i] &lt;= <span class="string">'N'</span>)) &amp;&amp; !flag)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%02d:"</span>, <span class="built_in">strchr</span>(HH, s1[i]) - HH);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    len = min(<span class="built_in">strlen</span>(s3), <span class="built_in">strlen</span>(s4));</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">isalpha</span>(s3[i]) &amp;&amp; s3[i] == s4[i])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%02d\n"</span>, i);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1013 数素数</title>
    <url>/%E9%A2%98%E8%A7%A3/%E6%95%B0%E8%AE%BA/%E7%B4%A0%E6%95%B0/%E7%B4%A0%E6%95%B0%E7%AD%9B/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1013%20%E6%95%B0%E7%B4%A0%E6%95%B0/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:00 GMT+0800 (GMT+08:00) --><h1 id="数素数-PATB-1013"><a href="#数素数-PATB-1013" class="headerlink" title="数素数 (PATB-1013)"></a>数素数 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805309963354112" target="_blank" rel="noopener">PATB-1013</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>令 Pi 表示第 i 个素数。现任给两个正整数 M≤N≤10^4，请输出 PM 到 PN 的所有素数。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在一行中给出 M 和 N，其间以空格分隔。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>输出从 PM 到 PN 的所有素数，每 10 个数字占 1 行，其间以空格分隔，但行末不得有多余空格。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">5 27</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">11 13 17 19 23 29 31 37 41 43</span><br><span class="line">47 53 59 61 67 71 73 79 83 89</span><br><span class="line">97 101 103</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">bool</span> isP[mxn];</span><br><span class="line"><span class="keyword">int</span> prime[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">euler</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(isP, <span class="number">1</span>, <span class="keyword">sizeof</span> isP);</span><br><span class="line">    isP[<span class="number">0</span>] = isP[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (isP[i]) prime[++cnt] = i;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= cnt; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (i * prime[j] &gt; n) <span class="keyword">break</span>;</span><br><span class="line">            isP[i * prime[j]] = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span> (i % prime[j] == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> cnt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> cnt = euler(N);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;n, &amp;m);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> nf = <span class="number">0</span>, lc = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = n; i &lt;= m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (nf)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            nf = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d"</span>, prime[i]);</span><br><span class="line">        lc++;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (lc % <span class="number">10</span> == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            nf = <span class="number">0</span>;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>数论</category>
        <category>素数</category>
        <category>素数筛</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
        <tag>素数</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1015 德才论</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1015%20%E5%BE%B7%E6%89%8D%E8%AE%BA/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:00 GMT+0800 (GMT+08:00) --><h1 id="德才论-PATB-1015"><a href="#德才论-PATB-1015" class="headerlink" title="德才论 (PATB-1015)"></a>德才论 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805307551629312" target="_blank" rel="noopener">PATB-1015</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>宋代史学家司马光在《资治通鉴》中有一段著名的“德才论”：“是故才德全尽谓之圣人，才德兼亡谓之愚人，德胜才谓之君子，才胜德谓之小人。凡取人之术，苟不得圣人，君子而与之，与其得小人，不若得愚人。”</p><p>现给出一批考生的德才分数，请根据司马光的理论给出录取排名。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入第一行给出 3 个正整数，分别为：N（≤10^5），即考生总数；L（≥60），为录取最低分数线，即德分和才分均不低于 L 的考生才有资格被考虑录取；H（&lt;100），为优先录取线——德分和才分均不低于此线的被定义为“才德全尽”，此类考生按德才总分从高到低排序；才分不到但德分到线的一类考生属于“德胜才”，也按总分排序，但排在第一类考生之后；德才分均低于 H，但是德分不低于才分的考生属于“才德兼亡”但尚有“德胜才”者，按总分排序，但排在第二类考生之后；其他达到最低线 L 的考生也按总分排序，但排在第三类考生之后。</p><p>随后 N 行，每行给出一位考生的信息，包括：<code>准考证号 德分 才分</code>，其中<code>准考证号</code>为 8 位整数，德才分为区间 [0, 100] 内的整数。数字间以空格分隔。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>输出第一行首先给出达到最低分数线的考生人数 M，随后 M 行，每行按照输入格式输出一位考生的信息，考生按输入中说明的规则从高到低排序。当某类考生中有多人总分相同时，按其德分降序排列；若德分也并列，则按准考证号的升序输出。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">14 60 80</span><br><span class="line">10000001 64 90</span><br><span class="line">10000002 90 60</span><br><span class="line">10000011 85 80</span><br><span class="line">10000003 85 80</span><br><span class="line">10000004 80 85</span><br><span class="line">10000005 82 77</span><br><span class="line">10000006 83 76</span><br><span class="line">10000007 90 78</span><br><span class="line">10000008 75 79</span><br><span class="line">10000009 59 90</span><br><span class="line">10000010 88 45</span><br><span class="line">10000012 80 100</span><br><span class="line">10000013 90 99</span><br><span class="line">10000014 66 60</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">12</span><br><span class="line">10000013 90 99</span><br><span class="line">10000012 80 100</span><br><span class="line">10000003 85 80</span><br><span class="line">10000011 85 80</span><br><span class="line">10000004 80 85</span><br><span class="line">10000007 90 78</span><br><span class="line">10000006 83 76</span><br><span class="line">10000005 82 77</span><br><span class="line">10000002 90 60</span><br><span class="line">10000014 66 60</span><br><span class="line">10000008 75 79</span><br><span class="line">10000001 64 90</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">P</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> num, d, c;</span><br><span class="line">    <span class="keyword">int</span> lv;</span><br><span class="line">&#125; a[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(P x, P y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x.lv != y.lv)</span><br><span class="line">        <span class="keyword">return</span> x.lv &lt; y.lv;</span><br><span class="line">    <span class="keyword">if</span> (x.d + x.c != y.d + y.c)</span><br><span class="line">        <span class="keyword">return</span> x.d + x.c &gt; y.d + y.c;</span><br><span class="line">    <span class="keyword">if</span> (x.d != y.d)</span><br><span class="line">        <span class="keyword">return</span> x.d &gt; y.d;</span><br><span class="line">    <span class="keyword">return</span> x.num &lt; y.num;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> l, h;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>, &amp;n, &amp;l, &amp;h);</span><br><span class="line">    <span class="built_in">memset</span>(a, <span class="number">0</span>, <span class="keyword">sizeof</span> a);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> num = n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>, &amp;a[i].num, &amp;a[i].d, &amp;a[i].c);</span><br><span class="line">        <span class="keyword">if</span> (a[i].d &gt;= h &amp;&amp; a[i].c &gt;= h)</span><br><span class="line">            a[i].lv = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (a[i].d &gt;= h &amp;&amp; a[i].c &gt;= l)</span><br><span class="line">            a[i].lv = <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (a[i].d &gt;= a[i].c &amp;&amp; a[i].d &gt;= l &amp;&amp; a[i].c &gt;= l)</span><br><span class="line">            a[i].lv = <span class="number">3</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (a[i].d &gt;= l &amp;&amp; a[i].c &gt;= l)</span><br><span class="line">            a[i].lv = <span class="number">4</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            a[i].lv = <span class="number">5</span>;</span><br><span class="line">            num--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(a, a + n, cmp);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, num);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; num; i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d %d %d\n"</span>, a[i].num, a[i].d, a[i].c);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1016 部分A+B</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1016%20%E9%83%A8%E5%88%86A+B/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:00 GMT+0800 (GMT+08:00) --><h1 id="部分A-B-PATB-1016"><a href="#部分A-B-PATB-1016" class="headerlink" title="部分A+B (PATB-1016)"></a>部分A+B (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805306310115328" target="_blank" rel="noopener">PATB-1016</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>正整数 A 的“DA（为 1 位整数）部分”定义为由 A 中所有 DA 组成的新整数 PA。例如：给定 A=3862767，DA=6，则 A 的“6 部分”PA 是 66，因为 A 中有 2 个 6。</p><p>现给定 A、DA、B、DB，请编写程序计算 PA+PB。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在一行中依次给出 A、DA、B、DB，中间以空格分隔，其中 0&lt;A,B&lt;10^10。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>在一行中输出 PA+PB 的值。</p></blockquote><h2 id="样例输入1"><a href="#样例输入1" class="headerlink" title="样例输入1"></a>样例输入1</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3862767 6 13530293 3</span><br></pre></td></tr></table></figure><h2 id="样例输出1"><a href="#样例输出1" class="headerlink" title="样例输出1"></a>样例输出1</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">399</span><br></pre></td></tr></table></figure><h2 id="样例输入2"><a href="#样例输入2" class="headerlink" title="样例输入2"></a>样例输入2</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3862767 1 13530293 8</span><br></pre></td></tr></table></figure><h2 id="样例输出2"><a href="#样例输出2" class="headerlink" title="样例输出2"></a>样例输出2</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">0</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> a, b, da, db;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d %d %d"</span>, &amp;a, &amp;da, &amp;b, &amp;db);</span><br><span class="line">    <span class="keyword">int</span> ta = <span class="number">0</span>, tb = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (a)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (a % <span class="number">10</span> == da)</span><br><span class="line">            ta = ta * <span class="number">10</span> + da;</span><br><span class="line">        a /= <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (b)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (b % <span class="number">10</span> == db)</span><br><span class="line">            tb = tb * <span class="number">10</span> + db;</span><br><span class="line">        b /= <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ta + tb);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1017 A除以B</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1017%20A%E9%99%A4%E4%BB%A5B/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:00 GMT+0800 (GMT+08:00) --><h1 id="A除以B-PATB-1017"><a href="#A除以B-PATB-1017" class="headerlink" title="A除以B (PATB-1017)"></a>A除以B (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805305181847552" target="_blank" rel="noopener">PATB-1017</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>本题要求计算 A/B，其中 A 是不超过 1000 位的正整数，B 是 1 位正整数。你需要输出商数 Q 和余数 R，使得 A=B×Q+R 成立。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在一行中依次给出 A 和 B，中间以 1 空格分隔。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>在一行中依次输出 Q 和 R，中间以 1 空格分隔。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">123456789050987654321 7</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">17636684150141093474 3</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">char</span> a[mxn];</span><br><span class="line"><span class="keyword">int</span> b;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s %d"</span>, a, &amp;b);</span><br><span class="line">    <span class="keyword">int</span> len = <span class="built_in">strlen</span>(a), t = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        t = t * <span class="number">10</span> + a[i] - <span class="string">'0'</span>;</span><br><span class="line">        <span class="keyword">if</span> (i || t / b || len &lt;= <span class="number">1</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d"</span>, t / b);</span><br><span class="line">        t %= b;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">" %d\n"</span>, t);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1018 锤子剪刀布</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1018%20%E9%94%A4%E5%AD%90%E5%89%AA%E5%88%80%E5%B8%83/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:00 GMT+0800 (GMT+08:00) --><h1 id="锤子剪刀布-PATB-1018"><a href="#锤子剪刀布-PATB-1018" class="headerlink" title="锤子剪刀布 (PATB-1018)"></a>锤子剪刀布 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805304020025344" target="_blank" rel="noopener">PATB-1018</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>大家应该都会玩“锤子剪刀布”的游戏：两人同时给出手势，胜负规则如图所示：</p><p><img src="https://images.ptausercontent.com/724da598-b37f-4f1f-99b4-71459654ce3a.jpg" alt="FigCJB.jpg"></p><p>现给出两人的交锋记录，请统计双方的胜、平、负次数，并且给出双方分别出什么手势的胜算最大。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入第 1 行给出正整数 N（≤10^5），即双方交锋的次数。随后 N 行，每行给出一次交锋的信息，即甲、乙双方同时给出的的手势。<code>C</code> 代表“锤子”、<code>J</code> 代表“剪刀”、<code>B</code> 代表“布”，第 1 个字母代表甲方，第 2 个代表乙方，中间有 1 个空格。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>输出第 1、2 行分别给出甲、乙的胜、平、负次数，数字间以 1 个空格分隔。第 3 行给出两个字母，分别代表甲、乙获胜次数最多的手势，中间有 1 个空格。如果解不唯一，则输出按字母序最小的解。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">10</span><br><span class="line">C J</span><br><span class="line">J B</span><br><span class="line">C B</span><br><span class="line">B B</span><br><span class="line">B C</span><br><span class="line">C C</span><br><span class="line">C B</span><br><span class="line">J B</span><br><span class="line">B C</span><br><span class="line">J J</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">5 3 2</span><br><span class="line">2 3 5</span><br><span class="line">B B</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> s[] = <span class="string">" BCJ"</span>;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">10</span>], b[<span class="number">10</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">char</span> x, y;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">" %c %c"</span>, &amp;x, &amp;y);</span><br><span class="line">        <span class="keyword">if</span> (x == y)</span><br><span class="line">        &#123;</span><br><span class="line">            a[<span class="number">5</span>]++, b[<span class="number">5</span>]++;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (x == <span class="string">'B'</span> &amp;&amp; y == <span class="string">'C'</span>)</span><br><span class="line">            a[<span class="number">1</span>]++, a[<span class="number">4</span>]++, b[<span class="number">6</span>]++;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (x == <span class="string">'B'</span> &amp;&amp; y == <span class="string">'J'</span>)</span><br><span class="line">            b[<span class="number">3</span>]++, a[<span class="number">6</span>]++, b[<span class="number">4</span>]++;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (x == <span class="string">'C'</span> &amp;&amp; y == <span class="string">'J'</span>)</span><br><span class="line">            a[<span class="number">2</span>]++, a[<span class="number">4</span>]++, b[<span class="number">6</span>]++;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (x == <span class="string">'C'</span> &amp;&amp; y == <span class="string">'B'</span>)</span><br><span class="line">            b[<span class="number">1</span>]++, a[<span class="number">6</span>]++, b[<span class="number">4</span>]++;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (y == <span class="string">'B'</span>)</span><br><span class="line">            a[<span class="number">3</span>]++, a[<span class="number">4</span>]++, b[<span class="number">6</span>]++;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            b[<span class="number">2</span>]++, a[<span class="number">6</span>]++, b[<span class="number">4</span>]++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d %d %d\n"</span>, a[<span class="number">4</span>], a[<span class="number">5</span>], a[<span class="number">6</span>]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d %d %d\n"</span>, b[<span class="number">4</span>], b[<span class="number">5</span>], b[<span class="number">6</span>]);</span><br><span class="line">    <span class="keyword">int</span> idx1 = <span class="number">1</span>, idx2 = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">3</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[idx1] &lt; a[i])</span><br><span class="line">            idx1 = i;</span><br><span class="line">        <span class="keyword">if</span> (b[idx2] &lt; b[i])</span><br><span class="line">            idx2 = i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%c %c\n"</span>, s[idx1], s[idx2]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1019 数字黑洞</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1019%20%E6%95%B0%E5%AD%97%E9%BB%91%E6%B4%9E/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:00 GMT+0800 (GMT+08:00) --><h1 id="数字黑洞-PATB-1019"><a href="#数字黑洞-PATB-1019" class="headerlink" title="数字黑洞 (PATB-1019)"></a>数字黑洞 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805302786899968" target="_blank" rel="noopener">PATB-1019</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>给定任一个各位数字不完全相同的 4 位正整数，如果我们先把 4 个数字按非递增排序，再按非递减排序，然后用第 1 个数字减第 2 个数字，将得到一个新的数字。一直重复这样做，我们很快会停在有“数字黑洞”之称的 <code>6174</code>，这个神奇的数字也叫 Kaprekar 常数。</p><p>例如，我们从<code>6767</code>开始，将得到</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">7766 - 6677 &#x3D; 1089</span><br><span class="line">9810 - 0189 &#x3D; 9621</span><br><span class="line">9621 - 1269 &#x3D; 8352</span><br><span class="line">8532 - 2358 &#x3D; 6174</span><br><span class="line">7641 - 1467 &#x3D; 6174</span><br><span class="line">... ...</span><br></pre></td></tr></table></figure><p>现给定任意 4 位正整数，请编写程序演示到达黑洞的过程。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入给出一个 (0,10^4) 区间内的正整数 N。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>如果 N 的 4 位数字全相等，则在一行内输出 <code>N - N = 0000</code>；否则将计算的每一步在一行内输出，直到 <code>6174</code> 作为差出现，输出格式见样例。注意每个数字按 <code>4</code> 位数格式输出。</p></blockquote><h2 id="样例输入1"><a href="#样例输入1" class="headerlink" title="样例输入1"></a>样例输入1</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">6767</span><br></pre></td></tr></table></figure><h2 id="样例输出1"><a href="#样例输出1" class="headerlink" title="样例输出1"></a>样例输出1</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">7766 - 6677 &#x3D; 1089</span><br><span class="line">9810 - 0189 &#x3D; 9621</span><br><span class="line">9621 - 1269 &#x3D; 8352</span><br><span class="line">8532 - 2358 &#x3D; 6174</span><br></pre></td></tr></table></figure><h2 id="样例输入2"><a href="#样例输入2" class="headerlink" title="样例输入2"></a>样例输入2</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2222</span><br></pre></td></tr></table></figure><h2 id="样例输出2"><a href="#样例输出2" class="headerlink" title="样例输出2"></a>样例输出2</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2222 - 2222 &#x3D; 0000</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">strrev</span><span class="params">(<span class="keyword">char</span>* s, <span class="keyword">char</span>* t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> len = <span class="built_in">strlen</span>(s);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        t[i] = s[len - i - <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    t[len] = <span class="string">'\0'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    <span class="keyword">char</span> t1[<span class="number">15</span>], t2[<span class="number">15</span>], t3[<span class="number">15</span>];</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">sprintf</span>(t2, <span class="string">"%04d"</span>, n);</span><br><span class="line">        sort(t2, t2 + <span class="number">4</span>);</span><br><span class="line">        strrev(t2, t1);</span><br><span class="line">        <span class="built_in">sscanf</span>(t1, <span class="string">"%d"</span>, &amp;n);</span><br><span class="line">        <span class="built_in">sscanf</span>(t2, <span class="string">"%d"</span>, &amp;m);</span><br><span class="line">        n = n - m;</span><br><span class="line">        <span class="built_in">sprintf</span>(t3, <span class="string">"%04d"</span>, n);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%s - %s = %s\n"</span>, t1, t2, t3);</span><br><span class="line">        <span class="keyword">if</span> (n == <span class="number">0</span> || n == <span class="number">6174</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1021 个位数统计</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1021%20%E4%B8%AA%E4%BD%8D%E6%95%B0%E7%BB%9F%E8%AE%A1/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:01 GMT+0800 (GMT+08:00) --><h1 id="个位数统计-PATB-1021"><a href="#个位数统计-PATB-1021" class="headerlink" title="个位数统计 (PATB-1021)"></a>个位数统计 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805300404535296" target="_blank" rel="noopener">PATB-1021</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>给定一个 k 位整数 N=dk−1×10^(k−1)+⋯+d1×10^1+d0 (0≤di≤9, i=0,⋯,k−1, dk−1&gt;0)，请编写程序统计每种不同的个位数字出现的次数。例如：给定 N=100311，则有 2 个 0，3 个 1，和 1 个 3。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>每个输入包含 1 个测试用例，即一个不超过 1000 位的正整数 N。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>对 N 中每一种不同的个位数字，以 <code>D:M</code> 的格式在一行中输出该位数字 <code>D</code> 及其在 N 中出现的次数 <code>M</code>。要求按 <code>D</code> 的升序输出。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">100311</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">0:2</span><br><span class="line">1:3</span><br><span class="line">3:1</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">15</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> t[mxm];</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>, t);</span><br><span class="line">    <span class="keyword">int</span> len = <span class="built_in">strlen</span>(t);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        a[t[i] - <span class="string">'0'</span>]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">9</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i])</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d:%d\n"</span>, i, a[i]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1020 月饼</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1020%20%E6%9C%88%E9%A5%BC/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:01 GMT+0800 (GMT+08:00) --><h1 id="月饼-PATB-1020"><a href="#月饼-PATB-1020" class="headerlink" title="月饼 (PATB-1020)"></a>月饼 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805301562163200" target="_blank" rel="noopener">PATB-1020</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>月饼是中国人在中秋佳节时吃的一种传统食品，不同地区有许多不同风味的月饼。现给定所有种类月饼的库存量、总售价、以及市场的最大需求量，请你计算可以获得的最大收益是多少。</p><p>注意：销售时允许取出一部分库存。样例给出的情形是这样的：假如我们有 3 种月饼，其库存量分别为 18、15、10 万吨，总售价分别为 75、72、45 亿元。如果市场的最大需求量只有 20 万吨，那么我们最大收益策略应该是卖出全部 15 万吨第 2 种月饼、以及 5 万吨第 3 种月饼，获得 72 + 45/2 = 94.5（亿元）。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>每个输入包含一个测试用例。每个测试用例先给出一个不超过 1000 的正整数 N 表示月饼的种类数、以及不超过 500（以万吨为单位）的正整数 D 表示市场最大需求量。随后一行给出 N 个正数表示每种月饼的库存量（以万吨为单位）；最后一行给出 N 个正数表示每种月饼的总售价（以亿元为单位）。数字间以空格分隔。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>对每组测试用例，在一行中输出最大收益，以亿元为单位并精确到小数点后 2 位。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3 20</span><br><span class="line">18 15 10</span><br><span class="line">75 72 45</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">94.50</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">P</span> &#123;</span></span><br><span class="line">    DB num, price;</span><br><span class="line">&#125;a[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(P x, P y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x.price / x.num &gt; y.price / y.num;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;n, &amp;m);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lf"</span>, &amp;a[i].num);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lf"</span>, &amp;a[i].price);</span><br><span class="line"></span><br><span class="line">    sort(a, a + n, cmp);</span><br><span class="line"></span><br><span class="line">    DB ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (m &gt; a[i].num)</span><br><span class="line">        &#123;</span><br><span class="line">            ans += a[i].price;</span><br><span class="line">            m -= a[i].num;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            ans += m * (a[i].price / a[i].num);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%.2lf\n"</span>, ans);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1023 组个最小数</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1023%20%E7%BB%84%E4%B8%AA%E6%9C%80%E5%B0%8F%E6%95%B0/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:01 GMT+0800 (GMT+08:00) --><h1 id="组个最小数-PATB-1023"><a href="#组个最小数-PATB-1023" class="headerlink" title="组个最小数 (PATB-1023)"></a>组个最小数 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805298269634560" target="_blank" rel="noopener">PATB-1023</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>给定数字 0-9 各若干个。你可以以任意顺序排列这些数字，但必须全部使用。目标是使得最后得到的数尽可能小（注意 0 不能做首位）。例如：给定两个 0，两个 1，三个 5，一个 8，我们得到的最小的数就是 10015558。</p><p>现给定数字，请编写程序输出能够组成的最小的数。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在一行中给出 10 个非负整数，顺序表示我们拥有数字 0、数字 1、……数字 9 的个数。整数间用一个空格分隔。10 个数字的总个数不超过 50，且至少拥有 1 个非 0 的数字。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">在一行中输出能够组成的最小的数。</span><br></pre></td></tr></table></figure></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2 2 0 0 0 3 0 0 1 0</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">10015558</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> a[<span class="number">15</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i]) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d"</span>, i);</span><br><span class="line">            a[i]--;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span> (a[i])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d"</span>, i);</span><br><span class="line">            a[i]--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1024 科学计数法</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1024%20%E7%A7%91%E5%AD%A6%E8%AE%A1%E6%95%B0%E6%B3%95/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:01 GMT+0800 (GMT+08:00) --><h1 id="科学计数法-PATB-1024"><a href="#科学计数法-PATB-1024" class="headerlink" title="科学计数法 (PATB-1024)"></a>科学计数法 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805297229447168" target="_blank" rel="noopener">PATB-1024</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>科学计数法是科学家用来表示很大或很小的数字的一种方便的方法，其满足正则表达式[+-][1-9]<code>.</code>[0-9]+E[+-][0-9]+，即数字的整数部分只有 1 位，小数部分至少有 1 位，该数字及其指数部分的正负号即使对正数也必定明确给出。</p><p>现以科学计数法的格式给出实数 A，请编写程序按普通数字表示法输出 A，并保证所有有效位都被保留。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>每个输入包含 1 个测试用例，即一个以科学计数法表示的实数 A。该数字的存储长度不超过 9999 字节，且其指数的绝对值不超过 9999。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>对每个测试用例，在一行中按普通数字表示法输出 A，并保证所有有效位都被保留，包括末尾的 0。</p></blockquote><h2 id="样例输入1"><a href="#样例输入1" class="headerlink" title="样例输入1"></a>样例输入1</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">+1.23400E-03</span><br></pre></td></tr></table></figure><h2 id="样例输出1"><a href="#样例输出1" class="headerlink" title="样例输出1"></a>样例输出1</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">0.00123400</span><br></pre></td></tr></table></figure><h2 id="样例输入2"><a href="#样例输入2" class="headerlink" title="样例输入2"></a>样例输入2</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-1.2E+10</span><br></pre></td></tr></table></figure><h2 id="样例输出2"><a href="#样例输出2" class="headerlink" title="样例输出2"></a>样例输出2</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-12000000000</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> s[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(~ <span class="built_in">scanf</span>(<span class="string">"%s"</span>, s) )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">char</span>* t = <span class="built_in">strchr</span>(s, <span class="string">'E'</span>);</span><br><span class="line">        <span class="keyword">int</span> len = t - s - <span class="number">3</span>, l, r;</span><br><span class="line">        <span class="built_in">sscanf</span>(t + <span class="number">1</span>, <span class="string">"%d"</span>, &amp;r);</span><br><span class="line">        *(t) = <span class="string">'\0'</span>;</span><br><span class="line">        t = <span class="built_in">strchr</span>(s, <span class="string">'.'</span>) + <span class="number">1</span>;</span><br><span class="line">        <span class="built_in">sscanf</span>(s+<span class="number">1</span>, <span class="string">"%d"</span>, &amp;l);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (s[<span class="number">0</span>] == <span class="string">'-'</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"-"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (r &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (r &gt; len)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%d%s"</span>, l, t);</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; r - len; i++)</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"0"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%d"</span>, l);</span><br><span class="line">                <span class="keyword">int</span> len2 = <span class="built_in">strlen</span>(t);</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len2; i++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> (i == r)</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">"."</span>);</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"%c"</span>, t[i]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"0."</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i + r + <span class="number">1</span> &lt; <span class="number">0</span>; i++)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"0"</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d%s"</span>, l, t);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1022 D进制的A+B</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1022%20D%E8%BF%9B%E5%88%B6%E7%9A%84A+B/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:01 GMT+0800 (GMT+08:00) --><h1 id="D进制的A-B-PATB-1022"><a href="#D进制的A-B-PATB-1022" class="headerlink" title="D进制的A+B (PATB-1022)"></a>D进制的A+B (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805299301433344" target="_blank" rel="noopener">PATB-1022</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>输入两个非负 10 进制整数 A 和 B (≤2^30−1)，输出 A+B 的 D (1&lt;D≤10)进制数。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在一行中依次给出 3 个整数 A、B 和 D。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>输出 A+B 的 D 进制数。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">123 456 8</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1103</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="keyword">char</span> s[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LL a, b, d;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld %lld %lld"</span>, &amp;a, &amp;b, &amp;d);</span><br><span class="line"></span><br><span class="line">    LL t = a + b;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (n = <span class="number">0</span>; t; t/=d)</span><br><span class="line">        s[++n] = <span class="string">"0123456789"</span>[t % d];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (!n)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"0"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(; n; n--)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%c"</span>, s[n]);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1025 反转链表</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1025%20%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:01 GMT+0800 (GMT+08:00) --><h1 id="反转链表-PATB-1025"><a href="#反转链表-PATB-1025" class="headerlink" title="反转链表 (PATB-1025)"></a>反转链表 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805296180871168" target="_blank" rel="noopener">PATB-1025</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>给定一个常数 K 以及一个单链表 L，请编写程序将 L 中每 K 个结点反转。例如：给定 L 为 1→2→3→4→5→6，K 为 3，则输出应该为 3→2→1→6→5→4；如果 K 为 4，则输出应该为 4→3→2→1→5→6，即最后不到 K 个元素不反转。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>每个输入包含 1 个测试用例。每个测试用例第 1 行给出第 1 个结点的地址、结点总个数正整数 N (≤10^5)、以及正整数 K (≤N)，即要求反转的子链结点的个数。结点的地址是 5 位非负整数，NULL 地址用 −1 表示。</p><p>接下来有 N 行，每行格式为：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Address Data Next</span><br></pre></td></tr></table></figure><p>其中 <code>Address</code> 是结点地址，<code>Data</code> 是该结点保存的整数数据，<code>Next</code> 是下一结点的地址。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>对每个测试用例，顺序输出反转后的链表，其上每个结点占一行，格式与输入相同。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">00100 6 4</span><br><span class="line">00000 4 99999</span><br><span class="line">00100 1 12309</span><br><span class="line">68237 6 -1</span><br><span class="line">33218 3 00000</span><br><span class="line">99999 5 68237</span><br><span class="line">12309 2 33218</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">00000 4 33218</span><br><span class="line">33218 3 12309</span><br><span class="line">12309 2 00100</span><br><span class="line">00100 1 99999</span><br><span class="line">99999 5 68237</span><br><span class="line">68237 6 -1</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> val[mxn], nxt[mxn], ans[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> s, n, k, x;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>, &amp;s, &amp;n, &amp;k);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;x);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;val[x], &amp;nxt[x]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> t=s; t!=<span class="number">-1</span>; t=nxt[t]) &#123;</span><br><span class="line">        ans[num++] = t;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;(num-num%k); i+=k)</span><br><span class="line">        reverse(begin(ans)+i, begin(ans)+i+k);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;num<span class="number">-1</span>; i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%05d %d %05d\n"</span>, ans[i], val[ans[i]], ans[i+<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%05d %d -1"</span>, ans[num<span class="number">-1</span>], val[ans[num<span class="number">-1</span>]]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1026 程序运行时间</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1026%20%E7%A8%8B%E5%BA%8F%E8%BF%90%E8%A1%8C%E6%97%B6%E9%97%B4/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:01 GMT+0800 (GMT+08:00) --><h1 id="程序运行时间-PATB-1026"><a href="#程序运行时间-PATB-1026" class="headerlink" title="程序运行时间 (PATB-1026)"></a>程序运行时间 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805295203598336" target="_blank" rel="noopener">PATB-1026</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>要获得一个 C 语言程序的运行时间，常用的方法是调用头文件 time.h，其中提供了 clock() 函数，可以捕捉从程序开始运行到 clock() 被调用时所耗费的时间。这个时间单位是 clock tick，即“时钟打点”。同时还有一个常数 CLK_TCK，给出了机器时钟每秒所走的时钟打点数。于是为了获得一个函数 f 的运行时间，我们只要在调用 f 之前先调用 clock()，获得一个时钟打点数 C1；在 f 执行完成后再调用 clock()，获得另一个时钟打点数 C2；两次获得的时钟打点数之差 (C2-C1) 就是 f 运行所消耗的时钟打点数，再除以常数 CLK_TCK，就得到了以秒为单位的运行时间。</p><p>这里不妨简单假设常数 CLK_TCK 为 100。现给定被测函数前后两次获得的时钟打点数，请你给出被测函数运行的时间。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在一行中顺序给出 2 个整数 C1 和 C2。注意两次获得的时钟打点数肯定不相同，即 C1 &lt; C2，并且取值在 [0,10^7]。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>在一行中输出被测函数运行的时间。运行时间必须按照 <code>hh:mm:ss</code>（即2位的 <code>时:分:秒</code>）格式输出；不足 1 秒的时间四舍五入到秒。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">123 4577973</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">12:42:59</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> c1, c2;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;c1, &amp;c2);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> t = (c2-c1) / <span class="number">100</span>;</span><br><span class="line">    <span class="keyword">int</span> x = (c2-c1) % <span class="number">100</span>  &gt;= <span class="number">50</span> ? <span class="number">1</span> : <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%02d:%02d:%02d\n"</span>, t/<span class="number">3600</span>, t%<span class="number">3600</span>/<span class="number">60</span>, t%<span class="number">60</span>+x);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1027 打印沙漏</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1027%20%E6%89%93%E5%8D%B0%E6%B2%99%E6%BC%8F/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:01 GMT+0800 (GMT+08:00) --><h1 id="打印沙漏-PATB-1027"><a href="#打印沙漏-PATB-1027" class="headerlink" title="打印沙漏 (PATB-1027)"></a>打印沙漏 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805294251491328" target="_blank" rel="noopener">PATB-1027</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>本题要求你写个程序把给定的符号打印成沙漏的形状。例如给定17个“*”，要求按下列格式打印</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">*****</span><br><span class="line"> ***</span><br><span class="line">  *</span><br><span class="line"> ***</span><br><span class="line">*****</span><br></pre></td></tr></table></figure><p>所谓“沙漏形状”，是指每行输出奇数个符号；各行符号中心对齐；相邻两行符号数差2；符号数先从大到小顺序递减到1，再从小到大顺序递增；首尾符号数相等。</p><p>给定任意N个符号，不一定能正好组成一个沙漏。要求打印出的沙漏能用掉尽可能多的符号。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在一行给出1个正整数N（≤1000）和一个符号，中间以空格分隔。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>首先打印出由给定符号组成的最大的沙漏形状，最后在一行中输出剩下没用掉的符号数。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">19 *</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">*****</span><br><span class="line"> ***</span><br><span class="line">  *</span><br><span class="line"> ***</span><br><span class="line">*****</span><br><span class="line">2</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n; <span class="keyword">char</span> c;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %c"</span>, &amp;n, &amp;c);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> x, num=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(x=<span class="number">1</span>; ; x++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(n &lt; <span class="number">2</span>*x*x<span class="number">-1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            x--;</span><br><span class="line">            num = <span class="number">2</span>*x*x<span class="number">-1</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> flag = <span class="number">1</span>, m = <span class="number">2</span>*x<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">int</span> a = <span class="number">0</span>, b = m;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;a; j++) <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;b; j++) <span class="built_in">printf</span>(<span class="string">"%c"</span>, c);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">        <span class="keyword">if</span>(i==x) flag = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(flag)</span><br><span class="line">            a++, b-=<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            a--, b+=<span class="number">2</span>;        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, n-num);</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1028 人口普查</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1028%20%E4%BA%BA%E5%8F%A3%E6%99%AE%E6%9F%A5/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:01 GMT+0800 (GMT+08:00) --><h1 id="人口普查-PATB-1028"><a href="#人口普查-PATB-1028" class="headerlink" title="人口普查 (PATB-1028)"></a>人口普查 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805293282607104" target="_blank" rel="noopener">PATB-1028</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>某城镇进行人口普查，得到了全体居民的生日。现请你写个程序，找出镇上最年长和最年轻的人。</p><p>这里确保每个输入的日期都是合法的，但不一定是合理的——假设已知镇上没有超过 200 岁的老人，而今天是 2014 年 9 月 6 日，所以超过 200 岁的生日和未出生的生日都是不合理的，应该被过滤掉。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在第一行给出正整数 N，取值在(0,105]；随后 N 行，每行给出 1 个人的姓名（由不超过 5 个英文字母组成的字符串）、以及按 <code>yyyy/mm/dd</code>（即年/月/日）格式给出的生日。题目保证最年长和最年轻的人没有并列。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>在一行中顺序输出有效生日的个数、最年长人和最年轻人的姓名，其间以空格分隔。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">5</span><br><span class="line">John 2001&#x2F;05&#x2F;12</span><br><span class="line">Tom 1814&#x2F;09&#x2F;06</span><br><span class="line">Ann 2121&#x2F;01&#x2F;30</span><br><span class="line">James 1814&#x2F;09&#x2F;05</span><br><span class="line">Steve 1967&#x2F;11&#x2F;20</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3 Tom John</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">P</span>&#123;</span></span><br><span class="line">    <span class="keyword">char</span> s[<span class="number">15</span>], t[<span class="number">15</span>];</span><br><span class="line">&#125;tmp, mx, mi;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s %s"</span>, tmp.s, tmp.t);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">strcmp</span>(tmp.t, <span class="string">"1814/09/06"</span>) &lt; <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">strcmp</span>(tmp.t, <span class="string">"2014/09/06"</span>) &gt; <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        num++;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(num==<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">strcpy</span>(mi.s, tmp.s); <span class="built_in">strcpy</span>(mi.t, tmp.t);</span><br><span class="line">            <span class="built_in">strcpy</span>(mx.s, tmp.s); <span class="built_in">strcpy</span>(mx.t, tmp.t);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">strcmp</span>(tmp.t, mi.t) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="built_in">strcpy</span>(mi.s, tmp.s); <span class="built_in">strcpy</span>(mi.t, tmp.t);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">strcmp</span>(tmp.t, mx.t) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="built_in">strcpy</span>(mx.s, tmp.s); <span class="built_in">strcpy</span>(mx.t, tmp.t);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(num)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d %s %s\n"</span>, num, mi.s, mx.s);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"0\n"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1029 旧键盘</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1029%20%E6%97%A7%E9%94%AE%E7%9B%98/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:01 GMT+0800 (GMT+08:00) --><h1 id="旧键盘-PATB-1029"><a href="#旧键盘-PATB-1029" class="headerlink" title="旧键盘 (PATB-1029)"></a>旧键盘 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805292322111488" target="_blank" rel="noopener">PATB-1029</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>旧键盘上坏了几个键，于是在敲一段文字的时候，对应的字符就不会出现。现在给出应该输入的一段文字、以及实际被输入的文字，请你列出肯定坏掉的那些键。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在 2 行中分别给出应该输入的文字、以及实际被输入的文字。每段文字是不超过 80 个字符的串，由字母 A-Z（包括大、小写）、数字 0-9、以及下划线 <code>_</code>（代表空格）组成。题目保证 2 个字符串均非空。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>按照发现顺序，在一行中输出坏掉的键。其中英文字母只输出大写，每个坏键只输出一次。题目保证至少有 1 个坏键。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">7_This_is_a_test</span><br><span class="line">_hs_s_a_es</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">7TI</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">char</span> s[mxn], t[mxn];</span><br><span class="line"><span class="keyword">int</span> a[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s %s"</span>, s, t);</span><br><span class="line">    <span class="keyword">int</span> sl = <span class="built_in">strlen</span>(s);</span><br><span class="line">    <span class="keyword">int</span> tl = <span class="built_in">strlen</span>(t);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;tl; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">isalpha</span>(t[i]))</span><br><span class="line">            a[<span class="built_in">toupper</span>(t[i])]++;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            a[t[i]]++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;sl; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">isalpha</span>(s[i]))</span><br><span class="line">            s[i] = <span class="built_in">toupper</span>(s[i]);</span><br><span class="line">        <span class="keyword">if</span>(a[s[i]] == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%c"</span>, s[i]);</span><br><span class="line">            a[s[i]]++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1031 查验身份证</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1031%20%E6%9F%A5%E9%AA%8C%E8%BA%AB%E4%BB%BD%E8%AF%81/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:01 GMT+0800 (GMT+08:00) --><h1 id="查验身份证-PATB-1031"><a href="#查验身份证-PATB-1031" class="headerlink" title="查验身份证 (PATB-1031)"></a>查验身份证 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805290334011392" target="_blank" rel="noopener">PATB-1031</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>一个合法的身份证号码由17位地区、日期编号和顺序编号加1位校验码组成。校验码的计算规则如下：</p><p>首先对前17位数字加权求和，权重分配为：{7，9，10，5，8，4，2，1，6，3，7，9，10，5，8，4，2}；然后将计算的和对11取模得到值<code>Z</code>；最后按照以下关系对应<code>Z</code>值与校验码<code>M</code>的值：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Z：0 1 2 3 4 5 6 7 8 9 10</span><br><span class="line">M：1 0 X 9 8 7 6 5 4 3 2</span><br></pre></td></tr></table></figure><p>现在给定一些身份证号码，请你验证校验码的有效性，并输出有问题的号码。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入第一行给出正整数N（≤100）是输入的身份证号码的个数。随后N行，每行给出1个18位身份证号码。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>按照输入的顺序每行输出1个有问题的身份证号码。这里并不检验前17位是否合理，只检查前17位是否全为数字且最后1位校验码计算准确。如果所有号码都正常，则输出<code>All passed</code>。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">4</span><br><span class="line">320124198808240056</span><br><span class="line">12010X198901011234</span><br><span class="line">110108196711301866</span><br><span class="line">37070419881216001X</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">12010X198901011234</span><br><span class="line">110108196711301866</span><br><span class="line">37070419881216001X</span><br></pre></td></tr></table></figure><h2 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2</span><br><span class="line">320124198808240056</span><br><span class="line">110108196711301862</span><br></pre></td></tr></table></figure><h2 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">All passed</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> p[] = &#123;<span class="number">7</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">8</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">6</span>,<span class="number">3</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">8</span>,<span class="number">4</span>,<span class="number">2</span>&#125;;</span><br><span class="line"><span class="keyword">char</span> m[] = <span class="string">"10X98765432"</span>, s[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> cs = <span class="number">0</span>; cs&lt;n; cs++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>, s);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> z = <span class="number">0</span>, err = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">17</span>; i++)</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">isdigit</span>(s[i]))</span><br><span class="line">                z += (s[i]-<span class="string">'0'</span>) * p[i];</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                err = <span class="number">1</span>; <span class="keyword">break</span>;</span><br><span class="line">            &#125;           </span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!err &amp;&amp; s[<span class="number">17</span>] == m[z%<span class="number">11</span>])</span><br><span class="line">            ans++;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%s\n"</span>, s);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(ans == n)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"All passed\n"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1030 完美数列</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1030%20%E5%AE%8C%E7%BE%8E%E6%95%B0%E5%88%97/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:01 GMT+0800 (GMT+08:00) --><h1 id="完美数列-PATB-1030"><a href="#完美数列-PATB-1030" class="headerlink" title="完美数列 (PATB-1030)"></a>完美数列 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805291311284224" target="_blank" rel="noopener">PATB-1030</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>给定一个正整数数列，和正整数 p，设这个数列中的最大值是 M，最小值是 m，如果 M≤mp，则称这个数列是完美数列。</p><p>现在给定参数 p 和一些正整数，请你从中选择尽可能多的数构成一个完美数列</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入第一行给出两个正整数 N 和 p，其中 N（≤10^5）是输入的正整数的个数，p（≤10^9）是给定的参数。第二行给出 N 个正整数，每个数不超过 10^9。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>在一行中输出最多可以选择多少个数可以用它们组成一个完美数列。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">10 8</span><br><span class="line">2 3 20 4 5 1 6 7 8 9</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">8</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line">LL a[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, p;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;n, &amp;p);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld"</span>, &amp;a[i]);</span><br><span class="line">    sort(a, a+n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> count = ans - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i+count; j&lt;n; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(a[j] &lt;= p*a[i])</span><br><span class="line">                count++;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        ans = max(ans, count);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(i+count &gt; n)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1032 挖掘机技术哪家强</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1032%20%E6%8C%96%E6%8E%98%E6%9C%BA%E6%8A%80%E6%9C%AF%E5%93%AA%E5%AE%B6%E5%BC%BA/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:01 GMT+0800 (GMT+08:00) --><h1 id="挖掘机技术哪家强-PATB-1032"><a href="#挖掘机技术哪家强-PATB-1032" class="headerlink" title="挖掘机技术哪家强 (PATB-1032)"></a>挖掘机技术哪家强 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805289432236032" target="_blank" rel="noopener">PATB-1032</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>为了用事实说明挖掘机技术到底哪家强，PAT 组织了一场挖掘机技能大赛。现请你根据比赛结果统计出技术最强的那个学校。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在第 1 行给出不超过 10^5 的正整数 N，即参赛人数。随后 N 行，每行给出一位参赛者的信息和成绩，包括其所代表的学校的编号（从 1 开始连续编号）、及其比赛成绩（百分制），中间以空格分隔。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>在一行中给出总得分最高的学校的编号、及其总分，中间以空格分隔。题目保证答案唯一，没有并列。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">6</span><br><span class="line">3 65</span><br><span class="line">2 80</span><br><span class="line">1 100</span><br><span class="line">2 70</span><br><span class="line">3 40</span><br><span class="line">3 0</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2 150</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> a[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> num = <span class="number">0</span>, x, y;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;x, &amp;y);</span><br><span class="line">        a[x] += y;</span><br><span class="line">        num = max(num, x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mx = <span class="number">0</span>, id = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=num; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i]&gt;mx) &#123;</span><br><span class="line">            mx = a[i];</span><br><span class="line">            id = i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>, id, a[id]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1033 旧键盘打字</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1033%20%E6%97%A7%E9%94%AE%E7%9B%98%E6%89%93%E5%AD%97/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:01 GMT+0800 (GMT+08:00) --><h1 id="旧键盘打字-PATB-1033"><a href="#旧键盘打字-PATB-1033" class="headerlink" title="旧键盘打字 (PATB-1033)"></a>旧键盘打字 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805288530460672" target="_blank" rel="noopener">PATB-1033</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>旧键盘上坏了几个键，于是在敲一段文字的时候，对应的字符就不会出现。现在给出应该输入的一段文字、以及坏掉的那些键，打出的结果文字会是怎样？</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在 2 行中分别给出坏掉的那些键、以及应该输入的文字。其中对应英文字母的坏键以大写给出；每段文字是不超过 10^5 个字符的串。可用的字符包括字母 [<code>a</code>-<code>z</code>, <code>A</code>-<code>Z</code>]、数字 <code>0</code>-<code>9</code>、以及下划线 <code>_</code>（代表空格）、<code>,</code>、<code>.</code>、<code>-</code>、<code>+</code>（代表上档键）。题目保证第 2 行输入的文字串非空。</p><p>注意：如果上档键坏掉了，那么大写的英文字母无法被打出。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>在一行中输出能够被打出的结果文字。如果没有一个字符能被打出，则输出空行。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">7+IE.</span><br><span class="line">7_This_is_a_test.</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">_hs_s_a_tst</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> a[mxn];</span><br><span class="line"><span class="keyword">char</span> s[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    fgets(s, mxn, <span class="built_in">stdin</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; s[i]; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">isalpha</span>(s[i]))&#123;</span><br><span class="line">            a[<span class="built_in">toupper</span>(s[i])]++;</span><br><span class="line">            a[<span class="built_in">tolower</span>(s[i])]++;</span><br><span class="line">        &#125;<span class="keyword">else</span></span><br><span class="line">            a[s[i]]++;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    fgets(s, mxn, <span class="built_in">stdin</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; s[i]; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[s[i]])</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">isupper</span>(s[i]) &amp;&amp; a[<span class="string">'+'</span>])</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%c"</span>, s[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1034 有理数四则运算</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1034%20%E6%9C%89%E7%90%86%E6%95%B0%E5%9B%9B%E5%88%99%E8%BF%90%E7%AE%97/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:01 GMT+0800 (GMT+08:00) --><h1 id="有理数四则运算-PATB-1034"><a href="#有理数四则运算-PATB-1034" class="headerlink" title="有理数四则运算 (PATB-1034)"></a>有理数四则运算 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805287624491008" target="_blank" rel="noopener">PATB-1034</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>本题要求编写程序，计算 2 个有理数的和、差、积、商。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在一行中按照 <code>a1/b1 a2/b2</code> 的格式给出两个分数形式的有理数，其中分子和分母全是整型范围内的整数，负号只可能出现在分子前，分母不为 0。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>分别在 4 行中按照 <code>有理数1 运算符 有理数2 = 结果</code> 的格式顺序输出 2 个有理数的和、差、积、商。注意输出的每个有理数必须是该有理数的最简形式 <code>k a/b</code>，其中 <code>k</code> 是整数部分，<code>a/b</code> 是最简分数部分；若为负数，则须加括号；若除法分母为 0，则输出 <code>Inf</code>。题目保证正确的输出中没有超过整型范围的整数。</p></blockquote><h2 id="样例输入1"><a href="#样例输入1" class="headerlink" title="样例输入1"></a>样例输入1</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2&#x2F;3 -4&#x2F;2</span><br></pre></td></tr></table></figure><h2 id="样例输出1"><a href="#样例输出1" class="headerlink" title="样例输出1"></a>样例输出1</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2&#x2F;3 + (-2) &#x3D; (-1 1&#x2F;3)</span><br><span class="line">2&#x2F;3 - (-2) &#x3D; 2 2&#x2F;3</span><br><span class="line">2&#x2F;3 * (-2) &#x3D; (-1 1&#x2F;3)</span><br><span class="line">2&#x2F;3 &#x2F; (-2) &#x3D; (-1&#x2F;3)</span><br></pre></td></tr></table></figure><h2 id="样例输入2"><a href="#样例输入2" class="headerlink" title="样例输入2"></a>样例输入2</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">5&#x2F;3 0&#x2F;6</span><br></pre></td></tr></table></figure><h2 id="样例输出2"><a href="#样例输出2" class="headerlink" title="样例输出2"></a>样例输出2</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1 2&#x2F;3 + 0 &#x3D; 1 2&#x2F;3</span><br><span class="line">1 2&#x2F;3 - 0 &#x3D; 1 2&#x2F;3</span><br><span class="line">1 2&#x2F;3 * 0 &#x3D; 0</span><br><span class="line">1 2&#x2F;3 &#x2F; 0 &#x3D; Inf</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">double</span> DB;</span><br><span class="line"><span class="keyword">const</span> DB eps = <span class="number">1e-8</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Sg(u) ((u) &gt; eps ? 1 : ((u) &lt; -eps ? -1 : 0))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Abs(u) (Sg(u) &gt;= 0 ? (u) : -(u))</span></span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">gcd</span><span class="params">(LL a, LL b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> b ? gcd(b, a%b) : a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(LL x, LL y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!x || !y)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%s"</span>, x ? <span class="string">"Inf"</span> : <span class="string">"0"</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> flag = Sg(Sg(x)*Sg(y));</span><br><span class="line">    x = Abs(x) * flag;</span><br><span class="line">    y = Abs(y);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(flag&lt;<span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">"("</span>);</span><br><span class="line">    <span class="keyword">if</span>(x/y)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld"</span>, x/y);</span><br><span class="line">    <span class="keyword">if</span>(x%y) &#123;</span><br><span class="line">        LL t = Abs(gcd(x, y));</span><br><span class="line">        <span class="keyword">if</span>(x/y)&#123;</span><br><span class="line">            x = Abs(x%y);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">        &#125;        </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld/%lld"</span>, x/t, y/t);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(flag&lt;<span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">")"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LL x1, x2, y1, y2;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld/%lld %lld/%lld"</span>, &amp;x1, &amp;x2, &amp;y1, &amp;y2);</span><br><span class="line"></span><br><span class="line">    print(x1, x2); <span class="built_in">printf</span>(<span class="string">" + "</span>); print(y1, y2); <span class="built_in">printf</span>(<span class="string">" = "</span>);</span><br><span class="line">    print(x1*y2+x2*y1, x2*y2); <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"></span><br><span class="line">    print(x1, x2); <span class="built_in">printf</span>(<span class="string">" - "</span>); print(y1, y2); <span class="built_in">printf</span>(<span class="string">" = "</span>);</span><br><span class="line">    print(x1*y2-x2*y1, x2*y2); <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"></span><br><span class="line">    print(x1, x2); <span class="built_in">printf</span>(<span class="string">" * "</span>); print(y1, y2); <span class="built_in">printf</span>(<span class="string">" = "</span>);</span><br><span class="line">    print(x1*y1, x2*y2); <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"></span><br><span class="line">    print(x1, x2); <span class="built_in">printf</span>(<span class="string">" / "</span>); print(y1, y2); <span class="built_in">printf</span>(<span class="string">" = "</span>);</span><br><span class="line">    print(x1*y2, x2*y1); <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1035 插入与归并</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1035%20%E6%8F%92%E5%85%A5%E4%B8%8E%E5%BD%92%E5%B9%B6/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:01 GMT+0800 (GMT+08:00) --><h1 id="插入与归并-PATB-1035"><a href="#插入与归并-PATB-1035" class="headerlink" title="插入与归并 (PATB-1035)"></a>插入与归并 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805286714327040" target="_blank" rel="noopener">PATB-1035</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>根据维基百科的定义：</p><p><strong>插入排序</strong>是迭代算法，逐一获得输入数据，逐步产生有序的输出序列。每步迭代中，算法从输入序列中取出一元素，将之插入有序序列中正确的位置。如此迭代直到全部元素有序。</p><p><strong>归并排序</strong>进行如下迭代操作：首先将原始序列看成 N 个只包含 1 个元素的有序子序列，然后每次迭代归并两个相邻的有序子序列，直到最后只剩下 1 个有序的序列。</p><p>现给定原始序列和由某排序算法产生的中间序列，请你判断该算法究竟是哪种排序算法？</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在第一行给出正整数 N (≤100)；随后一行给出原始序列的 N 个整数；最后一行给出由某排序算法产生的中间序列。这里假设排序的目标序列是升序。数字间以空格分隔。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>首先在第 1 行中输出<code>Insertion Sort</code>表示插入排序、或<code>Merge Sort</code>表示归并排序；然后在第 2 行中输出用该排序算法再迭代一轮的结果序列。题目保证每组测试的结果是唯一的。数字间以空格分隔，且行首尾不得有多余空格。</p></blockquote><h2 id="样例输入1"><a href="#样例输入1" class="headerlink" title="样例输入1"></a>样例输入1</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">10</span><br><span class="line">3 1 2 8 7 5 9 4 6 0</span><br><span class="line">1 2 3 7 8 5 9 4 6 0</span><br></pre></td></tr></table></figure><h2 id="样例输出1"><a href="#样例输出1" class="headerlink" title="样例输出1"></a>样例输出1</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Insertion Sort</span><br><span class="line">1 2 3 5 7 8 9 4 6 0</span><br></pre></td></tr></table></figure><h2 id="样例输入2"><a href="#样例输入2" class="headerlink" title="样例输入2"></a>样例输入2</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">10</span><br><span class="line">3 1 2 8 7 5 9 4 0 6</span><br><span class="line">1 3 2 8 5 7 4 9 0 6</span><br></pre></td></tr></table></figure><h2 id="样例输出2"><a href="#样例输出2" class="headerlink" title="样例输出2"></a>样例输出2</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Merge Sort</span><br><span class="line">1 2 3 8 4 5 7 9 0 6</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> a[mxn], b[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;b[i]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> x = <span class="number">1</span>, flag = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(x&lt;n &amp; b[x<span class="number">-1</span>]&lt;=b[x]) x++;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=x; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i] != b[i])&#123;</span><br><span class="line">            flag = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(flag)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Insertion Sort\n"</span>);</span><br><span class="line">        sort(a, a+x+<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(i) <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d"</span>, a[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Merge Sort\n"</span>);</span><br><span class="line">    <span class="keyword">int</span> k = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        flag = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i]!=b[i])&#123;</span><br><span class="line">                flag = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        k *= <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n/k; i++)</span><br><span class="line">            sort(a+i*k, a+i*k+k);</span><br><span class="line">        sort(a+n/k*k, a+n);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(flag) <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(i) <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d"</span>, a[i]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1036 跟奥巴马一起编程</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1036%20%E8%B7%9F%E5%A5%A5%E5%B7%B4%E9%A9%AC%E4%B8%80%E8%B5%B7%E7%BC%96%E7%A8%8B/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:01 GMT+0800 (GMT+08:00) --><h1 id="跟奥巴马一起编程-PATB-1036"><a href="#跟奥巴马一起编程-PATB-1036" class="headerlink" title="跟奥巴马一起编程 (PATB-1036)"></a>跟奥巴马一起编程 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805285812551680" target="_blank" rel="noopener">PATB-1036</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>美国总统奥巴马不仅呼吁所有人都学习编程，甚至以身作则编写代码，成为美国历史上首位编写计算机代码的总统。2014 年底，为庆祝“计算机科学教育周”正式启动，奥巴马编写了很简单的计算机代码：在屏幕上画一个正方形。现在你也跟他一起画吧！</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在一行中给出正方形边长 N（3≤N≤20）和组成正方形边的某种字符 C，间隔一个空格。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>输出由给定字符 C 画出的正方形。但是注意到行间距比列间距大，所以为了让结果看上去更像正方形，我们输出的行数实际上是列数的 50%（四舍五入取整）。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">10 a</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">aaaaaaaaaa</span><br><span class="line">a        a</span><br><span class="line">a        a</span><br><span class="line">a        a</span><br><span class="line">aaaaaaaaaa</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n; <span class="keyword">char</span> c;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %c"</span>, &amp;n, &amp;c);</span><br><span class="line">    <span class="keyword">int</span> m = round(n*<span class="number">0.5</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;n; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(i==<span class="number">0</span> || i==m<span class="number">-1</span>)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%c"</span>, c);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(j==<span class="number">0</span> || j==n<span class="number">-1</span>)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%c"</span>, c);</span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1037 在霍格沃茨找零钱</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1037%20%E5%9C%A8%E9%9C%8D%E6%A0%BC%E6%B2%83%E8%8C%A8%E6%89%BE%E9%9B%B6%E9%92%B1/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:01 GMT+0800 (GMT+08:00) --><h1 id="在霍格沃茨找零钱-PATB-1037"><a href="#在霍格沃茨找零钱-PATB-1037" class="headerlink" title="在霍格沃茨找零钱 (PATB-1037)"></a>在霍格沃茨找零钱 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805284923359232" target="_blank" rel="noopener">PATB-1037</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>如果你是哈利·波特迷，你会知道魔法世界有它自己的货币系统 —— 就如海格告诉哈利的：“十七个银西可(Sickle)兑一个加隆(Galleon)，二十九个纳特(Knut)兑一个西可，很容易。”现在，给定哈利应付的价钱 P 和他实付的钱 A，你的任务是写一个程序来计算他应该被找的零钱。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在 1 行中分别给出 P 和 A，格式为 <code>Galleon.Sickle.Knut</code>，其间用 1 个空格分隔。这里 <code>Galleon</code> 是 [0, 107] 区间内的整数，<code>Sickle</code> 是 [0, 17) 区间内的整数，<code>Knut</code> 是 [0, 29) 区间内的整数。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>在一行中用与输入同样的格式输出哈利应该被找的零钱。如果他没带够钱，那么输出的应该是负数。</p></blockquote><h2 id="样例输入1"><a href="#样例输入1" class="headerlink" title="样例输入1"></a>样例输入1</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">10.16.27 14.1.28</span><br></pre></td></tr></table></figure><h2 id="样例输出1"><a href="#样例输出1" class="headerlink" title="样例输出1"></a>样例输出1</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3.2.1</span><br></pre></td></tr></table></figure><h2 id="样例输入2"><a href="#样例输入2" class="headerlink" title="样例输入2"></a>样例输入2</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">14.1.28 10.16.27</span><br></pre></td></tr></table></figure><h2 id="样例输出2"><a href="#样例输出2" class="headerlink" title="样例输出2"></a>样例输出2</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-3.2.1</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Sg(u) ((u) &gt; eps ? 1 : ((u) &lt; -eps ? -1 : 0))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Abs(u) (Sg(u) &gt;= 0 ? (u) : -(u))</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LL ag, as, ak, bg, bs, bk; </span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld.%lld.%lld"</span>, &amp;ag, &amp;as, &amp;ak);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld.%lld.%lld"</span>, &amp;bg, &amp;bs, &amp;bk);</span><br><span class="line">    </span><br><span class="line">    LL a = ag * <span class="number">493</span> + as * <span class="number">29</span> + ak;</span><br><span class="line">    LL b = bg * <span class="number">493</span> + bs * <span class="number">29</span> + bk;</span><br><span class="line">    LL c = Abs(b - a);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(Sg(b - a) &lt; <span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">"-"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld.%lld.%lld\n"</span>, c/<span class="number">493</span>, c/<span class="number">29</span>%<span class="number">17</span>, c%<span class="number">29</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1038 统计同成绩学生</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1038%20%E7%BB%9F%E8%AE%A1%E5%90%8C%E6%88%90%E7%BB%A9%E5%AD%A6%E7%94%9F/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:01 GMT+0800 (GMT+08:00) --><h1 id="统计同成绩学生-PATB-1038"><a href="#统计同成绩学生-PATB-1038" class="headerlink" title="统计同成绩学生 (PATB-1038)"></a>统计同成绩学生 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805284092887040" target="_blank" rel="noopener">PATB-1038</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>本题要求读入 N 名学生的成绩，将获得某一给定分数的学生人数输出。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在第 1 行给出不超过 10^5 的正整数 N，即学生总人数。随后一行给出 N 名学生的百分制整数成绩，中间以空格分隔。最后一行给出要查询的分数个数 K（不超过 N 的正整数），随后是 K 个分数，中间以空格分隔。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>在一行中按查询顺序给出得分等于指定分数的学生人数，中间以空格分隔，但行末不得有多余空格。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">10</span><br><span class="line">60 75 90 55 75 99 82 90 75 50</span><br><span class="line">3 75 90 88</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3 2 0</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> a[mxn], b[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]);</span><br><span class="line">        b[a[i]]++;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> k, t; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;k);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;k; i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;t);</span><br><span class="line">        <span class="keyword">if</span>(i) <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d"</span>, b[t]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1040 有几个PAT</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1040%20%E6%9C%89%E5%87%A0%E4%B8%AAPAT/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:01 GMT+0800 (GMT+08:00) --><h1 id="有几个PAT-PATB-1040"><a href="#有几个PAT-PATB-1040" class="headerlink" title="有几个PAT (PATB-1040)"></a>有几个PAT (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805282389999616" target="_blank" rel="noopener">PATB-1040</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>字符串 <code>APPAPT</code> 中包含了两个单词 <code>PAT</code>，其中第一个 <code>PAT</code> 是第 2 位(<code>P</code>)，第 4 位(<code>A</code>)，第 6 位(<code>T</code>)；第二个 <code>PAT</code> 是第 3 位(<code>P</code>)，第 4 位(<code>A</code>)，第 6 位(<code>T</code>)。</p><p>现给定字符串，问一共可以形成多少个 <code>PAT</code>？</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入只有一行，包含一个字符串，长度不超过105，只包含 <code>P</code>、<code>A</code>、<code>T</code> 三种字母。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>在一行中输出给定字符串中包含多少个 <code>PAT</code>。由于结果可能比较大，只输出对 1000000007 取余数的结果。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">APPAPT</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">char</span> s[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>, s);</span><br><span class="line">    <span class="keyword">int</span> sl = <span class="built_in">strlen</span>(s);</span><br><span class="line"></span><br><span class="line">    LL p=<span class="number">0</span>, a=<span class="number">0</span>, t=<span class="number">0</span>, mod=<span class="number">1000000007</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;sl; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(s[i]==<span class="string">'P'</span>)</span><br><span class="line">            p++;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(s[i]==<span class="string">'A'</span>)</span><br><span class="line">            a += p;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(s[i]==<span class="string">'T'</span>)</span><br><span class="line">            t += a;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, t%mod);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1039 到底买不买</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1039%20%E5%88%B0%E5%BA%95%E4%B9%B0%E4%B8%8D%E4%B9%B0/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:01 GMT+0800 (GMT+08:00) --><h1 id="到底买不买-PATB-1039"><a href="#到底买不买-PATB-1039" class="headerlink" title="到底买不买 (PATB-1039)"></a>到底买不买 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805283241443328" target="_blank" rel="noopener">PATB-1039</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>小红想买些珠子做一串自己喜欢的珠串。卖珠子的摊主有很多串五颜六色的珠串，但是不肯把任何一串拆散了卖。于是小红要你帮忙判断一下，某串珠子里是否包含了全部自己想要的珠子？如果是，那么告诉她有多少多余的珠子；如果不是，那么告诉她缺了多少珠子。</p><p>为方便起见，我们用[0-9]、[a-z]、[A-Z]范围内的字符来表示颜色。例如在图1中，第3串是小红想做的珠串；那么第1串可以买，因为包含了全部她想要的珠子，还多了8颗不需要的珠子；第2串不能买，因为没有黑色珠子，并且少了一颗红色的珠子。</p><p><img src="https://images.ptausercontent.com/b7e2ffa6-8819-436d-ad79-a41263abe914.jpg" alt="figbuy.jpg"></p><p>图 1</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>每个输入包含 1 个测试用例。每个测试用例分别在 2 行中先后给出摊主的珠串和小红想做的珠串，两串都不超过 1000 个珠子。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>如果可以买，则在一行中输出 <code>Yes</code> 以及有多少多余的珠子；如果不可以买，则在一行中输出 <code>No</code> 以及缺了多少珠子。其间以 1 个空格分隔。</p></blockquote><h2 id="样例输入1"><a href="#样例输入1" class="headerlink" title="样例输入1"></a>样例输入1</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ppRYYGrrYBR2258</span><br><span class="line">YrR8RrY</span><br></pre></td></tr></table></figure><h2 id="样例输出1"><a href="#样例输出1" class="headerlink" title="样例输出1"></a>样例输出1</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Yes 8</span><br></pre></td></tr></table></figure><h2 id="样例输入2"><a href="#样例输入2" class="headerlink" title="样例输入2"></a>样例输入2</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ppRYYGrrYB225</span><br><span class="line">YrR8RrY</span><br></pre></td></tr></table></figure><h2 id="样例输出2"><a href="#样例输出2" class="headerlink" title="样例输出2"></a>样例输出2</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">No 2</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">char</span> s[mxn], t[mxn];</span><br><span class="line"><span class="keyword">int</span> a[mxn], b[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s %s"</span>, s, t);</span><br><span class="line">    <span class="keyword">int</span> sl = <span class="built_in">strlen</span>(s), tl = <span class="built_in">strlen</span>(t);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;sl; i++)</span><br><span class="line">        a[s[i]]++;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;tl; i++)</span><br><span class="line">        b[t[i]]++;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> sa = <span class="number">0</span>, sb = <span class="number">0</span>;    </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">256</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        sa += a[i]-b[i] &gt; <span class="number">0</span> ? a[i]-b[i] : <span class="number">0</span>;</span><br><span class="line">        sb += b[i]-a[i] &gt; <span class="number">0</span> ? b[i]-a[i] : <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(sb)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"No %d\n"</span>, sb);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Yes %d\n"</span>, sa);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1041 考试座位号</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1041%20%E8%80%83%E8%AF%95%E5%BA%A7%E4%BD%8D%E5%8F%B7/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:01 GMT+0800 (GMT+08:00) --><h1 id="考试座位号-PATB-1041"><a href="#考试座位号-PATB-1041" class="headerlink" title="考试座位号 (PATB-1041)"></a>考试座位号 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805281567916032" target="_blank" rel="noopener">PATB-1041</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>每个 PAT 考生在参加考试时都会被分配两个座位号，一个是试机座位，一个是考试座位。正常情况下，考生在入场时先得到试机座位号码，入座进入试机状态后，系统会显示该考生的考试座位号码，考试时考生需要换到考试座位就座。但有些考生迟到了，试机已经结束，他们只能拿着领到的试机座位号码求助于你，从后台查出他们的考试座位号码。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入第一行给出一个正整数 N（≤1000），随后 N 行，每行给出一个考生的信息：<code>准考证号 试机座位号 考试座位号</code>。其中<code>准考证号</code>由 16 位数字组成，座位从 1 到 N 编号。输入保证每个人的准考证号都不同，并且任何时候都不会把两个人分配到同一个座位上。</p><p>考生信息之后，给出一个正整数 M（≤N），随后一行中给出 M 个待查询的试机座位号码，以空格分隔。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>对应每个需要查询的试机座位号码，在一行中输出对应考生的准考证号和考试座位号码，中间用 1 个空格分隔。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">4</span><br><span class="line">3310120150912233 2 4</span><br><span class="line">3310120150912119 4 1</span><br><span class="line">3310120150912126 1 3</span><br><span class="line">3310120150912002 3 2</span><br><span class="line">2</span><br><span class="line">3 4</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3310120150912002 2</span><br><span class="line">3310120150912119 1</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">P</span>&#123;</span></span><br><span class="line">    <span class="keyword">char</span> s[<span class="number">20</span>];</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, m;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">map</span>&lt;<span class="keyword">int</span>, P&gt; mmp;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x; P y;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s %d %d"</span>, y.s, &amp;x, &amp;y.t);</span><br><span class="line">        mmp[x] = y;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;x);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%s %d\n"</span>, mmp[x].s, mmp[x].t);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1042 字符统计</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1042%20%E5%AD%97%E7%AC%A6%E7%BB%9F%E8%AE%A1/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:01 GMT+0800 (GMT+08:00) --><h1 id="字符统计-PATB-1042"><a href="#字符统计-PATB-1042" class="headerlink" title="字符统计 (PATB-1042)"></a>字符统计 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805280817135616" target="_blank" rel="noopener">PATB-1042</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>请编写程序，找出一段给定文字中出现最频繁的那个英文字母。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在一行中给出一个长度不超过 1000 的字符串。字符串由 ASCII 码表中任意可见字符及空格组成，至少包含 1 个英文字母，以回车结束（回车不算在内）。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>在一行中输出出现频率最高的那个英文字母及其出现次数，其间以空格分隔。如果有并列，则输出按字母序最小的那个字母。统计时不区分大小写，输出小写字母。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">This is a simple TEST.  There ARE numbers and other symbols 1&amp;2&amp;3...........</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">e 7</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">char</span> s[mxn];</span><br><span class="line"><span class="keyword">int</span> t[<span class="number">26</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    fgets(s, mxn, <span class="built_in">stdin</span>);</span><br><span class="line">    <span class="keyword">int</span> sl = <span class="built_in">strlen</span>(s);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;sl; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">isalpha</span>(s[i]))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">isupper</span>(s[i]))</span><br><span class="line">                s[i] = <span class="built_in">tolower</span>(s[i]);</span><br><span class="line">            t[s[i]-<span class="string">'a'</span>]++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mx = <span class="number">0</span>, id = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">26</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(mx &lt; t[i])</span><br><span class="line">        &#123;</span><br><span class="line">            mx = t[i];</span><br><span class="line">            id = i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%c %d\n"</span>, id+<span class="string">'a'</span>, mx);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1043 输出PATest</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1043%20%E8%BE%93%E5%87%BAPATest/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:01 GMT+0800 (GMT+08:00) --><h1 id="输出PATest-PATB-1043"><a href="#输出PATest-PATB-1043" class="headerlink" title="输出PATest (PATB-1043)"></a>输出PATest (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805280074743808" target="_blank" rel="noopener">PATB-1043</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>给定一个长度不超过 10^4 的、仅由英文字母构成的字符串。请将字符重新调整顺序，按 <code>PATestPATest....</code> 这样的顺序输出，并忽略其它字符。当然，六种字符的个数不一定是一样多的，若某种字符已经输出完，则余下的字符仍按 PATest 的顺序打印，直到所有字符都被输出。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在一行中给出一个长度不超过 10^4 的、仅由英文字母构成的非空字符串。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>在一行中按题目要求输出排序后的字符串。题目保证输出非空。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">redlesPayBestPATTopTeePHPereatitAPPT</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">PATestPATestPTetPTePePee</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">char</span> s[mxn], t[]=<span class="string">"PATest"</span>;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">7</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>, s);</span><br><span class="line">    <span class="keyword">int</span> sl = <span class="built_in">strlen</span>(s);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;sl; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">strchr</span>(t, s[i]) != <span class="literal">NULL</span>)</span><br><span class="line">            a[<span class="built_in">strchr</span>(t, s[i])-t]++;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">6</span>; i++)</span><br><span class="line">        sum += a[i];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(sum)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">6</span>; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i])&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%c"</span>, t[i]);</span><br><span class="line">                a[i]--; sum--;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1044 火星数字</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1044%20%E7%81%AB%E6%98%9F%E6%95%B0%E5%AD%97/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:01 GMT+0800 (GMT+08:00) --><h1 id="火星数字-PATB-1044"><a href="#火星数字-PATB-1044" class="headerlink" title="火星数字 (PATB-1044)"></a>火星数字 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805279328157696" target="_blank" rel="noopener">PATB-1044</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>火星人是以 13 进制计数的：</p><ul><li>地球人的 0 被火星人称为 tret。</li><li>地球人数字 1 到 12 的火星文分别为：jan, feb, mar, apr, may, jun, jly, aug, sep, oct, nov, dec。</li><li>火星人将进位以后的 12 个高位数字分别称为：tam, hel, maa, huh, tou, kes, hei, elo, syy, lok, mer, jou。</li></ul><p>例如地球人的数字 <code>29</code> 翻译成火星文就是 <code>hel mar</code>；而火星文 <code>elo nov</code> 对应地球数字 <code>115</code>。为了方便交流，请你编写程序实现地球和火星数字之间的互译。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入第一行给出一个正整数 N（&lt;100），随后 N 行，每行给出一个 [0, 169) 区间内的数字 —— 或者是地球文，或者是火星文。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>对应输入的每一行，在一行中输出翻译后的另一种语言的数字。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">4</span><br><span class="line">29</span><br><span class="line">5</span><br><span class="line">elo nov</span><br><span class="line">tam</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hel mar</span><br><span class="line">may</span><br><span class="line">115</span><br><span class="line">13</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> a[][<span class="number">5</span>] = &#123;</span><br><span class="line">    <span class="string">"tret"</span>, <span class="string">"jan"</span>, <span class="string">"feb"</span>, <span class="string">"mar"</span>, <span class="string">"apr"</span>, <span class="string">"may"</span>, <span class="string">"jun"</span>,</span><br><span class="line">    <span class="string">"jly"</span>, <span class="string">"aug"</span>, <span class="string">"sep"</span>, <span class="string">"oct"</span>, <span class="string">"nov"</span>, <span class="string">"dec"</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">char</span> b[][<span class="number">5</span>] = &#123;</span><br><span class="line">    <span class="string">"    "</span>, <span class="string">"tam"</span>, <span class="string">"hel"</span>, <span class="string">"maa"</span>, <span class="string">"huh"</span>, <span class="string">"tou"</span>, <span class="string">"kes"</span>,</span><br><span class="line">    <span class="string">"hei"</span>, <span class="string">"elo"</span>, <span class="string">"syy"</span>, <span class="string">"lok"</span>, <span class="string">"mer"</span>, <span class="string">"jou"</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">char</span> s[<span class="number">100</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n; <span class="built_in">scanf</span>(<span class="string">"%d%*c"</span>, &amp;n);</span><br><span class="line">    <span class="keyword">while</span>(n--)</span><br><span class="line">    &#123;</span><br><span class="line">        fgets(s, <span class="number">100</span>, <span class="built_in">stdin</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">isdigit</span>(s[<span class="number">0</span>]))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> t = <span class="number">0</span>; <span class="built_in">sscanf</span>(s, <span class="string">"%d"</span>, &amp;t);</span><br><span class="line">            <span class="keyword">if</span>(t/<span class="number">13</span>) <span class="built_in">printf</span>(<span class="string">"%s"</span>, b[t/<span class="number">13</span>]);</span><br><span class="line">            <span class="keyword">if</span>(t/<span class="number">13</span> &amp;&amp; t%<span class="number">13</span>) <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">            <span class="keyword">if</span>(t%<span class="number">13</span> || t==<span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">"%s"</span>, a[t%<span class="number">13</span>]);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"\n"</span>); <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">char</span> t1[<span class="number">10</span>], t2[<span class="number">10</span>];</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">strlen</span>(s) &gt; <span class="number">5</span>)</span><br><span class="line">            <span class="built_in">sscanf</span>(s, <span class="string">"%s %s"</span>, t1, t2);</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">sscanf</span>(s, <span class="string">"%s"</span>, t1); <span class="built_in">strcpy</span>(t2, t1);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">13</span>; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">strcmp</span>(a[i], t2) == <span class="number">0</span>)</span><br><span class="line">                ans += i;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">strcmp</span>(b[i], t1) == <span class="number">0</span>)</span><br><span class="line">                ans += i * <span class="number">13</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1045 快速排序</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1045%20%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:01 GMT+0800 (GMT+08:00) --><h1 id="快速排序-PATB-1045"><a href="#快速排序-PATB-1045" class="headerlink" title="快速排序 (PATB-1045)"></a>快速排序 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805278589960192" target="_blank" rel="noopener">PATB-1045</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>著名的快速排序算法里有一个经典的划分过程：我们通常采用某种方法取一个元素作为主元，通过交换，把比主元小的元素放到它的左边，比主元大的元素放到它的右边。 给定划分后的 N 个互不相同的正整数的排列，请问有多少个元素可能是划分前选取的主元？</p><p>例如给定 $N = 5$, 排列是1、3、2、4、5。则：</p><ul><li>1 的左边没有元素，右边的元素都比它大，所以它可能是主元；</li><li>尽管 3 的左边元素都比它小，但其右边的 2 比它小，所以它不能是主元；</li><li>尽管 2 的右边元素都比它大，但其左边的 3 比它大，所以它不能是主元；</li><li>类似原因，4 和 5 都可能是主元。</li></ul><p>因此，有 3 个元素可能是主元。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在第 1 行中给出一个正整数 N（≤105）； 第 2 行是空格分隔的 N 个不同的正整数，每个数不超过 10^9。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>在第 1 行中输出有可能是主元的元素个数；在第 2 行中按递增顺序输出这些元素，其间以 1 个空格分隔，行首尾不得有多余空格。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">5</span><br><span class="line">1 3 2 4 5</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3</span><br><span class="line">1 4 5</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> a[mxn], b[mxn];</span><br><span class="line"><span class="keyword">int</span> ans[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n; <span class="built_in">scanf</span>(<span class="string">"%d%"</span>, &amp;n);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]);</span><br><span class="line">        b[i] = a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    sort(b, b+n);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> mx = <span class="number">0</span>, num = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i]==b[i] &amp;&amp; b[i]&gt;mx)</span><br><span class="line">            ans[num++] = a[i];</span><br><span class="line">        mx = max(mx, a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, num);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;num; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(i) <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d"</span>, ans[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1046 划拳</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1046%20%E5%88%92%E6%8B%B3/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:01 GMT+0800 (GMT+08:00) --><h1 id="划拳-PATB-1046"><a href="#划拳-PATB-1046" class="headerlink" title="划拳 (PATB-1046)"></a>划拳 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805277847568384" target="_blank" rel="noopener">PATB-1046</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>划拳是古老中国酒文化的一个有趣的组成部分。酒桌上两人划拳的方法为：每人口中喊出一个数字，同时用手比划出一个数字。如果谁比划出的数字正好等于两人喊出的数字之和，谁就赢了，输家罚一杯酒。两人同赢或两人同输则继续下一轮，直到唯一的赢家出现。</p><p>下面给出甲、乙两人的划拳记录，请你统计他们最后分别喝了多少杯酒。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入第一行先给出一个正整数 N（≤100），随后 N 行，每行给出一轮划拳的记录，格式为：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">甲喊 甲划 乙喊 乙划</span><br></pre></td></tr></table></figure><p>其中<code>喊</code>是喊出的数字，<code>划</code>是划出的数字，均为不超过 100 的正整数（两只手一起划）。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>在一行中先后输出甲、乙两人喝酒的杯数，其间以一个空格分隔。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">5</span><br><span class="line">8 10 9 12</span><br><span class="line">5 10 5 10</span><br><span class="line">3 8 5 12</span><br><span class="line">12 18 1 13</span><br><span class="line">4 16 12 15</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1 2</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n; <span class="built_in">scanf</span>(<span class="string">"%d%"</span>, &amp;n);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> sa = <span class="number">0</span>, sb = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> a, b, c, d;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d %d %d"</span>, &amp;a, &amp;b, &amp;c, &amp;d);</span><br><span class="line">        <span class="keyword">if</span>(b == d) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">if</span>(b == a + c) sb++;</span><br><span class="line">        <span class="keyword">if</span>(d == a + c) sa++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>, sa, sb);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1047 编程团体赛</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1047%20%E7%BC%96%E7%A8%8B%E5%9B%A2%E4%BD%93%E8%B5%9B/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:01 GMT+0800 (GMT+08:00) --><h1 id="编程团体赛-PATB-1047"><a href="#编程团体赛-PATB-1047" class="headerlink" title="编程团体赛 (PATB-1047)"></a>编程团体赛 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805277163896832" target="_blank" rel="noopener">PATB-1047</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>编程团体赛的规则为：每个参赛队由若干队员组成；所有队员独立比赛；参赛队的成绩为所有队员的成绩和；成绩最高的队获胜。</p><p>现给定所有队员的比赛成绩，请你编写程序找出冠军队。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入第一行给出一个正整数 N（≤10^4），即所有参赛队员总数。随后 N 行，每行给出一位队员的成绩，格式为：<code>队伍编号-队员编号 成绩</code>，其中<code>队伍编号</code>为 1 到 1000 的正整数，<code>队员编号</code>为 1 到 10 的正整数，<code>成绩</code>为 0 到 100 的整数。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>在一行中输出冠军队的编号和总成绩，其间以一个空格分隔。注意：题目保证冠军队是唯一的。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">6</span><br><span class="line">3-10 99</span><br><span class="line">11-5 87</span><br><span class="line">102-1 0</span><br><span class="line">102-3 100</span><br><span class="line">11-9 89</span><br><span class="line">3-2 61</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">11 176</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> a[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n; <span class="built_in">scanf</span>(<span class="string">"%d%"</span>, &amp;n);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x, y, z;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d-%d %d"</span>, &amp;x, &amp;y, &amp;z);</span><br><span class="line">        a[x] += z;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mx = <span class="number">0</span>, id = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">1000</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(mx &lt; a[i])</span><br><span class="line">        &#123;</span><br><span class="line">            mx = a[i];</span><br><span class="line">            id = i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>, id, mx);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1048 数字加密</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1048%20%E6%95%B0%E5%AD%97%E5%8A%A0%E5%AF%86/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:01 GMT+0800 (GMT+08:00) --><h1 id="数字加密-PATB-1048"><a href="#数字加密-PATB-1048" class="headerlink" title="数字加密 (PATB-1048)"></a>数字加密 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805276438282240" target="_blank" rel="noopener">PATB-1048</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>本题要求实现一种数字加密方法。首先固定一个加密用正整数 A，对任一正整数 B，将其每 1 位数字与 A 的对应位置上的数字进行以下运算：对奇数位，对应位的数字相加后对 13 取余——这里用 J 代表 10、Q 代表 11、K 代表 12；对偶数位，用 B 的数字减去 A 的数字，若结果为负数，则再加 10。这里令个位为第 1 位。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在一行中依次给出 A 和 B，均为不超过 100 位的正整数，其间以空格分隔。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>在一行中输出加密后的结果。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1234567 368782971</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3695Q8118</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">char</span> s[mxn], t[mxn], ans[mxn];</span><br><span class="line"><span class="keyword">char</span> p[] = <span class="string">"0123456789JQK"</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s %s"</span>, s+<span class="number">1</span>, t+<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    s[<span class="number">0</span>] = t[<span class="number">0</span>] = <span class="string">'0'</span>;</span><br><span class="line">    <span class="keyword">int</span> n = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="built_in">strlen</span>(s+<span class="number">1</span>), j = <span class="built_in">strlen</span>(t+<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(i&gt;<span class="number">0</span> || j&gt;<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(f)</span><br><span class="line">            ans[n++] = p[(t[j]-<span class="string">'0'</span>+s[i]-<span class="string">'0'</span>)%<span class="number">13</span>];</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">int</span> x = t[j] - s[i];</span><br><span class="line">            ans[n++] = p[x&lt;<span class="number">0</span> ? x+<span class="number">10</span> : x];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(i) i--;</span><br><span class="line">        <span class="keyword">if</span>(j) j--;</span><br><span class="line">        f = !f;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=n<span class="number">-1</span>; i&gt;=<span class="number">0</span>; i--)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%c"</span>, ans[i]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1049 数列的片段和</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1049%20%E6%95%B0%E5%88%97%E7%9A%84%E7%89%87%E6%AE%B5%E5%92%8C/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:01 GMT+0800 (GMT+08:00) --><h1 id="数列的片段和-PATB-1049"><a href="#数列的片段和-PATB-1049" class="headerlink" title="数列的片段和 (PATB-1049)"></a>数列的片段和 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805275792359424" target="_blank" rel="noopener">PATB-1049</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>给定一个正数数列，我们可以从中截取任意的连续的几个数，称为片段。例如，给定数列 { 0.1, 0.2, 0.3, 0.4 }，我们有 (0.1) (0.1, 0.2) (0.1, 0.2, 0.3) (0.1, 0.2, 0.3, 0.4) (0.2) (0.2, 0.3) (0.2, 0.3, 0.4) (0.3) (0.3, 0.4) (0.4) 这 10 个片段。</p><p>给定正整数数列，求出全部片段包含的所有的数之和。如本例中 10 个片段总和是 0.1 + 0.3 + 0.6 + 1.0 + 0.2 + 0.5 + 0.9 + 0.3 + 0.7 + 0.4 = 5.0。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入第一行给出一个不超过 10^5 的正整数 N，表示数列中数的个数，第二行给出 N 个不超过 1.0 的正数，是数列中的数，其间以空格分隔。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>在一行中输出该序列所有片段包含的数之和，精确到小数点后 2 位。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">4</span><br><span class="line">0.1 0.2 0.3 0.4</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">5.00</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    </span><br><span class="line">    DB ans = <span class="number">0</span>, m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lf"</span>, &amp;m);</span><br><span class="line">        ans += m * (i+<span class="number">1</span>) * (n-i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%.2lf\n"</span>, ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1050 螺旋矩阵</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1050%20%E8%9E%BA%E6%97%8B%E7%9F%A9%E9%98%B5/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:01 GMT+0800 (GMT+08:00) --><h1 id="螺旋矩阵-PATB-1050"><a href="#螺旋矩阵-PATB-1050" class="headerlink" title="螺旋矩阵 (PATB-1050)"></a>螺旋矩阵 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805275146436608" target="_blank" rel="noopener">PATB-1050</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>本题要求将给定的 N 个正整数按非递增的顺序，填入“螺旋矩阵”。所谓“螺旋矩阵”，是指从左上角第 1 个格子开始，按顺时针螺旋方向填充。要求矩阵的规模为 m 行 n 列，满足条件：m×n 等于 N；m≥n；且 m−n 取所有可能值中的最小值。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在第 1 行中给出一个正整数 N，第 2 行给出 N 个待填充的正整数。所有数字不超过 10^4，相邻数字以空格分隔。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>输出螺旋矩阵。每行 n 个数字，共 m 行。相邻数字以 1 个空格分隔，行末不得有多余空格。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">12</span><br><span class="line">37 76 20 98 76 42 53 95 60 81 58 93</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">98 95 93</span><br><span class="line">42 37 81</span><br><span class="line">53 20 76</span><br><span class="line">58 60 76</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> a[mxn], ans[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;t);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> n, m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="built_in">sqrt</span>(t); i; i--)&#123;</span><br><span class="line">        <span class="keyword">if</span>(t%i == <span class="number">0</span>)&#123;</span><br><span class="line">            m = i;</span><br><span class="line">            n = t/m;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;t; i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]);</span><br><span class="line">    sort(a, a+t);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> x=<span class="number">0</span>, y=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(t--; t&gt;=<span class="number">0</span>;)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span>(y+<span class="number">1</span>&lt;m &amp;&amp; *(ans+x*m+y+<span class="number">1</span>) == <span class="number">0</span>)&#123;</span><br><span class="line">            ++y; *(ans+x*m+y) = a[t--];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(x+<span class="number">1</span>&lt;n &amp;&amp; *(ans+(x+<span class="number">1</span>)*m+y) == <span class="number">0</span>)&#123;</span><br><span class="line">            ++x; *(ans+x*m+y) = a[t--];</span><br><span class="line">        &#125;</span><br><span class="line">            </span><br><span class="line">        <span class="keyword">while</span>(y<span class="number">-1</span>&gt;=<span class="number">0</span> &amp;&amp; *(ans+x*m+y<span class="number">-1</span>) == <span class="number">0</span>)&#123;</span><br><span class="line">            --y; *(ans+x*m+y) = a[t--];</span><br><span class="line">        &#125;</span><br><span class="line">            </span><br><span class="line">        <span class="keyword">while</span>(x<span class="number">-1</span>&gt;=<span class="number">0</span> &amp;&amp; *(ans+(x<span class="number">-1</span>)*m+y) == <span class="number">0</span>)&#123;</span><br><span class="line">            --x; *(ans+x*m+y) = a[t--];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;m; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(j) <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d"</span>, *(ans+i*m+j));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1051 复数乘法</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1051%20%E5%A4%8D%E6%95%B0%E4%B9%98%E6%B3%95/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:01 GMT+0800 (GMT+08:00) --><h1 id="复数乘法-PATB-1051"><a href="#复数乘法-PATB-1051" class="headerlink" title="复数乘法 (PATB-1051)"></a>复数乘法 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805274496319488" target="_blank" rel="noopener">PATB-1051</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>复数可以写成 (A+Bi) 的常规形式，其中 A 是实部，B 是虚部，i 是虚数单位，满足 i^2=−1；也可以写成极坐标下的指数形式 (R×e^(Pi))，其中 R 是复数模，P 是辐角，i 是虚数单位，其等价于三角形式 R(cos(P)+isin(P))。</p><p>现给定两个复数的 R 和 P，要求输出两数乘积的常规形式。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在一行中依次给出两个复数的 R1, P1, R2, P2，数字间以空格分隔。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>在一行中按照 <code>A+Bi</code> 的格式输出两数乘积的常规形式，实部和虚部均保留 2 位小数。注意：如果 <code>B</code> 是负数，则应该写成 <code>A-|B|i</code> 的形式。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2.3 3.5 5.2 0.4</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-8.68-8.23i</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Sg(u) ((u) &gt; eps ? 1 : ((u) &lt; -eps ? -1 : 0))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Abs(u) (Sg(u) &gt;= 0 ? (u) : -(u))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Ze(u) (!Sg(u))</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">double</span> DB;</span><br><span class="line"><span class="keyword">const</span> DB eps = <span class="number">5e-3</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DB r1, p1, r2, p2;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lf %lf %lf %lf"</span>, &amp;r1, &amp;p1, &amp;r2, &amp;p2);</span><br><span class="line"></span><br><span class="line">    DB a = r1*<span class="built_in">cos</span>(p1) * r2*<span class="built_in">cos</span>(p2) - r1*<span class="built_in">sin</span>(p1) * r2*<span class="built_in">sin</span>(p2);</span><br><span class="line">    DB b = r1*<span class="built_in">cos</span>(p1) * r2*<span class="built_in">sin</span>(p2) + r2*<span class="built_in">cos</span>(p2) * r1*<span class="built_in">sin</span>(p1);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(Ze(a))</span><br><span class="line">        a = <span class="number">0.0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%.2lf"</span>, a);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(Ze(b))</span><br><span class="line">        b = <span class="number">0.0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(Sg(b) &gt;= <span class="number">0</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"+"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%.2lfi\n"</span>, b);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1052 卖个萌</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1052%20%E5%8D%96%E4%B8%AA%E8%90%8C/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:01 GMT+0800 (GMT+08:00) --><h1 id="卖个萌-PATB-1052"><a href="#卖个萌-PATB-1052" class="headerlink" title="卖个萌 (PATB-1052)"></a>卖个萌 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805273883951104" target="_blank" rel="noopener">PATB-1052</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>萌萌哒表情符号通常由“手”、“眼”、“口”三个主要部分组成。简单起见，我们假设一个表情符号是按下列格式输出的：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[左手]([左眼][口][右眼])[右手]</span><br></pre></td></tr></table></figure><p>现给出可选用的符号集合，请你按用户的要求输出表情。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入首先在前三行顺序对应给出手、眼、口的可选符号集。每个符号括在一对方括号 <code>[]</code>内。题目保证每个集合都至少有一个符号，并不超过 10 个符号；每个符号包含 1 到 4 个非空字符。</p><p>之后一行给出一个正整数 K，为用户请求的个数。随后 K 行，每行给出一个用户的符号选择，顺序为左手、左眼、口、右眼、右手——这里只给出符号在相应集合中的序号（从 1 开始），数字间以空格分隔。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>对每个用户请求，在一行中输出生成的表情。若用户选择的序号不存在，则输出 <code>Are you kidding me? @\/@</code>。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[╮][╭][o][~\][&#x2F;~]  [&lt;][&gt;]</span><br><span class="line"> [╯][╰][^][-][&#x3D;][&gt;][&lt;][@][⊙]</span><br><span class="line">[Д][▽][_][ε][^]  ...</span><br><span class="line">4</span><br><span class="line">1 1 2 2 2</span><br><span class="line">6 8 1 5 5</span><br><span class="line">3 3 4 3 3</span><br><span class="line">2 10 3 9 3</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">╮(╯▽╰)╭</span><br><span class="line">&lt;(@Д&#x3D;)&#x2F;~</span><br><span class="line">o(^ε^)o</span><br><span class="line">Are you kidding me? @\&#x2F;@</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">10</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">char</span> a[mxn][<span class="number">20</span>], b[mxn][<span class="number">20</span>], c[mxn][<span class="number">20</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> an=<span class="number">0</span>, bn=<span class="number">0</span>, cn=<span class="number">0</span>, ch;</span><br><span class="line">    <span class="keyword">while</span>((ch = getchar()) != <span class="string">'\n'</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(ch == <span class="string">'['</span>)</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%[^]]"</span>, a[++an]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>((ch = getchar()) != <span class="string">'\n'</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(ch == <span class="string">'['</span>)</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%[^]]"</span>, b[++bn]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>((ch = getchar()) != <span class="string">'\n'</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(ch == <span class="string">'['</span>)</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%[^]]"</span>, c[++cn]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> k, t[<span class="number">5</span>];</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;k);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(k--)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">5</span>; i++)</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;t[i]);</span><br><span class="line">        <span class="keyword">int</span> f = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(t[<span class="number">0</span>]&lt;<span class="number">1</span> || t[<span class="number">0</span>]&gt;an) f = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(t[<span class="number">1</span>]&lt;<span class="number">1</span> || t[<span class="number">1</span>]&gt;bn) f = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(t[<span class="number">2</span>]&lt;<span class="number">1</span> || t[<span class="number">2</span>]&gt;cn) f = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(t[<span class="number">3</span>]&lt;<span class="number">1</span> || t[<span class="number">3</span>]&gt;bn) f = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(t[<span class="number">4</span>]&lt;<span class="number">1</span> || t[<span class="number">4</span>]&gt;an) f = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(f)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Are you kidding me? @\\/@\n"</span>);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%s(%s%s%s)%s\n"</span>, a[t[<span class="number">0</span>]], b[t[<span class="number">1</span>]], c[t[<span class="number">2</span>]], b[t[<span class="number">3</span>]], a[t[<span class="number">4</span>]]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1054 求平均值</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1054%20%E6%B1%82%E5%B9%B3%E5%9D%87%E5%80%BC/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:01 GMT+0800 (GMT+08:00) --><h1 id="求平均值-PATB-1054"><a href="#求平均值-PATB-1054" class="headerlink" title="求平均值 (PATB-1054)"></a>求平均值 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805272659214336" target="_blank" rel="noopener">PATB-1054</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>本题的基本要求非常简单：给定 N 个实数，计算它们的平均值。但复杂的是有些输入数据可能是非法的。一个“合法”的输入是 [−1000,1000] 区间内的实数，并且最多精确到小数点后 2 位。当你计算平均值的时候，不能把那些非法的数据算在内。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入第一行给出正整数 N（≤100）。随后一行给出 N 个实数，数字间以一个空格分隔。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>对每个非法输入，在一行中输出 <code>ERROR: X is not a legal number</code>，其中 <code>X</code> 是输入。最后在一行中输出结果：<code>The average of K numbers is Y</code>，其中 <code>K</code> 是合法输入的个数，<code>Y</code> 是它们的平均值，精确到小数点后 2 位。如果平均值无法计算，则用 <code>Undefined</code> 替换 <code>Y</code>。如果 <code>K</code> 为 1，则输出 <code>The average of 1 number is Y</code>。</p></blockquote><h2 id="样例输入1"><a href="#样例输入1" class="headerlink" title="样例输入1"></a>样例输入1</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">7</span><br><span class="line">5 -3.2 aaa 9999 2.3.4 7.123 2.35</span><br></pre></td></tr></table></figure><h2 id="样例输出1"><a href="#样例输出1" class="headerlink" title="样例输出1"></a>样例输出1</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ERROR: aaa is not a legal number</span><br><span class="line">ERROR: 9999 is not a legal number</span><br><span class="line">ERROR: 2.3.4 is not a legal number</span><br><span class="line">ERROR: 7.123 is not a legal number</span><br><span class="line">The average of 3 numbers is 1.38</span><br></pre></td></tr></table></figure><h2 id="样例输入2"><a href="#样例输入2" class="headerlink" title="样例输入2"></a>样例输入2</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2</span><br><span class="line">aaa -9999</span><br></pre></td></tr></table></figure><h2 id="样例输出2"><a href="#样例输出2" class="headerlink" title="样例输出2"></a>样例输出2</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ERROR: aaa is not a legal number</span><br><span class="line">ERROR: -9999 is not a legal number</span><br><span class="line">The average of 0 numbers is Undefined</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">double</span> DB;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">char</span> s[mxn], t[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> num=<span class="number">0</span>; DB sum=<span class="number">0</span>, x;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> f = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>, s);</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">sscanf</span>(s, <span class="string">"%lf"</span>, &amp;x) == <span class="number">0</span>)</span><br><span class="line">            f = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">sprintf</span>(t, <span class="string">"%.2lf"</span>, x);</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">strlen</span>(s)&gt;<span class="built_in">strlen</span>(t) || x&lt;<span class="number">-1000</span> || x&gt;<span class="number">1000</span>)</span><br><span class="line">                f = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                sum += x, num++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(f)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"ERROR: %s is not a legal number\n"</span>, s);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(num&gt;<span class="number">1</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"The average of %d numbers is %.2lf\n"</span>, num, sum/num);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(num==<span class="number">1</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"The average of 1 number is %.2lf\n"</span>, sum);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"The average of 0 numbers is Undefined\n"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1053 住房空置率</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1053%20%E4%BD%8F%E6%88%BF%E7%A9%BA%E7%BD%AE%E7%8E%87/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:01 GMT+0800 (GMT+08:00) --><h1 id="住房空置率-PATB-1053"><a href="#住房空置率-PATB-1053" class="headerlink" title="住房空置率 (PATB-1053)"></a>住房空置率 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805273284165632" target="_blank" rel="noopener">PATB-1053</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>在不打扰居民的前提下，统计住房空置率的一种方法是根据每户用电量的连续变化规律进行判断。判断方法如下：</p><ul><li>在观察期内，若存在超过一半的日子用电量低于某给定的阈值 e，则该住房为“可能空置”；</li><li>若观察期超过某给定阈值 D 天，且满足上一个条件，则该住房为“空置”。</li></ul><p>现给定某居民区的住户用电量数据，请你统计“可能空置”的比率和“空置”比率，即以上两种状态的住房占居民区住房总套数的百分比。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入第一行给出正整数 N（≤1000），为居民区住房总套数；正实数 e，即低电量阈值；正整数 D，即观察期阈值。随后 N 行，每行按以下格式给出一套住房的用电量数据：</p><p>K E1 E2 … EK</p><p>其中 K 为观察的天数，Ei 为第 i 天的用电量。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>在一行中输出“可能空置”的比率和“空置”比率的百分比值，其间以一个空格分隔，保留小数点后 1 位。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">5 0.5 10</span><br><span class="line">6 0.3 0.4 0.5 0.2 0.8 0.6</span><br><span class="line">10 0.0 0.1 0.2 0.3 0.0 0.8 0.6 0.7 0.0 0.5</span><br><span class="line">5 0.4 0.3 0.5 0.1 0.7</span><br><span class="line">11 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1</span><br><span class="line">11 2 2 2 1 1 0.1 1 0.1 0.1 0.1 0.1</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">40.0% 20.0%</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>样例解释：第2、3户为“可能空置”，第4户为“空置”，其他户不是空置。</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, d; DB e;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %lf %d"</span>, &amp;n, &amp;e, &amp;d);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> x=<span class="number">0</span>, y=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> m, num=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;m);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;m; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            DB t; <span class="built_in">scanf</span>(<span class="string">"%lf"</span>, &amp;t);</span><br><span class="line">            <span class="keyword">if</span>(t&lt;e) num++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(num*<span class="number">2</span>&gt;m)</span><br><span class="line">            <span class="keyword">if</span>(m&gt;d) y++;</span><br><span class="line">            <span class="keyword">else</span> x++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%.1lf%% %.1lf%%\n"</span>, <span class="number">100.0</span>*x/n, <span class="number">100.0</span>*y/n);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1055 集体照</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1055%20%E9%9B%86%E4%BD%93%E7%85%A7/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:01 GMT+0800 (GMT+08:00) --><h1 id="集体照-PATB-1055"><a href="#集体照-PATB-1055" class="headerlink" title="集体照 (PATB-1055)"></a>集体照 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805272021680128" target="_blank" rel="noopener">PATB-1055</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>拍集体照时队形很重要，这里对给定的 N 个人 K 排的队形设计排队规则如下：</p><ul><li>每排人数为 N/K（向下取整），多出来的人全部站在最后一排；</li><li>后排所有人的个子都不比前排任何人矮；</li><li>每排中最高者站中间（中间位置为 m/2+1，其中 m 为该排人数，除法向下取整）；</li><li>每排其他人以中间人为轴，按身高非增序，先右后左交替入队站在中间人的两侧（例如5人身高为190、188、186、175、170，则队形为175、188、190、186、170。这里假设你面对拍照者，所以你的左边是中间人的右边）；</li><li>若多人身高相同，则按名字的字典序升序排列。这里保证无重名。</li></ul><p>现给定一组拍照人，请编写程序输出他们的队形。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>每个输入包含 1 个测试用例。每个测试用例第 1 行给出两个正整数 N（≤10^4，总人数）和 K（≤10，总排数）。随后 N 行，每行给出一个人的名字（不包含空格、长度不超过 8 个英文字母）和身高（[30, 300] 区间内的整数）。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>输出拍照的队形。即K排人名，其间以空格分隔，行末不得有多余空格。注意：假设你面对拍照者，后排的人输出在上方，前排输出在下方。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">10 3</span><br><span class="line">Tom 188</span><br><span class="line">Mike 170</span><br><span class="line">Eva 168</span><br><span class="line">Tim 160</span><br><span class="line">Joe 190</span><br><span class="line">Ann 168</span><br><span class="line">Bob 175</span><br><span class="line">Nick 186</span><br><span class="line">Amy 160</span><br><span class="line">John 159</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Bob Tom Joe Nick</span><br><span class="line">Ann Mike Eva</span><br><span class="line">Tim Amy John</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">P</span>&#123;</span></span><br><span class="line">    <span class="keyword">char</span> s[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">&#125;a[mxn];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> li[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(P a, P b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a.t == b.t)</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">strcmp</span>(a.s, b.s) &lt; <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> a.t &gt; b.t;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, k;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;n, &amp;k);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s %d"</span>, a[i].s, &amp;a[i].t);</span><br><span class="line">    sort(a, a+n, cmp);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> id = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;k; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> m = n / k, f = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(!i) m += n % k;</span><br><span class="line">        <span class="keyword">int</span> now = m/<span class="number">2</span> + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=m; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            li[now] = id++;</span><br><span class="line">            f = -f;</span><br><span class="line">            now += f*j;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=m; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(j&gt;<span class="number">1</span>) <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%s"</span>, a[li[j]].s);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1056 组合数的和</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1056%20%E7%BB%84%E5%90%88%E6%95%B0%E7%9A%84%E5%92%8C/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:01 GMT+0800 (GMT+08:00) --><h1 id="组合数的和-PATB-1056"><a href="#组合数的和-PATB-1056" class="headerlink" title="组合数的和 (PATB-1056)"></a>组合数的和 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805271455449088" target="_blank" rel="noopener">PATB-1056</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>给定 N 个非 0 的个位数字，用其中任意 2 个数字都可以组合成 1 个 2 位的数字。要求所有可能组合出来的 2 位数字的和。例如给定 2、5、8，则可以组合出：25、28、52、58、82、85，它们的和为330。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在一行中先给出 N（1 &lt; N &lt; 10），随后给出 N 个不同的非 0 个位数字。数字间以空格分隔。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>输出所有可能组合出来的2位数字的和。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3 2 8 5</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">330</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>, m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;m);</span><br><span class="line">        ans += m * (n<span class="number">-1</span>) * <span class="number">11</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1057 数零壹</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1057%20%E6%95%B0%E9%9B%B6%E5%A3%B9/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:01 GMT+0800 (GMT+08:00) --><h1 id="数零壹-PATB-1057"><a href="#数零壹-PATB-1057" class="headerlink" title="数零壹 (PATB-1057)"></a>数零壹 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805270914383872" target="_blank" rel="noopener">PATB-1057</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>给定一串长度不超过 10^5 的字符串，本题要求你将其中所有英文字母的序号（字母 a-z 对应序号 1-26，不分大小写）相加，得到整数 N，然后再分析一下 N 的二进制表示中有多少 0、多少 1。例如给定字符串 <code>PAT (Basic)</code>，其字母序号之和为：16+1+20+2+1+19+9+3=71，而 71 的二进制是 1000111，即有 3 个 0、4 个 1。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在一行中给出长度不超过 10^5、以回车结束的字符串。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>在一行中先后输出 0 的个数和 1 的个数，其间以空格分隔。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">PAT (Basic)</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3 4</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">char</span> s[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    fgets(s, mxn, <span class="built_in">stdin</span>);</span><br><span class="line">    <span class="keyword">int</span> len = <span class="built_in">strlen</span>(s);</span><br><span class="line"></span><br><span class="line">    LL sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;len; i++)</span><br><span class="line">        sum += <span class="built_in">isalpha</span>(s[i]) ? (<span class="built_in">tolower</span>(s[i])-<span class="string">'a'</span>+<span class="number">1</span>) : <span class="number">0</span>;</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">int</span> a=<span class="number">0</span>, b=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(sum)&#123;</span><br><span class="line">        <span class="keyword">if</span>(sum &amp; <span class="number">1</span>)</span><br><span class="line">            b++;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            a++;</span><br><span class="line">        sum &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>, a, b);    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1058 选择题</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1058%20%E9%80%89%E6%8B%A9%E9%A2%98/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:01 GMT+0800 (GMT+08:00) --><h1 id="选择题-PATB-1058"><a href="#选择题-PATB-1058" class="headerlink" title="选择题 (PATB-1058)"></a>选择题 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805270356541440" target="_blank" rel="noopener">PATB-1058</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>批改多选题是比较麻烦的事情，本题就请你写个程序帮助老师批改多选题，并且指出哪道题错的人最多。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在第一行给出两个正整数 N（≤ 1000）和 M（≤ 100），分别是学生人数和多选题的个数。随后 M 行，每行顺次给出一道题的满分值（不超过 5 的正整数）、选项个数（不少于 2 且不超过 5 的正整数）、正确选项个数（不超过选项个数的正整数）、所有正确选项。注意每题的选项从小写英文字母 a 开始顺次排列。各项间以 1 个空格分隔。最后 N 行，每行给出一个学生的答题情况，其每题答案格式为 <code>(选中的选项个数 选项1 ……)</code>，按题目顺序给出。注意：题目保证学生的答题情况是合法的，即不存在选中的选项数超过实际选项数的情况。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>按照输入的顺序给出每个学生的得分，每个分数占一行。注意判题时只有选择全部正确才能得到该题的分数。最后一行输出错得最多的题目的错误次数和编号（题目按照输入的顺序从 1 开始编号）。如果有并列，则按编号递增顺序输出。数字间用空格分隔，行首尾不得有多余空格。如果所有题目都没有人错，则在最后一行输出 <code>Too simple</code>。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3 4 </span><br><span class="line">3 4 2 a c</span><br><span class="line">2 5 1 b</span><br><span class="line">5 3 2 b c</span><br><span class="line">1 5 4 a b d e</span><br><span class="line">(2 a c) (2 b d) (2 a c) (3 a b e)</span><br><span class="line">(2 a c) (1 b) (2 a b) (4 a b d e)</span><br><span class="line">(2 b d) (1 e) (2 b c) (4 a b c d)</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3</span><br><span class="line">6</span><br><span class="line">5</span><br><span class="line">2 2 3 4</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">P</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> s, t;</span><br><span class="line">&#125;a[mxn];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> p[] = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">8</span>, <span class="number">16</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> err[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, m;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;n, &amp;m);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> x; <span class="keyword">char</span> ch; </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %*d %d"</span>, &amp;a[i].s, &amp;x);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;x; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">" %c"</span>, &amp;ch);</span><br><span class="line">            a[i].t += p[ch-<span class="string">'a'</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>, ans = <span class="number">0</span>, num = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%c"</span>, &amp;ch) &amp;&amp; ch != <span class="string">'\n'</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(ch == <span class="string">')'</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(ans==a[++num].t)</span><br><span class="line">                    sum += a[num].s;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    err[num]++;</span><br><span class="line">                ans = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">isalpha</span>(ch)) ans += p[ch-<span class="string">'a'</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, sum);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> mx = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++)</span><br><span class="line">        <span class="keyword">if</span>(mx &lt; err[i]) mx = err[i];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(mx == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Too simple\n"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>, mx);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++)</span><br><span class="line">        <span class="keyword">if</span>(mx == err[i]) <span class="built_in">printf</span>(<span class="string">" %d"</span>, i);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1060 爱丁顿数</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1060%20%E7%88%B1%E4%B8%81%E9%A1%BF%E6%95%B0/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:01 GMT+0800 (GMT+08:00) --><h1 id="爱丁顿数-PATB-1060"><a href="#爱丁顿数-PATB-1060" class="headerlink" title="爱丁顿数 (PATB-1060)"></a>爱丁顿数 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805269312159744" target="_blank" rel="noopener">PATB-1060</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>英国天文学家爱丁顿很喜欢骑车。据说他为了炫耀自己的骑车功力，还定义了一个“爱丁顿数” E ，即满足有 E 天骑车超过 E 英里的最大整数 E。据说爱丁顿自己的 E 等于87。</p><p>现给定某人 N 天的骑车距离，请你算出对应的爱丁顿数 E（≤N）。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入第一行给出一个正整数 N (≤10^5)，即连续骑车的天数；第二行给出 N 个非负整数，代表每天的骑车距离。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>在一行中给出 N 天的爱丁顿数。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">10</span><br><span class="line">6 7 6 9 3 10 8 2 7 8</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">6</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> a[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a&gt;b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]);</span><br><span class="line">    sort(a+<span class="number">1</span>, a+n+<span class="number">1</span>, cmp);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i] &gt; i)</span><br><span class="line">            ans = max(ans, i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1059 C语言竞赛</title>
    <url>/%E9%A2%98%E8%A7%A3/%E6%95%B0%E8%AE%BA/%E7%B4%A0%E6%95%B0/%E7%B4%A0%E6%95%B0%E5%88%A4%E6%96%AD/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1059%20C%E8%AF%AD%E8%A8%80%E7%AB%9E%E8%B5%9B/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:01 GMT+0800 (GMT+08:00) --><h1 id="C语言竞赛-PATB-1059"><a href="#C语言竞赛-PATB-1059" class="headerlink" title="C语言竞赛 (PATB-1059)"></a>C语言竞赛 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805269828059136" target="_blank" rel="noopener">PATB-1059</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>C 语言竞赛是浙江大学计算机学院主持的一个欢乐的竞赛。既然竞赛主旨是为了好玩，颁奖规则也就制定得很滑稽：</p><ul><li>0、冠军将赢得一份“神秘大奖”（比如很巨大的一本学生研究论文集……）。</li><li>1、排名为素数的学生将赢得最好的奖品 —— 小黄人玩偶！</li><li>2、其他人将得到巧克力。</li></ul><p>给定比赛的最终排名以及一系列参赛者的 ID，你要给出这些参赛者应该获得的奖品。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入第一行给出一个正整数 N（≤10^4），是参赛者人数。随后 N 行给出最终排名，每行按排名顺序给出一位参赛者的 ID（4 位数字组成）。接下来给出一个正整数 K 以及 K 个需要查询的 ID。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>对每个要查询的 ID，在一行中输出 <code>ID: 奖品</code>，其中奖品或者是 <code>Mystery Award</code>（神秘大奖）、或者是 <code>Minion</code>（小黄人）、或者是 <code>Chocolate</code>（巧克力）。如果所查 ID 根本不在排名里，打印 <code>Are you kidding?</code>（耍我呢？）。如果该 ID 已经查过了（即奖品已经领过了），打印 <code>ID: Checked</code>（不能多吃多占）。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">6</span><br><span class="line">1111</span><br><span class="line">6666</span><br><span class="line">8888</span><br><span class="line">1234</span><br><span class="line">5555</span><br><span class="line">0001</span><br><span class="line">6</span><br><span class="line">8888</span><br><span class="line">0001</span><br><span class="line">1111</span><br><span class="line">2222</span><br><span class="line">8888</span><br><span class="line">2222</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">8888: Minion</span><br><span class="line">0001: Chocolate</span><br><span class="line">1111: Mystery Award</span><br><span class="line">2222: Are you kidding?</span><br><span class="line">8888: Checked</span><br><span class="line">2222: Are you kidding?</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> a[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isPrime</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (n &lt; <span class="number">2</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">2</span> || n == <span class="number">3</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (n % <span class="number">6</span> != <span class="number">1</span> &amp;&amp; n % <span class="number">6</span> != <span class="number">5</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> m = <span class="built_in">sqrt</span>(n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">5</span>; i &lt;= m; i += <span class="number">6</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (n % i == <span class="number">0</span> || n % (i + <span class="number">2</span>) == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">memset</span>(a, <span class="number">-1</span>, <span class="keyword">sizeof</span> a);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;x);</span><br><span class="line">        a[x] = i;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> m; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;x);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%04d: "</span>, x);</span><br><span class="line">        <span class="keyword">if</span>(a[x] == <span class="number">-1</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Are you kidding?\n"</span>);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(a[x] == <span class="number">-2</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Checked\n"</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(a[x] == <span class="number">1</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Mystery Award\n"</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(isPrime(a[x]))</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Minion\n"</span>);</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Chocolate\n"</span>);</span><br><span class="line">        </span><br><span class="line">        a[x] = <span class="number">-2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>数论</category>
        <category>素数</category>
        <category>素数判断</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
        <tag>素数</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1061 判断题</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1061%20%E5%88%A4%E6%96%AD%E9%A2%98/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:01 GMT+0800 (GMT+08:00) --><h1 id="判断题-PATB-1061"><a href="#判断题-PATB-1061" class="headerlink" title="判断题 (PATB-1061)"></a>判断题 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805268817231872" target="_blank" rel="noopener">PATB-1061</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>判断题的评判很简单，本题就要求你写个简单的程序帮助老师判题并统计学生们判断题的得分。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在第一行给出两个不超过 100 的正整数 N 和 M，分别是学生人数和判断题数量。第二行给出 M 个不超过 5 的正整数，是每道题的满分值。第三行给出每道题对应的正确答案，0 代表“非”，1 代表“是”。随后 N 行，每行给出一个学生的解答。数字间均以空格分隔。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>按照输入的顺序输出每个学生的得分，每个分数占一行。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3 6</span><br><span class="line">2 1 3 3 4 5</span><br><span class="line">0 0 1 0 1 1</span><br><span class="line">0 1 1 0 0 1</span><br><span class="line">1 0 1 0 1 0</span><br><span class="line">1 1 0 0 1 1</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">13</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> p[mxn], a[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, m;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;n, &amp;m);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;m; i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;p[i]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;m; i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(n--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>, sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;m; i++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;ans);</span><br><span class="line">            sum += (a[i]==ans) ? p[i] : <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, sum);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1062 最简分数</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1062%20%E6%9C%80%E7%AE%80%E5%88%86%E6%95%B0/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:01 GMT+0800 (GMT+08:00) --><h1 id="最简分数-PATB-1062"><a href="#最简分数-PATB-1062" class="headerlink" title="最简分数 (PATB-1062)"></a>最简分数 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805268334886912" target="_blank" rel="noopener">PATB-1062</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>一个分数一般写成两个整数相除的形式：N/M，其中 M 不为0。最简分数是指分子和分母没有公约数的分数表示形式。</p><p>现给定两个不相等的正分数 N1/M1 和 N2/M2，要求你按从小到大的顺序列出它们之间分母为 K 的最简分数。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在一行中按 N/M 的格式给出两个正分数，随后是一个正整数分母 K，其间以空格分隔。题目保证给出的所有整数都不超过 1000。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>在一行中按 N/M 的格式列出两个给定分数之间分母为 K 的所有最简分数，按从小到大的顺序，其间以 1 个空格分隔。行首尾不得有多余空格。题目保证至少有 1 个输出。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">7&#x2F;18 13&#x2F;20 12</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">5&#x2F;12 7&#x2F;12</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> b ? gcd(b, a%b) : a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n1, m1, n2, m2, k;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d/%d %d/%d %d"</span>, &amp;n1, &amp;m1, &amp;n2, &amp;m2, &amp;k);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> g = gcd(k, gcd(m1, m2));</span><br><span class="line">    <span class="keyword">int</span> l = m1 / g * m2 / g * k;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> b=l/m1*n1, e=l/m2*n2, nf=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(b &gt; e) swap(b, e);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=b+<span class="number">1</span>; i&lt;e; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(i%(l/k)==<span class="number">0</span> &amp;&amp; gcd(i/(l/k), k)==<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(nf)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">                nf = <span class="number">1</span>;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d/%d"</span>, i/(l/k), k);</span><br><span class="line">            i += l/k<span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1063 计算谱半径</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1063%20%E8%AE%A1%E7%AE%97%E8%B0%B1%E5%8D%8A%E5%BE%84/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:01 GMT+0800 (GMT+08:00) --><h1 id="计算谱半径-PATB-1063"><a href="#计算谱半径-PATB-1063" class="headerlink" title="计算谱半径 (PATB-1063)"></a>计算谱半径 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805267860930560" target="_blank" rel="noopener">PATB-1063</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>在数学中，矩阵的“谱半径”是指其特征值的模集合的上确界。换言之，对于给定的 n 个复数空间的特征值 { a1+b1i,⋯,an+bni }，它们的模为实部与虚部的平方和的开方，而“谱半径”就是最大模。</p><p>现在给定一些复数空间的特征值，请你计算并输出这些特征值的谱半径。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入第一行给出正整数 N（≤ 10 000）是输入的特征值的个数。随后 N 行，每行给出 1 个特征值的实部和虚部，其间以空格分隔。注意：题目保证实部和虚部均为绝对值不超过 1000 的整数。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>在一行中输出谱半径，四舍五入保留小数点后 2 位。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">5</span><br><span class="line">0 1</span><br><span class="line">2 0</span><br><span class="line">-1 0</span><br><span class="line">3 3</span><br><span class="line">0 -3</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">4.24</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Sq(u) ((u) * (u))</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">double</span> DB;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"></span><br><span class="line">    DB mx = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> a, b;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;a, &amp;b);</span><br><span class="line">        mx = max(mx, <span class="built_in">sqrt</span>(Sq(a)+Sq(b)));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%.2lf\n"</span>, mx);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1064 朋友数</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1064%20%E6%9C%8B%E5%8F%8B%E6%95%B0/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:01 GMT+0800 (GMT+08:00) --><h1 id="朋友数-PATB-1064"><a href="#朋友数-PATB-1064" class="headerlink" title="朋友数 (PATB-1064)"></a>朋友数 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805267416334336" target="_blank" rel="noopener">PATB-1064</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>如果两个整数各位数字的和是一样的，则被称为是“朋友数”，而那个公共的和就是它们的“朋友证号”。例如 123 和 51 就是朋友数，因为 1+2+3 = 5+1 = 6，而 6 就是它们的朋友证号。给定一些整数，要求你统计一下它们中有多少个不同的朋友证号。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入第一行给出正整数 N。随后一行给出 N 个正整数，数字间以空格分隔。题目保证所有数字小于 10^4。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>首先第一行输出给定数字中不同的朋友证号的个数；随后一行按递增顺序输出这些朋友证号，数字间隔一个空格，且行末不得有多余空格。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">8</span><br><span class="line">123 899 51 998 27 33 36 12</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">4</span><br><span class="line">3 6 9 26</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> a[<span class="number">40</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x, sum = <span class="number">0</span>; </span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;x);</span><br><span class="line">        <span class="keyword">while</span>(x)&#123;</span><br><span class="line">            sum += x % <span class="number">10</span>;</span><br><span class="line">            x /= <span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(a[sum] == <span class="number">0</span>)&#123;</span><br><span class="line">            a[sum]++;    </span><br><span class="line">            num++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, num);</span><br><span class="line">    <span class="keyword">int</span> nf = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">40</span>; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(nf)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                nf = <span class="number">1</span>;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d"</span>, i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1065 单身狗</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1065%20%E5%8D%95%E8%BA%AB%E7%8B%97/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:01 GMT+0800 (GMT+08:00) --><h1 id="单身狗-PATB-1065"><a href="#单身狗-PATB-1065" class="headerlink" title="单身狗 (PATB-1065)"></a>单身狗 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805266942377984" target="_blank" rel="noopener">PATB-1065</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>“单身狗”是中文对于单身人士的一种爱称。本题请你从上万人的大型派对中找出落单的客人，以便给予特殊关爱。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入第一行给出一个正整数 N（≤ 50 000），是已知夫妻/伴侣的对数；随后 N 行，每行给出一对夫妻/伴侣——为方便起见，每人对应一个 ID 号，为 5 位数字（从 00000 到 99999），ID 间以空格分隔；之后给出一个正整数 M（≤ 10 000），为参加派对的总人数；随后一行给出这 M 位客人的 ID，以空格分隔。题目保证无人重婚或脚踩两条船。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>首先第一行输出落单客人的总人数；随后第二行按 ID 递增顺序列出落单的客人。ID 间用 1 个空格分隔，行的首尾不得有多余空格。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3</span><br><span class="line">11111 22222</span><br><span class="line">33333 44444</span><br><span class="line">55555 66666</span><br><span class="line">7</span><br><span class="line">55555 44444 10000 88888 22222 11111 23333</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">5</span><br><span class="line">10000 23333 44444 55555 88888</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> a[mxn], b[mxn], ans[mxn], vis[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    <span class="built_in">memset</span>(a, <span class="number">-1</span>, <span class="keyword">sizeof</span> a);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x, y; </span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;x, &amp;y);</span><br><span class="line">        a[x] = y;</span><br><span class="line">        a[y] = x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> m, num = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;m);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;b[i]);</span><br><span class="line">        vis[b[i]] = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[b[i]]==<span class="number">-1</span> || vis[a[b[i]]] == <span class="number">0</span>)</span><br><span class="line">            ans[num++] = b[i];</span><br><span class="line">    &#125;</span><br><span class="line">    sort(ans, ans+num);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, num);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;num; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(i) <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%05d"</span>, ans[i]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1066 图像过滤</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1066%20%E5%9B%BE%E5%83%8F%E8%BF%87%E6%BB%A4/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:02 GMT+0800 (GMT+08:00) --><h1 id="图像过滤-PATB-1066"><a href="#图像过滤-PATB-1066" class="headerlink" title="图像过滤 (PATB-1066)"></a>图像过滤 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805266514558976" target="_blank" rel="noopener">PATB-1066</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>图像过滤是把图像中不重要的像素都染成背景色，使得重要部分被凸显出来。现给定一幅黑白图像，要求你将灰度值位于某指定区间内的所有像素颜色都用一种指定的颜色替换。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在第一行给出一幅图像的分辨率，即两个正整数 M 和 N（0&lt;M,N≤500），另外是待过滤的灰度值区间端点 A 和 B（0≤A&lt;B≤255）、以及指定的替换灰度值。随后 M 行，每行给出 N 个像素点的灰度值，其间以空格分隔。所有灰度值都在 [0, 255] 区间内。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>输出按要求过滤后的图像。即输出 M 行，每行 N 个像素灰度值，每个灰度值占 3 位（例如黑色要显示为 <code>000</code>），其间以一个空格分隔。行首尾不得有多余空格。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3 5 100 150 0</span><br><span class="line">3 189 254 101 119</span><br><span class="line">150 233 151 99 100</span><br><span class="line">88 123 149 0 255</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">003 189 254 000 000</span><br><span class="line">000 233 151 099 000</span><br><span class="line">088 000 000 000 255</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, m, l, r, x; </span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d %d %d %d"</span>, &amp;n, &amp;m, &amp;l, &amp;r, &amp;x);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;m; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> t; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;t);</span><br><span class="line">            <span class="keyword">if</span>(j) <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">            <span class="keyword">if</span>(l&lt;=t &amp;&amp; t&lt;=r)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%03d"</span>, x);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%03d"</span>, t);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1067 试密码</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1067%20%E8%AF%95%E5%AF%86%E7%A0%81/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:02 GMT+0800 (GMT+08:00) --><h1 id="试密码-PATB-1067"><a href="#试密码-PATB-1067" class="headerlink" title="试密码 (PATB-1067)"></a>试密码 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805266007048192" target="_blank" rel="noopener">PATB-1067</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>当你试图登录某个系统却忘了密码时，系统一般只会允许你尝试有限多次，当超出允许次数时，账号就会被锁死。本题就请你实现这个小功能。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在第一行给出一个密码（长度不超过 20 的、不包含空格、Tab、回车的非空字符串）和一个正整数 N（≤ 10），分别是正确的密码和系统允许尝试的次数。随后每行给出一个以回车结束的非空字符串，是用户尝试输入的密码。输入保证至少有一次尝试。当读到一行只有单个 # 字符时，输入结束，并且这一行不是用户的输入。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>对用户的每个输入，如果是正确的密码且尝试次数不超过 N，则在一行中输出 <code>Welcome in</code>，并结束程序；如果是错误的，则在一行中按格式输出 <code>Wrong password: 用户输入的错误密码</code>；当错误尝试达到 N 次时，再输出一行 <code>Account locked</code>，并结束程序。</p></blockquote><h2 id="样例输入1"><a href="#样例输入1" class="headerlink" title="样例输入1"></a>样例输入1</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Correct%pw 3</span><br><span class="line">correct%pw</span><br><span class="line">Correct@PW</span><br><span class="line">whatisthepassword!</span><br><span class="line">Correct%pw</span><br><span class="line">#</span><br></pre></td></tr></table></figure><h2 id="样例输出1"><a href="#样例输出1" class="headerlink" title="样例输出1"></a>样例输出1</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Wrong password: correct%pw</span><br><span class="line">Wrong password: Correct@PW</span><br><span class="line">Wrong password: whatisthepassword!</span><br><span class="line">Account locked</span><br></pre></td></tr></table></figure><h2 id="样例输入2"><a href="#样例输入2" class="headerlink" title="样例输入2"></a>样例输入2</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cool@gplt 3</span><br><span class="line">coolman@gplt</span><br><span class="line">coollady@gplt</span><br><span class="line">cool@gplt</span><br><span class="line">try again</span><br><span class="line">#</span><br></pre></td></tr></table></figure><h2 id="样例输出2"><a href="#样例输出2" class="headerlink" title="样例输出2"></a>样例输出2</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Wrong password: coolman@gplt</span><br><span class="line">Wrong password: coollady@gplt</span><br><span class="line">Welcome in</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">char</span> s[mxn], t[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, num = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s %d%*c"</span>, s, &amp;n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        fgets(t, mxn, <span class="built_in">stdin</span>);</span><br><span class="line">        t[<span class="built_in">strlen</span>(t)<span class="number">-1</span>] = <span class="string">'\0'</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">strcmp</span>(t, <span class="string">"#"</span>)==<span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">if</span>(++num &gt; n) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">strcmp</span>(s, t)==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Welcome in\n"</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Wrong password: %s\n"</span>, t);</span><br><span class="line">            <span class="keyword">if</span> (num == n)&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"Account locked\n"</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1068 万绿丛中一点红</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1068%20%E4%B8%87%E7%BB%BF%E4%B8%9B%E4%B8%AD%E4%B8%80%E7%82%B9%E7%BA%A2/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:02 GMT+0800 (GMT+08:00) --><h1 id="万绿丛中一点红-PATB-1068"><a href="#万绿丛中一点红-PATB-1068" class="headerlink" title="万绿丛中一点红 (PATB-1068)"></a>万绿丛中一点红 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805265579229184" target="_blank" rel="noopener">PATB-1068</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>对于计算机而言，颜色不过是像素点对应的一个 24 位的数值。现给定一幅分辨率为 M×N 的画，要求你找出万绿丛中的一点红，即有独一无二颜色的那个像素点，并且该点的颜色与其周围 8 个相邻像素的颜色差充分大。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入第一行给出三个正整数，分别是 M 和 N（≤ 1000），即图像的分辨率；以及 TOL，是所求像素点与相邻点的颜色差阈值，色差超过 TOL 的点才被考虑。随后 N 行，每行给出 M 个像素的颜色值，范围在 [0,2^24) 内。所有同行数字间用空格或 TAB 分开。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>在一行中按照 <code>(x, y): color</code> 的格式输出所求像素点的位置以及颜色值，其中位置 <code>x</code> 和 <code>y</code> 分别是该像素在图像矩阵中的列、行编号（从 1 开始编号）。如果这样的点不唯一，则输出 <code>Not Unique</code>；如果这样的点不存在，则输出 <code>Not Exist</code>。</p></blockquote><h2 id="样例输入1"><a href="#样例输入1" class="headerlink" title="样例输入1"></a>样例输入1</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">8 6 200</span><br><span class="line">0 	 0 	  0 	   0	    0 	     0 	      0        0</span><br><span class="line">65280 	 65280    65280    16711479 65280    65280    65280    65280</span><br><span class="line">16711479 65280    65280    65280    16711680 65280    65280    65280</span><br><span class="line">65280 	 65280    65280    65280    65280    65280    165280   165280</span><br><span class="line">65280 	 65280 	  16777015 65280    65280    165280   65480    165280</span><br><span class="line">16777215 16777215 16777215 16777215 16777215 16777215 16777215 16777215</span><br></pre></td></tr></table></figure><h2 id="样例输出1"><a href="#样例输出1" class="headerlink" title="样例输出1"></a>样例输出1</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(5, 3): 16711680</span><br></pre></td></tr></table></figure><h2 id="样例输入2"><a href="#样例输入2" class="headerlink" title="样例输入2"></a>样例输入2</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">4 5 2</span><br><span class="line">0 0 0 0</span><br><span class="line">0 0 3 0</span><br><span class="line">0 0 0 0</span><br><span class="line">0 5 0 0</span><br><span class="line">0 0 0 0</span><br></pre></td></tr></table></figure><h2 id="样例输出2"><a href="#样例输出2" class="headerlink" title="样例输出2"></a>样例输出2</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Not Unique</span><br></pre></td></tr></table></figure><h2 id="样例输入3"><a href="#样例输入3" class="headerlink" title="样例输入3"></a>样例输入3</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3 3 5</span><br><span class="line">1 2 3</span><br><span class="line">3 4 5</span><br><span class="line">5 6 7</span><br></pre></td></tr></table></figure><h2 id="样例输出3"><a href="#样例输出3" class="headerlink" title="样例输出3"></a>样例输出3</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Not Exist</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e3</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> dir[][<span class="number">2</span>] = &#123;</span><br><span class="line">    &#123;<span class="number">-1</span>,<span class="number">-1</span>&#125;, &#123;<span class="number">-1</span>, <span class="number">0</span>&#125;, &#123;<span class="number">-1</span>, <span class="number">1</span>&#125;,</span><br><span class="line">    &#123; <span class="number">0</span>,<span class="number">-1</span>&#125;, &#123; <span class="number">0</span>, <span class="number">1</span>&#125;,</span><br><span class="line">    &#123; <span class="number">1</span>,<span class="number">-1</span>&#125;, &#123; <span class="number">1</span>, <span class="number">0</span>&#125;, &#123; <span class="number">1</span>, <span class="number">1</span>&#125;,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">int</span> n, m, tol, a[mxn][mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">ok</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">8</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> tx = x+dir[i][<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">int</span> ty = y+dir[i][<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">if</span>(tx &lt; <span class="number">0</span> || tx &gt;= n) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">if</span>(ty &lt; <span class="number">0</span> || ty &gt;= m) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">if</span>(Abs(a[x][y] - a[tx][ty]) &lt;= tol)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>, &amp;m, &amp;n, &amp;tol);</span><br><span class="line">    <span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; mmp;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;m; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i][j]);</span><br><span class="line">            mmp[a[i][j]]++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> di, dj, num = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;m; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(ok(i, j) &amp;&amp; mmp[a[i][j]]==<span class="number">1</span>)&#123;</span><br><span class="line">                num++;</span><br><span class="line">                <span class="keyword">if</span>(num &gt; <span class="number">1</span>) <span class="keyword">break</span>;</span><br><span class="line">                di = i, dj = j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(num &gt; <span class="number">1</span>) <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(num==<span class="number">0</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Not Exist\n"</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(num==<span class="number">1</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"(%d, %d): %d\n"</span>, dj+<span class="number">1</span>, di+<span class="number">1</span>, a[di][dj]);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Not Unique\n"</span>);   </span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1069 微博转发抽奖</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1069%20%E5%BE%AE%E5%8D%9A%E8%BD%AC%E5%8F%91%E6%8A%BD%E5%A5%96/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:02 GMT+0800 (GMT+08:00) --><h1 id="微博转发抽奖-PATB-1069"><a href="#微博转发抽奖-PATB-1069" class="headerlink" title="微博转发抽奖 (PATB-1069)"></a>微博转发抽奖 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805265159798784" target="_blank" rel="noopener">PATB-1069</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>小明 PAT 考了满分，高兴之余决定发起微博转发抽奖活动，从转发的网友中按顺序每隔 N 个人就发出一个红包。请你编写程序帮助他确定中奖名单。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入第一行给出三个正整数 M（≤ 1000）、N 和 S，分别是转发的总量、小明决定的中奖间隔、以及第一位中奖者的序号（编号从 1 开始）。随后 M 行，顺序给出转发微博的网友的昵称（不超过 20 个字符、不包含空格回车的非空字符串）。</p><p>注意：可能有人转发多次，但不能中奖多次。所以如果处于当前中奖位置的网友已经中过奖，则跳过他顺次取下一位。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>按照输入的顺序输出中奖名单，每个昵称占一行。如果没有人中奖，则输出 <code>Keep going...</code>。</p></blockquote><h2 id="样例输入1"><a href="#样例输入1" class="headerlink" title="样例输入1"></a>样例输入1</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">9 3 2</span><br><span class="line">Imgonnawin!</span><br><span class="line">PickMe</span><br><span class="line">PickMeMeMeee</span><br><span class="line">LookHere</span><br><span class="line">Imgonnawin!</span><br><span class="line">TryAgainAgain</span><br><span class="line">TryAgainAgain</span><br><span class="line">Imgonnawin!</span><br><span class="line">TryAgainAgain</span><br></pre></td></tr></table></figure><h2 id="样例输出1"><a href="#样例输出1" class="headerlink" title="样例输出1"></a>样例输出1</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">PickMe</span><br><span class="line">Imgonnawin!</span><br><span class="line">TryAgainAgain</span><br></pre></td></tr></table></figure><h2 id="样例输入2"><a href="#样例输入2" class="headerlink" title="样例输入2"></a>样例输入2</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2 3 5</span><br><span class="line">Imgonnawin!</span><br><span class="line">PickMe</span><br></pre></td></tr></table></figure><h2 id="样例输出2"><a href="#样例输出2" class="headerlink" title="样例输出2"></a>样例输出2</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Keep going...</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function">ULL <span class="title">bkdr</span><span class="params">(<span class="keyword">char</span>* s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ULL seed = <span class="number">131</span>, h = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (*s)</span><br><span class="line">        h = h * seed + (*s++);</span><br><span class="line">    <span class="keyword">return</span> h;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> m, n, s;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>, &amp;m, &amp;n, &amp;s);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">map</span>&lt;ULL, <span class="keyword">int</span>&gt; mmp;</span><br><span class="line">    <span class="keyword">int</span> now=<span class="number">0</span>, num=<span class="number">0</span>; <span class="keyword">char</span> t[<span class="number">25</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>, t); now++;</span><br><span class="line">        <span class="keyword">if</span>(now&gt;=s &amp;&amp; (now-s)%n==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> x = bkdr(t);</span><br><span class="line">            <span class="keyword">if</span>(mmp.count(x) == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%s\n"</span>, t);</span><br><span class="line">                num++, mmp[x]++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                now--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(num == <span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">"Keep going...\n"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1070 结绳</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1070%20%E7%BB%93%E7%BB%B3/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:02 GMT+0800 (GMT+08:00) --><h1 id="结绳-PATB-1070"><a href="#结绳-PATB-1070" class="headerlink" title="结绳 (PATB-1070)"></a>结绳 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805264706813952" target="_blank" rel="noopener">PATB-1070</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>给定一段一段的绳子，你需要把它们串成一条绳。每次串连的时候，是把两段绳子对折，再如下图所示套接在一起。这样得到的绳子又被当成是另一段绳子，可以再次对折去跟另一段绳子串连。每次串连后，原来两段绳子的长度就会减半。</p><p><img src="https://images.ptausercontent.com/46293e57-aa0e-414b-b5c3-7c4b2d5201e2.jpg" alt="rope.jpg"></p><p>给定 N 段绳子的长度，你需要找出它们能串成的绳子的最大长度。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>每个输入包含 1 个测试用例。每个测试用例第 1 行给出正整数 N (2≤N≤10^4)；第 2 行给出 N 个正整数，即原始绳段的长度，数字间以空格分隔。所有整数都不超过10^4。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>在一行中输出能够串成的绳子的最大长度。结果向下取整，即取为不超过最大长度的最近整数。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">8</span><br><span class="line">10 15 12 3 4 13 1 15</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">14</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e4</span> + <span class="number">5</span>;</span><br><span class="line">DB a[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lf"</span>, &amp;a[i]);</span><br><span class="line">    sort(a, a+n);</span><br><span class="line">    </span><br><span class="line">    DB sum = a[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;n; i++)</span><br><span class="line">        sum = sum/<span class="number">2</span> + a[i]/<span class="number">2</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, (<span class="keyword">int</span>)sum);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1071 小赌怡情</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1071%20%E5%B0%8F%E8%B5%8C%E6%80%A1%E6%83%85/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:02 GMT+0800 (GMT+08:00) --><h1 id="小赌怡情-PATB-1071"><a href="#小赌怡情-PATB-1071" class="headerlink" title="小赌怡情 (PATB-1071)"></a>小赌怡情 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805264312549376" target="_blank" rel="noopener">PATB-1071</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>常言道“小赌怡情”。这是一个很简单的小游戏：首先由计算机给出第一个整数；然后玩家下注赌第二个整数将会比第一个数大还是小；玩家下注 t 个筹码后，计算机给出第二个数。若玩家猜对了，则系统奖励玩家 t 个筹码；否则扣除玩家 t 个筹码。</p><p>注意：玩家下注的筹码数不能超过自己帐户上拥有的筹码数。当玩家输光了全部筹码后，游戏就结束。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在第一行给出 2 个正整数 T 和 K（≤ 100），分别是系统在初始状态下赠送给玩家的筹码数、以及需要处理的游戏次数。随后 K 行，每行对应一次游戏，顺序给出 4 个数字：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">n1 b t n2</span><br></pre></td></tr></table></figure><p>其中 <code>n1</code> 和 <code>n2</code> 是计算机先后给出的两个[0, 9]内的整数，保证两个数字不相等。<code>b</code> 为 0 表示玩家赌<code>小</code>，为 1 表示玩家赌<code>大</code>。<code>t</code> 表示玩家下注的筹码数，保证在整型范围内。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>对每一次游戏，根据下列情况对应输出（其中 <code>t</code> 是玩家下注量，<code>x</code> 是玩家当前持有的筹码量）：</p><ul><li>玩家赢，输出 <code>Win t! Total = x.</code>；</li><li>玩家输，输出 <code>Lose t. Total = x.</code>；</li><li>玩家下注超过持有的筹码量，输出 <code>Not enough tokens. Total = x.</code>；</li><li>玩家输光后，输出 <code>Game Over.</code> 并结束程序。</li></ul></blockquote><h2 id="样例输入1"><a href="#样例输入1" class="headerlink" title="样例输入1"></a>样例输入1</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">100 4</span><br><span class="line">8 0 100 2</span><br><span class="line">3 1 50 1</span><br><span class="line">5 1 200 6</span><br><span class="line">7 0 200 8</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Win 100!  Total &#x3D; 200.</span><br><span class="line">Lose 50.  Total &#x3D; 150.</span><br><span class="line">Not enough tokens.  Total &#x3D; 150.</span><br><span class="line">Not enough tokens.  Total &#x3D; 150.</span><br></pre></td></tr></table></figure><h2 id="样例输入2"><a href="#样例输入2" class="headerlink" title="样例输入2"></a>样例输入2</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">100 4</span><br><span class="line">8 0 100 2</span><br><span class="line">3 1 200 1</span><br><span class="line">5 1 200 6</span><br><span class="line">7 0 200 8</span><br></pre></td></tr></table></figure><h2 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Win 100!  Total &#x3D; 200.</span><br><span class="line">Lose 200.  Total &#x3D; 0.</span><br><span class="line">Game Over.</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> sum, n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;sum, &amp;n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> n1, b, t, n2;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d %d %d"</span>, &amp;n1, &amp;b, &amp;t, &amp;n2);</span><br><span class="line">        <span class="keyword">if</span>(t &gt; sum)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Not enough tokens.  Total = %d.\n"</span>, sum);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(b == (n1&lt;n2))</span><br><span class="line">        &#123;</span><br><span class="line">            sum += t;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Win %d!  Total = %d.\n"</span>, t, sum);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            sum -= t;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Lose %d.  Total = %d.\n"</span>, t, sum);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(sum == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Game Over.\n"</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1072 开学寄语</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1072%20%E5%BC%80%E5%AD%A6%E5%AF%84%E8%AF%AD/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:02 GMT+0800 (GMT+08:00) --><h1 id="开学寄语-PATB-1072"><a href="#开学寄语-PATB-1072" class="headerlink" title="开学寄语 (PATB-1072)"></a>开学寄语 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805263964422144" target="_blank" rel="noopener">PATB-1072</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>下图是上海某校的新学期开学寄语：天将降大任于斯人也，必先删其微博，卸其 QQ，封其电脑，夺其手机，收其 ipad，断其 wifi，使其百无聊赖，然后，净面、理发、整衣，然后思过、读书、锻炼、明智、开悟、精进。而后必成大器也！</p><p><img src="https://images.ptausercontent.com/3b1d9f4a-778b-4942-a9e2-836262f363aa.JPG" alt="jiyu.JPG"></p><p>本题要求你写个程序帮助这所学校的老师检查所有学生的物品，以助其成大器。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入第一行给出两个正整数 N（≤ 1000）和 M（≤ 6），分别是学生人数和需要被查缴的物品种类数。第二行给出 M 个需要被查缴的物品编号，其中编号为 4 位数字。随后 N 行，每行给出一位学生的姓名缩写（由 1-4 个大写英文字母组成）、个人物品数量 K（0 ≤ K ≤ 10）、以及 K 个物品的编号。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>顺次检查每个学生携带的物品，如果有需要被查缴的物品存在，则按以下格式输出该生的信息和其需要被查缴的物品的信息（注意行末不得有多余空格）：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">姓名缩写: 物品编号1 物品编号2 ……</span><br></pre></td></tr></table></figure><p>最后一行输出存在问题的学生的总人数和被查缴物品的总数。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">4 2</span><br><span class="line">2333 6666</span><br><span class="line">CYLL 3 1234 2345 3456</span><br><span class="line">U 4 9966 6666 8888 6666</span><br><span class="line">GG 2 2333 7777</span><br><span class="line">JJ 3 0012 6666 2333</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">U: 6666 6666</span><br><span class="line">GG: 2333</span><br><span class="line">JJ: 6666 2333</span><br><span class="line">3 5</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e4</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> a[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, m;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;n, &amp;m);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;x);</span><br><span class="line">        a[x]++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> ans1=<span class="number">0</span>, ans2=<span class="number">0</span>; <span class="keyword">char</span> t[<span class="number">5</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> num, x, f = <span class="number">1</span>;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s %d"</span>, t, &amp;num);</span><br><span class="line">        <span class="keyword">while</span>(num--)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;x);</span><br><span class="line">            <span class="keyword">if</span>(a[x])</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(f)&#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"%s:"</span>, t);</span><br><span class="line">                    ans1++;</span><br><span class="line">                    f = <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">" %04d"</span>, x);</span><br><span class="line">                ans2++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(f == <span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>, ans1, ans2);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1073 多选题常见计分法</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1073%20%E5%A4%9A%E9%80%89%E9%A2%98%E5%B8%B8%E8%A7%81%E8%AE%A1%E5%88%86%E6%B3%95/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:02 GMT+0800 (GMT+08:00) --><h1 id="多选题常见计分法-PATB-1073"><a href="#多选题常见计分法-PATB-1073" class="headerlink" title="多选题常见计分法 (PATB-1073)"></a>多选题常见计分法 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805263624683520" target="_blank" rel="noopener">PATB-1073</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>批改多选题是比较麻烦的事情，有很多不同的计分方法。有一种最常见的计分方法是：如果考生选择了部分正确选项，并且没有选择任何错误选项，则得到 50% 分数；如果考生选择了任何一个错误的选项，则不能得分。本题就请你写个程序帮助老师批改多选题，并且指出哪道题的哪个选项错的人最多。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在第一行给出两个正整数 N（≤1000）和 M（≤100），分别是学生人数和多选题的个数。随后 M 行，每行顺次给出一道题的满分值（不超过 5 的正整数）、选项个数（不少于 2 且不超过 5 的正整数）、正确选项个数（不超过选项个数的正整数）、所有正确选项。注意每题的选项从小写英文字母 a 开始顺次排列。各项间以 1 个空格分隔。最后 N 行，每行给出一个学生的答题情况，其每题答案格式为 <code>(选中的选项个数 选项1 ……)</code>，按题目顺序给出。注意：题目保证学生的答题情况是合法的，即不存在选中的选项数超过实际选项数的情况。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>按照输入的顺序给出每个学生的得分，每个分数占一行，输出小数点后 1 位。最后输出错得最多的题目选项的信息，格式为：<code>错误次数 题目编号（题目按照输入的顺序从1开始编号）-选项号</code>。如果有并列，则每行一个选项，按题目编号递增顺序输出；再并列则按选项号递增顺序输出。行首尾不得有多余空格。如果所有题目都没有人错，则在最后一行输出 <code>Too simple</code>。</p></blockquote><h2 id="样例输入1"><a href="#样例输入1" class="headerlink" title="样例输入1"></a>样例输入1</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3 4 </span><br><span class="line">3 4 2 a c</span><br><span class="line">2 5 1 b</span><br><span class="line">5 3 2 b c</span><br><span class="line">1 5 4 a b d e</span><br><span class="line">(2 a c) (3 b d e) (2 a c) (3 a b e)</span><br><span class="line">(2 a c) (1 b) (2 a b) (4 a b d e)</span><br><span class="line">(2 b d) (1 e) (1 c) (4 a b c d)</span><br></pre></td></tr></table></figure><h2 id="样例输出1"><a href="#样例输出1" class="headerlink" title="样例输出1"></a>样例输出1</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3.5</span><br><span class="line">6.0</span><br><span class="line">2.5</span><br><span class="line">2 2-e</span><br><span class="line">2 3-a</span><br><span class="line">2 3-b</span><br></pre></td></tr></table></figure><h2 id="样例输入2"><a href="#样例输入2" class="headerlink" title="样例输入2"></a>样例输入2</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2 2 </span><br><span class="line">3 4 2 a c</span><br><span class="line">2 5 1 b</span><br><span class="line">(2 a c) (1 b)</span><br><span class="line">(2 a c) (1 b)</span><br></pre></td></tr></table></figure><h2 id="样例输出2"><a href="#样例输出2" class="headerlink" title="样例输出2"></a>样例输出2</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">5.0</span><br><span class="line">5.0</span><br><span class="line">Too simple</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">P</span> &#123;</span></span><br><span class="line">    DB s;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">&#125;a[mxn];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> p[] = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">8</span>, <span class="number">16</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> err[mxn][<span class="number">5</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, m;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;n, &amp;m);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> x; <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lf %*d %d"</span>, &amp;a[i].s, &amp;x);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;x; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">" %c"</span>, &amp;ch);</span><br><span class="line">            a[i].t += p[ch-<span class="string">'a'</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        DB sum=<span class="number">0</span>; <span class="keyword">int</span> ans=<span class="number">0</span>, num=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%c"</span>, &amp;ch) &amp;&amp; ch != <span class="string">'\n'</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(ch == <span class="string">')'</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                num++;</span><br><span class="line">                <span class="keyword">if</span>(ans==a[num].t)</span><br><span class="line">                    sum += a[num].s;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>((ans | a[num].t)==a[num].t)</span><br><span class="line">                    sum += a[num].s * <span class="number">0.5</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;<span class="number">5</span>; j++)</span><br><span class="line">                    <span class="keyword">if</span>(((ans ^ a[num].t) &amp; p[j]) == p[j])</span><br><span class="line">                        err[num][j]++;</span><br><span class="line">    </span><br><span class="line">                ans = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">isalpha</span>(ch)) ans += p[ch-<span class="string">'a'</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%.1lf\n"</span>, sum);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> mx = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;<span class="number">5</span>; j++)</span><br><span class="line">            <span class="keyword">if</span>(mx &lt; err[i][j]) mx = err[i][j];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(mx == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Too simple\n"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;<span class="number">5</span>; j++)</span><br><span class="line">            <span class="keyword">if</span>(mx == err[i][j])</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%d %d-%c\n"</span>, mx, i, j+<span class="string">'a'</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1074 宇宙无敌加法器</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1074%20%E5%AE%87%E5%AE%99%E6%97%A0%E6%95%8C%E5%8A%A0%E6%B3%95%E5%99%A8/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:02 GMT+0800 (GMT+08:00) --><h1 id="宇宙无敌加法器-PATB-1074"><a href="#宇宙无敌加法器-PATB-1074" class="headerlink" title="宇宙无敌加法器 (PATB-1074)"></a>宇宙无敌加法器 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805263297527808" target="_blank" rel="noopener">PATB-1074</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>地球人习惯使用十进制数，并且默认一个数字的每一位都是十进制的。而在 PAT 星人开挂的世界里，每个数字的每一位都是不同进制的，这种神奇的数字称为“PAT数”。每个 PAT 星人都必须熟记各位数字的进制表，例如“……0527”就表示最低位是 7 进制数、第 2 位是 2 进制数、第 3 位是 5 进制数、第 4 位是 10 进制数，等等。每一位的进制 d 或者是 0（表示十进制）、或者是 [2，9] 区间内的整数。理论上这个进制表应该包含无穷多位数字，但从实际应用出发，PAT 星人通常只需要记住前 20 位就够用了，以后各位默认为 10 进制。</p><p>在这样的数字系统中，即使是简单的加法运算也变得不简单。例如对应进制表“0527”，该如何计算“6203 + 415”呢？我们得首先计算最低位：3 + 5 = 8；因为最低位是 7 进制的，所以我们得到 1 和 1 个进位。第 2 位是：0 + 1 + 1（进位）= 2；因为此位是 2 进制的，所以我们得到 0 和 1 个进位。第 3 位是：2 + 4 + 1（进位）= 7；因为此位是 5 进制的，所以我们得到 2 和 1 个进位。第 4 位是：6 + 1（进位）= 7；因为此位是 10 进制的，所以我们就得到 7。最后我们得到：6203 + 415 = 7201。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入首先在第一行给出一个 N 位的进制表（0 &lt; N ≤ 20），以回车结束。 随后两行，每行给出一个不超过 N 位的非负的 PAT 数。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>在一行中输出两个 PAT 数之和。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">30527</span><br><span class="line">06203</span><br><span class="line">415</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">7201</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">char</span> s[mxn], a[mxn], b[mxn], ans[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">(<span class="keyword">char</span> *s, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> m = <span class="built_in">strlen</span>(s);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i+i&lt;m; i++)</span><br><span class="line">        swap(s[i], s[m-i<span class="number">-1</span>]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=m; i&lt;n; i++)</span><br><span class="line">        s[i] = <span class="string">'0'</span>;</span><br><span class="line">    s[n] = <span class="string">'\0'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s %s %s"</span>, s, a ,b);</span><br><span class="line">    <span class="keyword">int</span> sl = <span class="built_in">strlen</span>(s);</span><br><span class="line">    init(s, sl); init(a, sl); init(b, sl);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>, p=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(; i&lt;sl; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        s[i] += s[i]-<span class="string">'0'</span> ? <span class="number">0</span> : <span class="number">10</span>;</span><br><span class="line">        ans[i] = (a[i]-<span class="string">'0'</span> + b[i]-<span class="string">'0'</span> + p) % (s[i]-<span class="string">'0'</span>) +<span class="string">'0'</span>;</span><br><span class="line">        p = (a[i]-<span class="string">'0'</span> + b[i]-<span class="string">'0'</span> + p) / (s[i]-<span class="string">'0'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(p) ans[i++] = <span class="string">'1'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> f = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(i--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(f &amp;&amp; ans[i] == <span class="string">'0'</span>)</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        f = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%c"</span>, ans[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(f) <span class="built_in">printf</span>(<span class="string">"0"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1075 链表元素分类</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1075%20%E9%93%BE%E8%A1%A8%E5%85%83%E7%B4%A0%E5%88%86%E7%B1%BB/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:02 GMT+0800 (GMT+08:00) --><h1 id="链表元素分类-PATB-1075"><a href="#链表元素分类-PATB-1075" class="headerlink" title="链表元素分类 (PATB-1075)"></a>链表元素分类 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805262953594880" target="_blank" rel="noopener">PATB-1075</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>给定一个单链表，请编写程序将链表元素进行分类排列，使得所有负值元素都排在非负值元素的前面，而 [0, K] 区间内的元素都排在大于 K 的元素前面。但每一类内部元素的顺序是不能改变的。例如：给定链表为 18→7→-4→0→5→-6→10→11→-2，K 为 10，则输出应该为 -4→-6→-2→7→0→5→10→18→11。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>每个输入包含一个测试用例。每个测试用例第 1 行给出：第 1 个结点的地址；结点总个数，即正整数N (≤10^5)；以及正整数K (≤10^3)。结点的地址是 5 位非负整数，NULL 地址用 −1 表示。</p><p>接下来有 N 行，每行格式为：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Address Data Next</span><br></pre></td></tr></table></figure><p>其中 <code>Address</code> 是结点地址；<code>Data</code> 是该结点保存的数据，为 [−10^5,10^5] 区间内的整数；<code>Next</code> 是下一结点的地址。题目保证给出的链表不为空。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>对每个测试用例，按链表从头到尾的顺序输出重排后的结果链表，其上每个结点占一行，格式与输入相同。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">00100 9 10</span><br><span class="line">23333 10 27777</span><br><span class="line">00000 0 99999</span><br><span class="line">00100 18 12309</span><br><span class="line">68237 -6 23333</span><br><span class="line">33218 -4 00000</span><br><span class="line">48652 -2 -1</span><br><span class="line">99999 5 68237</span><br><span class="line">27777 11 48652</span><br><span class="line">12309 7 33218</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">33218 -4 68237</span><br><span class="line">68237 -6 48652</span><br><span class="line">48652 -2 12309</span><br><span class="line">12309 7 00000</span><br><span class="line">00000 0 99999</span><br><span class="line">99999 5 23333</span><br><span class="line">23333 10 00100</span><br><span class="line">00100 18 27777</span><br><span class="line">27777 11 -1</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> val[mxn], nxt[mxn];</span><br><span class="line"><span class="keyword">int</span> tmp[mxn], ans[mxn], vis[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> s, n, k, x;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>, &amp;s, &amp;n, &amp;k);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;x);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;val[x], &amp;nxt[x]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> cnt=<span class="number">0</span>, num=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> t=s; t!=<span class="number">-1</span>; t=nxt[t]) &#123;</span><br><span class="line">        tmp[cnt++] = t;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;cnt; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(val[tmp[i]] &lt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            ans[num++] = tmp[i];</span><br><span class="line">            vis[tmp[i]]++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;cnt; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(vis[tmp[i]]==<span class="number">0</span> &amp;&amp; val[tmp[i]] &lt;= k)</span><br><span class="line">        &#123;</span><br><span class="line">            ans[num++] = tmp[i];    </span><br><span class="line">            vis[tmp[i]]++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;cnt; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(vis[tmp[i]]==<span class="number">0</span>)</span><br><span class="line">            ans[num++] = tmp[i];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;num<span class="number">-1</span>; i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%05d %d %05d\n"</span>, ans[i], val[ans[i]], ans[i+<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%05d %d -1"</span>, ans[num<span class="number">-1</span>], val[ans[num<span class="number">-1</span>]]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1076 Wifi密码</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1076%20Wifi%E5%AF%86%E7%A0%81/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:02 GMT+0800 (GMT+08:00) --><h1 id="Wifi密码-PATB-1076"><a href="#Wifi密码-PATB-1076" class="headerlink" title="Wifi密码 (PATB-1076)"></a>Wifi密码 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805262622244864" target="_blank" rel="noopener">PATB-1076</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>下面是微博上流传的一张照片：“各位亲爱的同学们，鉴于大家有时需要使用 wifi，又怕耽误亲们的学习，现将 wifi 密码设置为下列数学题答案：A-1；B-2；C-3；D-4；请同学们自己作答，每两日一换。谢谢合作！！~”—— 老师们为了促进学生学习也是拼了…… 本题就要求你写程序把一系列题目的答案按照卷子上给出的对应关系翻译成 wifi 的密码。这里简单假设每道选择题都有 4 个选项，有且只有 1 个正确答案。</p><p><img src="https://images.ptausercontent.com/7e56be3f-caba-45f1-b9cb-38a96d44de76.jpg" alt="wifi.jpg"></p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入第一行给出一个正整数 N（≤ 100），随后 N 行，每行按照 <code>编号-答案</code> 的格式给出一道题的 4 个选项，<code>T</code> 表示正确选项，<code>F</code> 表示错误选项。选项间用空格分隔。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>在一行中输出 wifi 密码。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">8</span><br><span class="line">A-T B-F C-F D-F</span><br><span class="line">C-T B-F A-F D-F</span><br><span class="line">A-F D-F C-F B-T</span><br><span class="line">B-T A-F C-F D-F</span><br><span class="line">B-F D-T A-F C-F</span><br><span class="line">A-T C-F B-F D-F</span><br><span class="line">D-T B-F C-F A-F</span><br><span class="line">C-T A-F B-F D-F</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">13224143</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;<span class="number">4</span>; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">char</span> a, b;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">" %c-%c"</span>, &amp;a, &amp;b);</span><br><span class="line">            <span class="keyword">if</span>(b==<span class="string">'T'</span>)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%d"</span>, a-<span class="string">'A'</span>+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1077 互评成绩计算</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1077%20%E4%BA%92%E8%AF%84%E6%88%90%E7%BB%A9%E8%AE%A1%E7%AE%97/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:02 GMT+0800 (GMT+08:00) --><h1 id="互评成绩计算-PATB-1077"><a href="#互评成绩计算-PATB-1077" class="headerlink" title="互评成绩计算 (PATB-1077)"></a>互评成绩计算 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805262303477760" target="_blank" rel="noopener">PATB-1077</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>在浙大的计算机专业课中，经常有互评分组报告这个环节。一个组上台介绍自己的工作，其他组在台下为其表现评分。最后这个组的互评成绩是这样计算的：所有其他组的评分中，去掉一个最高分和一个最低分，剩下的分数取平均分记为 G1；老师给这个组的评分记为 G2。该组得分为 (G1+G2)/2，最后结果四舍五入后保留整数分。本题就要求你写个程序帮助老师计算每个组的互评成绩。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入第一行给出两个正整数 N（&gt; 3）和 M，分别是分组数和满分，均不超过 100。随后 N 行，每行给出该组得到的 N 个分数（均保证为整型范围内的整数），其中第 1 个是老师给出的评分，后面 N−1 个是其他组给的评分。合法的输入应该是 [0,M] 区间内的整数，若不在合法区间内，则该分数须被忽略。题目保证老师的评分都是合法的，并且每个组至少会有 3 个来自同学的合法评分。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>为每个组输出其最终得分。每个得分占一行。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">6 50</span><br><span class="line">42 49 49 35 38 41</span><br><span class="line">36 51 50 28 -1 30</span><br><span class="line">40 36 41 33 47 49</span><br><span class="line">30 250 -25 27 45 31</span><br><span class="line">48 0 0 50 50 1234</span><br><span class="line">43 41 36 29 42 29</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">42</span><br><span class="line">33</span><br><span class="line">41</span><br><span class="line">31</span><br><span class="line">37</span><br><span class="line">39</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, m;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;n, &amp;m);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> mx=<span class="number">-1</span>, mi=m+<span class="number">1</span>, t, g1, g2=<span class="number">0</span>, num=<span class="number">-2</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;n; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;t);</span><br><span class="line">            <span class="keyword">if</span>(j)&#123;</span><br><span class="line">                <span class="keyword">if</span>(t&lt;<span class="number">0</span> || t&gt;m) <span class="keyword">continue</span>;</span><br><span class="line">                g2 += t;</span><br><span class="line">                mx = max(mx, t);</span><br><span class="line">                mi = min(mi, t);</span><br><span class="line">                num++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                g1 = t;</span><br><span class="line">        &#125;</span><br><span class="line">        g2 = g2-mx-mi;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, (<span class="keyword">int</span>)round((g1+<span class="number">1.0</span>*g2/num)*<span class="number">0.5</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1078 字符串压缩与解压</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1078%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8E%8B%E7%BC%A9%E4%B8%8E%E8%A7%A3%E5%8E%8B/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:02 GMT+0800 (GMT+08:00) --><h1 id="字符串压缩与解压-PATB-1078"><a href="#字符串压缩与解压-PATB-1078" class="headerlink" title="字符串压缩与解压 (PATB-1078)"></a>字符串压缩与解压 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805262018265088" target="_blank" rel="noopener">PATB-1078</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>文本压缩有很多种方法，这里我们只考虑最简单的一种：把由相同字符组成的一个连续的片段用这个字符和片段中含有这个字符的个数来表示。例如 <code>ccccc</code> 就用 <code>5c</code> 来表示。如果字符没有重复，就原样输出。例如 <code>aba</code> 压缩后仍然是 <code>aba</code>。</p><p>解压方法就是反过来，把形如 <code>5c</code> 这样的表示恢复为 <code>ccccc</code>。</p><p>本题需要你根据压缩或解压的要求，对给定字符串进行处理。这里我们简单地假设原始字符串是完全由英文字母和空格组成的非空字符串。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入第一行给出一个字符，如果是 <code>C</code> 就表示下面的字符串需要被压缩；如果是 <code>D</code> 就表示下面的字符串需要被解压。第二行给出需要被压缩或解压的不超过 1000 个字符的字符串，以回车结尾。题目保证字符重复个数在整型范围内，且输出文件不超过 1MB。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>根据要求压缩或解压字符串，并在一行中输出结果。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">C</span><br><span class="line">TTTTThhiiiis isssss a   tesssst CAaaa as</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">5T2h4is i5s a3 te4st CA3a as</span><br></pre></td></tr></table></figure><h2 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">D</span><br><span class="line">5T2h4is i5s a3 te4st CA3a as10Z</span><br></pre></td></tr></table></figure><h2 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">TTTTThhiiiis isssss a   tesssst CAaaa asZZZZZZZZZZ</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">char</span> s[mxn], c;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%c%*c"</span>, &amp;c);</span><br><span class="line">    fgets(s, mxn, <span class="built_in">stdin</span>);</span><br><span class="line">    <span class="keyword">int</span> len = <span class="built_in">strlen</span>(s);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(c == <span class="string">'C'</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> num=<span class="number">1</span>, i=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">char</span> t = s[i];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(i++; i&lt;len; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(s[i] == t)&#123;</span><br><span class="line">                num++;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(num&gt;<span class="number">1</span>) <span class="built_in">printf</span>(<span class="string">"%d"</span>, num);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%c"</span>, t);</span><br><span class="line">            t = s[i];</span><br><span class="line">            num = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(num&gt;<span class="number">1</span>) <span class="built_in">printf</span>(<span class="string">"%d"</span>, num);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%c"</span>, t);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> num=<span class="number">0</span>, i=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>; s[i]==<span class="string">' '</span>; i++)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%c"</span>, s[i]);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(; i&lt;len; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">isdigit</span>(s[i]))</span><br><span class="line">                num = num*<span class="number">10</span> + s[i]-<span class="string">'0'</span>;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">while</span>(num--) <span class="built_in">printf</span>(<span class="string">"%c"</span>, s[i]);</span><br><span class="line">                num = <span class="built_in">isdigit</span>(s[i+<span class="number">1</span>]) ? <span class="number">0</span> : <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1079 延迟的回文数</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1079%20%E5%BB%B6%E8%BF%9F%E7%9A%84%E5%9B%9E%E6%96%87%E6%95%B0/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:02 GMT+0800 (GMT+08:00) --><h1 id="延迟的回文数-PATB-1079"><a href="#延迟的回文数-PATB-1079" class="headerlink" title="延迟的回文数 (PATB-1079)"></a>延迟的回文数 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805261754023936" target="_blank" rel="noopener">PATB-1079</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>给定一个 k+1 位的正整数 N，写成 ak⋯a1a0 的形式，其中对所有 i 有 0≤ai&lt;<em>10</em> 且 ak&gt;0。N 被称为一个<strong>回文数</strong>，当且仅当对所有 i 有 ai=ak−i。零也被定义为一个回文数。</p><p>非回文数也可以通过一系列操作变出回文数。首先将该数字逆转，再将逆转数与该数相加，如果和还不是一个回文数，就重复这个逆转再相加的操作，直到一个回文数出现。如果一个非回文数可以变出回文数，就称这个数为<strong>延迟的回文数</strong>。（定义翻译自 <a href="https://en.wikipedia.org/wiki/Palindromic_number" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/Palindromic_number</a> ）</p><p>给定任意一个正整数，本题要求你找到其变出的那个回文数。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在一行中给出一个不超过1000位的正整数。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>对给定的整数，一行一行输出其变出回文数的过程。每行格式如下</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">A + B &#x3D; C</span><br></pre></td></tr></table></figure><p>其中 <code>A</code> 是原始的数字，<code>B</code> 是 <code>A</code> 的逆转数，<code>C</code> 是它们的和。<code>A</code> 从输入的整数开始。重复操作直到 <code>C</code> 在 10 步以内变成回文数，这时在一行中输出 <code>C is a palindromic number.</code>；或者如果 10 步都没能得到回文数，最后就在一行中输出 <code>Not found in 10 iterations.</code>。</p></blockquote><h2 id="样例输入1"><a href="#样例输入1" class="headerlink" title="样例输入1"></a>样例输入1</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">97152</span><br></pre></td></tr></table></figure><h2 id="样例输出1"><a href="#样例输出1" class="headerlink" title="样例输出1"></a>样例输出1</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">97152 + 25179 &#x3D; 122331</span><br><span class="line">122331 + 133221 &#x3D; 255552</span><br><span class="line">255552 is a palindromic number.</span><br></pre></td></tr></table></figure><h2 id="样例输入2"><a href="#样例输入2" class="headerlink" title="样例输入2"></a>样例输入2</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">196</span><br></pre></td></tr></table></figure><h2 id="样例输出2"><a href="#样例输出2" class="headerlink" title="样例输出2"></a>样例输出2</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">196 + 691 &#x3D; 887</span><br><span class="line">887 + 788 &#x3D; 1675</span><br><span class="line">1675 + 5761 &#x3D; 7436</span><br><span class="line">7436 + 6347 &#x3D; 13783</span><br><span class="line">13783 + 38731 &#x3D; 52514</span><br><span class="line">52514 + 41525 &#x3D; 94039</span><br><span class="line">94039 + 93049 &#x3D; 187088</span><br><span class="line">187088 + 880781 &#x3D; 1067869</span><br><span class="line">1067869 + 9687601 &#x3D; 10755470</span><br><span class="line">10755470 + 07455701 &#x3D; 18211171</span><br><span class="line">Not found in 10 iterations.</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">char</span> s[mxn], t[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">char</span> *s, <span class="keyword">char</span> *t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> len=<span class="built_in">strlen</span>(s), p=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;len; i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> x = s[i]-<span class="string">'0'</span> + t[i]-<span class="string">'0'</span> + p;</span><br><span class="line">        p = x / <span class="number">10</span>;</span><br><span class="line">        s[i] = x % <span class="number">10</span> + <span class="string">'0'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(p)</span><br><span class="line">        s[len++]=<span class="string">'1'</span>;</span><br><span class="line">    s[len]=<span class="string">'\0'</span>;</span><br><span class="line">    reverse(s, s+len);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>, s);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        reverse_copy(s, s+<span class="built_in">strlen</span>(s), t);</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">strcmp</span>(s, t) == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%s is a palindromic number.\n"</span>, s);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%s + %s = "</span>, s, t);</span><br><span class="line">        add(s, t);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%s\n"</span>, s);</span><br><span class="line">        <span class="keyword">if</span>(++num &gt;= <span class="number">10</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Not found in 10 iterations.\n"</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1080 MOOC期终成绩</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1080%20MOOC%E6%9C%9F%E7%BB%88%E6%88%90%E7%BB%A9/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:02 GMT+0800 (GMT+08:00) --><h1 id="MOOC期终成绩-PATB-1080"><a href="#MOOC期终成绩-PATB-1080" class="headerlink" title="MOOC期终成绩 (PATB-1080)"></a>MOOC期终成绩 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805261493977088" target="_blank" rel="noopener">PATB-1080</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>对于在中国大学MOOC（<a href="http://www.icourse163.org/" target="_blank" rel="noopener">http://www.icourse163.org/</a> ）学习“数据结构”课程的学生，想要获得一张合格证书，必须首先获得不少于200分的在线编程作业分，然后总评获得不少于60分（满分100）。总评成绩的计算公式为 G=(Gmid−term×40%+Gfinal×60%)，如果 Gmid−term&gt;Gfinal；否则总评 G 就是 Gfinal。这里 Gmid−term 和 Gfinal 分别为学生的期中和期末成绩。</p><p>现在的问题是，每次考试都产生一张独立的成绩单。本题就请你编写程序，把不同的成绩单合为一张。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在第一行给出3个整数，分别是 P（做了在线编程作业的学生数）、M（参加了期中考试的学生数）、N（参加了期末考试的学生数）。每个数都不超过10000。</p><p>接下来有三块输入。第一块包含 P 个在线编程成绩 Gp；第二块包含 M 个期中考试成绩 Gmid−term；第三块包含 N 个期末考试成绩 Gfinal。每个成绩占一行，格式为：<code>学生学号 分数</code>。其中<code>学生学号</code>为不超过20个字符的英文字母和数字；<code>分数</code>是非负整数（编程总分最高为900分，期中和期末的最高分为100分）。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>打印出获得合格证书的学生名单。每个学生占一行，格式为：</p><p><code>学生学号</code> Gp Gmid−term Gfinal G</p><p>如果有的成绩不存在（例如某人没参加期中考试），则在相应的位置输出“−1”。输出顺序为按照总评分数（四舍五入精确到整数）递减。若有并列，则按学号递增。题目保证学号没有重复，且至少存在1个合格的学生。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">6 6 7</span><br><span class="line">01234 880</span><br><span class="line">a1903 199</span><br><span class="line">ydjh2 200</span><br><span class="line">wehu8 300</span><br><span class="line">dx86w 220</span><br><span class="line">missing 400</span><br><span class="line">ydhfu77 99</span><br><span class="line">wehu8 55</span><br><span class="line">ydjh2 98</span><br><span class="line">dx86w 88</span><br><span class="line">a1903 86</span><br><span class="line">01234 39</span><br><span class="line">ydhfu77 88</span><br><span class="line">a1903 66</span><br><span class="line">01234 58</span><br><span class="line">wehu8 84</span><br><span class="line">ydjh2 82</span><br><span class="line">missing 99</span><br><span class="line">dx86w 81</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">missing 400 -1 99 99</span><br><span class="line">ydjh2 200 98 82 88</span><br><span class="line">dx86w 220 88 81 84</span><br><span class="line">wehu8 300 55 84 84</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">P</span>&#123;</span></span><br><span class="line">    <span class="built_in">string</span> s;</span><br><span class="line">    <span class="keyword">int</span> gp, gm, gf, g;</span><br><span class="line">&#125;a[mxn], ans[mxn], t;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(P a, P b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a.g != b.g ? a.g &gt; b.g : a.s &lt; b.s;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;   </span><br><span class="line">    <span class="keyword">int</span> p, m, n; </span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>, &amp;p, &amp;m, &amp;n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">map</span>&lt;<span class="built_in">string</span>, <span class="keyword">int</span>&gt; mmp;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;p; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; t.s &gt;&gt; t.gp;</span><br><span class="line">        <span class="keyword">if</span>(t.gp &gt;= <span class="number">200</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            a[num] = P&#123;t.s, t.gp, <span class="number">-1</span>, <span class="number">-1</span>, <span class="number">0</span>&#125;;</span><br><span class="line">            mmp[t.s] = num++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; t.s &gt;&gt; t.gm;</span><br><span class="line">        <span class="keyword">if</span>(mmp.count(t.s) != <span class="number">0</span>)</span><br><span class="line">            a[mmp[t.s]].gm = t.gm;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; t.s &gt;&gt; t.gf;</span><br><span class="line">        <span class="keyword">if</span>(mmp.count(t.s) != <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> id = mmp[t.s];</span><br><span class="line">            a[id].g = a[id].gf = t.gf;</span><br><span class="line">            <span class="keyword">if</span>(a[id].gm &gt; a[id].gf)</span><br><span class="line">                a[id].g = (<span class="keyword">int</span>)(<span class="number">0.4</span>*a[id].gm + <span class="number">0.6</span>*a[id].gf + <span class="number">0.5</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;num; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i].g &gt;= <span class="number">60</span>)</span><br><span class="line">            ans[cnt++] = a[i];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    sort(ans, ans+cnt, cmp);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;cnt; i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%s %d %d %d %d\n"</span>, ans[i].s.c_str(), ans[i].gp, ans[i].gm, ans[i].gf, ans[i].g);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1081 检查密码</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1081%20%E6%A3%80%E6%9F%A5%E5%AF%86%E7%A0%81/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:02 GMT+0800 (GMT+08:00) --><h1 id="检查密码-PATB-1081"><a href="#检查密码-PATB-1081" class="headerlink" title="检查密码 (PATB-1081)"></a>检查密码 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805261217153024" target="_blank" rel="noopener">PATB-1081</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>本题要求你帮助某网站的用户注册模块写一个密码合法性检查的小功能。该网站要求用户设置的密码必须由不少于6个字符组成，并且只能有英文字母、数字和小数点 <code>.</code>，还必须既有字母也有数字。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入第一行给出一个正整数 N（≤ 100），随后 N 行，每行给出一个用户设置的密码，为不超过 80 个字符的非空字符串，以回车结束。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>对每个用户的密码，在一行中输出系统反馈信息，分以下5种：</p><ul><li>如果密码合法，输出<code>Your password is wan mei.</code>；</li><li>如果密码太短，不论合法与否，都输出<code>Your password is tai duan le.</code>；</li><li>如果密码长度合法，但存在不合法字符，则输出<code>Your password is tai luan le.</code>；</li><li>如果密码长度合法，但只有字母没有数字，则输出<code>Your password needs shu zi.</code>；</li><li>如果密码长度合法，但只有数字没有字母，则输出<code>Your password needs zi mu.</code>。</li></ul></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">5</span><br><span class="line">123s</span><br><span class="line">zheshi.wodepw</span><br><span class="line">1234.5678</span><br><span class="line">WanMei23333</span><br><span class="line">pass*word.6</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Your password is tai duan le.</span><br><span class="line">Your password needs shu zi.</span><br><span class="line">Your password needs zi mu.</span><br><span class="line">Your password is wan mei.</span><br><span class="line">Your password is tai luan le.</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> s[<span class="number">100</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;   </span><br><span class="line">    <span class="keyword">int</span> n; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    getchar();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        fgets(s, <span class="number">100</span>, <span class="built_in">stdin</span>);</span><br><span class="line">        <span class="keyword">int</span> sl = <span class="built_in">strlen</span>(s) - <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(sl &lt; <span class="number">6</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Your password is tai duan le.\n"</span>);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> ok = <span class="number">1</span>, a = <span class="number">0</span>, b = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;sl; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">isdigit</span>(s[j]))</span><br><span class="line">                a++;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">isalpha</span>(s[j]))</span><br><span class="line">                b++;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(s[j]!=<span class="string">'.'</span>)</span><br><span class="line">                ok = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(ok == <span class="number">0</span> || (a==<span class="number">0</span> &amp;&amp; b==<span class="number">0</span>))</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Your password is tai luan le.\n"</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(a==<span class="number">0</span> &amp;&amp; b)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Your password needs shu zi.\n"</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(b==<span class="number">0</span> &amp;&amp; a)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Your password needs zi mu.\n"</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(a &amp;&amp; b)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Your password is wan mei.\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1082 射击比赛</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1082%20%E5%B0%84%E5%87%BB%E6%AF%94%E8%B5%9B/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:02 GMT+0800 (GMT+08:00) --><h1 id="射击比赛-PATB-1082"><a href="#射击比赛-PATB-1082" class="headerlink" title="射击比赛 (PATB-1082)"></a>射击比赛 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805260990660608" target="_blank" rel="noopener">PATB-1082</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>本题目给出的射击比赛的规则非常简单，谁打的弹洞距离靶心最近，谁就是冠军；谁差得最远，谁就是菜鸟。本题给出一系列弹洞的平面坐标(x,y)，请你编写程序找出冠军和菜鸟。我们假设靶心在原点(0,0)。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在第一行中给出一个正整数 N（≤ 10 000）。随后 N 行，每行按下列格式给出：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ID x y</span><br></pre></td></tr></table></figure><p>其中 <code>ID</code> 是运动员的编号（由 4 位数字组成）；<code>x</code> 和 <code>y</code> 是其打出的弹洞的平面坐标(<code>x</code>,<code>y</code>)，均为整数，且 0 ≤ |<code>x</code>|, |<code>y</code>| ≤ 100。题目保证每个运动员的编号不重复，且每人只打 1 枪。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>输出冠军和菜鸟的编号，中间空 1 格。题目保证他们是唯一的。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3</span><br><span class="line">0001 5 7</span><br><span class="line">1020 -1 3</span><br><span class="line">0233 0 -1</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">0233 0001</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">double</span> DB;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">PT</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    DB x, y;</span><br><span class="line">    PT() : x(<span class="number">0</span>), y(<span class="number">0</span>) &#123;&#125;;</span><br><span class="line">    PT(DB _x, DB _y) : x(_x), y(_y) &#123;&#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function">DB <span class="title">dist</span><span class="params">(PT p1, PT p2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sqrt</span>(Sq(p1.x - p2.x) + Sq(p1.y - p2.y));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">P</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> id;</span><br><span class="line">    DB ans;</span><br><span class="line">&#125;a[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(P a, P b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a.ans &lt; b.ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;   </span><br><span class="line">    <span class="keyword">int</span> n; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"></span><br><span class="line">    PT p;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %lf %lf"</span>, &amp;a[i].id, &amp;p.x, &amp;p.y);</span><br><span class="line">        a[i].ans = dist(p, PT&#123;<span class="number">0</span>, <span class="number">0</span>&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    sort(a, a+n, cmp);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%04d %04d\n"</span>, a[<span class="number">0</span>].id, a[n<span class="number">-1</span>].id);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1083 是否存在相等的差</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1083%20%E6%98%AF%E5%90%A6%E5%AD%98%E5%9C%A8%E7%9B%B8%E7%AD%89%E7%9A%84%E5%B7%AE/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:02 GMT+0800 (GMT+08:00) --><h1 id="是否存在相等的差-PATB-1083"><a href="#是否存在相等的差-PATB-1083" class="headerlink" title="是否存在相等的差 (PATB-1083)"></a>是否存在相等的差 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805260780945408" target="_blank" rel="noopener">PATB-1083</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>给定 N 张卡片，正面分别写上 1、2、……、N，然后全部翻面，洗牌，在背面分别写上 1、2、……、N。将每张牌的正反两面数字相减（大减小），得到 N 个非负差值，其中是否存在相等的差？</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入第一行给出一个正整数 N（2 ≤ N ≤ 10 000），随后一行给出 1 到 N 的一个洗牌后的排列，第 i 个数表示正面写了 i 的那张卡片背面的数字。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>按照“差值 重复次数”的格式从大到小输出重复的差值及其重复的次数，每行输出一个结果。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">8</span><br><span class="line">3 5 8 6 2 1 4 7</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">5 2</span><br><span class="line">3 3</span><br><span class="line">2 2</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[mxn], p[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;   </span><br><span class="line">    <span class="keyword">int</span> n; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]);</span><br><span class="line">        p[Abs(a[i]-i)]++;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">10000</span>; i&gt;=<span class="number">0</span>; i--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(p[i]&gt;<span class="number">1</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>, i, p[i]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1084 外观数列</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1084%20%E5%A4%96%E8%A7%82%E6%95%B0%E5%88%97/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:02 GMT+0800 (GMT+08:00) --><h1 id="外观数列-PATB-1084"><a href="#外观数列-PATB-1084" class="headerlink" title="外观数列 (PATB-1084)"></a>外观数列 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805260583813120" target="_blank" rel="noopener">PATB-1084</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>外观数列是指具有以下特点的整数序列：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">d, d1, d111, d113, d11231, d112213111, ...</span><br></pre></td></tr></table></figure><p>它从不等于 1 的数字 <code>d</code> 开始，序列的第 n+1 项是对第 n 项的描述。比如第 2 项表示第 1 项有 1 个 <code>d</code>，所以就是 <code>d1</code>；第 2 项是 1 个 <code>d</code>（对应 <code>d1</code>）和 1 个 1（对应 11），所以第 3 项就是 <code>d111</code>。又比如第 4 项是 <code>d113</code>，其描述就是 1 个 <code>d</code>，2 个 1，1 个 3，所以下一项就是 <code>d11231</code>。当然这个定义对 <code>d</code> = 1 也成立。本题要求你推算任意给定数字 <code>d</code> 的外观数列的第 N 项。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入第一行给出 [0,9] 范围内的一个整数 <code>d</code>、以及一个正整数 N（≤ 40），用空格分隔。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>在一行中给出数字 <code>d</code> 的外观数列的第 N 项。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1 8</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1123123111</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;   </span><br><span class="line">    <span class="built_in">string</span> s; <span class="keyword">int</span> n, j;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; s &gt;&gt; n;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> k=<span class="number">1</span>; k&lt;n; k++) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">string</span> t;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;s.length(); i=j)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (j=i; j&lt;s.length() &amp;&amp; s[j]==s[i]; j++);</span><br><span class="line">            t += s[i] + to_string(j - i);</span><br><span class="line">        &#125;</span><br><span class="line">        s = t;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%s\n"</span>, s.c_str());</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1085 PAT单位排行</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1085%20PAT%E5%8D%95%E4%BD%8D%E6%8E%92%E8%A1%8C/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:02 GMT+0800 (GMT+08:00) --><h1 id="PAT单位排行-PATB-1085"><a href="#PAT单位排行-PATB-1085" class="headerlink" title="PAT单位排行 (PATB-1085)"></a>PAT单位排行 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805260353126400" target="_blank" rel="noopener">PATB-1085</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>每次 PAT 考试结束后，考试中心都会发布一个考生单位排行榜。本题就请你实现这个功能。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入第一行给出一个正整数 N（≤105），即考生人数。随后 N 行，每行按下列格式给出一个考生的信息：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">准考证号 得分 学校</span><br></pre></td></tr></table></figure><p>其中<code>准考证号</code>是由 6 个字符组成的字符串，其首字母表示考试的级别：<code>B</code>代表乙级，<code>A</code>代表甲级，<code>T</code>代表顶级；<code>得分</code>是 [0, 100] 区间内的整数；<code>学校</code>是由不超过 6 个英文字母组成的单位码（大小写无关）。注意：题目保证每个考生的准考证号是不同的。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>首先在一行中输出单位个数。随后按以下格式非降序输出单位的排行榜：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">排名 学校 加权总分 考生人数</span><br></pre></td></tr></table></figure><p>其中<code>排名</code>是该单位的排名（从 1 开始）；<code>学校</code>是全部按小写字母输出的单位码；<code>加权总分</code>定义为<code>乙级总分/1.5 + 甲级总分 + 顶级总分*1.5</code>的<strong>整数部分</strong>；<code>考生人数</code>是该属于单位的考生的总人数。</p><p>学校首先按加权总分排行。如有并列，则应对应相同的排名，并按考生人数升序输出。如果仍然并列，则按单位码的字典序输出。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">10</span><br><span class="line">A57908 85 Au</span><br><span class="line">B57908 54 LanX</span><br><span class="line">A37487 60 au</span><br><span class="line">T28374 67 CMU</span><br><span class="line">T32486 24 hypu</span><br><span class="line">A66734 92 cmu</span><br><span class="line">B76378 71 AU</span><br><span class="line">A47780 45 lanx</span><br><span class="line">A72809 100 pku</span><br><span class="line">A03274 45 hypu</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">5</span><br><span class="line">1 cmu 192 2</span><br><span class="line">1 au 192 3</span><br><span class="line">3 pku 100 1</span><br><span class="line">4 hypu 81 2</span><br><span class="line">4 lanx 81 2</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">double</span> DB;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">P</span>&#123;</span></span><br><span class="line">    <span class="built_in">string</span> s;</span><br><span class="line">    DB sum;</span><br><span class="line">    <span class="keyword">int</span> num;</span><br><span class="line">&#125;a[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(P a, P b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a.sum != b.sum)</span><br><span class="line">        <span class="keyword">return</span> a.sum &gt; b.sum;</span><br><span class="line">    <span class="keyword">if</span>(a.num != b.num)</span><br><span class="line">        <span class="keyword">return</span> a.num &lt; b.num;</span><br><span class="line">    <span class="keyword">return</span> a.s &lt; b.s;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;   </span><br><span class="line">    <span class="keyword">int</span> n; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">map</span>&lt;<span class="built_in">string</span>, <span class="keyword">int</span>&gt; mmp;</span><br><span class="line">    <span class="built_in">string</span> x, y;</span><br><span class="line">    <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">    DB t;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; x &gt;&gt; t &gt;&gt; y;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;y.length(); j++)</span><br><span class="line">            y[j] = <span class="built_in">tolower</span>(y[j]);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(mmp.count(y)==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            mmp[y] = cnt++;</span><br><span class="line">            a[mmp[y]].s = y;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(x.at(<span class="number">0</span>) == <span class="string">'B'</span>)</span><br><span class="line">            t /= <span class="number">1.5</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(x.at(<span class="number">0</span>) == <span class="string">'T'</span>)</span><br><span class="line">            t *= <span class="number">1.5</span>;</span><br><span class="line"></span><br><span class="line">        a[mmp[y]].sum += t;</span><br><span class="line">        a[mmp[y]].num++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;cnt; i++)</span><br><span class="line">        a[i].sum = <span class="built_in">floor</span>(a[i].sum);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, cnt);</span><br><span class="line">    sort(a, a+cnt, cmp);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> rank = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;cnt; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(i &amp;&amp; a[i<span class="number">-1</span>].sum != a[i].sum)</span><br><span class="line">            rank = i+<span class="number">1</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d %s %.0lf %d\n"</span>, rank, a[i].s.c_str(), a[i].sum, a[i].num);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1086 就不告诉你</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1086%20%E5%B0%B1%E4%B8%8D%E5%91%8A%E8%AF%89%E4%BD%A0/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:02 GMT+0800 (GMT+08:00) --><h1 id="就不告诉你-PATB-1086"><a href="#就不告诉你-PATB-1086" class="headerlink" title="就不告诉你 (PATB-1086)"></a>就不告诉你 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/1038429065476579328" target="_blank" rel="noopener">PATB-1086</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>做作业的时候，邻座的小盆友问你：“五乘以七等于多少？”你应该不失礼貌地围笑着告诉他：“五十三。”本题就要求你，对任何一对给定的正整数，倒着输出它们的乘积。</p><p><img src="https://images.ptausercontent.com/0c3a4497-27c3-45ea-9c8e-5a1ab2df48af.jpg" alt="53.jpg"></p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在第一行给出两个不超过 1000 的正整数 A 和 B，其间以空格分隔。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>在一行中倒着输出 A 和 B 的乘积。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">5 7</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">53</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;   </span><br><span class="line">    <span class="keyword">int</span> a, b, c, d=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;a, &amp;b);</span><br><span class="line">    c = a * b;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(c)</span><br><span class="line">    &#123;</span><br><span class="line">        d = d * <span class="number">10</span> + c%<span class="number">10</span>;</span><br><span class="line">        c /= <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, d);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1087 有多少不同的值</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1087%20%E6%9C%89%E5%A4%9A%E5%B0%91%E4%B8%8D%E5%90%8C%E7%9A%84%E5%80%BC/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:02 GMT+0800 (GMT+08:00) --><h1 id="有多少不同的值-PATB-1087"><a href="#有多少不同的值-PATB-1087" class="headerlink" title="有多少不同的值 (PATB-1087)"></a>有多少不同的值 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/1038429191091781632" target="_blank" rel="noopener">PATB-1087</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>当自然数 n 依次取 1、2、3、……、N 时，算式 ⌊n/2⌋+⌊n/3⌋+⌊n/5⌋ 有多少个不同的值？（注：⌊x⌋ 为取整函数，表示不超过 x 的最大自然数，即 x 的整数部分。）</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入给出一个正整数 N（2≤N≤104）。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>在一行中输出题面中算式取到的不同值的个数。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2017</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1480</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;   </span><br><span class="line">    <span class="keyword">int</span> n; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    <span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt; sst;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        sst.insert(i/<span class="number">2</span> + i/<span class="number">3</span> + i/<span class="number">5</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, sst.size());</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1088 三人行</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1088%20%E4%B8%89%E4%BA%BA%E8%A1%8C/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:02 GMT+0800 (GMT+08:00) --><h1 id="三人行-PATB-1088"><a href="#三人行-PATB-1088" class="headerlink" title="三人行 (PATB-1088)"></a>三人行 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/1038429286185074688" target="_blank" rel="noopener">PATB-1088</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>子曰：“三人行，必有我师焉。择其善者而从之，其不善者而改之。”</p><p>本题给定甲、乙、丙三个人的能力值关系为：甲的能力值确定是 2 位正整数；把甲的能力值的 2 个数字调换位置就是乙的能力值；甲乙两人能力差是丙的能力值的 X 倍；乙的能力值是丙的 Y 倍。请你指出谁比你强应“从之”，谁比你弱应“改之”。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在一行中给出三个数，依次为：M（你自己的能力值）、X 和 Y。三个数字均为不超过 1000 的正整数。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>在一行中首先输出甲的能力值，随后依次输出甲、乙、丙三人与你的关系：如果其比你强，输出 <code>Cong</code>；平等则输出 <code>Ping</code>；比你弱则输出 <code>Gai</code>。其间以 1 个空格分隔，行首尾不得有多余空格。</p><p>注意：如果解不唯一，则以甲的最大解为准进行判断；如果解不存在，则输出 <code>No Solution</code>。</p></blockquote><h2 id="样例输入1"><a href="#样例输入1" class="headerlink" title="样例输入1"></a>样例输入1</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">48 3 7</span><br></pre></td></tr></table></figure><h2 id="样例输出1"><a href="#样例输出1" class="headerlink" title="样例输出1"></a>样例输出1</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">48 Ping Cong Gai</span><br></pre></td></tr></table></figure><h2 id="样例输入2"><a href="#样例输入2" class="headerlink" title="样例输入2"></a>样例输入2</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">48 11 6</span><br></pre></td></tr></table></figure><h2 id="样例输出2"><a href="#样例输出2" class="headerlink" title="样例输出2"></a>样例输出2</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">No Solution</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Sg(u) ((u) &gt; eps ? 1 : ((u) &lt; -eps ? -1 : 0))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Abs(u) (Sg(u) &gt;= 0 ? (u) : -(u))</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">double</span> DB;</span><br><span class="line"><span class="keyword">const</span> DB eps = <span class="number">1e-8</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> s[][<span class="number">5</span>] = &#123;<span class="string">"Cong"</span>, <span class="string">"Ping"</span>, <span class="string">"Gai"</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;   </span><br><span class="line">    <span class="keyword">int</span> m, x, y;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>, &amp;m, &amp;x, &amp;y);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> a, b, f = <span class="number">0</span>; DB c;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">99</span>; i&gt;=<span class="number">10</span>; i--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> j = i%<span class="number">10</span> * <span class="number">10</span> + i/<span class="number">10</span>;</span><br><span class="line">        <span class="keyword">if</span>(Abs(i-j)*y == j*x)</span><br><span class="line">        &#123;</span><br><span class="line">            a = i, b = j, c = <span class="number">1.0</span>*Abs(i-j)/x;</span><br><span class="line">            f = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(f)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d %s %s %s\n"</span>, a, s[Sg(m-a)+<span class="number">1</span>], s[Sg(m-b)+<span class="number">1</span>], s[Sg(m-c)+<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"No Solution\n"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1089 狼人杀-简单版</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1089%20%E7%8B%BC%E4%BA%BA%E6%9D%80-%E7%AE%80%E5%8D%95%E7%89%88/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:02 GMT+0800 (GMT+08:00) --><h1 id="狼人杀-简单版-PATB-1089"><a href="#狼人杀-简单版-PATB-1089" class="headerlink" title="狼人杀-简单版 (PATB-1089)"></a>狼人杀-简单版 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/1038429385296453632" target="_blank" rel="noopener">PATB-1089</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>以下文字摘自《灵机一动·好玩的数学》：“狼人杀”游戏分为狼人、好人两大阵营。在一局“狼人杀”游戏中，1 号玩家说：“2 号是狼人”，2 号玩家说：“3 号是好人”，3 号玩家说：“4 号是狼人”，4 号玩家说：“5 号是好人”，5 号玩家说：“4 号是好人”。已知这 5 名玩家中有 2 人扮演狼人角色，有 2 人说的不是实话，有狼人撒谎但并不是所有狼人都在撒谎。扮演狼人角色的是哪两号玩家？</p><p>本题是这个问题的升级版：已知 N 名玩家中有 2 人扮演狼人角色，有 2 人说的不是实话，有狼人撒谎但并不是所有狼人都在撒谎。要求你找出扮演狼人角色的是哪几号玩家？</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在第一行中给出一个正整数 N（5≤N≤100）。随后 N 行，第 i 行给出第 i 号玩家说的话（1≤i≤N），即一个玩家编号，用正号表示好人，负号表示狼人。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>如果有解，在一行中按递增顺序输出 2 个狼人的编号，其间以空格分隔，行首尾不得有多余空格。如果解不唯一，则输出最小序列解 —— 即对于两个序列 A=a[1],…,a[M] 和 B=b[1],…,b[M]，若存在 0≤k&lt;M 使得 a[i]=b[i] （i≤k），且 a[k+1]&lt;b[k+1]，则称序列 A 小于序列 B。若无解则输出 <code>No Solution</code>。</p></blockquote><h2 id="样例输入1"><a href="#样例输入1" class="headerlink" title="样例输入1"></a>样例输入1</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">5</span><br><span class="line">-2</span><br><span class="line">+3</span><br><span class="line">-4</span><br><span class="line">+5</span><br><span class="line">+4</span><br></pre></td></tr></table></figure><h2 id="样例输出1"><a href="#样例输出1" class="headerlink" title="样例输出1"></a>样例输出1</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1 4</span><br></pre></td></tr></table></figure><h2 id="样例输入2"><a href="#样例输入2" class="headerlink" title="样例输入2"></a>样例输入2</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">6</span><br><span class="line">+6</span><br><span class="line">+3</span><br><span class="line">+1</span><br><span class="line">-5</span><br><span class="line">-2</span><br><span class="line">+4</span><br></pre></td></tr></table></figure><h2 id="样例输出2"><a href="#样例输出2" class="headerlink" title="样例输出2"></a>样例输出2</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1 5</span><br></pre></td></tr></table></figure><h2 id="样例输入3"><a href="#样例输入3" class="headerlink" title="样例输入3"></a>样例输入3</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">5</span><br><span class="line">-2</span><br><span class="line">-3</span><br><span class="line">-4</span><br><span class="line">-5</span><br><span class="line">-1</span><br></pre></td></tr></table></figure><h2 id="样例输出3"><a href="#样例输出3" class="headerlink" title="样例输出3"></a>样例输出3</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">No Solution</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>样例2解不唯一</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Sg(u) ((u) &gt; eps ? 1 : ((u) &lt; -eps ? -1 : 0))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Abs(u) (Sg(u) &gt;= 0 ? (u) : -(u))</span></span><br><span class="line"><span class="keyword">const</span> DB eps = <span class="number">1e-8</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[mxn], ok[mxn], lie[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++) </span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>; j&lt;=n; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>; k&lt;=n; k++)</span><br><span class="line">                ok[k] = <span class="number">1</span>;</span><br><span class="line">            ok[i] = ok[j] = <span class="number">-1</span>;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>; k&lt;=n; k++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(a[k] * ok[Abs(a[k])] &lt; <span class="number">0</span>)</span><br><span class="line">                    lie[num++] = k;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span>(num == <span class="number">2</span> &amp;&amp; ok[lie[<span class="number">0</span>]] + ok[lie[<span class="number">1</span>]] == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>, i, j);</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"No Solution\n"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1090 危险品装箱</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1090%20%E5%8D%B1%E9%99%A9%E5%93%81%E8%A3%85%E7%AE%B1/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:02 GMT+0800 (GMT+08:00) --><h1 id="危险品装箱-PATB-1090"><a href="#危险品装箱-PATB-1090" class="headerlink" title="危险品装箱 (PATB-1090)"></a>危险品装箱 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/1038429484026175488" target="_blank" rel="noopener">PATB-1090</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>集装箱运输货物时，我们必须特别小心，不能把不相容的货物装在一只箱子里。比如氧化剂绝对不能跟易燃液体同箱，否则很容易造成爆炸。</p><p>本题给定一张不相容物品的清单，需要你检查每一张集装箱货品清单，判断它们是否能装在同一只箱子里。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入第一行给出两个正整数：N (≤104) 是成对的不相容物品的对数；M (≤100) 是集装箱货品清单的单数。</p><p>随后数据分两大块给出。第一块有 N 行，每行给出一对不相容的物品。第二块有 M 行，每行给出一箱货物的清单，格式如下：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">K G[1] G[2] ... G[K]</span><br></pre></td></tr></table></figure><p>其中 <code>K</code> (≤1000) 是物品件数，<code>G[i]</code> 是物品的编号。简单起见，每件物品用一个 5 位数的编号代表。两个数字之间用空格分隔。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>对每箱货物清单，判断是否可以安全运输。如果没有不相容物品，则在一行中输出 <code>Yes</code>，否则输出 <code>No</code>。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">6 3</span><br><span class="line">20001 20002</span><br><span class="line">20003 20004</span><br><span class="line">20005 20006</span><br><span class="line">20003 20001</span><br><span class="line">20005 20004</span><br><span class="line">20004 20006</span><br><span class="line">4 00001 20004 00002 20003</span><br><span class="line">5 98823 20002 20003 20006 10010</span><br><span class="line">3 12345 67890 23333</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">No</span><br><span class="line">Yes</span><br><span class="line">Yes</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, m;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;n, &amp;m);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &gt; mmp;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x, y;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;x, &amp;y);</span><br><span class="line">        mmp[x].push_back(y);</span><br><span class="line">        mmp[y].push_back(x);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span> (m--) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">memset</span>(a, <span class="number">0</span>, <span class="keyword">sizeof</span> a);</span><br><span class="line">        <span class="keyword">int</span> k; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;k);</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; <span class="title">v</span><span class="params">(k)</span></span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;k; i++) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;v[i]);</span><br><span class="line">            a[v[i]] = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> f = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;v.size(); i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;mmp[v[i]].size(); j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (a[mmp[v[i]][j]])</span><br><span class="line">                &#123;</span><br><span class="line">                    f = <span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(f) <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%s\n"</span>, f ? <span class="string">"No"</span> :<span class="string">"Yes"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1091 N-自守数</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1091%20N-%E8%87%AA%E5%AE%88%E6%95%B0/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:02 GMT+0800 (GMT+08:00) --><h1 id="N-自守数-PATB-1091"><a href="#N-自守数-PATB-1091" class="headerlink" title="N-自守数 (PATB-1091)"></a>N-自守数 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/1071785664454127616" target="_blank" rel="noopener">PATB-1091</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>如果某个数 K 的平方乘以 N 以后，结果的末尾几位数等于 K，那么就称这个数为“N-自守数”。例如 3×922=25392，而 25392 的末尾两位正好是 92，所以 92 是一个 3-自守数。</p><p>本题就请你编写程序判断一个给定的数字是否关于某个 N 是 N-自守数。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在第一行中给出正整数 M（≤20），随后一行给出 M 个待检测的、不超过 1000 的正整数。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>对每个需要检测的数字，如果它是 N-自守数就在一行中输出最小的 N 和 NK2 的值，以一个空格隔开；否则输出 <code>No</code>。注意题目保证 N&lt;10。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3</span><br><span class="line">92 5 233</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3 25392</span><br><span class="line">1 25</span><br><span class="line">No</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(n--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> m, f=<span class="number">1</span>; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;m);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">9</span>; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> x = i * m * m;</span><br><span class="line">            <span class="keyword">char</span> s[<span class="number">20</span>], t[<span class="number">20</span>];</span><br><span class="line">            <span class="built_in">sprintf</span>(s, <span class="string">"%d"</span>, x);</span><br><span class="line">            <span class="built_in">sprintf</span>(t, <span class="string">"%d"</span>, m);</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">strcmp</span>(s+<span class="built_in">strlen</span>(s)-<span class="built_in">strlen</span>(t), t) == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>, i, x);</span><br><span class="line">                f = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(f) <span class="built_in">printf</span>(<span class="string">"No\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1092 最好吃的月饼</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1092%20%E6%9C%80%E5%A5%BD%E5%90%83%E7%9A%84%E6%9C%88%E9%A5%BC/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:02 GMT+0800 (GMT+08:00) --><h1 id="最好吃的月饼-PATB-1092"><a href="#最好吃的月饼-PATB-1092" class="headerlink" title="最好吃的月饼 (PATB-1092)"></a>最好吃的月饼 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/1071785779399028736" target="_blank" rel="noopener">PATB-1092</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>月饼是久负盛名的中国传统糕点之一，自唐朝以来，已经发展出几百品种。</p><p><img src="https://images.ptausercontent.com/fcb325a0-7090-4bf4-acb0-d4d7ea832f27.jpg" alt="mk.jpg"></p><p>若想评比出一种“最好吃”的月饼，那势必在吃货界引发一场腥风血雨…… 在这里我们用数字说话，给出全国各地各种月饼的销量，要求你从中找出销量冠军，认定为最好吃的月饼。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入首先给出两个正整数 N（≤1000）和 M（≤100），分别为月饼的种类数（于是默认月饼种类从 1 到 N 编号）和参与统计的城市数量。</p><p>接下来 M 行，每行给出 N 个非负整数（均不超过 1 百万），其中第 i 个整数为第 i 种月饼的销量（块）。数字间以空格分隔。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>在第一行中输出最大销量，第二行输出销量最大的月饼的种类编号。如果冠军不唯一，则按编号递增顺序输出并列冠军。数字间以 1 个空格分隔，行首尾不得有多余空格。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">5 3</span><br><span class="line">1001 992 0 233 6</span><br><span class="line">8 0 2018 0 2008</span><br><span class="line">36 18 0 1024 4</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2018</span><br><span class="line">3 5</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> a[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, m;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;n, &amp;m);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(m--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> t; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;t);</span><br><span class="line">            a[i] += t;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> mx = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        mx = max(mx, a[i]);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, mx);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> nf = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i] == mx)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(nf)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">                nf = <span class="number">1</span>;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d"</span>, i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1093 字符串A+B</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1093%20%E5%AD%97%E7%AC%A6%E4%B8%B2A+B/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:02 GMT+0800 (GMT+08:00) --><h1 id="字符串A-B-PATB-1093"><a href="#字符串A-B-PATB-1093" class="headerlink" title="字符串A+B (PATB-1093)"></a>字符串A+B (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/1071785884776722432" target="_blank" rel="noopener">PATB-1093</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>给定两个字符串 A 和 B，本题要求你输出 A+B，即两个字符串的并集。要求先输出 A，再输出 B，但<strong>重复的字符必须被剔除</strong>。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在两行中分别给出 A 和 B，均为长度不超过 10^6的、由可见 ASCII 字符 (即码值为32~126)和空格组成的、由回车标识结束的非空字符串。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>在一行中输出题面要求的 A 和 B 的和。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">This is a sample test</span><br><span class="line">to show you_How it works</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">This ampletowyu_Hrk</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> a[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">2</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">char</span> c;</span><br><span class="line">        <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%c"</span>, &amp;c) &amp;&amp; c!=<span class="string">'\n'</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(a[c] == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%c"</span>, c);</span><br><span class="line">                a[c] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1094 谷歌的招聘</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1094%20%E8%B0%B7%E6%AD%8C%E7%9A%84%E6%8B%9B%E8%81%98/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:02 GMT+0800 (GMT+08:00) --><h1 id="谷歌的招聘-PATB-1094"><a href="#谷歌的招聘-PATB-1094" class="headerlink" title="谷歌的招聘 (PATB-1094)"></a>谷歌的招聘 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/1071785997033074688" target="_blank" rel="noopener">PATB-1094</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>2004 年 7 月，谷歌在硅谷的 101 号公路边竖立了一块巨大的广告牌（如下图）用于招聘。内容超级简单，就是一个以 .com 结尾的网址，而前面的网址是一个 10 位素数，这个素数是自然常数 e 中最早出现的 10 位连续数字。能找出这个素数的人，就可以通过访问谷歌的这个网站进入招聘流程的下一步。</p><p><img src="https://images.ptausercontent.com/57148679-d574-4f49-b048-775c6c07791c.jpg" alt="prime.jpg"></p><p>自然常数 e 是一个著名的超越数，前面若干位写出来是这样的：e = 2.71828182845904523536028747135266249775</p><p>724709369995957496696762772407663035354759457138217852516642<strong>7427466391</strong>932003059921…</p><p>其中粗体标出的 10 位数就是答案。</p><p>本题要求你编程解决一个更通用的问题：从任一给定的长度为 L 的数字中，找出最早出现的 K 位连续数字所组成的素数。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在第一行给出 2 个正整数，分别是 L（不超过 1000 的正整数，为数字长度）和 K（小于 10 的正整数）。接下来一行给出一个长度为 L 的正整数 N。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>在一行中输出 N 中最早出现的 K 位连续数字所组成的素数。如果这样的素数不存在，则输出 <code>404</code>。注意，原始数字中的前导零也计算在位数之内。例如在 200236 中找 4 位素数，0023 算是解；但第一位 2 不能被当成 0002 输出，因为在原始数字中不存在这个 2 的前导零。</p></blockquote><h2 id="样例输入1"><a href="#样例输入1" class="headerlink" title="样例输入1"></a>样例输入1</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">20 5</span><br><span class="line">23654987725541023819</span><br></pre></td></tr></table></figure><h2 id="样例输出1"><a href="#样例输出1" class="headerlink" title="样例输出1"></a>样例输出1</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">49877</span><br></pre></td></tr></table></figure><h2 id="样例输入2"><a href="#样例输入2" class="headerlink" title="样例输入2"></a>样例输入2</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">10 3</span><br><span class="line">2468024680</span><br></pre></td></tr></table></figure><h2 id="样例输出2"><a href="#样例输出2" class="headerlink" title="样例输出2"></a>样例输出2</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">404</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">char</span> s[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isPrime</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">0</span> || n == <span class="number">1</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">2</span> || n == <span class="number">3</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (n % <span class="number">6</span> != <span class="number">1</span> &amp;&amp; n % <span class="number">6</span> != <span class="number">5</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> m = <span class="built_in">sqrt</span>(n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">5</span>; i &lt;= m; i += <span class="number">6</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (n % i == <span class="number">0</span> || n % (i + <span class="number">2</span>) == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> L, K;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d %s"</span>, &amp;L, &amp;K, s);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> f = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;=L-K; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> t; <span class="keyword">char</span> a[<span class="number">15</span>];</span><br><span class="line">        <span class="built_in">memset</span>(a, <span class="number">0</span>, <span class="keyword">sizeof</span> a);</span><br><span class="line">        <span class="built_in">strncpy</span>(a, s+i, K);</span><br><span class="line">        <span class="built_in">sscanf</span>(a, <span class="string">"%d"</span>, &amp;t);</span><br><span class="line">        <span class="keyword">if</span>(isPrime(t))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%s\n"</span>, a);</span><br><span class="line">            f = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(f)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"404\n"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1095 解码PAT准考证</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91PATB-1095%20%E8%A7%A3%E7%A0%81PAT%E5%87%86%E8%80%83%E8%AF%81/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:02 GMT+0800 (GMT+08:00) --><h1 id="解码PAT准考证-PATB-1095"><a href="#解码PAT准考证-PATB-1095" class="headerlink" title="解码PAT准考证 (PATB-1095)"></a>解码PAT准考证 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/1071786104348536832" target="_blank" rel="noopener">PATB-1095</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>PAT 准考证号由 4 部分组成：</p><ul><li>第 1 位是级别，即 <code>T</code> 代表顶级；<code>A</code> 代表甲级；<code>B</code> 代表乙级；</li><li>第 2~4 位是考场编号，范围从 101 到 999；</li><li>第 5~10 位是考试日期，格式为年、月、日顺次各占 2 位；</li><li>最后 11~13 位是考生编号，范围从 000 到 999。</li></ul><p>现给定一系列考生的准考证号和他们的成绩，请你按照要求输出各种统计信息。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入首先在一行中给出两个正整数 N（≤104）和 M（≤100），分别为考生人数和统计要求的个数。</p><p>接下来 N 行，每行给出一个考生的准考证号和其分数（在区间 [0,100] 内的整数），其间以空格分隔。</p><p>考生信息之后，再给出 M 行，每行给出一个统计要求，格式为：<code>类型 指令</code>，其中</p><ul><li><code>类型</code> 为 1 表示要求按分数非升序输出某个指定级别的考生的成绩，对应的 <code>指令</code> 则给出代表指定级别的字母；</li><li><code>类型</code> 为 2 表示要求将某指定考场的考生人数和总分统计输出，对应的 <code>指令</code> 则给出指定考场的编号；</li><li><code>类型</code> 为 3 表示要求将某指定日期的考生人数分考场统计输出，对应的 <code>指令</code> 则给出指定日期，格式与准考证上日期相同。</li></ul></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>对每项统计要求，首先在一行中输出 <code>Case #: 要求</code>，其中 <code>#</code> 是该项要求的编号，从 1 开始；<code>要求</code> 即复制输入给出的要求。随后输出相应的统计结果：</p><ul><li><code>类型</code> 为 1 的指令，输出格式与输入的考生信息格式相同，即 <code>准考证号 成绩</code>。对于分数并列的考生，按其准考证号的字典序递增输出（题目保证无重复准考证号）；</li><li><code>类型</code> 为 2 的指令，按 <code>人数 总分</code> 的格式输出；</li><li><code>类型</code> 为 3 的指令，输出按人数非递增顺序，格式为 <code>考场编号 总人数</code>。若人数并列则按考场编号递增顺序输出。</li></ul><p>如果查询结果为空，则输出 <code>NA</code>。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">8 4</span><br><span class="line">B123180908127 99</span><br><span class="line">B102180908003 86</span><br><span class="line">A112180318002 98</span><br><span class="line">T107150310127 62</span><br><span class="line">A107180908108 100</span><br><span class="line">T123180908010 78</span><br><span class="line">B112160918035 88</span><br><span class="line">A107180908021 98</span><br><span class="line">1 A</span><br><span class="line">2 107</span><br><span class="line">3 180908</span><br><span class="line">2 999</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Case 1: 1 A</span><br><span class="line">A107180908108 100</span><br><span class="line">A107180908021 98</span><br><span class="line">A112180318002 98</span><br><span class="line">Case 2: 2 107</span><br><span class="line">3 260</span><br><span class="line">Case 3: 3 180908</span><br><span class="line">107 2</span><br><span class="line">123 2</span><br><span class="line">102 1</span><br><span class="line">Case 4: 2 999</span><br><span class="line">NA</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e4</span> + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">P</span>&#123;</span></span><br><span class="line">    <span class="keyword">char</span> s[<span class="number">20</span>];</span><br><span class="line">    <span class="keyword">int</span> x, t;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> P &amp;x) <span class="keyword">const</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(t != x.t)</span><br><span class="line">            <span class="keyword">return</span> t &gt; x.t;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">strcmp</span>(s, x.s) &lt; <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;a[mxn], ans[mxn];</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">P2</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> s, cnt;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> P2 &amp;x) <span class="keyword">const</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(cnt != x.cnt)</span><br><span class="line">            <span class="keyword">return</span> cnt &gt; x.cnt;</span><br><span class="line">        <span class="keyword">return</span> s &lt; x.s;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;b[mxn];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> idx[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, m;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;n, &amp;m);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s %d"</span>, a[i].s, &amp;a[i].t);</span><br><span class="line">        <span class="built_in">sscanf</span>(a[i].s+<span class="number">1</span>, <span class="string">"%3d"</span>, &amp;a[i].x);</span><br><span class="line">    &#125;</span><br><span class="line">    sort(a, a+n);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> cs=<span class="number">1</span>; cs&lt;=m; cs++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> c; <span class="keyword">char</span> g[<span class="number">10</span>];</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %s"</span>, &amp;c, g);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Case %d: %d %s\n"</span>, cs, c, g);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">int</span> num=<span class="number">0</span>, sum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(c == <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(a[i].s[<span class="number">0</span>] == g[<span class="number">0</span>])&#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"%s %d\n"</span>, a[i].s, a[i].t);</span><br><span class="line">                    num++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(num == <span class="number">0</span>)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"NA\n"</span>);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(c == <span class="number">2</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(<span class="built_in">strncmp</span>(a[i].s+<span class="number">1</span>, g, <span class="number">3</span>) == <span class="number">0</span>)</span><br><span class="line">                    sum += a[i].t, num++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(num)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>, num, sum); </span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"NA\n"</span>);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(c == <span class="number">3</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(<span class="built_in">strncmp</span>(a[i].s+<span class="number">4</span>, g, <span class="number">6</span>) == <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">int</span> x = a[i].x; </span><br><span class="line">                    <span class="keyword">if</span>(idx[x] == <span class="number">0</span>)&#123;</span><br><span class="line">                        idx[x] = ++num;</span><br><span class="line">                        b[idx[x]].s = x;</span><br><span class="line">                    &#125;</span><br><span class="line">                    b[idx[x]].cnt++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(num)</span><br><span class="line">            &#123;</span><br><span class="line">                sort(b+<span class="number">1</span>, b+num+<span class="number">1</span>);</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=num; i++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"%03d %d\n"</span>, b[i].s, b[i].cnt);</span><br><span class="line">                    b[i].cnt = idx[b[i].s] = <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"NA\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATB</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】POJ-1050 To the Max</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E5%9F%BA%E7%A1%80DP/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91POJ-1050%20To%20the%20Max/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:02 GMT+0800 (GMT+08:00) --><h1 id="To-the-Max-POJ-1050"><a href="#To-the-Max-POJ-1050" class="headerlink" title="To the Max (POJ - 1050)"></a>To the Max (<a href="https://vjudge.net/problem/POJ-1050" target="_blank" rel="noopener">POJ - 1050</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>Given a two-dimensional array of positive and negative integers, a sub-rectangle is any contiguous sub-array of size 1*1 or greater located within the whole array. The sum of a rectangle is the sum of all the elements in that rectangle. In this problem the sub-rectangle with the largest sum is referred to as the maximal sub-rectangle.<br>As an example, the maximal sub-rectangle of the array:</p><p>0 -2 -7 0<br>9 2 -6 2<br>-4 1 -4 1<br>-1 8 0 -2<br>is in the lower left corner:</p><p>9 2<br>-4 1<br>-1 8<br>and has a sum of 15.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>The input consists of an N * N array of integers. The input begins with a single positive integer N on a line by itself, indicating the size of the square two-dimensional array. This is followed by N^2 integers separated by whitespace (spaces and newlines). These are the N^2 integers of the array, presented in row-major order. That is, all numbers in the first row, left to right, then all numbers in the second row, left to right, etc. N may be as large as 100. The numbers in the array will be in the range [-127,127].</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>Output the sum of the maximal sub-rectangle.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">4</span><br><span class="line">0 -2 -7 0 9 2 -6 2</span><br><span class="line">-4 1 -4  1 -1</span><br><span class="line"></span><br><span class="line">8  0 -2</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">15</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e2</span> + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[N][N] = &#123;&#123;<span class="number">0</span>&#125;&#125;;</span><br><span class="line"><span class="keyword">int</span> f[N][N][N] = &#123;&#123;&#123;<span class="number">0</span>&#125;&#125;&#125;;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;n; j++)</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i][j]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mx = -inf;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;n; j++) &#123;</span><br><span class="line">            <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=j; k&lt;n; k++) &#123;</span><br><span class="line">                sum += a[i][k];</span><br><span class="line">                f[i][j][k] = max(f[i<span class="number">-1</span>][j][k]+sum, sum);</span><br><span class="line">                mx = max(mx, f[i][j][k]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, mx);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>动态规划</category>
        <category>基础DP</category>
      </categories>
      <tags>
        <tag>DP</tag>
        <tag>POJ</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】POJ-1251 Jungle Roads</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9B%BE%E8%AE%BA/%E6%94%AF%E6%92%91%E6%A0%91/%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91/Kruskal/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91POJ-1251%20Jungle%20Roads/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:02 GMT+0800 (GMT+08:00) --><h1 id="Jungle-Roads-POJ-1251"><a href="#Jungle-Roads-POJ-1251" class="headerlink" title="Jungle Roads (POJ - 1251)"></a>Jungle Roads (<a href="https://vjudge.net/problem/POJ-1251" target="_blank" rel="noopener">POJ - 1251</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>![img](【题解】POJ-1251 Jungle Roads/POJ1251.png)<br>The Head Elder of the tropical island of Lagrishan has a problem. A burst of foreign aid money was spent on extra roads between villages some years ago. But the jungle overtakes roads relentlessly, so the large road network is too expensive to maintain. The Council of Elders must choose to stop maintaining some roads. The map above on the left shows all the roads in use now and the cost in aacms per month to maintain them. Of course there needs to be some way to get between all the villages on maintained roads, even if the route is not as short as before. The Chief Elder would like to tell the Council of Elders what would be the smallest amount they could spend in aacms per month to maintain roads that would connect all the villages. The villages are labeled A through I in the maps above. The map on the right shows the roads that could be maintained most cheaply, for 216 aacms per month. Your task is to write a program that will solve such problems.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>The input consists of one to 100 data sets, followed by a final line containing only 0. Each data set starts with a line containing only a number n, which is the number of villages, 1 &lt; n &lt; 27, and the villages are labeled with the first n letters of the alphabet, capitalized. Each data set is completed with n-1 lines that start with village labels in alphabetical order. There is no line for the last village. Each line for a village starts with the village label followed by a number, k, of roads from this village to villages with labels later in the alphabet. If k is greater than 0, the line continues with data for each of the k roads. The data for each road is the village label for the other end of the road followed by the monthly maintenance cost in aacms for the road. Maintenance costs will be positive integers less than 100. All data fields in the row are separated by single blanks. The road network will always allow travel between all the villages. The network will never have more than 75 roads. No village will have more than 15 roads going to other villages (before or after in the alphabet). In the sample input below, the first data set goes with the map above.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>The output is one integer per line for each data set: the minimum cost in aacms per month to maintain a road system that connect all the villages. Caution: A brute force solution that examines every possible set of roads will not finish within the one minute time limit.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">9</span><br><span class="line">A 2 B 12 I 25</span><br><span class="line">B 3 C 10 H 40 I 8</span><br><span class="line">C 2 D 18 G 55</span><br><span class="line">D 1 E 44</span><br><span class="line">E 2 F 60 G 38</span><br><span class="line">F 0</span><br><span class="line">G 1 H 35</span><br><span class="line">H 1 I 35</span><br><span class="line">3</span><br><span class="line">A 2 B 10 C 40</span><br><span class="line">B 1 C 20</span><br><span class="line">0</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">216</span><br><span class="line">30</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e2</span>+<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> f[N] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">        f[i] = i;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Find</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> f[x]==x ? x : f[x]=Find(f[x]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">same</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> Find(x)==Find(y);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">join</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    x=Find(x), y=Find(y);</span><br><span class="line">    f[x] = y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> u, v, w;</span><br><span class="line">&#125; e[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(edge a, edge b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a.w &lt; b.w;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">kruskal</span><span class="params">(<span class="keyword">int</span> m)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;m; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(!same(e[i].u, e[i].v)) &#123;</span><br><span class="line">            join(e[i].u, e[i].v);</span><br><span class="line">            ans += e[i].w;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n)==<span class="number">1</span> &amp;&amp; n) &#123;</span><br><span class="line">        <span class="keyword">int</span> k, w, num=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">char</span> f, t;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n<span class="number">-1</span>; i++) &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">" %c%d"</span>, &amp;f, &amp;k);</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;k; j++) &#123;</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">" %c%d"</span>, &amp;t, &amp;w);</span><br><span class="line">                e[num] = &#123;f-<span class="string">'A'</span>, t-<span class="string">'A'</span>, w&#125;;</span><br><span class="line">                num++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        sort(e, e+num, cmp);</span><br><span class="line">        init(n);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, kruskal(num));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>图论</category>
        <category>支撑树</category>
        <category>最小生成树</category>
        <category>Kruskal</category>
      </categories>
      <tags>
        <tag>POJ</tag>
        <tag>并查集</tag>
        <tag>Kruskal</tag>
        <tag>MST</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】POJ-1321 棋盘问题</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%90%9C%E7%B4%A2/DFS/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91POJ-1321%20%E6%A3%8B%E7%9B%98%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:02 GMT+0800 (GMT+08:00) --><h1 id="棋盘问题-POJ-1321"><a href="#棋盘问题-POJ-1321" class="headerlink" title="棋盘问题 (POJ - 1321)"></a>棋盘问题 (<a href="https://vjudge.net/problem/POJ-1321" target="_blank" rel="noopener">POJ - 1321</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>在一个给定形状的棋盘（形状可能是不规则的）上面摆放棋子，棋子没有区别。要求摆放时任意的两个棋子不能放在棋盘中的同一行或者同一列，请编程求解对于给定形状和大小的棋盘，摆放k个棋子的所有可行的摆放方案C。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入含有多组测试数据。<br>每组数据的第一行是两个正整数，n k，用一个空格隔开，表示了将在一个n*n的矩阵内描述棋盘，以及摆放棋子的数目。 n &lt;= 8 , k &lt;= n<br>当为-1 -1时表示输入结束。<br>随后的n行描述了棋盘的形状：每行有n个字符，其中 # 表示棋盘区域， . 表示空白区域（数据保证不出现多余的空白行或者空白列）。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>对于每一组数据，给出一行输出，输出摆放的方案数目C （数据保证C&lt;2^31）。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2 1</span><br><span class="line">#.</span><br><span class="line">.#</span><br><span class="line">4 4</span><br><span class="line">...#</span><br><span class="line">..#.</span><br><span class="line">.#..</span><br><span class="line">#...</span><br><span class="line">-1 -1</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2</span><br><span class="line">1</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>按行讨论，保存列的访问状态</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">8</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> b[N][N] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">bool</span> vis[N] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> n, k, ans = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> cnt)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(cnt&gt;=k) &#123;</span><br><span class="line">        ans++;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=x; i&lt;n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;n; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(b[i][j]==<span class="string">'#'</span> &amp;&amp; !vis[j]) &#123;</span><br><span class="line">                vis[j] = <span class="literal">true</span>;</span><br><span class="line">                dfs(i+<span class="number">1</span>, cnt+<span class="number">1</span>);</span><br><span class="line">                vis[j] = <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;k)==<span class="number">2</span> &amp;&amp; n!=<span class="number">-1</span> &amp;&amp; k!=<span class="number">-1</span>) &#123;</span><br><span class="line">        ans = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">memset</span>(vis, <span class="number">0</span>, <span class="keyword">sizeof</span>(vis));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;n; j++)</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">" %c"</span>, &amp;b[i][j]);</span><br><span class="line"></span><br><span class="line">        dfs(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>搜索</category>
        <category>DFS</category>
      </categories>
      <tags>
        <tag>kuangbin 专题一</tag>
        <tag>DFS</tag>
        <tag>POJ</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】POJ-1426 Find The Multiple</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%90%9C%E7%B4%A2/BFS/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91POJ-1426%20Find%20The%20Multiple/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:03 GMT+0800 (GMT+08:00) --><h1 id="Find-The-Multiple-POJ-1426"><a href="#Find-The-Multiple-POJ-1426" class="headerlink" title="Find The Multiple (POJ - 1426)"></a>Find The Multiple (<a href="https://vjudge.net/problem/POJ-1426" target="_blank" rel="noopener">POJ - 1426</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>Given a positive integer n, write a program to find out a nonzero multiple m of n whose decimal representation contains only the digits 0 and 1. You may assume that n is not greater than 200 and there is a corresponding m containing no more than 100 decimal digits.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>The input file may contain multiple test cases. Each line contains a value of n (1 &lt;= n &lt;= 200). A line containing a zero terminates the input.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For each value of n in the input print a line containing the corresponding value of m. The decimal representation of m must not contain more than 100 digits. If there are multiple solutions for a given value of n, any one of them is acceptable.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2</span><br><span class="line">6</span><br><span class="line">19</span><br><span class="line">0</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">10</span><br><span class="line">100100100100100100</span><br><span class="line">111111111111111111</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>一维bfs</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">15</span>+<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bfs</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">queue</span>&lt;ll&gt; q;</span><br><span class="line">    q.push(<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">while</span>(!q.empty()) &#123;</span><br><span class="line">        ll t = q.front();</span><br><span class="line">        q.pop();</span><br><span class="line">        <span class="keyword">if</span>(t%n==<span class="number">0</span>) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, t);</span><br><span class="line">            <span class="keyword">return</span> ;</span><br><span class="line">        &#125;</span><br><span class="line">        q.push(t*<span class="number">10</span>);</span><br><span class="line">        q.push(t*<span class="number">10</span>+<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n)==<span class="number">1</span> &amp;&amp; n) &#123;</span><br><span class="line">        bfs();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>搜索</category>
        <category>BFS</category>
      </categories>
      <tags>
        <tag>BFS</tag>
        <tag>kuangbin 专题一</tag>
        <tag>POJ</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】POJ-1458 Common Subsequence</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/LCS/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91POJ-1458%20Common%20Subsequence/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:03 GMT+0800 (GMT+08:00) --><h1 id="Common-Subsequence-POJ-1458、HDU-1159"><a href="#Common-Subsequence-POJ-1458、HDU-1159" class="headerlink" title="Common Subsequence (POJ-1458、HDU - 1159)"></a>Common Subsequence (<a href="https://vjudge.net/problem/POJ-1458" target="_blank" rel="noopener">POJ-1458</a>、<a href="https://vjudge.net/problem/HDU-1159" target="_blank" rel="noopener">HDU - 1159</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>A subsequence of a given sequence is the given sequence with some elements (possible none) left out. Given a sequence X = &lt; x1, x2, …, xm &gt; another sequence Z = &lt; z1, z2, …, zk &gt; is a subsequence of X if there exists a strictly increasing sequence &lt; i1, i2, …, ik &gt; of indices of X such that for all j = 1,2,…,k, x ij = zj. For example, Z = &lt; a, b, f, c &gt; is a subsequence of X = &lt; a, b, c, f, b, c &gt; with index sequence &lt; 1, 2, 4, 6 &gt;. Given two sequences X and Y the problem is to find the length of the maximum-length common subsequence of X and Y.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>The program input is from the std input. Each data set in the input contains two strings representing the given sequences. The sequences are separated by any number of white spaces. The input data are correct.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For each set of data the program prints on the standard output the length of the maximum-length common subsequence from the beginning of a separate line.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">abcfbc         abfcab</span><br><span class="line">programming    contest </span><br><span class="line">abcd           mnp</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">4</span><br><span class="line">2</span><br><span class="line">0</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e3</span>+<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> a[N], b[N];</span><br><span class="line"><span class="keyword">int</span> dp[N][N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%s%s"</span>, a, b)==<span class="number">2</span>) &#123;</span><br><span class="line">        <span class="keyword">int</span> la = <span class="built_in">strlen</span>(a);</span><br><span class="line">        <span class="keyword">int</span> lb = <span class="built_in">strlen</span>(b);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=la; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=lb; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(a[i<span class="number">-1</span>]==b[j<span class="number">-1</span>])</span><br><span class="line">                    dp[i][j] = dp[i<span class="number">-1</span>][j<span class="number">-1</span>]+<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    dp[i][j] = max(dp[i<span class="number">-1</span>][j], dp[i][j<span class="number">-1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, dp[la][lb]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>动态规划</category>
        <category>LCS</category>
      </categories>
      <tags>
        <tag>DP</tag>
        <tag>kuangbin 专题十二</tag>
        <tag>POJ</tag>
        <tag>LCS</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】POJ-1836 Alignment</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/LIS/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91POJ-1836%20Alignment/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:03 GMT+0800 (GMT+08:00) --><h1 id="Alignment-POJ-1836"><a href="#Alignment-POJ-1836" class="headerlink" title="Alignment (POJ - 1836)"></a>Alignment (<a href="https://vjudge.net/problem/POJ-1836" target="_blank" rel="noopener">POJ - 1836</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>In the army, a platoon is composed by n soldiers. During the morning inspection, the soldiers are aligned in a straight line in front of the captain. The captain is not satisfied with the way his soldiers are aligned; it is true that the soldiers are aligned in order by their code number: 1 , 2 , 3 , . . . , n , but they are not aligned by their height. The captain asks some soldiers to get out of the line, as the soldiers that remain in the line, without changing their places, but getting closer, to form a new line, where each soldier can see by looking lengthwise the line at least one of the line’s extremity (left or right). A soldier see an extremity if there isn’t any soldiers with a higher or equal height than his height between him and that extremity.</p><p>Write a program that, knowing the height of each soldier, determines the minimum number of soldiers which have to get out of line.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>On the first line of the input is written the number of the soldiers n. On the second line is written a series of n floating numbers with at most 5 digits precision and separated by a space character. The k-th number from this line represents the height of the soldier who has the code k (1 &lt;= k &lt;= n).</p><p>There are some restrictions:<br>• 2 &lt;= n &lt;= 1000<br>• the height are floating numbers from the interval [0.5, 2.5]</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>The only line of output will contain the number of the soldiers who have to get out of the line.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">8</span><br><span class="line">1.86 1.86 1.30621 2 1.4 1 1.97 2.2</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">4</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e3</span>+<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">double</span> a[N];</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> dp1[N], dp2[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lf"</span>, &amp;a[i]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">        dp1[i] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;i; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(a[j]&lt;a[i])</span><br><span class="line">                dp1[i] = max(dp1[i], dp1[j]+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=n<span class="number">-1</span>; i&gt;=<span class="number">0</span>; i--) &#123;</span><br><span class="line">        dp2[i] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=n<span class="number">-1</span>; j&gt;i; j--) &#123;</span><br><span class="line">            <span class="keyword">if</span>(a[j]&lt;a[i])</span><br><span class="line">                dp2[i] = max(dp2[i], dp2[j]+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mx = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>; j&lt;n; j++)</span><br><span class="line">            mx = max(mx, dp1[i]+dp2[j]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, n-mx);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>动态规划</category>
        <category>LIS</category>
      </categories>
      <tags>
        <tag>DP</tag>
        <tag>LIS</tag>
        <tag>POJ</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】POJ-1837 Balance</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E8%83%8C%E5%8C%85/01%E8%83%8C%E5%8C%85/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91POJ-1837%20Balance/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:03 GMT+0800 (GMT+08:00) --><h1 id="Balance-POJ-1837"><a href="#Balance-POJ-1837" class="headerlink" title="Balance (POJ - 1837)"></a>Balance (<a href="https://vjudge.net/problem/POJ-1837" target="_blank" rel="noopener">POJ - 1837</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>Gigel has a strange “balance” and he wants to poise it. Actually, the device is different from any other ordinary balance.<br>It orders two arms of negligible weight and each arm’s length is 15. Some hooks are attached to these arms and Gigel wants to hang up some weights from his collection of G weights (1 &lt;= G &lt;= 20) knowing that these weights have distinct values in the range 1..25. Gigel may droop any weight of any hook but he is forced to use all the weights.<br>Finally, Gigel managed to balance the device using the experience he gained at the National Olympiad in Informatics. Now he would like to know in how many ways the device can be balanced.</p><p>Knowing the repartition of the hooks and the set of the weights write a program that calculates the number of possibilities to balance the device.<br>It is guaranteed that will exist at least one solution for each test case at the evaluation.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>The input has the following structure:<br>• the first line contains the number C (2 &lt;= C &lt;= 20) and the number G (2 &lt;= G &lt;= 20);<br>• the next line contains C integer numbers (these numbers are also distinct and sorted in ascending order) in the range -15..15 representing the repartition of the hooks; each number represents the position relative to the center of the balance on the X axis (when no weights are attached the device is balanced and lined up to the X axis; the absolute value of the distances represents the distance between the hook and the balance center and the sign of the numbers determines the arm of the balance to which the hook is attached: ‘-‘ for the left arm and ‘+’ for the right arm);<br>• on the next line there are G natural, distinct and sorted in ascending order numbers in the range 1..25 representing the weights’ values.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>The output contains the number M representing the number of possibilities to poise the balance.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2 4	</span><br><span class="line">-2 3 </span><br><span class="line">3 4 5 8</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">2e4</span> + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> dp[<span class="number">25</span>][N]= &#123;&#123;<span class="number">0</span>&#125;&#125;;</span><br><span class="line"><span class="keyword">int</span> c[<span class="number">25</span>], g[<span class="number">25</span>];</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;n, &amp;m) == <span class="number">2</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;c[i]);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++)</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;g[i]);</span><br><span class="line">        dp[<span class="number">0</span>][<span class="number">7500</span>] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;=<span class="number">15000</span>; j++)</span><br><span class="line">                <span class="keyword">if</span>(dp[i<span class="number">-1</span>][j])</span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>; k&lt;=n; k++)</span><br><span class="line">                        dp[i][j+c[k]*g[i]] += dp[i<span class="number">-1</span>][j];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, dp[m][<span class="number">7500</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>动态规划</category>
        <category>背包</category>
        <category>01背包</category>
      </categories>
      <tags>
        <tag>DP</tag>
        <tag>背包</tag>
        <tag>POJ</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】POJ-2251 Dungeon Master</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%90%9C%E7%B4%A2/BFS/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91POJ-2251%20Dungeon%20Master/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:03 GMT+0800 (GMT+08:00) --><h1 id="Dungeon-Master-POJ-2251"><a href="#Dungeon-Master-POJ-2251" class="headerlink" title="Dungeon Master (POJ - 2251)"></a>Dungeon Master (<a href="https://vjudge.net/problem/POJ-2251" target="_blank" rel="noopener">POJ - 2251</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>You are trapped in a 3D dungeon and need to find the quickest way out! The dungeon is composed of unit cubes which may or may not be filled with rock. It takes one minute to move one unit north, south, east, west, up or down. You cannot move diagonally and the maze is surrounded by solid rock on all sides.</p><p>Is an escape possible? If yes, how long will it take?</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>The input consists of a number of dungeons. Each dungeon description starts with a line containing three integers L, R and C (all limited to 30 in size).<br>L is the number of levels making up the dungeon.<br>R and C are the number of rows and columns making up the plan of each level.<br>Then there will follow L blocks of R lines each containing C characters. Each character describes one cell of the dungeon. A cell full of rock is indicated by a ‘#’ and empty cells are represented by a ‘.’. Your starting position is indicated by ‘S’ and the exit by the letter ‘E’. There’s a single blank line after each level. Input is terminated by three zeroes for L, R and C.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>Each maze generates one line of output. If it is possible to reach the exit, print a line of the form</p><pre><code>Escaped in x minute(s).        </code></pre><p>where x is replaced by the shortest time it takes to escape.<br>If it is not possible to escape, print the line</p><pre><code>Trapped!            </code></pre></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3 4 5</span><br><span class="line">S....</span><br><span class="line">.###.</span><br><span class="line">.##..</span><br><span class="line">###.#</span><br><span class="line"></span><br><span class="line">#####</span><br><span class="line">#####</span><br><span class="line">##.##</span><br><span class="line">##...</span><br><span class="line"></span><br><span class="line">#####</span><br><span class="line">#####</span><br><span class="line">#.###</span><br><span class="line">####E</span><br><span class="line"></span><br><span class="line">1 3 3</span><br><span class="line">S##</span><br><span class="line">#E#</span><br><span class="line">###</span><br><span class="line"></span><br><span class="line">0 0 0</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Escaped in 11 minute(s).</span><br><span class="line">Trapped!</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>六个方向，bfs即可</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">30</span>+<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> b[N][N][N] = &#123;&#123;&#123;<span class="number">0</span>&#125;&#125;&#125;;</span><br><span class="line"><span class="keyword">bool</span> vis[N][N][N] = &#123;&#123;&#123;<span class="number">0</span>&#125;&#125;&#125;;</span><br><span class="line"><span class="keyword">int</span> l, r, c, ans = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> dx[] = &#123; <span class="number">1</span>, <span class="number">-1</span>,  <span class="number">0</span>,  <span class="number">0</span>,  <span class="number">0</span>,  <span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> dy[] = &#123; <span class="number">0</span>,  <span class="number">0</span>,  <span class="number">1</span>, <span class="number">-1</span>,  <span class="number">0</span>,  <span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> dz[] = &#123; <span class="number">0</span>,  <span class="number">0</span>,  <span class="number">0</span>,  <span class="number">0</span>,  <span class="number">1</span>, <span class="number">-1</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">P</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> z, x, y;</span><br><span class="line">    <span class="keyword">int</span> step;</span><br><span class="line">&#125;;</span><br><span class="line">P sp;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(vis, <span class="number">0</span>, <span class="keyword">sizeof</span>(vis));</span><br><span class="line"></span><br><span class="line">    sp.step = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">queue</span>&lt;P&gt; q;</span><br><span class="line">    q.push(sp);</span><br><span class="line">    vis[sp.z][sp.x][sp.y] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(!q.empty()) &#123;</span><br><span class="line">        P tp = q.front();</span><br><span class="line">        q.pop();</span><br><span class="line"></span><br><span class="line">        P np = tp;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">6</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> z = np.z = tp.z+dz[i];</span><br><span class="line">            <span class="keyword">int</span> x = np.x = tp.x+dx[i];</span><br><span class="line">            <span class="keyword">int</span> y = np.y = tp.y+dy[i];</span><br><span class="line">            np.step = tp.step+<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(z&lt;<span class="number">0</span> || z&gt;=l || x&lt;<span class="number">0</span> || x&gt;=r || y&lt;<span class="number">0</span> || y&gt;=c) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(b[z][x][y]==<span class="string">'#'</span>) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(b[z][x][y]==<span class="string">'E'</span>) &#123;</span><br><span class="line">                ans = np.step;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(b[z][x][y]==<span class="string">'.'</span> &amp;&amp; vis[z][x][y]==<span class="literal">false</span>) &#123;</span><br><span class="line">                vis[z][x][y] = <span class="literal">true</span>;</span><br><span class="line">                q.push(np);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>, &amp;l, &amp;r, &amp;c)==<span class="number">3</span> &amp;&amp; l &amp;&amp; r &amp;&amp; c) &#123;</span><br><span class="line">        ans = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;l; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;r; j++) &#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>; k&lt;c; k++) &#123;</span><br><span class="line">                    <span class="built_in">scanf</span>(<span class="string">" %c"</span>, &amp;b[i][j][k]);</span><br><span class="line">                    <span class="keyword">if</span>(b[i][j][k]==<span class="string">'S'</span>) &#123;</span><br><span class="line">                        sp.z = i;</span><br><span class="line">                        sp.x = j;</span><br><span class="line">                        sp.y = k;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(bfs())</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Escaped in %d minute(s).\n"</span>, ans);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Trapped!\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>搜索</category>
        <category>BFS</category>
      </categories>
      <tags>
        <tag>BFS</tag>
        <tag>kuangbin 专题一</tag>
        <tag>POJ</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】POJ-2250 Compromise</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/LCS/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91POJ-2250%20Compromise/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:03 GMT+0800 (GMT+08:00) --><h1 id="Compromise-POJ-2250"><a href="#Compromise-POJ-2250" class="headerlink" title="Compromise (POJ - 2250)"></a>Compromise (<a href="https://vjudge.net/problem/POJ-2250" target="_blank" rel="noopener">POJ - 2250</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>In a few months the European Currency Union will become a reality. However, to join the club, the Maastricht criteria must be fulfilled, and this is not a trivial task for the countries (maybe except for Luxembourg). To enforce that Germany will fulfill the criteria, our government has so many wonderful options (raise taxes, sell stocks, revalue the gold reserves,…) that it is really hard to choose what to do.</p><p>Therefore the German government requires a program for the following task:<br>Two politicians each enter their proposal of what to do. The computer then outputs the longest common subsequence of words that occurs in both proposals. As you can see, this is a totally fair compromise (after all, a common sequence of words is something what both people have in mind).</p><p>Your country needs this program, so your job is to write it for us.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>The input will contain several test cases.<br>Each test case consists of two texts. Each text is given as a sequence of lower-case words, separated by whitespace, but with no punctuation. Words will be less than 30 characters long. Both texts will contain less than 100 words and will be terminated by a line containing a single ‘#’.<br>Input is terminated by end of file.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For each test case, print the longest common subsequence of words occuring in the two texts. If there is more than one such sequence, any one is acceptable. Separate the words by one blank. After the last word, output a newline character.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">die einkommen der landwirte</span><br><span class="line">sind fuer die abgeordneten ein buch mit sieben siegeln</span><br><span class="line">um dem abzuhelfen</span><br><span class="line">muessen dringend alle subventionsgesetze verbessert werden</span><br><span class="line">#</span><br><span class="line">die steuern auf vermoegen und einkommen</span><br><span class="line">sollten nach meinung der abgeordneten</span><br><span class="line">nachdruecklich erhoben werden</span><br><span class="line">dazu muessen die kontrollbefugnisse der finanzbehoerden</span><br><span class="line">dringend verbessert werden</span><br><span class="line">#</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">die einkommen der abgeordneten muessen dringend verbessert werden</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e2</span>+<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">string</span> a[N], b[N], s;</span><br><span class="line"><span class="keyword">int</span> dp[N][N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> j)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">stack</span>&lt;<span class="built_in">string</span>&gt;st;</span><br><span class="line">    <span class="keyword">while</span>(i&amp;&amp;j) &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i<span class="number">-1</span>]==b[j<span class="number">-1</span>]) &#123;</span><br><span class="line">            st.push(a[i<span class="number">-1</span>]);</span><br><span class="line">            i--, j--;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(dp[i<span class="number">-1</span>][j]&gt;dp[i][j<span class="number">-1</span>])</span><br><span class="line">                i--;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                j--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(st.size()) &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;st.top()&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">        st.pop();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;s) &#123;</span><br><span class="line">        <span class="keyword">int</span> n = <span class="number">0</span>, m = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(s!=<span class="string">"#"</span>) &#123;</span><br><span class="line">            a[n++] = s;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;s;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;s;</span><br><span class="line">        <span class="keyword">while</span>(s!=<span class="string">"#"</span>) &#123;</span><br><span class="line">            b[m++] = s;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;s;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">memset</span>(dp, <span class="number">0</span>, <span class="keyword">sizeof</span>(dp));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=m; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(a[i<span class="number">-1</span>]==b[j<span class="number">-1</span>])</span><br><span class="line">                    dp[i][j] = dp[i<span class="number">-1</span>][j<span class="number">-1</span>]+<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    dp[i][j] = max(dp[i<span class="number">-1</span>][j], dp[i][j<span class="number">-1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        print(n, m);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>动态规划</category>
        <category>LCS</category>
      </categories>
      <tags>
        <tag>DP</tag>
        <tag>POJ</tag>
        <tag>LCS</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】POJ-2264 Advanced Fruits</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/LCS/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91POJ-2264%20Advanced%20Fruits/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:03 GMT+0800 (GMT+08:00) --><h1 id="Advanced-Fruits-POJ-2264"><a href="#Advanced-Fruits-POJ-2264" class="headerlink" title="Advanced Fruits (POJ - 2264)"></a>Advanced Fruits (<a href="https://vjudge.net/problem/POJ-2264" target="_blank" rel="noopener">POJ - 2264</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>The company “21st Century Fruits” has specialized in creating new sorts of fruits by transferring genes from one fruit into the genome of another one. Most times this method doesn’t work, but sometimes, in very rare cases, a new fruit emerges that tastes like a mixture between both of them.</p><p>A big topic of discussion inside the company is “How should the new creations be called?” A mixture between an apple and a pear could be called an apple-pear, of course, but this doesn’t sound very interesting. The boss finally decides to use the shortest string that contains both names of the original fruits as sub-strings as the new name. For instance, “applear” contains “apple” and “pear” (APPLEar and apPlEAR), and there is no shorter string that has the same property.<br>A combination of a cranberry and a boysenberry would therefore be called a “boysecranberry” or a “craboysenberry”, for example.</p><p>Your job is to write a program that computes such a shortest name for a combination of two given fruits. Your algorithm should be efficient, otherwise it is unlikely that it will execute in the alloted time for long fruit names.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>Each line of the input contains two strings that represent the names of the fruits that should be combined. All names have a maximum length of 100 and only consist of alphabetic characters.<br>Input is terminated by end of file.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For each test case, output the shortest name of the resulting fruit on one line. If more than one shortest name is possible, any one is acceptable.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">apple peach</span><br><span class="line">ananas banana</span><br><span class="line">pear peach</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">appleach</span><br><span class="line">bananas</span><br><span class="line">pearch</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e2</span>+<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">string</span> s, t;</span><br><span class="line"><span class="keyword">int</span> dp[N][N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> j)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">stack</span>&lt;<span class="keyword">char</span>&gt;st;</span><br><span class="line">    <span class="keyword">while</span>(i||j) &#123;</span><br><span class="line">        <span class="keyword">if</span>(i==<span class="number">0</span>) &#123;</span><br><span class="line">            st.push(t[j<span class="number">-1</span>]), j--;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(j==<span class="number">0</span>) &#123;</span><br><span class="line">            st.push(s[i<span class="number">-1</span>]), i--;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(s[i<span class="number">-1</span>]==t[j<span class="number">-1</span>]) &#123;</span><br><span class="line">            st.push(s[i<span class="number">-1</span>]);</span><br><span class="line">            i--, j--;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(dp[i<span class="number">-1</span>][j]&gt;dp[i][j<span class="number">-1</span>])</span><br><span class="line">                st.push(s[i<span class="number">-1</span>]), i--;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                st.push(t[j<span class="number">-1</span>]), j--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(st.size()) &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;st.top();</span><br><span class="line">        st.pop();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;s&gt;&gt;t) &#123;</span><br><span class="line">        <span class="keyword">int</span> n = s.size();</span><br><span class="line">        <span class="keyword">int</span> m = t.size();</span><br><span class="line">        <span class="built_in">memset</span>(dp, <span class="number">0</span>, <span class="keyword">sizeof</span>(dp));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=m; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(s[i<span class="number">-1</span>]==t[j<span class="number">-1</span>])</span><br><span class="line">                    dp[i][j] = dp[i<span class="number">-1</span>][j<span class="number">-1</span>]+<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    dp[i][j] = max(dp[i<span class="number">-1</span>][j], dp[i][j<span class="number">-1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        print(n, m);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>动态规划</category>
        <category>LCS</category>
      </categories>
      <tags>
        <tag>DP</tag>
        <tag>POJ</tag>
        <tag>LCS</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】POJ-2533 Longest Ordered Subsequence</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/LIS/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91POJ-2533%20Longest%20Ordered%20Subsequence/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:03 GMT+0800 (GMT+08:00) --><h1 id="Longest-Ordered-Subsequence-POJ-2533"><a href="#Longest-Ordered-Subsequence-POJ-2533" class="headerlink" title="Longest Ordered Subsequence (POJ - 2533)"></a>Longest Ordered Subsequence (<a href="https://vjudge.net/problem/POJ-2533" target="_blank" rel="noopener">POJ - 2533</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>A numeric sequence of <em>ai</em> is ordered if <em>a1</em> &lt; <em>a2</em> &lt; … &lt; <em>aN</em>. Let the subsequence of the given numeric sequence ( <em>a1</em>, <em>a2</em>, …, <em>aN</em>) be any sequence ( <em>ai1</em>, <em>ai2</em>, …, <em>aiK</em>), where 1 &lt;= <em>i1</em> &lt; <em>i2</em> &lt; … &lt; <em>iK</em> &lt;= <em>N</em>. For example, sequence (1, 7, 3, 5, 9, 4, 8) has ordered subsequences, e. g., (1, 7), (3, 4, 8) and many others. All longest ordered subsequences are of length 4, e. g., (1, 3, 5, 8).</p><p>Your program, when given the numeric sequence, must find the length of its longest ordered subsequence.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>The first line of input file contains the length of sequence N. The second line contains the elements of sequence - N integers in the range from 0 to 10000 each, separated by spaces. 1 &lt;= N &lt;= 1000</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>Output file must contain a single integer - the length of the longest ordered subsequence of the given sequence.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">7</span><br><span class="line">1 7 3 5 9 4 8</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">4</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>n^2也能过</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e3</span>+<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[N];</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> dp[N], ans[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]);</span><br><span class="line"></span><br><span class="line">    ans[<span class="number">0</span>] = a[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">int</span> len = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i]&gt;ans[len]) &#123;</span><br><span class="line">            ans[++len] = a[i];</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">int</span> pos = lower_bound(ans, ans+len, a[i])-dp;</span><br><span class="line">            dp[pos] = a[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, len+<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>动态规划</category>
        <category>LIS</category>
      </categories>
      <tags>
        <tag>DP</tag>
        <tag>kuangbin 专题十二</tag>
        <tag>LIS</tag>
        <tag>POJ</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】POJ-2752 Seek the Name, Seek the Fame</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%AD%97%E7%AC%A6%E4%B8%B2/%E6%A8%A1%E5%BC%8F%E5%8C%B9%E9%85%8D/KMP/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91POJ-2752%20Seek%20the%20Name,%20Seek%20the%20Fame/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:03 GMT+0800 (GMT+08:00) --><h1 id="Seek-the-Name-Seek-the-Fame-POJ-2752"><a href="#Seek-the-Name-Seek-the-Fame-POJ-2752" class="headerlink" title="Seek the Name, Seek the Fame (POJ - 2752)"></a>Seek the Name, Seek the Fame (<a href="https://vjudge.net/problem/POJ-2752" target="_blank" rel="noopener">POJ - 2752</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>The little cat is so famous, that many couples tramp over hill and dale to Byteland, and asked the little cat to give names to their newly-born babies. They seek the name, and at the same time seek the fame. In order to escape from such boring job, the innovative little cat works out an easy but fantastic algorithm:</p><p>Step1. Connect the father’s name and the mother’s name, to a new string S.<br>Step2. Find a proper prefix-suffix string of S (which is not only the prefix, but also the suffix of S).</p><p>Example: Father=’ala’, Mother=’la’, we have S = ‘ala’+’la’ = ‘alala’. Potential prefix-suffix strings of S are {‘a’, ‘ala’, ‘alala’}. Given the string S, could you help the little cat to write a program to calculate the length of possible prefix-suffix strings of S? (He might thank you by giving your baby a name:)</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>The input contains a number of test cases. Each test case occupies a single line that contains the string S described above.</p><p>Restrictions: Only lowercase letters may appear in the input. 1 &lt;= Length of S &lt;= 400000.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For each test case, output a single line with integer numbers in increasing order, denoting the possible length of the new baby’s name.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ababcababababcabab</span><br><span class="line">aaaaa</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2 4 9 18</span><br><span class="line">1 2 3 4 5</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">4e5</span> + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[N] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">char</span> s[N] = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> nxt[N] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getnxt</span><span class="params">(<span class="keyword">char</span> *t)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>, j=<span class="number">-1</span>;</span><br><span class="line">    nxt[<span class="number">0</span>]=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">while</span>(t[i]) &#123;</span><br><span class="line">        <span class="keyword">if</span>(j==<span class="number">-1</span> || t[i]==t[j]) &#123;</span><br><span class="line">            i++, j++;</span><br><span class="line">            nxt[i] = j;</span><br><span class="line">        &#125; <span class="keyword">else</span></span><br><span class="line">            j = nxt[j];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%s"</span>, s) == <span class="number">1</span>) &#123;</span><br><span class="line">        getnxt(s);</span><br><span class="line">        <span class="keyword">int</span> n = <span class="built_in">strlen</span>(s), j=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=n; nxt[i]!=<span class="number">-1</span>; i=nxt[i]) &#123;</span><br><span class="line">            a[j++] = i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = j<span class="number">-1</span>; i&gt;=<span class="number">0</span>; i--) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d "</span>, a[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>字符串</category>
        <category>模式匹配</category>
        <category>KMP</category>
      </categories>
      <tags>
        <tag>KMP</tag>
        <tag>kuangbin 专题十六</tag>
        <tag>POJ</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】POJ-3087 Shuffle&#39;m Up</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%A8%A1%E6%8B%9F/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91POJ-3087%20Shuffle&#39;m%20Up/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:03 GMT+0800 (GMT+08:00) --><h1 id="Shuffle’m-Up-POJ-3087"><a href="#Shuffle’m-Up-POJ-3087" class="headerlink" title="Shuffle’m Up (POJ - 3087)"></a>Shuffle’m Up (<a href="https://vjudge.net/problem/POJ-3087" target="_blank" rel="noopener">POJ - 3087</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>A common pastime for poker players at a poker table is to shuffle stacks of chips. Shuffling chips is performed by starting with two stacks of poker chips, <strong>S1</strong> and <strong>S2</strong>, each stack containing <strong><em>C</em></strong> chips. Each stack may contain chips of several different colors.</p><p>The actual shuffle operation is performed by interleaving a chip from <strong>S1</strong> with a chip from <strong>S2</strong> as shown below for <strong><em>C</em></strong> = 5:</p><p>​ ![img](【题解】POJ-3087 Shuffle’m Up/POJ3087.png)</p><p>The single resultant stack, <strong>S12</strong>, contains 2 × <strong><em>C</em></strong> chips. The bottommost chip of <strong>S12</strong> is the bottommost chip from <strong>S2</strong>. On top of that chip, is the bottommost chip from <strong>S1</strong>. The interleaving process continues taking the 2nd chip from the bottom of <strong>S2</strong> and placing that on <strong>S12</strong>, followed by the 2nd chip from the bottom of <strong>S1</strong> and so on until the topmost chip from <strong>S1</strong> is placed on top of <strong>S12</strong>.</p><p>After the shuffle operation, <strong>S12</strong> is split into 2 new stacks by taking the bottommost <strong><em>C</em></strong> chips from <strong>S12</strong> to form a new <strong>S1</strong> and the topmost <strong><em>C</em></strong> chips from <strong>S12</strong> to form a new <strong>S2</strong>. The shuffle operation may then be repeated to form a new <strong>S12</strong>.</p><p>For this problem, you will write a program to determine if a particular resultant stack <strong>S12</strong> can be formed by shuffling two stacks some number of times.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>The first line of input contains a single integer <strong><em>N</em></strong>, (1 ≤ <strong><em>N</em></strong> ≤ 1000) which is the number of datasets that follow.Each dataset consists of four lines of input. The first line of a dataset specifies an integer <strong><em>C</em></strong>, (1 ≤ <strong><em>C</em></strong> ≤ 100) which is the number of chips in each initial stack (<strong>S1</strong> and <strong>S2</strong>). The second line of each dataset specifies the colors of each of the <strong><em>C</em></strong> chips in stack <strong>S1</strong>, starting with the bottommost chip. The third line of each dataset specifies the colors of each of the <strong><em>C</em></strong> chips in stack <strong>S2</strong> starting with the bottommost chip. Colors are expressed as a single uppercase letter (<strong>A</strong> through <strong>H</strong>). There are no blanks or separators between the chip colors. The fourth line of each dataset contains 2 × <strong><em>C</em></strong> uppercase letters (<strong>A</strong> through <strong>H</strong>), representing the colors of the desired result of the shuffling of <strong>S1</strong> and <strong>S2</strong> zero or more times. The bottommost chip’s color is specified first.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>Output for each dataset consists of a single line that displays the dataset number (1 though <strong><em>N</em></strong>), a space, and an integer value which is the minimum number of shuffle operations required to get the desired resultant stack. If the desired result can not be reached using the input for the dataset, display the value negative 1 (<strong>−1</strong>) for the number of shuffle operations.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2</span><br><span class="line">4</span><br><span class="line">AHAH</span><br><span class="line">HAHA</span><br><span class="line">HHAAAAHH</span><br><span class="line">3</span><br><span class="line">CDE</span><br><span class="line">CDE</span><br><span class="line">EEDDCC</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1 2</span><br><span class="line">2 -1</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>模拟即可，如果序列重复则表明进入循环</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e3</span>+<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, c, step;</span><br><span class="line"><span class="keyword">char</span> s1[N] = <span class="string">""</span>, s2[N] = <span class="string">""</span>, t[N] = <span class="string">""</span>, r[N] = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> cs=<span class="number">1</span>; cs&lt;=n; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %s %s %s"</span>, &amp;c, s1, s2, r);</span><br><span class="line">        <span class="built_in">map</span>&lt;<span class="built_in">string</span>,<span class="keyword">bool</span>&gt; m;</span><br><span class="line">        step = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(<span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;c; i++) &#123;</span><br><span class="line">                t[i*<span class="number">2</span>] = s2[i];</span><br><span class="line">                t[i*<span class="number">2</span>+<span class="number">1</span>] = s1[i];</span><br><span class="line">            &#125;</span><br><span class="line">            t[c*<span class="number">2</span>] = <span class="string">'\0'</span>;</span><br><span class="line">            step++;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">strcmp</span>(t, r)==<span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(m[t]==<span class="literal">true</span>) &#123;</span><br><span class="line">                step = <span class="number">-1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            m[t] = <span class="literal">true</span>;</span><br><span class="line">            <span class="built_in">strncpy</span>(s1, t, c);</span><br><span class="line">            <span class="built_in">strncpy</span>(s2, t+c, c);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>, cs, step);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>模拟</category>
      </categories>
      <tags>
        <tag>kuangbin 专题一</tag>
        <tag>POJ</tag>
        <tag>模拟</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】POJ-3122 Pie</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%90%9C%E7%B4%A2/%E4%BA%8C%E5%88%86/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91POJ-3122%20Pie/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:03 GMT+0800 (GMT+08:00) --><h1 id="Pie-POJ-3122"><a href="#Pie-POJ-3122" class="headerlink" title="Pie (POJ - 3122)"></a>Pie (<a href="https://vjudge.net/problem/POJ-3122" target="_blank" rel="noopener">POJ - 3122</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>My birthday is coming up and traditionally I’m serving pie. Not just one pie, no, I have a number N of them, of various tastes and of various sizes. F of my friends are coming to my party and each of them gets a piece of pie. This should be one piece of one pie, not several small pieces since that looks messy. This piece can be one whole pie though.</p><p>My friends are very annoying and if one of them gets a bigger piece than the others, they start complaining. Therefore all of them should get equally sized (but not necessarily equally shaped) pieces, even if this leads to some pie getting spoiled (which is better than spoiling the party). Of course, I want a piece of pie for myself too, and that piece should also be of the same size.</p><p>What is the largest possible piece size all of us can get? All the pies are cylindrical in shape and they all have the same height 1, but the radii of the pies can be different.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>One line with a positive integer: the number of test cases. Then for each test case:</p><ul><li>One line with two integers N and F with 1 ≤ N, F ≤ 10 000: the number of pies and the number of friends.</li><li>One line with N integers ri with 1 ≤ ri ≤ 10 000: the radii of the pies.</li></ul></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For each test case, output one line with the largest possible volume V such that me and my friends can all get a pie piece of size V. The answer should be given as a floating point number with an absolute error of at most 10^−3.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3</span><br><span class="line">3 3</span><br><span class="line">4 3 3</span><br><span class="line">1 24</span><br><span class="line">5</span><br><span class="line">10 5</span><br><span class="line">1 4 2 3 4 5 6 5 4 2</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">25.1327</span><br><span class="line">3.1416</span><br><span class="line">50.2655</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> pi = <span class="built_in">acos</span>(<span class="number">-1.0</span>);</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-6</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">2e5</span> + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">double</span> a[N] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> T, n, f;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;n, &amp;f);</span><br><span class="line">        <span class="keyword">double</span> mx=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%lf"</span>, &amp;a[i]);</span><br><span class="line">            a[i] = a[i]*a[i]*pi;</span><br><span class="line">            mx = max(mx, a[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">double</span> l=<span class="number">0</span>, r=mx, mid=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(r-l &gt; eps) &#123;</span><br><span class="line">            mid = l+(r-l)/<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">                num += (<span class="keyword">int</span>)(a[i]/mid);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(num &gt;= f+<span class="number">1</span>)</span><br><span class="line">                l = mid;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                r = mid;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%.4lf\n"</span>, mid);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>搜索</category>
        <category>二分</category>
      </categories>
      <tags>
        <tag>POJ</tag>
        <tag>二分</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】POJ-3126 Prime Path</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%90%9C%E7%B4%A2/BFS/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91POJ-3126%20Prime%20Path/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:03 GMT+0800 (GMT+08:00) --><h1 id="Prime-Path-POJ-3126"><a href="#Prime-Path-POJ-3126" class="headerlink" title="Prime Path (POJ - 3126)"></a>Prime Path (<a href="https://vjudge.net/problem/POJ-3126" target="_blank" rel="noopener">POJ - 3126</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>The ministers of the cabinet were quite upset by the message from the Chief of Security stating that they would all have to change the four-digit room numbers on their offices.<br>— It is a matter of security to change such things every now and then, to keep the enemy in the dark.<br>— But look, I have chosen my number 1033 for good reasons. I am the Prime minister, you know!<br>— I know, so therefore your new number 8179 is also a prime. You will just have to paste four new digits over the four old ones on your office door.<br>— No, it’s not that simple. Suppose that I change the first digit to an 8, then the number will read 8033 which is not a prime!<br>— I see, being the prime minister you cannot stand having a non-prime number on your door even for a few seconds.<br>— Correct! So I must invent a scheme for going from 1033 to 8179 by a path of prime numbers where only one digit is changed from one prime to the next prime.</p><p>Now, the minister of finance, who had been eavesdropping, intervened.<br>— No unnecessary expenditure, please! I happen to know that the price of a digit is one pound.<br>— Hmm, in that case I need a computer program to minimize the cost. You don’t know some very cheap software gurus, do you?<br>— In fact, I do. You see, there is this programming contest going on… Help the prime minister to find the cheapest prime path between any two given four-digit primes! The first digit must be nonzero, of course. Here is a solution in the case above.</p><p>​ 1033<br>​ 1733<br>​ 3733<br>​ 3739<br>​ 3779<br>​ 8779<br>​ 8179</p><p>The cost of this solution is 6 pounds. Note that the digit 1 which got pasted over in step 2 can not be reused in the last step – a new 1 must be purchased.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>One line with a positive number: the number of test cases (at most 100). Then for each test case, one line with two numbers separated by a blank. Both numbers are four-digit primes (without leading zeros).</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>One line for each case, either with a number stating the minimal cost or containing the word Impossible.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3</span><br><span class="line">1033 8179</span><br><span class="line">1373 8017</span><br><span class="line">1033 1033</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">6</span><br><span class="line">7</span><br><span class="line">0</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>欧拉筛打表，枚举每一位的变化，注意大于2的偶数不是质数</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span>+<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> isp[N] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">bool</span> vis[N] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> n, s, e;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">P</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> x;</span><br><span class="line">    <span class="keyword">int</span> step;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">euler</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> p[N], m=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>; i&lt;=N; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(!isp[i])</span><br><span class="line">            p[m++] = i;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;m; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(p[j]*i&gt;N)</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            isp[p[j]*i] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(i%p[j]==<span class="number">0</span>)</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">bfs</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(vis, <span class="number">0</span>, <span class="keyword">sizeof</span>(vis));</span><br><span class="line"></span><br><span class="line">    P sp;</span><br><span class="line">    sp.x = s;</span><br><span class="line">    sp.step = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">queue</span>&lt;P&gt; q;</span><br><span class="line">    q.push(sp);</span><br><span class="line">    vis[sp.x] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(!q.empty()) &#123;</span><br><span class="line">        P tp = q.front();</span><br><span class="line">        q.pop();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(tp.x==e) &#123;</span><br><span class="line">            <span class="keyword">return</span> tp.step;</span><br><span class="line">        &#125;</span><br><span class="line">        P np = tp;</span><br><span class="line">        np.step = tp.step+<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">9</span>; i+=<span class="number">2</span>) &#123;</span><br><span class="line">            np.x = tp.x/<span class="number">10</span>*<span class="number">10</span> + i;</span><br><span class="line">            <span class="keyword">if</span>(np.x!=tp.x &amp;&amp; !vis[np.x] &amp;&amp; !isp[np.x]) &#123;</span><br><span class="line">                q.push(np);</span><br><span class="line">                vis[np.x] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;=<span class="number">9</span>; i++) &#123;</span><br><span class="line">            np.x = tp.x/<span class="number">100</span>*<span class="number">100</span> + i*<span class="number">10</span> + tp.x%<span class="number">10</span>;</span><br><span class="line">            <span class="keyword">if</span>(np.x!=tp.x &amp;&amp; !vis[np.x] &amp;&amp; !isp[np.x]) &#123;</span><br><span class="line">                q.push(np);</span><br><span class="line">                vis[np.x] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;=<span class="number">9</span>; i++) &#123;</span><br><span class="line">            np.x = tp.x/<span class="number">1000</span>*<span class="number">1000</span> + i*<span class="number">100</span> + tp.x%<span class="number">100</span>;</span><br><span class="line">            <span class="keyword">if</span>(np.x!=tp.x &amp;&amp; !vis[np.x] &amp;&amp; !isp[np.x]) &#123;</span><br><span class="line">                q.push(np);</span><br><span class="line">                vis[np.x] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">9</span>; i++) &#123;</span><br><span class="line">            np.x = i*<span class="number">1000</span> + tp.x%<span class="number">1000</span>;</span><br><span class="line">            <span class="keyword">if</span>(np.x!=tp.x &amp;&amp; !vis[np.x] &amp;&amp; !isp[np.x]) &#123;</span><br><span class="line">                q.push(np);</span><br><span class="line">                vis[np.x] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    euler();</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;s, &amp;e);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, bfs());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>搜索</category>
        <category>BFS</category>
      </categories>
      <tags>
        <tag>BFS</tag>
        <tag>kuangbin 专题一</tag>
        <tag>POJ</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】POJ-3273 Monthly Expense</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%90%9C%E7%B4%A2/%E4%BA%8C%E5%88%86/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91POJ-3273%20Monthly%20Expense/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:03 GMT+0800 (GMT+08:00) --><h1 id="Monthly-Expense-POJ-3273"><a href="#Monthly-Expense-POJ-3273" class="headerlink" title="Monthly Expense (POJ - 3273)"></a>Monthly Expense (<a href="https://vjudge.net/problem/POJ-3273" target="_blank" rel="noopener">POJ - 3273</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>Farmer John is an astounding accounting wizard and has realized he might run out of money to run the farm. He has already calculated and recorded the exact amount of money (1 ≤ <em>moneyi</em> ≤ 10,000) that he will need to spend each day over the next <em>N</em> (1 ≤ <em>N</em> ≤ 100,000) days.</p><p>FJ wants to create a budget for a sequential set of exactly <em>M</em> (1 ≤ <em>M</em> ≤ <em>N</em>) fiscal periods called “fajomonths”. Each of these fajomonths contains a set of 1 or more consecutive days. Every day is contained in exactly one fajomonth.</p><p>FJ’s goal is to arrange the fajomonths so as to minimize the expenses of the fajomonth with the highest spending and thus determine his monthly spending limit.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>Line 1: Two space-separated integers: <em>N</em> and <em>M</em><br>Lines 2.. <em>N</em>+1: Line <em>i</em>+1 contains the number of dollars Farmer John spends on the <em>i</em>th day</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>Line 1: The smallest possible monthly limit Farmer John can afford to live with.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">7 5</span><br><span class="line">100</span><br><span class="line">400</span><br><span class="line">300</span><br><span class="line">100</span><br><span class="line">500</span><br><span class="line">101</span><br><span class="line">400</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">500</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>If Farmer John schedules the months so that the first two days are a month, the third and fourth are a month, and the last three are their own months, he spends at most $500 in any month. Any other method of scheduling gives a larger minimum monthly limit.</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">2e5</span>+<span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[N] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;m)) &#123;</span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>, mx = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]);</span><br><span class="line">            sum += a[i];</span><br><span class="line">            mx = max(mx, a[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> l=mx, r=sum, mid=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(l&lt;=r) &#123;</span><br><span class="line">            mid = l+(r-l)/<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">int</span> ans = <span class="number">1</span>, k = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">                k += a[i];</span><br><span class="line">                <span class="keyword">if</span>(k&gt;mid) &#123;</span><br><span class="line">                    k = a[i];</span><br><span class="line">                    ans ++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(ans&gt;m)</span><br><span class="line">                l = mid+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                r = mid<span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, mid);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>搜索</category>
        <category>二分</category>
      </categories>
      <tags>
        <tag>POJ</tag>
        <tag>二分</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】POJ-3278 Catch That Cow</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%90%9C%E7%B4%A2/BFS/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91POJ-3278%20Catch%20That%20Cow/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:03 GMT+0800 (GMT+08:00) --><h1 id="Catch-That-Cow-POJ-3278"><a href="#Catch-That-Cow-POJ-3278" class="headerlink" title="Catch That Cow (POJ - 3278)"></a>Catch That Cow (<a href="https://vjudge.net/problem/POJ-3278" target="_blank" rel="noopener">POJ - 3278</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>Farmer John has been informed of the location of a fugitive cow and wants to catch her immediately. He starts at a point <em>N</em> (0 ≤ <em>N</em> ≤ 100,000) on a number line and the cow is at a point <em>K</em> (0 ≤ <em>K</em> ≤ 100,000) on the same number line. Farmer John has two modes of transportation: walking and teleporting.</p><p>* Walking: FJ can move from any point <em>X</em> to the points <em>X</em> - 1 or <em>X</em> + 1 in a single minute<br>* Teleporting: FJ can move from any point <em>X</em> to the point 2 × <em>X</em> in a single minute.</p><p>If the cow, unaware of its pursuit, does not move at all, how long does it take for Farmer John to retrieve it?</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>Line 1: Two space-separated integers: <em>N</em> and <em>K</em></p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>Line 1: The least amount of time, in minutes, it takes for Farmer John to catch the fugitive cow.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">5 17</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">4</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>The fastest way for Farmer John to reach the fugitive cow is to move along the following path: 5-10-9-18-17, which takes 4 minutes.</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>一维bfs，注意剪枝</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span>+<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> vis[N] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> n, k, ans = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">P</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> x;</span><br><span class="line">    <span class="keyword">int</span> step;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">bfs</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(vis, <span class="number">0</span>, <span class="keyword">sizeof</span>(vis));</span><br><span class="line"></span><br><span class="line">    P sp;</span><br><span class="line">    sp.x = n;</span><br><span class="line">    sp.step = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">queue</span>&lt;P&gt; q;</span><br><span class="line">    q.push(sp);</span><br><span class="line">    vis[sp.x] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(!q.empty()) &#123;</span><br><span class="line">        P tp = q.front();</span><br><span class="line">        q.pop();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(tp.x==k) &#123;</span><br><span class="line">            <span class="keyword">return</span> tp.step;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        P np = tp;</span><br><span class="line"></span><br><span class="line">        np.x = tp.x - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(np.x&gt;=<span class="number">0</span> &amp;&amp; !vis[np.x]) &#123;</span><br><span class="line">            np.step = tp.step+<span class="number">1</span>;</span><br><span class="line">            q.push(np);</span><br><span class="line">            vis[np.x] = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        np.x = tp.x + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(np.x&lt;=N &amp;&amp; !vis[np.x]) &#123;</span><br><span class="line">            np.step = tp.step+<span class="number">1</span>;</span><br><span class="line">            q.push(np);</span><br><span class="line">            vis[np.x] = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        np.x = tp.x * <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(np.x&lt;=N &amp;&amp; !vis[np.x]) &#123;</span><br><span class="line">            np.step = tp.step+<span class="number">1</span>;</span><br><span class="line">            q.push(np);</span><br><span class="line">            vis[np.x] = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;k);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(n&gt;k)</span><br><span class="line">        ans = n-k;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        ans = bfs();</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>搜索</category>
        <category>BFS</category>
      </categories>
      <tags>
        <tag>BFS</tag>
        <tag>kuangbin 专题一</tag>
        <tag>POJ</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】POJ-3279 Fliptile</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%9E%9A%E4%B8%BE/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91POJ-3279%20Fliptile/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:03 GMT+0800 (GMT+08:00) --><h1 id="Fliptile-POJ-3279"><a href="#Fliptile-POJ-3279" class="headerlink" title="Fliptile (POJ - 3279)"></a>Fliptile (<a href="https://vjudge.net/problem/POJ-3279" target="_blank" rel="noopener">POJ - 3279</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>Farmer John knows that an intellectually satisfied cow is a happy cow who will give more milk. He has arranged a brainy activity for cows in which they manipulate an <em>M</em> × <em>N</em> grid (1 ≤ <em>M</em> ≤ 15; 1 ≤ <em>N</em> ≤ 15) of square tiles, each of which is colored black on one side and white on the other side.</p><p>As one would guess, when a single white tile is flipped, it changes to black; when a single black tile is flipped, it changes to white. The cows are rewarded when they flip the tiles so that each tile has the white side face up. However, the cows have rather large hooves and when they try to flip a certain tile, they also flip all the adjacent tiles (tiles that share a full edge with the flipped tile). Since the flips are tiring, the cows want to minimize the number of flips they have to make.</p><p>Help the cows determine the minimum number of flips required, and the locations to flip to achieve that minimum. If there are multiple ways to achieve the task with the minimum amount of flips, return the one with the least lexicographical ordering in the output when considered as a string. If the task is impossible, print one line with the word “IMPOSSIBLE”.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>Line 1: Two space-separated integers: <em>M</em> and <em>N</em><br>Lines 2.. <em>M</em>+1: Line <em>i</em>+1 describes the colors (left to right) of row i of the grid with <em>N</em> space-separated integers which are 1 for black and 0 for white</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>Lines 1.. <em>M</em>: Each line contains <em>N</em> space-separated integers, each specifying how many times to flip that particular location.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">4 4</span><br><span class="line">1 0 0 1</span><br><span class="line">0 1 1 0</span><br><span class="line">0 1 1 0</span><br><span class="line">1 0 0 1</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">0 0 0 0</span><br><span class="line">1 0 0 1</span><br><span class="line">1 0 0 1</span><br><span class="line">0 0 0 0</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>开关问题，二进制枚举第一行开关情况</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">15</span>+<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> b[N][N] = &#123;&#123;<span class="number">0</span>&#125;&#125;, c[N][N] = &#123;&#123;<span class="number">0</span>&#125;&#125;, a[N][N] = &#123;&#123;<span class="number">0</span>&#125;&#125;;</span><br><span class="line"><span class="keyword">int</span> n, m, ans = inf;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> dx[]= &#123; <span class="number">1</span>, <span class="number">-1</span>,  <span class="number">0</span>,  <span class="number">0</span>,  <span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> dy[]= &#123; <span class="number">0</span>,  <span class="number">0</span>,  <span class="number">1</span>, <span class="number">-1</span>,  <span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">isb</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t = b[x][y];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">5</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">int</span> xi = x+dx[i];</span><br><span class="line">        <span class="keyword">int</span> yi = y+dy[i];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(xi&lt;<span class="number">0</span> || xi&gt;=n || yi&lt;<span class="number">0</span> || yi&gt;=m) &#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        t += c[xi][yi];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> t%<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;n; i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;m; j++)</span><br><span class="line">            <span class="keyword">if</span>(isb(i<span class="number">-1</span>,j))</span><br><span class="line">                c[i][j] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;m; i++)</span><br><span class="line">        <span class="keyword">if</span>(isb(n<span class="number">-1</span>,i))</span><br><span class="line">            <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> res=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;m; j++)</span><br><span class="line">            res += c[i][j];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;m)==<span class="number">2</span>) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;m; j++) &#123;</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;b[i][j]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;(<span class="number">1</span>&lt;&lt;m); i++) &#123;</span><br><span class="line">            <span class="built_in">memset</span>(c, <span class="number">0</span>, <span class="keyword">sizeof</span>(c));</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;m; j++) &#123;</span><br><span class="line">                c[<span class="number">0</span>][m-j<span class="number">-1</span>] = i&gt;&gt;j&amp;<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">int</span> res = dfs();</span><br><span class="line">            <span class="keyword">if</span>(res&gt;=<span class="number">0</span> &amp;&amp; res&lt;ans) &#123;</span><br><span class="line">                ans = res;</span><br><span class="line">                <span class="built_in">memcpy</span>(a, c, <span class="keyword">sizeof</span>(c));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(ans==inf) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"IMPOSSIBLE\n"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;m; j++) &#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"%d "</span>, a[i][j]);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>枚举</category>
      </categories>
      <tags>
        <tag>kuangbin 专题一</tag>
        <tag>POJ</tag>
        <tag>枚举</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】POJ-3414 Pots</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%90%9C%E7%B4%A2/BFS/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91POJ-3414%20Pots/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:03 GMT+0800 (GMT+08:00) --><h1 id="Pots-POJ-3414"><a href="#Pots-POJ-3414" class="headerlink" title="Pots (POJ - 3414)"></a>Pots (<a href="https://vjudge.net/problem/POJ-3414" target="_blank" rel="noopener">POJ - 3414</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>You are given two pots, having the volume of <strong>A</strong> and <strong>B</strong> liters respectively. The following operations can be performed:</p><ol><li>FILL(i) fill the pot <strong>i</strong> (1 ≤ <strong>i</strong> ≤ 2) from the tap;</li><li>DROP(i) empty the pot <strong>i</strong> to the drain;</li><li>POUR(i,j) pour from pot <strong>i</strong> to pot <strong>j</strong>; after this operation either the pot <strong>j</strong> is full (and there may be some water left in the pot <strong>i</strong>), or the pot <strong>i</strong> is empty (and all its contents have been moved to the pot <strong>j</strong>).</li></ol><p>Write a program to find the shortest possible sequence of these operations that will yield exactly <strong>C</strong> liters of water in one of the pots.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>On the first and only line are the numbers <strong>A</strong>, <strong>B</strong>, and <strong>C</strong>. These are all integers in the range from 1 to 100 and <strong>C</strong>≤max(<strong>A</strong>,<strong>B</strong>).</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>The first line of the output must contain the length of the sequence of operations <strong>K</strong>. The following <strong>K</strong> lines must each describe one operation. If there are several sequences of minimal length, output any one of them. If the desired result can’t be achieved, the first and only line of the file must contain the word ‘<strong>impossible</strong>’.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3 5 4</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">6</span><br><span class="line">FILL(2)</span><br><span class="line">POUR(2,1)</span><br><span class="line">DROP(1)</span><br><span class="line">POUR(2,1)</span><br><span class="line">FILL(2)</span><br><span class="line">POUR(2,1)</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>倒水问题，bfs+路径输出</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e2</span>+<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> vis[N][N] = &#123;&#123;<span class="number">0</span>&#125;&#125;;</span><br><span class="line"><span class="keyword">int</span> A, B, C;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span>* path[] = &#123;</span><br><span class="line">    <span class="string">"FILL(1)"</span>,</span><br><span class="line">    <span class="string">"FILL(2)"</span>,</span><br><span class="line">    <span class="string">"DROP(1)"</span>,</span><br><span class="line">    <span class="string">"DROP(2)"</span>,</span><br><span class="line">    <span class="string">"POUR(1,2)"</span>,</span><br><span class="line">    <span class="string">"POUR(2,1)"</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">P</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> a, b;</span><br><span class="line">    <span class="keyword">int</span> p[N];</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function">P <span class="title">bfs</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(vis, <span class="number">0</span>, <span class="keyword">sizeof</span>(vis));</span><br><span class="line"></span><br><span class="line">    P sp;</span><br><span class="line">    sp.a = <span class="number">0</span>;</span><br><span class="line">    sp.b = <span class="number">0</span>;</span><br><span class="line">    sp.n = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">memset</span>(sp.p, <span class="number">0</span>, <span class="keyword">sizeof</span>(sp.p));</span><br><span class="line"></span><br><span class="line">    <span class="built_in">queue</span>&lt;P&gt; q;</span><br><span class="line">    q.push(sp);</span><br><span class="line">    vis[sp.a][sp.b] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(!q.empty()) &#123;</span><br><span class="line">        P tp = q.front();</span><br><span class="line">        q.pop();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(tp.a==C || tp.b==C) &#123;</span><br><span class="line">            <span class="keyword">return</span> tp;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        P np = tp;</span><br><span class="line">        np.n = tp.n+<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(tp.a&lt;A) &#123;</span><br><span class="line">            np.a = A;</span><br><span class="line">            np.b = tp.b;</span><br><span class="line">            <span class="keyword">if</span>(!vis[np.a][np.b]) &#123;</span><br><span class="line">                np.p[tp.n] = <span class="number">0</span>;</span><br><span class="line">                q.push(np);</span><br><span class="line">                vis[np.a][np.b] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(tp.b&lt;B) &#123;</span><br><span class="line">            np.a = tp.a;</span><br><span class="line">            np.b = B;</span><br><span class="line">            <span class="keyword">if</span>(!vis[np.a][np.b]) &#123;</span><br><span class="line">                np.p[tp.n] = <span class="number">1</span>;</span><br><span class="line">                q.push(np);</span><br><span class="line">                vis[np.a][np.b] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(tp.a) &#123;</span><br><span class="line">            np.a = <span class="number">0</span>;</span><br><span class="line">            np.b = tp.b;</span><br><span class="line">            <span class="keyword">if</span>(!vis[np.a][np.b]) &#123;</span><br><span class="line">                np.p[tp.n] = <span class="number">2</span>;</span><br><span class="line">                q.push(np);</span><br><span class="line">                vis[np.a][np.b] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(tp.b) &#123;</span><br><span class="line">            np.a = tp.a;</span><br><span class="line">            np.b = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span>(!vis[np.a][np.b]) &#123;</span><br><span class="line">                np.p[tp.n] = <span class="number">3</span>;</span><br><span class="line">                q.push(np);</span><br><span class="line">                vis[np.a][np.b] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(tp.a &amp;&amp; tp.b&lt;B) &#123;</span><br><span class="line">            <span class="keyword">if</span>(tp.a &gt; B-tp.b) &#123;</span><br><span class="line">                np.a = tp.a-B+tp.b;</span><br><span class="line">                np.b = B;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                np.a = <span class="number">0</span>;</span><br><span class="line">                np.b = tp.a+tp.b;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(!vis[np.a][np.b]) &#123;</span><br><span class="line">                np.p[tp.n] = <span class="number">4</span>;</span><br><span class="line">                q.push(np);</span><br><span class="line">                vis[np.a][np.b] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(tp.b &amp;&amp; tp.a&lt;A) &#123;</span><br><span class="line">            <span class="keyword">if</span>(tp.b &gt; A-tp.a) &#123;</span><br><span class="line">                np.a = A;</span><br><span class="line">                np.b = tp.b-A+tp.a;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                np.a = tp.a+tp.b;</span><br><span class="line">                np.b = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(!vis[np.a][np.b]) &#123;</span><br><span class="line">                np.p[tp.n] = <span class="number">5</span>;</span><br><span class="line">                q.push(np);</span><br><span class="line">                vis[np.a][np.b] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>, &amp;A, &amp;B, &amp;C);</span><br><span class="line">    P ans = bfs();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(ans.n) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans.n);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;ans.n; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> j = ans.p[i];</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%s\n"</span>, path[j]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"impossible\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>搜索</category>
        <category>BFS</category>
      </categories>
      <tags>
        <tag>BFS</tag>
        <tag>kuangbin 专题一</tag>
        <tag>POJ</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】POJ-3984 迷宫问题</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%90%9C%E7%B4%A2/BFS/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91POJ-3984%20%E8%BF%B7%E5%AE%AB%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:03 GMT+0800 (GMT+08:00) --><h1 id="迷宫问题-POJ-3984"><a href="#迷宫问题-POJ-3984" class="headerlink" title="迷宫问题 (POJ - 3984)"></a>迷宫问题 (<a href="https://vjudge.net/problem/POJ-3984" target="_blank" rel="noopener">POJ - 3984</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>定义一个二维数组：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">int maze[5][5] &#x3D; &#123;</span><br><span class="line">	0, 1, 0, 0, 0,</span><br><span class="line">	0, 1, 0, 1, 0,</span><br><span class="line">	0, 0, 0, 0, 0,</span><br><span class="line">	0, 1, 1, 1, 0,</span><br><span class="line">	0, 0, 0, 1, 0,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>它表示一个迷宫，其中的1表示墙壁，0表示可以走的路，只能横着走或竖着走，不能斜着走，要求编程序找出从左上角到右下角的最短路线。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>一个5 × 5的二维数组，表示一个迷宫。数据保证有唯一解。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>左上角到右下角的最短路径，格式如样例所示。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">0 1 0 0 0</span><br><span class="line">0 1 0 1 0</span><br><span class="line">0 0 0 0 0</span><br><span class="line">0 1 1 1 0</span><br><span class="line">0 0 0 1 0</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(0, 0)</span><br><span class="line">(1, 0)</span><br><span class="line">(2, 0)</span><br><span class="line">(2, 1)</span><br><span class="line">(2, 2)</span><br><span class="line">(2, 3)</span><br><span class="line">(2, 4)</span><br><span class="line">(3, 4)</span><br><span class="line">(4, 4)</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>bfs+路径输出，记录路径有多种方式。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e1</span>+<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> b[N][N] = &#123;&#123;<span class="number">0</span>&#125;&#125;;</span><br><span class="line"><span class="keyword">bool</span> vis[N][N] = &#123;&#123;<span class="number">0</span>&#125;&#125;;</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> dx[] = &#123; <span class="number">0</span>,  <span class="number">1</span>, <span class="number">-1</span>,  <span class="number">0</span>,  <span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> dy[] = &#123; <span class="number">0</span>,  <span class="number">0</span>,  <span class="number">0</span>,  <span class="number">1</span>, <span class="number">-1</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">P</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> x, y;</span><br><span class="line">    <span class="keyword">int</span> p[N];</span><br><span class="line">    <span class="keyword">int</span> step;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function">P <span class="title">bfs</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(vis, <span class="number">0</span>, <span class="keyword">sizeof</span>(vis));</span><br><span class="line"></span><br><span class="line">    P sp;</span><br><span class="line">    sp.x = <span class="number">0</span>;</span><br><span class="line">    sp.y = <span class="number">0</span>;</span><br><span class="line">    sp.step = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">memset</span>(sp.p, <span class="number">0</span>, <span class="keyword">sizeof</span>(sp.p));</span><br><span class="line"></span><br><span class="line">    <span class="built_in">queue</span>&lt;P&gt; q;</span><br><span class="line">    q.push(sp);</span><br><span class="line">    vis[sp.x][sp.y] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(!q.empty()) &#123;</span><br><span class="line">        P tp = q.front();</span><br><span class="line">        q.pop();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(tp.x==n<span class="number">-1</span> &amp;&amp; tp.y==m<span class="number">-1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> tp;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        P np = tp;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">4</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> x = np.x = tp.x+dx[i];</span><br><span class="line">            <span class="keyword">int</span> y = np.y = tp.y+dy[i];</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(!vis[x][y] &amp;&amp; b[x][y]==<span class="number">0</span>) &#123;</span><br><span class="line">                np.step = tp.step+<span class="number">1</span>;</span><br><span class="line">                np.p[np.step] = i;</span><br><span class="line">                q.push(np);</span><br><span class="line">                vis[x][y] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    n = m = <span class="number">5</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;m; j++) &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;b[i][j]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    P ans = bfs();</span><br><span class="line">    <span class="keyword">if</span>(ans.step) &#123;</span><br><span class="line">        <span class="keyword">int</span> x=<span class="number">0</span>, y=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;=ans.step; i++) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"(%d, %d)\n"</span>, x+=dx[ans.p[i]], y+=dy[ans.p[i]]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>搜索</category>
        <category>BFS</category>
      </categories>
      <tags>
        <tag>BFS</tag>
        <tag>kuangbin 专题一</tag>
        <tag>POJ</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】UVA-11624 Fire!</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%90%9C%E7%B4%A2/BFS/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91UVA-11624%20Fire!/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:03 GMT+0800 (GMT+08:00) --><h1 id="Fire-UVA-11624"><a href="#Fire-UVA-11624" class="headerlink" title="Fire! (UVA - 11624)"></a>Fire! (<a href="https://vjudge.net/problem/UVA-11624" target="_blank" rel="noopener">UVA - 11624</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>![img](【题解】UVA-11624 Fire!/UVA11624.png)</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>先跑一次bfs求出火蔓延到每一格的时间，再以此为限制对人跑bfs求解，注意有多个起火点</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e3</span>+<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> b[N][N] = &#123;&#123;<span class="number">0</span>&#125;&#125;;</span><br><span class="line"><span class="keyword">bool</span> vis[N][N] = &#123;&#123;<span class="number">0</span>&#125;&#125;;</span><br><span class="line"><span class="keyword">int</span> t[N][N] = &#123;&#123;<span class="number">0</span>&#125;&#125;;</span><br><span class="line"><span class="keyword">int</span> T, n, m, ans = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> dx[] = &#123; <span class="number">1</span>, <span class="number">-1</span>,  <span class="number">0</span>,  <span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> dy[] = &#123; <span class="number">0</span>,  <span class="number">0</span>,  <span class="number">1</span>, <span class="number">-1</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">F</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> x, y;</span><br><span class="line">    <span class="keyword">int</span> step;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">P</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> x, y;</span><br><span class="line">    <span class="keyword">int</span> step;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">queue</span>&lt;F&gt; f;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pre</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(vis, <span class="number">0</span>, <span class="keyword">sizeof</span>(vis));</span><br><span class="line">    <span class="keyword">while</span>(!f.empty()) &#123;</span><br><span class="line">        F tf = f.front();</span><br><span class="line">        f.pop();</span><br><span class="line"></span><br><span class="line">        F nf = tf;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">4</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> x = nf.x = tf.x+dx[i];</span><br><span class="line">            <span class="keyword">int</span> y = nf.y = tf.y+dy[i];</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(x&lt;<span class="number">0</span> || x&gt;=n || y&lt;<span class="number">0</span> || y&gt;=m) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(!vis[x][y] &amp;&amp; b[x][y]==<span class="string">'.'</span>) &#123;</span><br><span class="line">                nf.step = tf.step+<span class="number">1</span>;</span><br><span class="line">                f.push(nf);</span><br><span class="line">                vis[x][y] = <span class="number">1</span>;</span><br><span class="line">                t[x][y] = nf.step;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(vis, <span class="number">0</span>, <span class="keyword">sizeof</span>(vis));</span><br><span class="line"></span><br><span class="line">    P sp;</span><br><span class="line">    sp.x = x;</span><br><span class="line">    sp.y = y;</span><br><span class="line">    sp.step = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">queue</span>&lt;P&gt; q;</span><br><span class="line">    q.push(sp);</span><br><span class="line">    vis[x][y] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(!q.empty()) &#123;</span><br><span class="line">        P tp = q.front();</span><br><span class="line">        q.pop();</span><br><span class="line"></span><br><span class="line">        P np = tp;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">4</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> x = np.x = tp.x+dx[i];</span><br><span class="line">            <span class="keyword">int</span> y = np.y = tp.y+dy[i];</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(x&lt;<span class="number">0</span> || x&gt;=n || y&lt;<span class="number">0</span> || y&gt;=m) &#123;</span><br><span class="line">                ans = tp.step+<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(!vis[x][y] &amp;&amp; b[x][y]==<span class="string">'.'</span> &amp;&amp; tp.step+<span class="number">1</span>&lt;t[x][y]) &#123;</span><br><span class="line">                np.step = tp.step+<span class="number">1</span>;</span><br><span class="line">                q.push(np);</span><br><span class="line">                vis[x][y] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> cs=<span class="number">1</span>; cs&lt;=T; cs++) &#123;</span><br><span class="line">        <span class="built_in">memset</span>(t, inf, <span class="keyword">sizeof</span>(t));</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;m);</span><br><span class="line">        <span class="keyword">int</span> x, y;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;m; j++) &#123;</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">" %c"</span>, &amp;b[i][j]);</span><br><span class="line">                <span class="keyword">if</span>(b[i][j]==<span class="string">'F'</span>) &#123;</span><br><span class="line">                    F sf;</span><br><span class="line">                    sf.x = i;</span><br><span class="line">                    sf.y = j;</span><br><span class="line">                    sf.step = <span class="number">0</span>;</span><br><span class="line">                    t[i][j] = <span class="number">0</span>;</span><br><span class="line">                    f.push(sf);</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span>(b[i][j]==<span class="string">'J'</span>) &#123;</span><br><span class="line">                    x = i;</span><br><span class="line">                    y = j;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        pre();</span><br><span class="line">        <span class="keyword">if</span>(bfs(x, y))</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"IMPOSSIBLE\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>搜索</category>
        <category>BFS</category>
      </categories>
      <tags>
        <tag>BFS</tag>
        <tag>kuangbin 专题一</tag>
        <tag>UVA</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】ZOJ-1164 Software CRC</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91ZOJ-1164%20Software%20CRC/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:03 GMT+0800 (GMT+08:00) --><h1 id="Software-CRC-ZOJ-1164"><a href="#Software-CRC-ZOJ-1164" class="headerlink" title="Software CRC (ZOJ - 1164)"></a>Software CRC (<a href="https://vjudge.net/problem/ZOJ-1164" target="_blank" rel="noopener">ZOJ - 1164</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>You work for a company which uses lots of personal computers. Your boss, Dr Penny Pincher, has wanted to link the computers together for some time but has been unwilling to spend any money on the Ethernet boards you have recommended. You, unwittingly, have pointed out that each of the PCs has come from the vendor with an asynchronous serial port at no extra cost. Dr Pincher, of course, recognizes her opportunity and assigns you the task of writing the software necessary to allow communication between PCs.</p><p>You’ve read a bit about communications and know that every transmission is subject to error and that the typical solution to this problem is to append some error checking information to the end of each message. This information allows the receiving program to detect when a transmission error has occurred (in most cases). So, off you go to the library, borrow the biggest book on communications you can find and spend your weekend (unpaid overtime) reading about error checking.</p><p>Finally you decide that CRC (cyclic redundancy check) is the best error checking for your situation and write a note to Dr Pincher detailing the proposed error checking mechanism noted below.</p><p>The message to be transmitted is viewed as a long positive binary number. The first byte of the message is treated as the most significant byte of the binary number. The second byte is the next most significant, etc. This binary number will be called “m” (for message). Instead of transmitting “m” you will transmit a message, “m2”, consisting of “m” followed by a two-byte CRC value.</p><p>The CRC value is chosen so that “m2” when divided by a certain 16-bit value “g” leaves a remainder of 0. This makes it easy for the receiving program to determine whether the message has been corrupted by transmission errors. It simply divides any message received by “g”. If the remainder of the division is zero, it is assumed that no error has occurred.</p><p>You notice that most of the suggested values of “g” in the book are odd, but don’t see any other similarities, so you select the value 34943 for “g” (the generator value).</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>You are to devise an algorithm for calculating the CRC value corresponding to any message that might be sent. To test this algorithm you will write a program which reads lines (each line being all characters up to, but not including the end of line character) as input, and for each line calculates the CRC value for the message contained in the line, and writes the numeric value of the CRC bytes (in hexadecimal notation) on an output line. Each input line will contain no more than 1024 ASCII characters. The input is terminated by a line that contains a # in column 1.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>CRC in hex format, one on each line. Note that each CRC printed should be in the range 0 to 34942 (decimal).</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">this is a test</span><br><span class="line"></span><br><span class="line">A</span><br><span class="line">#</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">77 FD</span><br><span class="line">00 00</span><br><span class="line">0C 86</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="keyword">union</span> &#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> L;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">        <span class="keyword">unsigned</span> <span class="keyword">char</span> b1, b2, b3, b4;</span><br><span class="line">    &#125; crc;</span><br><span class="line">&#125; data;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> c, flag;</span><br><span class="line">    <span class="keyword">int</span> num, g=<span class="number">34943</span>;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>) &#123;</span><br><span class="line">        num = data.L = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%c"</span>, &amp;c) &amp;&amp; c!=<span class="string">'\n'</span>) &#123;</span><br><span class="line">            num++;</span><br><span class="line">            flag = c;</span><br><span class="line">            data.L = ((data.L&lt;&lt;<span class="number">8</span>) + c)%g;</span><br><span class="line">        &#125;</span><br><span class="line">        data.L = (data.L&lt;&lt;<span class="number">16</span>)%g;</span><br><span class="line">        <span class="keyword">if</span> (data.L)</span><br><span class="line">            data.L = g-data.L;</span><br><span class="line">        <span class="keyword">if</span> (num==<span class="number">1</span> &amp;&amp; flag==<span class="string">'#'</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%02X %02X\n"</span>, (<span class="keyword">int</span>)data.crc.b2, (<span class="keyword">int</span>)data.crc.b1);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>ZOJ</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】ZOJ-1168 Function Run Fun</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91ZOJ-1168%20Function%20Run%20Fun/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:03 GMT+0800 (GMT+08:00) --><h1 id="Function-Run-Fun-ZOJ-1168"><a href="#Function-Run-Fun-ZOJ-1168" class="headerlink" title="Function Run Fun (ZOJ - 1168)"></a>Function Run Fun (<a href="https://vjudge.net/problem/ZOJ-1168" target="_blank" rel="noopener">ZOJ - 1168</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>We all love recursion! Don’t we?</p><p>Consider a three-parameter recursive function w(a, b, c):</p><p>if a &lt;= 0 or b &lt;= 0 or c &lt;= 0, then w(a, b, c) returns:<br>1</p><p>if a &gt; 20 or b &gt; 20 or c &gt; 20, then w(a, b, c) returns:<br>w(20, 20, 20)</p><p>if a &lt; b and b &lt; c, then w(a, b, c) returns:<br>w(a, b, c-1) + w(a, b-1, c-1) - w(a, b-1, c)</p><p>otherwise it returns:<br>w(a-1, b, c) + w(a-1, b-1, c) + w(a-1, b, c-1) - w(a-1, b-1, c-1)</p><p>This is an easy function to implement. The problem is, if implemented directly, for moderate values of a, b and c (for example, a = 15, b = 15, c = 15), the program takes hours to run because of the massive recursion.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>The input for your program will be a series of integer triples, one per line, until the end-of-file flag of -1 -1 -1. Using the above technique, you are to calculate w(a, b, c) efficiently and print the result.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>Print the value for w(a,b,c) for each triple.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1 1 1</span><br><span class="line">2 2 2</span><br><span class="line">10 4 6</span><br><span class="line">50 50 50</span><br><span class="line">-1 7 18</span><br><span class="line">-1 -1 -1</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">w(1, 1, 1) &#x3D; 2</span><br><span class="line">w(2, 2, 2) &#x3D; 4</span><br><span class="line">w(10, 4, 6) &#x3D; 523</span><br><span class="line">w(50, 50, 50) &#x3D; 1048576</span><br><span class="line">w(-1, 7, 18) &#x3D; 1</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> ans[<span class="number">21</span>][<span class="number">21</span>][<span class="number">21</span>];</span><br><span class="line"><span class="keyword">int</span> a, b, c;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">w</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (a&lt;=<span class="number">0</span> || b&lt;=<span class="number">0</span> || c&lt;=<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (a&gt;<span class="number">20</span> || b&gt;<span class="number">20</span> || c&gt;<span class="number">20</span>)</span><br><span class="line">        <span class="keyword">return</span> ans[<span class="number">20</span>][<span class="number">20</span>][<span class="number">20</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (ans[a][b][c]&gt;<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> ans[a][b][c];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (a&lt;b &amp;&amp; b&lt;c)</span><br><span class="line">        <span class="keyword">return</span> w(a, b, c<span class="number">-1</span>) + w(a, b<span class="number">-1</span>, c<span class="number">-1</span>) - w(a, b<span class="number">-1</span>, c);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> w(a<span class="number">-1</span>, b, c) + w(a<span class="number">-1</span>, b<span class="number">-1</span>, c) + w(a<span class="number">-1</span>, b, c<span class="number">-1</span>) - w(a<span class="number">-1</span>, b<span class="number">-1</span>, c<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">21</span>; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;<span class="number">21</span>; j++)</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k=<span class="number">0</span>; k&lt;<span class="number">21</span>; k++)</span><br><span class="line">                ans[i][j][k] = w(i, j, k);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>, &amp;a, &amp;b, &amp;c)==<span class="number">3</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (a==<span class="number">-1</span> &amp;&amp; b==<span class="number">-1</span> &amp;&amp; c==<span class="number">-1</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"w(%d, %d, %d) = %d\n"</span>, a, b, c, w(a, b, c));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>ZOJ</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】ZOJ-1195 Blowing Fuses</title>
    <url>/%E9%A2%98%E8%A7%A3/%E5%9F%BA%E7%A1%80/%E6%B0%B4%E9%A2%98/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91ZOJ-1195%20Blowing%20Fuses/</url>
    <content><![CDATA[<!-- build time:Tue Jun 09 2020 18:49:03 GMT+0800 (GMT+08:00) --><h1 id="Blowing-Fuses-ZOJ-1195"><a href="#Blowing-Fuses-ZOJ-1195" class="headerlink" title="Blowing Fuses (ZOJ - 1195)"></a>Blowing Fuses (<a href="https://vjudge.net/problem/ZOJ-1195" target="_blank" rel="noopener">ZOJ - 1195</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>Maybe you are familiar with the following situation. You have plugged in a lot of electrical devices, such as toasters, refrigerators, microwave ovens, computers, stereos, etc, and have them all running. But at the moment when you turn on the TV, the fuse blows, since the power drawn from all the machines is greater than the capacity of the fuse. Of course this is a great safety feature, avoiding that houses burn down too often due to fires ignited by overheating wires. But it is also annoying to walk down to the basement (or some other inconvenient place) to replace to fuse or switch it back on.</p><p>What one would like to have is a program that checks before turning on an electrical device whether the combined power drawn by all running devices exceeds the fuses capacity (and it blows), or whether it is safe to turn it on.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>The input consists of several test cases. Each test case describes a set of electrical devices and gives a sequence of turn on/off operations for these devices.</p><p>The first line of each test case contains three integers n, m and c, where n is the number of devices (n &lt;= 20), m the number of operations performed on these devices and c is the capacity of the fuse (in Amperes). The following n lines contain one positive integer ci each, the consumption (in Amperes) of the i-th device.</p><p>This is followed by m lines also containing one integer each, between 1 and n inclusive. They describe a sequence of turn on/turn off operations performed on the devices. For every number, the state of that particular devices is toggled, i.e. if it is currently running, it is turned off, and if it is currently turned off, it will by switched on. At the beginning all devices are turned off.</p><p>The input will be terminated by a test case starting with n = m = c = 0. This test case should not be processed.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For each test case, first output the number of the test case. Then output whether the fuse was blown during the operation sequence. The fuse will be blown if the sum of the power consumptions ci of turned on devices at some point exceeds the capacity of the fuse c.</p><p>If the fuse is not blown, output the maximal power consumption by turned on devices that occurred during the sequence.</p><p>Output a blank line after each test case.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2 2 10</span><br><span class="line">5</span><br><span class="line">7</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3 6 10</span><br><span class="line">2</span><br><span class="line">5</span><br><span class="line">7</span><br><span class="line">2</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">1</span><br><span class="line">3</span><br><span class="line">0 0 0</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Sequence 1</span><br><span class="line">Fuse was blown.</span><br><span class="line"></span><br><span class="line">Sequence 2</span><br><span class="line">Fuse was not blown.</span><br><span class="line">Maximal power consumption was 9 amperes.</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[<span class="number">30</span>][<span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> n, m, c, num = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (~<span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>, &amp;n, &amp;m, &amp;c) &amp;&amp; n &amp;&amp; m &amp;&amp; c) &#123;</span><br><span class="line">        <span class="built_in">memset</span>(a, <span class="number">0</span>, <span class="keyword">sizeof</span>(a));</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++) &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i][<span class="number">0</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> mx = <span class="number">0</span>, sum = <span class="number">0</span>, t;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++) &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;t);</span><br><span class="line">            <span class="keyword">if</span>(a[t][<span class="number">1</span>]==<span class="number">0</span>) &#123;</span><br><span class="line">                a[t][<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">                sum += a[t][<span class="number">0</span>];</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                a[t][<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">                sum -= a[t][<span class="number">0</span>];</span><br><span class="line">            &#125;</span><br><span class="line">            mx = max(sum, mx);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Sequence %d\n"</span>, num++);</span><br><span class="line">        <span class="keyword">if</span>(mx&gt;c) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Fuse was blown.\n"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Fuse was not blown.\n"</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Maximal power consumption was %d amperes.\n"</span>, mx);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>ZOJ</tag>
      </tags>
  </entry>
</search>
