<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>【专题】Bash博弈</title>
    <url>/posts/f0fbaf1d.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:39 GMT+0800 (GMT+08:00) --><h1 id="Bash博奕"><a href="#Bash博奕" class="headerlink" title="Bash博奕"></a>Bash博奕</h1><p>基本的巴什博弈（Bash Game）描述如下：</p><blockquote><p>有一堆n个物品，两人轮流取走物品，每次至少取一个，最多取m个，最后取光者获胜。</p></blockquote><p>博弈过程如下：</p><ul><li><p>如果n&lt;m，那么先手可以一次取完。先手必胜。</p></li><li><p>如果n=m+1，那么由于一次最多取走m个，无论先手取走多少个，后手都能一次性取完。此时先手必败。<br><del>可以假设，游戏局面与m+1有关。</del></p></li><li><p>如果n%(m+1)=0，那么无论先手取走多少个，假设此时为i个（操作合法时1 $ \le $ i $ \le $ m），后手都能取走m+1-i个，使得局面重新回到n%(m+1)=0。直至最后局面变成n=m+1。此时先手必败。</p></li><li><p>如果n%(m+1)=k $ \neq $ 0，显然1 $ \le $ k $ \le $ m，那么先手取走k个，则将n%(m+1)=0的必输态（先手必败局面、奇异局面、P-position）留给对面了。此时先手必胜。</p></li></ul><hr><p>修改一下获胜条件：</p><blockquote><p>有一堆n个物品，两人轮流取走物品，每次至少取一个，最多取m个，最后取光者失败。</p></blockquote><p>可以转化为基本的巴什博弈，只不过此时需要给对手留下最后1个，考虑的 $ n’ $ 实际为n-1，即<code>(n-1)%(m+1) ? 先手胜 : 后手胜</code></p><hr><p>另一类的巴什博弈：</p><blockquote><p>有一堆n个物品，两人轮流取走物品，每次至少取p个，最多取q个，剩余不足p个时一次取完，最后取光者失败。</p></blockquote><p>可得 $ n = (p + q) \times r + s $ 时，<code>(s!=0 &amp;&amp; s&lt;=p) ? 后手胜 : 先手胜</code></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>专题</category>
        <category>博弈论</category>
      </categories>
      <tags>
        <tag>博弈论</tag>
        <tag>Bash博弈</tag>
      </tags>
  </entry>
  <entry>
    <title>【专题】Bellman-Ford</title>
    <url>/posts/c254ec40.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:39 GMT+0800 (GMT+08:00) --><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>Bellman-Ford算法是求解单源最短路的算法之一，适用于<strong>可包含负边权</strong>的有向和无向图，可以判断是否包含负环（注意，如果是包含负权回路则不存在最短路问题）。时间复杂度$O(nm)$。</p><h1 id="Bellman-Ford算法"><a href="#Bellman-Ford算法" class="headerlink" title="Bellman-Ford算法"></a>Bellman-Ford算法</h1><p>因为最短路径上最多有n-1条边，所以Bellman-Ford算法最多有n-1个阶段。在每一个阶段，我们对每一条边都要执行松弛操作。其实每实施一次松弛操作，就会有一些顶点已经求得其最短路，即这些顶点的最短路的“估计值”变为“确定值”。此后这些顶点的最短路的值就会一直保持不变，不再受后续松弛操作的影响(但是，每次还是会判断是否需要松弛)。在前k个阶段结束后，就已经找出了从源点出发“最多经过k条边”到达各个顶点的最短路。直到进行完n-1个阶段后，便得出了最多经过n-1条边的最短路。</p><p>核心代码如下：</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">bellman</span><span class="params">(<span class="keyword">int</span> s, <span class="keyword">int</span> n, <span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    dis[s] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>; k&lt;n; k++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++)&#123;</span><br><span class="line">            dis[v[i]] = min(dis[v[i]], dis[u[i]]+w[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果在n-1次松弛之后，还有可以进行松弛的边，那么就存在负环（负权回路）：</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">bellman</span><span class="params">(<span class="keyword">int</span> s, <span class="keyword">int</span> n, <span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    dis[s] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>; k&lt;n; k++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(dis[u[i]]+w[i] &lt; dis[v[i]])&#123;</span><br><span class="line">                dis[v[i]] = dis[u[i]]+w[i];</span><br><span class="line">                pre[v[i]] = u[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(dis[u[i]]+w[i] &lt; dis[v[i]])&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="SPFA"><a href="#SPFA" class="headerlink" title="SPFA"></a>SPFA</h1><p>SPFA是Bellman-Ford算法的队列优化，核心思想，只有那些在前一遍松弛中改变了距离估计值的点，才可能引起它们的邻接点的距离估计值的改变。为什么队列为空就不改变了呢？就是因为要到下一点必须经过它的前一个邻接点。</p><p>设立一个先进先出的队列q用来保存待优化的结点，优化时每次取出队首结点u，并且用u点当前的最短路径估计值对离开u点所指向的结点v进行松弛操作，如果v点的最短路径估计值有所调整，且v点不在当前的队列中，就将v点放入队尾。这样不断从队列中取出结点来进行松弛操作，直至队列空为止。</p><p>核心代码如下：</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">spfa</span><span class="params">(<span class="keyword">int</span> s, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    dis[s] = <span class="number">0</span>; vis[s] = <span class="number">1</span>; q.push(s);</span><br><span class="line">    <span class="keyword">while</span>(!q.empty())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> u = q.front(); q.pop(); vis[u] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=H[u]; ~i; i=e[i].next)&#123;</span><br><span class="line">            <span class="keyword">int</span> v = e[i].to, w = e[i].w;</span><br><span class="line">            <span class="keyword">if</span>(dis[u]+w &lt; dis[v])&#123;</span><br><span class="line">                dis[v] = dis[u]+w;</span><br><span class="line">                <span class="keyword">if</span>(!vis[v]) q.push(v), vis[v] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="其它优化"><a href="#其它优化" class="headerlink" title="其它优化"></a>其它优化</h1><p>除了队列优化（SPFA）之外，Bellman-Ford 还有其他形式的优化，这些优化在部分图上效果明显，但在某些特殊图上，最坏复杂度可能达到指数级。</p><ul><li>堆优化：将队列换成堆，与 Dijkstra 的区别是允许一个点多次入队。在有负权边的图可能被卡成指数级复杂度。</li><li>栈优化：将队列换成栈（即将原来的 BFS 过程变成 DFS），在寻找负环时可能具有更高效率，但最坏时间复杂度仍然为指数级。</li><li>LLL 优化：将普通队列换成双端队列，每次将入队结点距离和队内距离平均值比较，如果更大则插入至队尾，否则插入队首。</li><li>SLF 优化：将普通队列换成双端队列，每次将入队结点距离和队首比较，如果更大则插入至队尾，否则插入队首。</li></ul><p>更多优化以及针对这些优化的 Hack 方法，可以看 <a href="https://www.zhihu.com/question/292283275/answer/484871888" target="_blank" rel="noopener">fstqwq 在知乎上的回答</a> 。</p><h1 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h1><p>Bellman-Ford算法：</p><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e3</span> + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> u[mxn], v[mxn], w[mxn];</span><br><span class="line"><span class="keyword">int</span> dis[mxn], pre[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bellman_init</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">        dis[i] = inf;</span><br><span class="line">        pre[i] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">bellman</span><span class="params">(<span class="keyword">int</span> s, <span class="keyword">int</span> n, <span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> k=<span class="number">0</span>, f=<span class="number">1</span>; dis[s] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(f)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(++k &gt; n) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        f = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(dis[u[i]]+w[i] &lt; dis[v[i]])&#123;</span><br><span class="line">                dis[v[i]] = dis[u[i]]+w[i];</span><br><span class="line">                pre[v[i]] = u[i];</span><br><span class="line">                f = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, m;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;n, &amp;m);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>, &amp;u[i], &amp;v[i], &amp;w[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    bellman_init(n);</span><br><span class="line">    <span class="keyword">if</span>(bellman(<span class="number">1</span>, n, m) == <span class="number">-1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"包含负权回路\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d "</span>, dis[i]);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d "</span>, pre[i]);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Sample Input:</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">4 5</span></span><br><span class="line"><span class="comment">1 2 2</span></span><br><span class="line"><span class="comment">1 3 4</span></span><br><span class="line"><span class="comment">2 4 1</span></span><br><span class="line"><span class="comment">3 2 1</span></span><br><span class="line"><span class="comment">3 4 8</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Sample Output:</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">0 2 4 3</span></span><br><span class="line"><span class="comment">0 1 1 2</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure></div></div><p>SPFA：</p><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e3</span> + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">E</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> to, next, w;</span><br><span class="line">&#125; e[mxn];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> H[mxn], tot;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> from, <span class="keyword">int</span> to, <span class="keyword">int</span> w)</span> </span>&#123;</span><br><span class="line">    e[tot] = &#123;to, H[from], w&#125;;</span><br><span class="line">    H[from] = tot++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">graph_init</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        H[i] = <span class="number">-1</span>;</span><br><span class="line">    tot = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> dis[mxn], pre[mxn], num[mxn];</span><br><span class="line"><span class="keyword">bool</span> vis[mxn];</span><br><span class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">spfa_init</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">        dis[i] = inf;</span><br><span class="line">        num[i] = pre[i] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">spfa</span><span class="params">(<span class="keyword">int</span> s, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    dis[s] = <span class="number">0</span>; q.push(s);</span><br><span class="line">    num[s] = vis[s] = <span class="number">1</span>; </span><br><span class="line">    <span class="keyword">while</span>(!q.empty())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> u = q.front(); q.pop(); vis[u] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=H[u]; ~i; i=e[i].next)&#123;</span><br><span class="line">            <span class="keyword">int</span> v = e[i].to, w = e[i].w;</span><br><span class="line">            <span class="keyword">if</span>(dis[u]+w &lt; dis[v])&#123;</span><br><span class="line">                dis[v] = dis[u]+w;</span><br><span class="line">                pre[v] = u;</span><br><span class="line">                <span class="keyword">if</span>(!vis[v])&#123;</span><br><span class="line">                    q.push(v), vis[v] = <span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">if</span>(++num[v] &gt; n) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">                &#125; </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, m;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;n, &amp;m);</span><br><span class="line">    graph_init(n);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> u, v, w;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>, &amp;u, &amp;v, &amp;w);</span><br><span class="line">        add(u, v, w);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    spfa_init(n);</span><br><span class="line">    <span class="keyword">if</span>(spfa(<span class="number">1</span>, n) == <span class="number">-1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"包含负权回路\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d "</span>, dis[i]);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d "</span>, pre[i]);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Sample Input:</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">4 5</span></span><br><span class="line"><span class="comment">1 2 2</span></span><br><span class="line"><span class="comment">1 3 4</span></span><br><span class="line"><span class="comment">2 4 1</span></span><br><span class="line"><span class="comment">3 2 1</span></span><br><span class="line"><span class="comment">3 4 8</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Sample Output:</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">0 2 4 3</span></span><br><span class="line"><span class="comment">0 1 1 2</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>专题</category>
        <category>图论</category>
      </categories>
      <tags>
        <tag>图论</tag>
        <tag>最短路</tag>
        <tag>Bellman</tag>
        <tag>SPFA</tag>
      </tags>
  </entry>
  <entry>
    <title>【专题】Dijkstra</title>
    <url>/posts/45ba8d5c.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:39 GMT+0800 (GMT+08:00) --><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>Dijkstra算法是求解单源最短路的算法之一，核心思想是贪心，只适用于<strong>边权为正</strong>的无向和有向图。原复杂度$O(n^{2})$，优化后时间复杂度能到$O(mlog_{m})$。</p><h1 id="Dijkstra算法"><a href="#Dijkstra算法" class="headerlink" title="Dijkstra算法"></a>Dijkstra算法</h1><p>首先我们来看这个<strong>贪心性质</strong>：</p><blockquote><p>从<code>起点u</code>到<code>终点v</code>的最短路径，一定是从<code>起点u</code>到<code>这条最短路径上经过的点w</code>的最短路径。</p></blockquote><p>可以用反证法证明，假设$dis(u, w)$是<code>起点u</code>到<code>终点v</code>最短路径上的<code>起点u</code>到<code>途经点w</code>的距离。若存在不是最短路径上的$dis’(u, w) &lt; dis(u, w)$，那么可以得出$dis’(u, w)+dis(w, v) &lt; dis(u, w)+dis(w, v)$，即存在从<code>起点u</code>到<code>终点v</code>的更短的路径，与假设矛盾。</p><p>可以根据这个性质得到贪心思路，但是这个性质基于一个<strong>前提</strong>：</p><blockquote><p>对于<code>起点u</code>的<code>最短邻接边uw</code>，从u到w不可能存在比$dis(u, w)$更短的路径。因为<code>uw</code>已经是最短的了，从其它路径走的话必然经过比<code>uw</code>更长的路径。</p></blockquote><p>而这也是Dijkstra不能处理负边权的原因，如果有负边权则无法满足前提。可以看下图自行理解：</p><p><img src="/posts/45ba8d5c/条件.png" alt="条件"></p><p>那么，依据这个贪心性质得到思路，我们可以从现知的最短路径开始，去更新起点到其它点的距离，再更新已知的最短路，重复这个过程，遍历完所有的点之后，就能得到起点到其它点的最短路径长度。详细过程如下：</p><ol><li>将起点加入<code>已经确定最短路的集合S</code>，其它点则属于<code>未确定的集合V-S=T</code>。</li><li>更新到起点的最短距离dis[i]。</li><li>选取未访问的最小的dis[x]，标记并加入<code>已经确定最短路的集合S</code>，此时的dis[x]就是x到起点的最短距离。</li><li>再依据$ dis[y]=min(dis[y], dis[x]+{边权值}w[x][y]) $，更新集合T中与x相邻的点y到起点的最短距离dis[y]。这个操作叫做<code>松弛操作（relax）</code>，更新过后当前的不等式约束$ dis[y] $相对于$ dis+w[x][y] $已经不是最“紧”的约束了，下一次更新dis[y]时就不需要检查这个约束了，即原约束被“松弛”了。</li><li>重复3，4步骤直到目标点加入集合，此时目标点对应的dis[v]就是最短路径长度。</li></ol><p>邻接矩阵存图，核心代码如下：</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dijkstra</span><span class="params">(<span class="keyword">int</span> s, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    dis[s] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=n; j++)</span><br><span class="line">            <span class="keyword">if</span>(!vis[j] &amp;&amp; (x==<span class="number">0</span> || dis[j]&lt;dis[x])) x = j; </span><br><span class="line"></span><br><span class="line">        vis[x] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=n; j++)</span><br><span class="line">            dis[j] = min(dis[j], dis[x]+g[x][j]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h1><p><a href="https://oi-wiki.org/graph/shortest-path/#dijkstra" target="_blank" rel="noopener">时间复杂度分析</a>，只分析集合操作，n次<code>delete-min</code>，m次<code>decrease-key</code>。</p><ul><li>如果用暴力：$O(n^{2}+m)$。</li><li>如果用堆：$O(mlog_{n})$。</li><li>如果用priority_queue：$O(mlog_{m})$。</li><li>如果用线段树（ZKW线段树）：$O(mlog_{n}+n)=O(mlog_{n})$。</li><li>如果用Fibonacci堆：$O(nlog_{n}+m)$。</li></ul><blockquote><p>如果使用priority_queue，无法删除某一个旧的结点，只能插入一个权值更小的相同编号结点，这样操作导致堆中元素是$O(m)$的。</p></blockquote><p>下面给出使用邻接表及priority_queue的优化版本，即优化了<strong>存图方式</strong>以及<strong>寻找未访问的最小dis结点过程</strong>。代码如下：</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dijkstra</span><span class="params">(<span class="keyword">int</span> s, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    q.push(&#123;dis[s]=<span class="number">0</span>, s&#125;);</span><br><span class="line">    <span class="keyword">while</span>(!q.empty())&#123;</span><br><span class="line">        <span class="keyword">int</span> u = q.top().second; q.pop();</span><br><span class="line">        <span class="keyword">if</span>(vis[u]) <span class="keyword">continue</span>;</span><br><span class="line">        vis[u] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=H[u]; ~i; i=e[i].next)&#123;</span><br><span class="line">            <span class="keyword">int</span> v=e[i].to, w=e[i].w;</span><br><span class="line">            <span class="keyword">if</span>(!vis[v] &amp;&amp; dis[u]+w &lt; dis[v])&#123;</span><br><span class="line">                dis[v] = dis[u]+w;</span><br><span class="line">                pre[v] = u;</span><br><span class="line">                q.push(&#123;dis[v], v&#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h1><p>原始版本：</p><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e3</span> + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> g[mxn][mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">graph_init</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)&#123;    </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=n; j++)</span><br><span class="line">            g[i][j] = inf;</span><br><span class="line">        g[i][i] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> dis[mxn], pre[mxn];</span><br><span class="line"><span class="keyword">bool</span> vis[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dijkstra_init</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">        vis[i] = pre[i] = <span class="number">0</span>;</span><br><span class="line">        dis[i] = inf;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dijkstra</span><span class="params">(<span class="keyword">int</span> s, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    dis[s] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=n; j++)</span><br><span class="line">            <span class="keyword">if</span>(!vis[j] &amp;&amp; (x==<span class="number">0</span> || dis[j]&lt;dis[x])) x = j; </span><br><span class="line">            </span><br><span class="line">        vis[x] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=n; j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(!vis[j] &amp;&amp; dis[x]+g[x][j] &lt; dis[j])&#123;</span><br><span class="line">                dis[j] = dis[x]+g[x][j];</span><br><span class="line">                pre[j] = x;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, m;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;n, &amp;m);</span><br><span class="line">    graph_init(n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;m; i++) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> u, v, w;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>, &amp;u, &amp;v, &amp;w);</span><br><span class="line">        g[u][v] = w;</span><br><span class="line">    &#125;</span><br><span class="line">    dijkstra_init(n);</span><br><span class="line">    dijkstra(<span class="number">1</span>, n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d "</span>, dis[i]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=n; i; i=pre[i])</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d "</span>, i);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Sample Input:</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">4 5</span></span><br><span class="line"><span class="comment">1 2 2</span></span><br><span class="line"><span class="comment">1 3 4</span></span><br><span class="line"><span class="comment">2 4 1</span></span><br><span class="line"><span class="comment">3 2 1</span></span><br><span class="line"><span class="comment">3 4 8</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Sample Output:</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">0 2 4 3</span></span><br><span class="line"><span class="comment">4 2 1</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure></div></div><p>优化版本：</p><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e3</span> + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">E</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> to, next, w;</span><br><span class="line">&#125; e[mxn];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> H[mxn], tot;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> from, <span class="keyword">int</span> to, <span class="keyword">int</span> w)</span> </span>&#123;</span><br><span class="line">    e[tot] = &#123;to, H[from], w&#125;;</span><br><span class="line">    H[from] = tot++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">graph_init</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        H[i] = <span class="number">-1</span>;</span><br><span class="line">    tot = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> dis[mxn], pre[mxn];</span><br><span class="line"><span class="keyword">bool</span> vis[mxn];</span><br><span class="line">priority_queue&lt;pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt;, <span class="built_in">vector</span>&lt;pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; &gt;, greater&lt;pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; &gt; &gt; q;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dijkstra_init</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">        vis[i] = pre[i] = <span class="number">0</span>;</span><br><span class="line">        dis[i] = inf;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dijkstra</span><span class="params">(<span class="keyword">int</span> s, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    q.push(&#123;dis[s]=<span class="number">0</span>, s&#125;);</span><br><span class="line">    <span class="keyword">while</span>(!q.empty())&#123;</span><br><span class="line">        <span class="keyword">int</span> u = q.top().second; q.pop();</span><br><span class="line">        <span class="keyword">if</span>(vis[u]) <span class="keyword">continue</span>;</span><br><span class="line">        vis[u] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=H[u]; ~i; i=e[i].next)&#123;</span><br><span class="line">            <span class="keyword">int</span> v=e[i].to, w=e[i].w;</span><br><span class="line">            <span class="keyword">if</span>(!vis[v] &amp;&amp; dis[u]+w &lt; dis[v])&#123;</span><br><span class="line">                dis[v] = dis[u]+w;</span><br><span class="line">                pre[v] = u;</span><br><span class="line">                q.push(&#123;dis[v], v&#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, m;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;n, &amp;m);</span><br><span class="line">    graph_init(n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;m; i++) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> u, v, w;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>, &amp;u, &amp;v, &amp;w);</span><br><span class="line">        add(u, v, w);</span><br><span class="line">    &#125;</span><br><span class="line">    dijkstra_init(n);</span><br><span class="line">    dijkstra(<span class="number">1</span>, n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d "</span>, dis[i]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=n; i; i=pre[i])</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d "</span>, i);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Sample Input:</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">4 5</span></span><br><span class="line"><span class="comment">1 2 2</span></span><br><span class="line"><span class="comment">1 3 4</span></span><br><span class="line"><span class="comment">2 4 1</span></span><br><span class="line"><span class="comment">3 2 1</span></span><br><span class="line"><span class="comment">3 4 8</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Sample Output:</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">0 2 4 3</span></span><br><span class="line"><span class="comment">4 2 1</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>专题</category>
        <category>图论</category>
      </categories>
      <tags>
        <tag>图论</tag>
        <tag>最短路</tag>
        <tag>Dijkstra</tag>
      </tags>
  </entry>
  <entry>
    <title>【专题】Fibonacci博弈</title>
    <url>/posts/466426a4.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:39 GMT+0800 (GMT+08:00) --><h1 id="Fibonacci博弈"><a href="#Fibonacci博弈" class="headerlink" title="Fibonacci博弈"></a>Fibonacci博弈</h1><p>基本的斐波那契博弈（Fibonacci Game）描述如下：</p><blockquote><p>有一堆数量多于一的物品，两人轮流取走物品，第一次至少取一个，但不能取完，从第二次开始每个人最少取一个，最多取对手上次取的两倍。</p></blockquote><p>博弈过程如下：</p><ul><li><p>当n为斐波那契数时，令F[k]为斐波那契数第k项，那么当n=2=F[3]，n=3=F[4]显然先手必败，假设n=F[i]，i&lt;k时命题都成立，讨论n=F[k]时，此时n=F[k]=F[k-2]+F[k-1]，由于F[k-1]&lt;2$ \times $F[k-2]，所以先手必不能直接取走大于等于F[k-2]的物品，同理先手取走大于等于$ \frac{F[k-2]}{3} $的物品时，后手可以直接取完F[k-2]，且因 $F[k-1] \gt 2 \times \frac{2 \times F[k-2]}{3} $ 不会对F[k-1]造成影响，所以每个F[k]可以分解为F[k-2]，F[k-1]这样<strong>单独且互不影响的斐波那契局面</strong>（可以继续分解）此时先手必败。 得出<strong>当n为斐波那契数时先手必败</strong>。</p></li><li><p>当n为非斐波那契数时，由<a href="#Zeckendorf定理">齐肯多夫定理</a>，可以将n分解为若干<strong>不相邻</strong>的斐波那契数之和，例如85=55+21+8+1。此时$ n = F[x_{1}] + F[x_{2}] + \ldots + F[x_{k}], (x_{1} &gt; x_{2} &gt; \ldots &gt; x_{k})$，由于$ F[x_{k-1}] &gt; 2 \times F[x_{k}] $，取完$ F[x_{k}] $不会对$ F[x_{k-1}] $造成影响，即可以分解为若干个单独且互不影响的斐波那契数局面，但先手可以直接取走$ F[x_{k}] $，后手对于每个分解的若干<strong>单独且互不影响的斐波那契局面</strong>都是必败的。得出<strong>当n为非斐波那契数时先手必败</strong>。</p></li></ul><h1 id="Zeckendorf定理"><a href="#Zeckendorf定理" class="headerlink" title="Zeckendorf定理"></a>Zeckendorf定理</h1><p>Zeckendorf定理：</p><blockquote><p>任何正整数都可以表示成若干个不连续的斐波那契数（不包括第一个斐波那契数）之和。</p></blockquote><p>简单证明如下：</p><ul><li>令F[k]为斐波那契数第k项，那么当n=1=F[1]=F[2]，n=2=F[3]，n=3=F[4]命题成立。假设i&lt;n时命题都成立，讨论i=n时，当n为斐波那契数时，命题显然成立；当n为非斐波那契数时，令k为最大的整数使得F[k]&lt;n&lt;F[k+1]，设m=n-F[k]&lt;(F[k+1]-F[k]=F[k-1])，可得m&lt;F[k-1]&lt;n，由于$ m = F[x_{1}] + F[x_{2}] + \ldots + F[x_{k}], (F[x_{k}]最大) $，因为m&lt;F[k-1]，所以$ x_{k} &lt; k - 1$，所以$ n = F[x_{1}] + F[x_{2}] + \ldots + F[x_{k}] + F[k] $，仍然可以分解为若干个斐波那契数之和，且不是连续的$ (x_{k} &lt; k - 1) $。</li></ul><!-- rebuild by neat -->]]></content>
      <categories>
        <category>专题</category>
        <category>博弈论</category>
      </categories>
      <tags>
        <tag>博弈论</tag>
        <tag>Fibonacci博弈</tag>
      </tags>
  </entry>
  <entry>
    <title>【专题】Floyd-Warshall</title>
    <url>/posts/7d58c105.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:39 GMT+0800 (GMT+08:00) --><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>Floyd-Warshall算法是求解多源最短路的算法之一，核心思想是动态规划，适用于不包含负环（负权回路）的图。时间复杂度$O(n^{3})$，空间复杂度$O(n^{2})$。</p><h1 id="Floyd-Warshall算法"><a href="#Floyd-Warshall算法" class="headerlink" title="Floyd-Warshall算法"></a>Floyd-Warshall算法</h1><p>对于任何一个点而言，i到j的最短距离不外乎i到j<code>经过k</code>和<code>不经过k</code>两种可能，所以可以令$k=1,2,3,\ldots,n$，检查$dis(i, j)$与$dis(i, k)+dis(k, j)$的大小，在此$dis(i, k)$与$dis(k, j)$分别是目前为止所知的i到k与k到j的最短距离，因此$dis(i, k)+dis(k, j)$就是i到j经过k的最短距离。</p><p>所以，若有$dis(i, j) \gt dis(i, k)+dis(k, j)$，就表示从i出发经过k再到j的距离要比原来的i到j距离短，自然把i到j的距离$dis(i, j)$更新为$dis(i, k)+dis(k, j)$，更新完后$dis(i, j)$就是目前的i到j的最短距离。重复这一过程，最后当遍历完k时，$dis(i, j)$里面存放的就是i到j之间的最短距离了。</p><p>我们定义数组$dp[k][x][y]$表示只允许经过结点1到k，结点x到结点y的最短路径长度，那么状态转移方程就是$dp[k][x][y] = min(dp[k-1][x][y], dp[k-1][x][k]+dp[k-1][k][y])$，可以发现第一维是没有用的，于是直接改成$dp[x][y] = min(dp[x][y], dp[x][k]+dp[k][y])$。</p><p>代码实现很简单，不过要注意<strong>循环的嵌套循序</strong>，k作为阶段，枚举时的循环要放在最外层：</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">floyd</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>; k&lt;=n; k++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=n; j++)</span><br><span class="line">                g[i][j] = min(g[i][j], g[i][k]+g[k][j]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="传递闭包"><a href="#传递闭包" class="headerlink" title="*传递闭包"></a>*传递闭包</h1><p>Floyd算法不仅可以求最短路，也可以维护关系求传递闭包。建立邻接矩阵$f[i][j]$表示i和j是否有关系，跑一遍floyd，然后检查$f[i][j]\&amp;f[j][i]$是否为1。下面给出bitset优化版本，时间复杂度$O(\frac{n^{3}}{w})$。</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// std::bitset&lt;SIZ&gt; f[SIZ];</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">floyd</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>; k&lt;=n; k++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">            <span class="keyword">if</span>(f[i][k]) f[i] = f[i] | f[k];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h1><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e3</span> + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> g[mxn][mxn], pre[mxn][mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">graph_init</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=n; j++)</span><br><span class="line">            g[i][j] = inf;</span><br><span class="line">        g[i][i] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">floyd_init</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;= n; j++)&#123;</span><br><span class="line">            pre[i][j] = (g[i][j]==inf ? <span class="number">-1</span> : j);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">floyd</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>; k&lt;=n; k++)</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=n; j++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(g[i][k]+g[k][j] &lt; g[i][j])&#123;</span><br><span class="line">            g[i][j] = g[i][k]+g[k][j];</span><br><span class="line">            pre[i][j] = pre[i][k];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, m;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;n, &amp;m);</span><br><span class="line">    graph_init(n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;m; i++) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> u, v, w;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>, &amp;u, &amp;v, &amp;w);</span><br><span class="line">        g[u][v] = w;</span><br><span class="line">    &#125;</span><br><span class="line">    floyd_init(n);</span><br><span class="line">    floyd(n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=n; j++)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d "</span>, g[i][j]);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=n; j++)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d "</span>, pre[i][j]);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Sample Input:</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">4 5</span></span><br><span class="line"><span class="comment">1 2 2</span></span><br><span class="line"><span class="comment">1 3 4</span></span><br><span class="line"><span class="comment">2 4 1</span></span><br><span class="line"><span class="comment">3 2 1</span></span><br><span class="line"><span class="comment">3 4 8</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Sample Output:</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">0 2 4 3</span></span><br><span class="line"><span class="comment">1061109567 0 1061109567 1</span></span><br><span class="line"><span class="comment">1061109567 1 0 2</span></span><br><span class="line"><span class="comment">1061109567 1061109567 1061109567 0</span></span><br><span class="line"><span class="comment">1 2 3 2</span></span><br><span class="line"><span class="comment">-1 2 -1 4</span></span><br><span class="line"><span class="comment">-1 2 3 2</span></span><br><span class="line"><span class="comment">-1 -1 -1 4</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>专题</category>
        <category>图论</category>
      </categories>
      <tags>
        <tag>图论</tag>
        <tag>最短路</tag>
        <tag>Floyd</tag>
      </tags>
  </entry>
  <entry>
    <title>【专题】Johnson</title>
    <url>/posts/1cf4f5ad.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:39 GMT+0800 (GMT+08:00) --><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>Johnson算法是求解多源最短路的算法之一，核心操作是<code>re-weight</code>，适用于不包含负环（负权回路）的图。时间复杂度$O(nm+nmlog_{m})$。</p><h1 id="Johnson算法"><a href="#Johnson算法" class="headerlink" title="Johnson算法"></a>Johnson算法</h1><p>全源最短路常用方法是Floyd算法，时间复杂度$O(n^{3})$。当然我们也可以对每个顶点跑单源最短路。如果对每个顶点求一次Bellman-Ford算法，时间复杂度是$O(n^{2}m)$，似乎不如Floyd算法。如果是对每个顶点求一次Dijkstra算法，时间复杂度是$O(nm+nmlog_{m})$，看起来优于Floyd算法了。但是如何去除负边权的影响呢？</p><p>考虑一下直接把所有边权加个正数，但是显然不满足原图性质了：</p><p><img src="/posts/1cf4f5ad/直接加.png" alt="直接加"></p><p>这里提出一个<code>re-weight</code>操作，首先加上一个源点，并使其与所有顶点连通，新边权赋值为0，如下图：</p><p><img src="/posts/1cf4f5ad/加源.png" alt="加源"></p><p>然后以新加顶点为源，跑Bellman-Ford算法，求出到其它顶点的最短路：</p><p><img src="/posts/1cf4f5ad/最短路.png" alt="最短路"></p><p>记录下最短路径长度h[] = {0, -3, 0, 0}，删除刚刚新增加的结点。然后对原图边权进行处理，使用以下方法更新边权：$w’(u, v) = w(u, v) + (h[u] - h[v])$。</p><p><img src="/posts/1cf4f5ad/处理.png" alt="处理"></p><p>这时，负边权的影响就被消除了，可以愉快的使用Dijkstra算法了。（懒一下，正确性请自行证明）。</p><h1 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h1><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e3</span> + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">E</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> to, next, w;</span><br><span class="line">&#125; e[mxn];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> H[mxn], tot;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> from, <span class="keyword">int</span> to, <span class="keyword">int</span> w)</span> </span>&#123;</span><br><span class="line">    e[tot] = &#123;to, H[from], w&#125;;</span><br><span class="line">    H[from] = tot++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">graph_init</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        H[i] = <span class="number">-1</span>;</span><br><span class="line">    tot = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> h[mxn], num[mxn];</span><br><span class="line"><span class="keyword">bool</span> vis[mxn];</span><br><span class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">spfa_init</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">        h[i] = inf;</span><br><span class="line">        num[i] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">spfa</span><span class="params">(<span class="keyword">int</span> s, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    h[s] = <span class="number">0</span>; q.push(s);</span><br><span class="line">    num[s] = vis[s] = <span class="number">1</span>; </span><br><span class="line">    <span class="keyword">while</span>(!q.empty())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> u = q.front(); q.pop(); vis[u] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=H[u]; ~i; i=e[i].next)&#123;</span><br><span class="line">            <span class="keyword">int</span> v = e[i].to, w = e[i].w;</span><br><span class="line">            <span class="keyword">if</span>(h[u]+w &lt; h[v])&#123;</span><br><span class="line">                h[v] = h[u]+w;</span><br><span class="line">                <span class="keyword">if</span>(!vis[v])&#123;</span><br><span class="line">                    q.push(v), vis[v] = <span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">if</span>(++num[v] &gt; n) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">                &#125; </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> dis[mxn];</span><br><span class="line">priority_queue&lt;pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt;, <span class="built_in">vector</span>&lt;pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; &gt;, greater&lt;pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; &gt; &gt; pq;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dijkstra_init</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">        vis[i] = <span class="number">0</span>;</span><br><span class="line">        dis[i] = inf;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dijkstra</span><span class="params">(<span class="keyword">int</span> s, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    pq.push(&#123;dis[s]=<span class="number">0</span>, s&#125;);</span><br><span class="line">    <span class="keyword">while</span>(!pq.empty())&#123;</span><br><span class="line">        <span class="keyword">int</span> u = pq.top().second; pq.pop();</span><br><span class="line">        <span class="keyword">if</span>(vis[u]) <span class="keyword">continue</span>;</span><br><span class="line">        vis[u] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=H[u]; ~i; i=e[i].next)&#123;</span><br><span class="line">            <span class="keyword">int</span> v=e[i].to, w=e[i].w;</span><br><span class="line">            <span class="keyword">if</span>(!vis[v] &amp;&amp; dis[u]+w &lt; dis[v])&#123;</span><br><span class="line">                dis[v] = dis[u]+w;</span><br><span class="line">                pq.push(&#123;dis[v], v&#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> DIS[mxn][mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, m;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;n, &amp;m);</span><br><span class="line">    graph_init(n);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> u, v, w;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>, &amp;u, &amp;v, &amp;w);</span><br><span class="line">        add(u, v, w);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        add(<span class="number">0</span>, i, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    spfa_init(n);</span><br><span class="line">    <span class="keyword">if</span>(spfa(<span class="number">0</span>, n) == <span class="number">-1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"包含负权回路\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> u=<span class="number">1</span>; u&lt;=n; u++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=H[u]; ~i; i=e[i].next)&#123;</span><br><span class="line">                e[i].w += h[u] - h[e[i].to];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">            dijkstra_init(n);</span><br><span class="line">            dijkstra(i, n);</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=n; j++)&#123;</span><br><span class="line">                DIS[i][j] = dis[j] - h[i] + h[j];</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%d "</span>, DIS[i][j]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Sample Input:</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">4 5</span></span><br><span class="line"><span class="comment">1 2 -3</span></span><br><span class="line"><span class="comment">2 3 2</span></span><br><span class="line"><span class="comment">1 4 3</span></span><br><span class="line"><span class="comment">2 3 4</span></span><br><span class="line"><span class="comment">3 4 1</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Sample Output:</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">0 -3 -1 0</span></span><br><span class="line"><span class="comment">1061109570 0 2 3</span></span><br><span class="line"><span class="comment">1061109568 1061109565 0 1</span></span><br><span class="line"><span class="comment">1061109567 1061109564 1061109566 0</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>专题</category>
        <category>图论</category>
      </categories>
      <tags>
        <tag>图论</tag>
        <tag>最短路</tag>
        <tag>Johnson</tag>
      </tags>
  </entry>
  <entry>
    <title>【专题】Manacher</title>
    <url>/posts/7c234a64.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:39 GMT+0800 (GMT+08:00) --><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>Manacher‘s Algorithm是用来查找一个字符串的最长回文子串的线性方法，由一个叫Manacher的人在1975年发明的。中文谐音“马拉车”算法。时间复杂度O(|S|)。</p><h1 id="朴素算法"><a href="#朴素算法" class="headerlink" title="朴素算法"></a>朴素算法</h1><p>给出一个朴素的中心扩展算法，寻找最长回文子串，枚举所有奇偶回文中心点（n+n-1个），然后向两端扩展，判断左右字符是否相等即可。时间复杂度$ O(|S|^{2}) $。</p><p><img src="/posts/7c234a64/暴力.png" alt="暴力"></p><p>实现代码如下：</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">expand</span><span class="params">(<span class="keyword">char</span>* s, <span class="keyword">int</span> n, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(l&gt;=<span class="number">0</span> &amp;&amp; r&lt;=n &amp;&amp; s[l]==s[r])</span><br><span class="line">        l--, r++;</span><br><span class="line">    <span class="keyword">return</span> r-l<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">simple</span><span class="params">(<span class="keyword">char</span>* s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n = <span class="built_in">strlen</span>(s), len = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> start = <span class="number">0</span>, end = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> t = max(expand(s, n, i, i), expand(s, n, i, i+<span class="number">1</span>));</span><br><span class="line">        <span class="keyword">if</span>(t &gt; len)&#123;</span><br><span class="line">            len = t;</span><br><span class="line">            start = i - (len - <span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line">            end = i + len / <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=start; i&lt;=end; i++)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%c"</span>, s[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> len;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="预处理"><a href="#预处理" class="headerlink" title="预处理"></a>预处理</h1><p>首先我们处理一下长度的奇偶，在每个字符间插入<code>&#39;#&#39;</code>，并且为使得扩展到边界能自动结束，在首尾分别插入<code>&#39;^&#39;</code>和<code>&#39;$&#39;</code>（不会在原串中出现的字符）。这样字符串的长度就被处理为奇数了。</p><p><img src="/posts/7c234a64/init.png" alt="init"></p><p>预处理代码如下：</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">manacher_init</span><span class="params">(<span class="keyword">char</span> *s, <span class="keyword">char</span> *t, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> j = <span class="number">2</span>; t[<span class="number">0</span>] = <span class="string">'$'</span>, t[<span class="number">1</span>] = <span class="string">'#'</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        t[j++] = s[i];</span><br><span class="line">        t[j++] = <span class="string">'#'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    t[j] = <span class="string">'\0'</span>;</span><br><span class="line">    <span class="keyword">return</span> j;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Manacher算法"><a href="#Manacher算法" class="headerlink" title="Manacher算法"></a>Manacher算法</h1><div class="table-container"><table><thead><tr><th style="text-align:center">idx</th><th style="text-align:center">0</th><th style="text-align:center">1</th><th style="text-align:center">2</th><th style="text-align:center">3</th><th>4</th><th>5</th><th>6</th><th>7</th><th>8</th><th>9</th><th>10</th><th>11</th><th>12</th><th>13</th><th>14</th><th>15</th><th>16</th><th>17</th><th>18</th></tr></thead><tbody><tr><td style="text-align:center">T</td><td style="text-align:center">$</td><td style="text-align:center">#</td><td style="text-align:center">a</td><td style="text-align:center">#</td><td>b</td><td>#</td><td>a</td><td>#</td><td>b</td><td>#</td><td>a</td><td>#</td><td>a</td><td>#</td><td>b</td><td>#</td><td>c</td><td>#</td><td>\0</td></tr><tr><td style="text-align:center">r</td><td style="text-align:center"></td><td style="text-align:center">1</td><td style="text-align:center">2</td><td style="text-align:center">1</td><td>4</td><td>1</td><td>6</td><td>1</td><td>4</td><td>1</td><td>2</td><td>5</td><td>2</td><td>1</td><td>2</td><td>1</td><td>2</td><td>1</td><td></td></tr><tr><td style="text-align:center">p</td><td style="text-align:center"></td><td style="text-align:center">0</td><td style="text-align:center">1</td><td style="text-align:center">0</td><td>3</td><td>0</td><td>5</td><td>0</td><td>3</td><td>0</td><td>1</td><td>4</td><td>1</td><td>0</td><td>1</td><td>0</td><td>1</td><td>0</td></tr></tbody></table></div><p>观察可得，最长回文子串p[i] = 最长回文半径r[i] - 1，p[i]所代表的子串在原串的起点为(i-p[i])/2。</p><p>那么p[i]怎么求呢，令mx为当前已求出的<strong>最右的回文子串右边界</strong>，令id为这个回文子串的中心点，讨论以下3种情况：</p><p>(1) 当i$&lt;$mx时，令j=2*id-1，即i关于id的对称点，如果i+p[j]$&lt;$mx，那么由回文串的性质可知p[i]=p[j]。</p><p><img src="/posts/7c234a64/小于.png" alt="小于"></p><p>(2) 当i$&lt;$mx时，令j=2*id-1，即i关于id的对称点，如果i+p[j]$&gt;=$mx，那么可以确定的是p[i]=mx-i，然后超出部分就需要中心拓展比较了。</p><p><img src="/posts/7c234a64/大于.png" alt="大于"></p><p>(3) 当i&gt;=mx时，无法根据已知条件判断，只能中心拓展比较了。</p><p><img src="/posts/7c234a64/超出.png" alt="超出"></p><p>按照以上思路，遍历一下即可，注意更新id和mx。此写法得出的p[i]是最长半径数组，并非最长回文子串长度，ans需要减1，若有需要，修改中心扩展代码即可。代码如下：</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">manacher</span><span class="params">(<span class="keyword">char</span> *t, <span class="keyword">int</span> *p, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> id = <span class="number">0</span>, mx = <span class="number">0</span>, ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        p[i] = i&lt;mx ? min(p[<span class="number">2</span>*id-i], mx-i) : <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (t[i+p[i]] == t[i-p[i]]) p[i]++;	<span class="comment">// 中心扩展</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (mx &lt; i+p[i])</span><br><span class="line">            mx = i+p[i], id = i;</span><br><span class="line"></span><br><span class="line">        ans = max(ans, p[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h1><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> s[mxn], t[mxn];</span><br><span class="line"><span class="keyword">int</span> p[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">manacher_init</span><span class="params">(<span class="keyword">char</span> *s, <span class="keyword">char</span> *t, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> j = <span class="number">2</span>; t[<span class="number">0</span>] = <span class="string">'$'</span>, t[<span class="number">1</span>] = <span class="string">'#'</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        t[j++] = s[i];</span><br><span class="line">        t[j++] = <span class="string">'#'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    t[j] = <span class="string">'\0'</span>;</span><br><span class="line">    <span class="keyword">return</span> j;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">manacher</span><span class="params">(<span class="keyword">char</span> *t, <span class="keyword">int</span> *p, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> id = <span class="number">0</span>, mx = <span class="number">0</span>, ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        p[i] = i&lt;mx ? min(p[<span class="number">2</span>*id-i], mx-i) : <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (t[i+p[i]] == t[i-p[i]]) p[i]++;    <span class="comment">// 中心扩展</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (mx &lt; i+p[i])</span><br><span class="line">            mx = i+p[i], id = i;</span><br><span class="line"></span><br><span class="line">        ans = max(ans, p[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">expand</span><span class="params">(<span class="keyword">char</span>* s, <span class="keyword">int</span> n, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(l&gt;=<span class="number">0</span> &amp;&amp; r&lt;=n &amp;&amp; s[l]==s[r])</span><br><span class="line">        l--, r++;</span><br><span class="line">    <span class="keyword">return</span> r-l<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">simple</span><span class="params">(<span class="keyword">char</span>* s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n = <span class="built_in">strlen</span>(s), len = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> start = <span class="number">0</span>, end = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> t = max(expand(s, n, i, i), expand(s, n, i, i+<span class="number">1</span>));</span><br><span class="line">        <span class="keyword">if</span>(t &gt; len)&#123;</span><br><span class="line">            len = t;</span><br><span class="line">            start = i - (len - <span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line">            end = i + len / <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// for(int i=start; i&lt;=end; i++)&#123;</span></span><br><span class="line">    <span class="comment">//     printf("%c", s[i]);</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">    <span class="comment">// printf("\n");</span></span><br><span class="line">    <span class="keyword">return</span> len;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>, s);</span><br><span class="line">    <span class="keyword">int</span> n = manacher_init(s, t, <span class="built_in">strlen</span>(s));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, simple(s));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, manacher(t, p, n));</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d "</span>, p[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>专题</category>
        <category>字符串</category>
      </categories>
      <tags>
        <tag>字符串</tag>
        <tag>Manacher</tag>
      </tags>
  </entry>
  <entry>
    <title>【专题】KMP</title>
    <url>/posts/d2d96aa.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:39 GMT+0800 (GMT+08:00) --><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>Knuth-Morris-Pratt字符串查找算法，简称为“KMP算法”，常用于在一个<code>文本串S</code>内查找一个<code>模式串T</code>的出现位置。这个算法由Donald Knuth、Vaughan Pratt、James H. Morris三人于1977年联合发表，故取这3人的姓氏命名此算法。时间复杂度O(|S|+|T|)。</p><h1 id="朴素算法"><a href="#朴素算法" class="headerlink" title="朴素算法"></a>朴素算法</h1><p>给出一个最为常见的朴素字符串模式匹配算法，枚举<code>文本串S</code>的每一位，作为起点与<code>模式串T</code>进行匹配。时间复杂度O(|S|*|T|)。</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">simple</span><span class="params">(<span class="keyword">char</span>* s, <span class="keyword">char</span>* t, <span class="keyword">int</span> n, <span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (s[i] == t[j]) &#123;</span><br><span class="line">            i++, j++;</span><br><span class="line">            <span class="keyword">if</span> (j &gt;= m) &#123;   <span class="comment">// 匹配成功</span></span><br><span class="line">                <span class="keyword">return</span> i-j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            i = i-j + <span class="number">1</span>;</span><br><span class="line">            j = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>朴素算法的运行过程如下：</p><p><img src="/posts/d2d96aa/暴力匹配.gif" alt="暴力匹配"></p><p>注意到，如下图，枚举以S[1]为起点，匹配到最后一个字符，S[4]!=T[3]，失配之后朴素做法是指针回退，以S[2]为起点开始下一轮匹配，即i=i-j+1, j=0。</p><p><img src="/posts/d2d96aa/冗余.png" alt="冗余"></p><p>毫无疑问，随着<code>文本串S</code>的长度增加，每一次回退重新匹配会花费大量的时间。那么有没有办法优化呢？</p><h1 id="next数组"><a href="#next数组" class="headerlink" title="next数组"></a>next数组</h1><p>通过分析<code>模式串T</code>可以得到<code>next数组</code>，也可以当作fail数组理解。对于模式串<code>T=&quot;abac&quot;</code>，当匹配到<code>&#39;c&#39;</code>时失配了，那么说明前面的<code>&quot;aba&quot;</code>已经匹配成功，<code>&quot;aba&quot;</code><strong>最长的相等前缀后缀(不包括本身)</strong>是<code>&#39;a&#39;</code>，那么失配<code>&#39;c&#39;</code>后，我们可以跳过<code>s[3]=&#39;a&#39;</code>（文本串S<code>&quot;aba&quot;</code>的后缀）与<code>T[0]=&#39;a&#39;</code>（模式串T<code>&quot;aba&quot;</code>的前缀），直接匹配<code>S[4]=&#39;b&#39;</code>与<code>T[0]=&#39;b&#39;</code>。</p><p><img src="/posts/d2d96aa/next.png" alt="next"></p><p>为什么是最长的、相等的、不包括本身的前缀后缀呢？看下图自行理解。</p><p><img src="/posts/d2d96aa/前缀后缀.png" alt="前缀后缀"></p><p>由下表可以看出最长相等前缀后缀整体右移，首位加上-1，即是next数组。</p><div class="table-container"><table><thead><tr><th style="text-align:center">模式串</th><th style="text-align:center">a</th><th style="text-align:center">b</th><th style="text-align:center">a</th><th style="text-align:center">c</th></tr></thead><tbody><tr><td style="text-align:center">最长相等前缀后缀</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">1</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">next数组</td><td style="text-align:center">-1</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">1</td></tr></tbody></table></div><h1 id="next数组优化"><a href="#next数组优化" class="headerlink" title="next数组优化"></a>next数组优化</h1><p>对于失配时<code>S[4]=&#39;c&#39;</code>与<code>T[3]=&#39;b&#39;</code>不相等，由<code>T[1]=&#39;b&#39;</code>与<code>T[3]=&#39;b&#39;</code>相等，得出<code>T[1]=&#39;b&#39;</code>与<code>S[4]=&#39;c&#39;</code>也不相等，我们可以跳过这一步匹配。</p><p><img src="/posts/d2d96aa/next优化.png" alt="next优化"></p><p>注意C++中<code>next</code>是关键字（迭代器的一个函数），以及字符串下标<strong>从0开始</strong>和<strong>从1开始</strong>的代码稍有不同，注意必须求到<strong>next[|T|]</strong>，求字符串匹配数量以及最小循环节都需要用到。下面给出的是字符串下标从0开始的next数组的一种求法：</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> nxt[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getnxt</span><span class="params">(<span class="keyword">char</span>* t, <span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">-1</span>; nxt[<span class="number">0</span>] = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; m) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (j == <span class="number">-1</span> || t[i] == t[j]) &#123;</span><br><span class="line">            i++, j++;</span><br><span class="line">            <span class="comment">// if (t[i] == t[j])</span></span><br><span class="line">            <span class="comment">//     nxt[i] = nxt[j]; // next数组优化</span></span><br><span class="line">            <span class="comment">// else</span></span><br><span class="line">                nxt[i] = j;</span><br><span class="line">        &#125; <span class="keyword">else</span></span><br><span class="line">            j = nxt[j];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="KMP算法"><a href="#KMP算法" class="headerlink" title="KMP算法"></a>KMP算法</h1><p>有了next数组，下面给出KMP算法代码，与朴素算法类似，但是i不用回退了，可以看出求next数组的过程也是一个<code>模式串T</code>与自身匹配的过程。</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">KMP</span><span class="params">(<span class="keyword">char</span>* s, <span class="keyword">char</span>* t, <span class="keyword">int</span> n, <span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>, ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; n) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (j == <span class="number">-1</span> || s[i] == t[j]) &#123;</span><br><span class="line">            i++, j++;</span><br><span class="line">            <span class="keyword">if</span> (j &gt;= m) &#123;   <span class="comment">// 匹配成功</span></span><br><span class="line">                <span class="keyword">return</span> i-j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span></span><br><span class="line">            j = nxt[j];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>KMP算法的运行过程如下：</p><p><img src="/posts/d2d96aa/KMP.gif" alt="KMP"></p><h1 id="最小循环节"><a href="#最小循环节" class="headerlink" title="最小循环节"></a>最小循环节</h1><p>参考 <a href="https://www.cnblogs.com/chenxiwenruo/p/3546457.html" target="_blank" rel="noopener">KMP模板，最小循环节</a>。</p><p>定理：</p><blockquote><p>假设S的长度为len，则S存在最小循环节，循环节的长度L为len-next[len]，子串为S[0…len-next[len]-1]。<br>（1）如果len可以被len-next[len]整除，则表明字符串S可以完全由循环节循环组成，循环周期T=len/L。<br>（2）如果不能，说明还需要再添加几个字母才能补全。需要补的个数是循环个数L-len%L=L-(len-L)%L=L-next[len]%L，L=len-next[len]。</p></blockquote><div class="table-container"><table><thead><tr><th>index</th><th>0</th><th>1</th><th>2</th><th>3</th><th>4</th><th>5</th><th>6</th><th>7</th></tr></thead><tbody><tr><td>char</td><td>a</td><td>b</td><td>c</td><td>d</td><td>a</td><td>b</td><td>c</td><td></td></tr><tr><td>next</td><td>-1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td>2</td><td>3</td></tr></tbody></table></div><p>为方便说明，先设字符串的长度为len，循环子串的长度为L</p><p>例1<br>s0s1s2s3s4s5，next[6]=3<br>即s0s1s2=s3s4s5<br>很明显可知：循环子串为s0s1s2，L=len-next[6]=3，且能被len整除。</p><p>例2<br>s0s1s2s3s4s5s6s7，next[8]=6<br>此时len-next[8]=2，即L=2<br>由s0s1s2s3s4s5=s2s3s4s5s6s7<br>可知s0s1=s2s3，s2s3=s4s5，s4s5=s6s7<br>显然s0s1为循环子串</p><p>例3<br>s0s1s2s3s4s5s6，next[7]=4<br>此时len-next[7]=3，即L=3<br>由s0s1s2s3=s3s4s5s6<br>可知s0s1=s3s4，s2s3=s5s6<br>从而可知s0s1s2=s3s4s5，s0=s3=s6<br>即如果再添加3-4%3=2个字母（s1s2），那么得到的字符串就可以由s0s1s2循环3次组成</p><p>对于一个字符串，如abcd abcd abcd，由长度为4的字符串abcd重复3次得到，那么必然有原字符串的前八位等于后八位。也就是说，对于某个下标从0开始的字符串S，长度为len，由长度为L的字符串s重复R次得到，当R≥2时必然有S[0…len-L-1]=S[L…len-1]。</p><p>那么对于KMP算法来说，就有next[len]=len-L。此时L肯定已经是最小的了（因为next的值是前缀和后缀相等的最大长度，即len-L是最大的，那么在len已经确定的情况下，L是最小的）</p><h1 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h1><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> s[mxn], t[mxn];</span><br><span class="line"><span class="keyword">int</span> nxt[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getnxt</span><span class="params">(<span class="keyword">char</span>* t, <span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">-1</span>; nxt[<span class="number">0</span>] = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; m) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (j == <span class="number">-1</span> || t[i] == t[j]) &#123;</span><br><span class="line">            i++, j++;</span><br><span class="line">            <span class="comment">// if (t[i] == t[j])</span></span><br><span class="line">            <span class="comment">//     nxt[i] = nxt[j]; // next数组优化</span></span><br><span class="line">            <span class="comment">// else</span></span><br><span class="line">                nxt[i] = j;</span><br><span class="line">        &#125; <span class="keyword">else</span></span><br><span class="line">            j = nxt[j];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">KMP</span><span class="params">(<span class="keyword">char</span>* s, <span class="keyword">char</span>* t, <span class="keyword">int</span> n, <span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>, ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; n) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (j == <span class="number">-1</span> || s[i] == t[j]) &#123;</span><br><span class="line">            i++, j++;</span><br><span class="line">            <span class="keyword">if</span> (j &gt;= m) &#123;</span><br><span class="line">                <span class="comment">// ans++;</span></span><br><span class="line">                <span class="comment">// j = nxt[j];</span></span><br><span class="line">                <span class="keyword">return</span> i-j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span></span><br><span class="line">            j = nxt[j];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// return ans;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s %s"</span>, s, t);</span><br><span class="line">    getnxt(t, <span class="built_in">strlen</span>(t));</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="built_in">strlen</span>(t); i++)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d "</span>, nxt[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, simple(s, t, <span class="built_in">strlen</span>(s), <span class="built_in">strlen</span>(t)));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, KMP(s, t, <span class="built_in">strlen</span>(s), <span class="built_in">strlen</span>(t)));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>专题</category>
        <category>字符串</category>
      </categories>
      <tags>
        <tag>字符串</tag>
        <tag>KMP</tag>
        <tag>最小循环节</tag>
      </tags>
  </entry>
  <entry>
    <title>【专题】Nim博弈</title>
    <url>/posts/2aa44f65.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:39 GMT+0800 (GMT+08:00) --><h1 id="Nim博弈"><a href="#Nim博弈" class="headerlink" title="Nim博弈"></a>Nim博弈</h1><p>基本的尼姆博弈（Nim Game）描述如下：</p><blockquote><p>有若干堆各若干个物品，两个人轮流从某一堆取任意多的物品，每次至少取一个，多者不限，最后取光者得胜。</p></blockquote><p>博弈过程如下：</p><ul><li>对于局面 $ a_1 \oplus a_2 \oplus \ldots \oplus a_n = 0 $，无论先手怎么取，必将导致异或和改变为 $ a’_1 \oplus a’_2 \oplus \ldots \oplus a’_n = k \neq 0 $ ，而此时必有 $ a_i $ 使得 $ a_i $ 二进制下第k位为1，后手只要将 $ a_i $ 取成 $ a_i \oplus k $ ，使得局面重新回到异或和为0，直至最后局面变成 $ (0, 0, \ldots, 0) $ ，此时异或和为0。先手必输。</li><li>对于局面 $ a_1 \oplus a_2 \oplus \ldots \oplus a_n \neq 0 $ ，反之，先手必胜。</li></ul><p>详细证明见下方<a href="#Bouton定理">Bouton定理</a>。</p><hr><h1 id="Bouton定理"><a href="#Bouton定理" class="headerlink" title="Bouton定理"></a>Bouton定理</h1><p>Bouton定理：</p><blockquote><p>假设Nim博弈的石子有 $ n $ 堆，第 $ i $ 堆的石子个数我们用 $ a_i $ 表示，则我们可以使用 $ (a_1, a_2, \ldots, a_n) $ 表示一个Nim博弈的局面。对于 $ (a_1, a_2, \ldots, a_n) $ 的Nim博弈局面，当且仅当 $ a_1 \oplus a_2 \oplus \ldots \oplus a_n \neq 0 $ 时（其中 $ \oplus $ 是按位异或运算），先手必胜。</p></blockquote><p>简单证明如下：</p><ol><li>对于 $ a_1 \oplus a_2 \oplus \ldots \oplus a_n \neq 0 $ 的Nim博弈局面 $ (a_1, a_2, \ldots, a_n) $ ，我们设 $ a_1 \oplus a_2 \oplus \ldots \oplus a_n = k $ 。则必存在 $ a_i $ ，其二进制表示在 $ k $ 的最高位上为1（异或运算的性质），且有 $ a_i \oplus k &lt; a_i $ 。则对于当前局面下的先手可以通过合法的移动将第堆石子取到只剩 $ a_i \oplus k $ 个，那么此时游戏局面变为 $ (a_1, a_2, \ldots, a_{i-1},a_i \oplus k, a_{i+1}, \ldots a_n ) $ 。<br>而此时 $ a_1\oplus a_2 \oplus \ldots \oplus a_{i-1} \oplus (a_i \oplus k) \oplus a_{i+1} \oplus \dots \oplus a_n = k \oplus k = 0 $。得出<strong>异或和不为0的局面一定存在合法移动可以变为异或和为0的局面</strong>。</li><li>对于 $ a_1 \oplus a_2 \oplus \ldots \oplus a_n = 0 $ 的Nim博弈局面 $ (a_1, a_2, \ldots, a_n) $ ，假设我们将第 $ i $ 堆石子由 $ a_i $ 个取到 $ a’_i $ 个，则有 $ a_i \neq a’_i $ ，则必有 $ a_1\oplus a_2 \oplus \ldots \oplus a_{i-1} \oplus a’_i \oplus a_{i+1} \oplus \dots \oplus a_n \neq 0 $ （可用反证法证明）。即<strong>异或和为0的局面无论怎样合法地进行移动，都将转变为异或和不为0的局面</strong>。</li><li>对于局面 $ (0, 0, \ldots, 0) $ ，其异或和为0，对于先手而言是必输的局面。</li><li><strong>对于任何异或和不为0的局面，先手只需要按照策略将其转变为异或和为0的局面，就能保证后手永远只能拿到异或和为0的局面</strong>。又因为每一次合法的移动都将导致石子个数减少，故总的移动步数是有限的，最终后手将拿到的局面而无石子可拿，故后手必输，先手必胜。反过来即可证，对于任何异或和为0的局面，先手必输。</li></ol><!-- rebuild by neat -->]]></content>
      <categories>
        <category>专题</category>
        <category>博弈论</category>
      </categories>
      <tags>
        <tag>博弈论</tag>
        <tag>Nim博弈</tag>
      </tags>
  </entry>
  <entry>
    <title>【专题】SG函数</title>
    <url>/posts/266a09be.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:39 GMT+0800 (GMT+08:00) --><h1 id="公平组合游戏"><a href="#公平组合游戏" class="headerlink" title="公平组合游戏"></a>公平组合游戏</h1><p>公平组合游戏（Impartial Combinatorial Games）简称ICG，大致定义如下：</p><ol><li>游戏有2名选手</li><li>对于游戏任何一种可能的局面（position），合法的操作集合只取决于这个局面本身</li><li>选手轮流操作（move），且只能在合法操作集合中选择</li><li>在游戏出于某状态，当前选手合法操作集合为空时判负，游戏结束</li></ol><div><div class="fold_hider"><div class="close hider_title">查看解析</div></div><div class="fold"><p>一个公平游戏可以抽象地用一个有向无环图来表示，这个图中每个点都对应一个状态，每条有向边代表从一个状态到另一个状态的合法操作。</p><p>我们可以想象一个硬币最初放在某个点上，然后两个玩家轮流将其从当前的点移动到它的后继点。当硬币移动到汇点（没有出度的点）时游戏结束，无法操作的玩家判负。</p><p><img src="/posts/266a09be/ICG.png" alt="ICG"></p></div></div><hr><h1 id="必胜态和必败态"><a href="#必胜态和必败态" class="headerlink" title="必胜态和必败态"></a>必胜态和必败态</h1><ul><li>必败态（P-position）：上一个选手（previous player先前刚操作完的选手）处于必胜局面，即此时先手必败</li><li>必胜态（N-position）：下一个选手（next player当前即将操作的选手）处于必胜局面，即此时先手必胜</li></ul><div><div class="fold_hider"><div class="close hider_title">查看解析</div></div><div class="fold"><p>更加严谨的定义：1.无法进行任何移动的局面终结点（也就是terminal position）是P-position；2.可以移动到P-position的局面是N-position；3.所有移动都导致N-position的局面是P-position。</p><p><img src="/posts/266a09be/NP.png" alt="NP"></p><p>P-position和N-position的局面信息提供了游戏的必胜策略。如果轮到我们操作且游戏处在一个N-position，我们应该移动到一个P-position。接着我们的对手就会被迫进入N-position，依次类推。我们最终会移入一个汇点并获得胜利。</p></div></div><hr><h1 id="SG函数"><a href="#SG函数" class="headerlink" title="SG函数"></a>SG函数</h1><p>先定义mex(minimal excludant)运算，这是施加于一个集合的运算，表示<strong>最小的不属于这个集合的非负整数</strong>。例如mex{2,3,5}=0、mex{0,1,2,4}=3、mex{}=0。<br>对于任意状态x，定义SG(x)=mex(S)，其中S是x后继状态的SG函数值的集合。如x有三个后继状态分别为a、b、c，那么SG(x)=mex{SG(a), SG(b), SG(c)}。 这样，集合S的终态必然是空集，所以当且仅当x为必败点P时，SG函数的终态为SG(x)=0。</p><div><div class="fold_hider"><div class="close hider_title">查看解析</div></div><div class="fold"><p>通过SG函数，每个ICG都可以转换成<a href="https://blog.lordash.cf/posts/2aa44f65.html#Nim博弈">Nim博弈</a>。SG函数的定义域为ICG的决策树上的所有节点，此时具体定义为：SG(x)=mex{SG(y)|y是x的节点}。对于ICG的决策树上的节点u，我们可以把它想象成一个只有一堆石子，个数为SG(u)的Nim博弈。</p><p>对于节点u的子节点v：</p><ol><li>根据SG函数的定义，必有SG(u) $ \neq $ SG(v) 。</li><li>若SG(u) $ &lt; $ SG(v)，则根据SG函数的定义，v节点必定存在子节点w使得SG(w)=SG(u)。倘若先手尝试使得局面的SG函数值变大，由局面u移动到局面v，则后手必定可以将局面由v转移到w，恢复SG函数值。故先手无有效的手段让局面的SG函数值增大，我们只需要考虑SG(u) $ &gt; $ SG(v)的情况。</li><li>对于全体SG(u)&gt;SG(v)的子节点v，其SG函数值将完整覆盖区间[0, SG(u)-1]上的所有整数。我们从局面u移动到局面v，其实相当于在一堆个数为SG(u)的石子上取走若干石子，使剩下一堆个数为SG(v)的石子。</li></ol><p>当ICG中存在n个互相不干扰的移动类型时，我们可以将这n种移动类型视为n堆石子，将该ICG视为n堆石子的Nim博弈，运用<a href="https://blog.lordash.cf/posts/2aa44f65.html#Bouton定理">Bouton定理</a>，该ICG的先手必胜与否的情况可以通过计算每个移动类型下的初始状态的SG函数，并计算这些SG函数值的异或和来得出。即下面的<a href="#SG定理">SG定理</a>。</p><p><img src="/posts/266a09be/SG.png" alt="SG"></p></div></div><hr><h1 id="SG定理"><a href="#SG定理" class="headerlink" title="SG定理"></a>SG定理</h1><p>Sprague-Grundy定理：</p><blockquote><p>游戏和的SG函数等于各个游戏SG函数的Nim和（Nim和：各个数相异或的结果）。</p></blockquote><p>这样就可以将每一个子游戏分而治之，从而简化了问题。而<a href="https://blog.lordash.cf/posts/2aa44f65.html#Bouton定理">Bouton定理</a>就是Sprague-Grundy定理在<a href="https://blog.lordash.cf/posts/2aa44f65.html#Nim博弈">Nim博弈</a>中的直接应用。因为单堆Nim博弈（在一堆n个石子中可以取1~n个石子）的SG函数满足SG(n)=mex(n-1, n-2, n-3, …, n-n)=n，根据SG定理，每一堆石子总数相互异或即为答案。</p><hr><h1 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h1><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// POJ 2311</span></span><br><span class="line"><span class="keyword">int</span> SG[<span class="number">205</span>][<span class="number">205</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 递归</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getSg</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> m)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(SG[n][m]!=<span class="number">-1</span>) <span class="keyword">return</span> SG[n][m];</span><br><span class="line">    <span class="keyword">bool</span> S[<span class="number">1005</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>; i&lt;=n-i; i++)</span><br><span class="line">        S[getSg(i, m) ^ getSg(n-i, m)] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>; i&lt;=m-i; i++)</span><br><span class="line">        S[getSg(n, i) ^ getSg(n, m-i)] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> mex = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(S[mex]) mex++;</span><br><span class="line">    <span class="keyword">return</span> SG[n][m]=mex;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 递推</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getSg</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> m)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">2</span>; j &lt;= m; j++)&#123;</span><br><span class="line">            <span class="keyword">bool</span> S[<span class="number">1005</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">2</span>; i - k &gt;= <span class="number">2</span>; k++) S[SG[k][j] ^ SG[i-k][j]] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">2</span>; j - k &gt;= <span class="number">2</span>; k++) S[SG[i][k] ^ SG[i][j-k]] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">int</span> mex = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span>(S[mex]) mex++;</span><br><span class="line">            SG[i][j] = mex;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>专题</category>
        <category>博弈论</category>
      </categories>
      <tags>
        <tag>博弈论</tag>
        <tag>SG函数</tag>
      </tags>
  </entry>
  <entry>
    <title>【专题】Wythoff博弈</title>
    <url>/posts/8e3cecbf.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:39 GMT+0800 (GMT+08:00) --><h1 id="Wythoff博弈"><a href="#Wythoff博弈" class="headerlink" title="Wythoff博弈"></a>Wythoff博弈</h1><p>基本的威佐夫博弈（Wythoff Game）描述如下：</p><blockquote><p>有两堆各若干个物品，两个人轮流从某一堆或同时从两堆中取同样多的物品，每次至少取一个，多者不限，最后取光者得胜。</p></blockquote><p>我们使用(a, b)来描述一个局面，可以发现(a, b)和(b, a)其实是一样的，所以在此定义a $ \le $ b。显然(0, 0)是第一个必败态（先手必败局面、奇异局面、P-position），使用<a href="https://blog.lordash.cf/posts/266a09be.html#必胜态和必败态">P/N-状态</a>或者<a href="https://blog.lordash.cf/posts/266a09be.html#SG函数">SG函数</a>可以更容易地分析局面，简单讲就是：“移动<strong>可以</strong>导致<code>必败态</code>的，此时先手必胜；移动<strong>只能</strong>导致<code>必胜态</code>的，此时先手必败”。打表可得必败态为(0, 0)、(1, 2)、(3, 5)、(4, 7)、(6, 10)、(8, 13)、(9, 15)、 $ \cdots\ $ 仔细观察，大胆假设，<del>自行求证</del>，对于 $ (a_n, b_n) $ 有以下性质：</p><ol><li><p>$ a_n $ 是前面必败态中未出现过的最小自然数</p></li><li><p>$ b_n = a_n + n $</p></li></ol><hr><p>博弈过程如下：</p><ul><li>由 $ a_n $ 是未在前面出现过的最小自然数，所以 $ a_n &gt; a_{n-1} $ ，而 $ (b_n = a_n + n) &gt; (a_{n-1} + n) &gt; (a_{n-1} + n - 1 = b_{n-1}) &gt; a_{n-1} $ ，得出<strong>任何自然数都包含于有且仅有一个必败态中</strong>。</li><li>当局面处于必败态时，如果只改变其中一个分量，那么与另一个分量就不在同一个必败态中。如果使两个分量同时减少，那么由于a和b的差值不变，改变后也不会是其它的必败态。得出<strong>必败态只能转移到必胜态</strong>。</li><li>当局面处于必胜态(x, y)时，如果与x出现在必败态时的另一个分量 $ a_x $ 或者 $ b_x $ 小于y，那么将y取成 $ a_x $ 或者 $ b_x $ ，局面变为必败态 $ (a_x, x) $ 或者 $ (x, b_x) $ ；否则在两堆同时取走 $ x-a_{y-x} $ ，局面变为必败态 $ (a_{y-x}, b_{y-x}) $。得出<strong>必胜态可以转移到必败态</strong>。</li></ul><p>SG函数打表找出规律，就可以开始推导了，实际上 $ a_n $ 和 $ b_n $ 是Betty序列并满足<a href="#Betty定理">Betty定理</a>，令 $ A = a_{n}, B = a_{n}+n $ 解方程 $ \frac{1}{a} + \frac{1}{a+1} = 1 $ 得 $ a = \frac{\sqrt{5} + 1}{2} $ 。<strong>即对于Wythoff博弈局面(a, b)，当 $ a == (int)((b-a) \times \frac{\sqrt{5} + 1}{2}) $ 时先手必败，反之先手必胜。</strong></p><hr><h1 id="Betty定理"><a href="#Betty定理" class="headerlink" title="Betty定理"></a>Betty定理</h1><p>Betty定理：</p><blockquote><p>如果两个无理数满足 $ \frac{1}{a} + \frac{1}{b} = 1 $，那么对于两个集合 $ A = \{[na]\}, B = \{[na]\}, n \in Z $ ，可得出 $ A \cap B = \varnothing, A \cup B = N^{+} $ 。</p></blockquote><p>简单证明如下：</p><ul><li><p>$ A \cap B = \varnothing $</p><p>由 $ \frac{1}{a} + \frac{1}{b} = 1 $，且a，b为正，可以得到a，b均大于1，所以[na]的跨度大于1，向下取整不会重复。取整数k使得 $ k \in A, k \in B $，那么 $ k &lt; ma &lt; k+1, k &lt; nb &lt; k+1 $ ，化简一下 $ \frac{k}{m} &lt; a &lt; \frac{k+1}{m} \Longrightarrow \frac{m}{k+1} &lt; \frac{1}{a} &lt; \frac{m}{k} $ ，同理 $ \frac{n}{k+1} &lt; \frac{1}{b} &lt; \frac{n}{k} $ ，两式相加 $ \frac{m+n}{k+1} &lt; \frac{1}{a} + \frac{1}{b} &lt; \frac{m+n}{k} \Longrightarrow \frac{m+n}{k+1} &lt; 1 &lt; \frac{m+n}{k} \Longrightarrow k &lt; m + n &lt; k + 1 $ ，与m，n为整数矛盾。</p></li><li><p>$ A \cup B = N^{+} $</p><p>取整数k满足 $ k \in C_{N^{+}}A \cup B $ ，此时必有整数m，n满足 $ [ma] &lt; k &lt; [(m+1)a], [nb] &lt; k &lt; [(n+1)b] $ ，化简一下 $ ma &lt; k \le [(m+1)a] - 1 $ ，由于a为无理数，所以有 $ ma &lt; k &lt; (m+1)a - 1 \Longrightarrow \frac{m}{k} &lt; \frac{1}{a} &lt; \frac{m+1}{k+1} $ ，同理 $ \frac{n}{k} &lt; \frac{1}{b} &lt; \frac{m+1}{k+1} $ ，两式相加 $ \frac{m+n}{k} &lt; \frac{1}{a} + \frac{1}{b} &lt; \frac{m+n+2}{k+1} \Longrightarrow \frac{m+n}{k} &lt; 1 &lt; \frac{m+n+2}{k+1} \Longrightarrow m + n &lt; k &lt; k + 1 &lt; m + n + 2 $ ，与m+n和m+n+2间只有一个整数矛盾。</p></li></ul><!-- rebuild by neat -->]]></content>
      <categories>
        <category>专题</category>
        <category>博弈论</category>
      </categories>
      <tags>
        <tag>博弈论</tag>
        <tag>Wythoff博弈</tag>
      </tags>
  </entry>
  <entry>
    <title>【专题】字典树</title>
    <url>/posts/c8a618be.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:39 GMT+0800 (GMT+08:00) --><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>字典树又称单词查找树，Trie树，是一种树形结构，是一种哈希树的变种。典型应用是用于统计，排序和保存大量的字符串（但不仅限于字符串）。优点是利用字符串的公共前缀来减少查询时间，最大限度地减少无谓的字符串比较，查询效率比哈希树高。</p><h1 id="Trie"><a href="#Trie" class="headerlink" title="Trie"></a>Trie</h1><p>字典树的结构如下：</p><p><img src="/posts/c8a618be/trie.png" alt="trie"></p><p>字典树用边来代表字母，而从根结点到树上某一结点的路径就代表了一个字符串。这颗字典树包含的字符串有{“in”, “inn”, “int”, “tea”, “ten”, “to”}。</p><p>Trie的结构非常好懂，我们用$\delta(u, c)$表示结点u的c字符指向的下一个结点，或着说是结点u代表的字符串后面添加一个字符c形成的字符串的结点。（c的取值范围和字符集大小有关，不一定是0~26）。有时需要标记插入进 trie 的是哪些字符串，每次插入完成时在这个字符串所代表的节点处打上标记即可。</p><p>Trie一般支持两个操作：</p><ol><li>插入操作，就是将一个字符串s加入到集合中。</li><li>查询操作，就是查询一个字符串S是不是在集合中。</li></ol><p>实现代码如下：</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">char</span> *s, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> p = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> c = s[i] - <span class="string">'a'</span>;</span><br><span class="line">        <span class="keyword">if</span> (!tree[p][c]) tree[p][c] = ++cnt;</span><br><span class="line">        p = tree[p][c];</span><br><span class="line">    &#125;</span><br><span class="line">    exist[p]++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">search</span><span class="params">(<span class="keyword">char</span> *s, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> p = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> c = s[i] - <span class="string">'a'</span>;</span><br><span class="line">        <span class="keyword">if</span> (!tree[p][c]) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        p = tree[p][c];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> exist[p];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h1><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> s[mxn];</span><br><span class="line"><span class="keyword">int</span> tree[<span class="number">100000</span>][<span class="number">26</span>], exist[<span class="number">100000</span>], cnt = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">char</span> *s, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> p = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> c = s[i] - <span class="string">'a'</span>;</span><br><span class="line">        <span class="keyword">if</span> (!tree[p][c]) tree[p][c] = ++cnt;</span><br><span class="line">        p = tree[p][c];</span><br><span class="line">    &#125;</span><br><span class="line">    exist[p]++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">search</span><span class="params">(<span class="keyword">char</span> *s, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> p = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> c = s[i] - <span class="string">'a'</span>;</span><br><span class="line">        <span class="keyword">if</span> (!tree[p][c]) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        p = tree[p][c];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> exist[p];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, m; <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;n, &amp;m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>, s);</span><br><span class="line">        insert(s, <span class="built_in">strlen</span>(s));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;m; i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>, s);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, search(s, <span class="built_in">strlen</span>(s)));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>专题</category>
        <category>字符串</category>
      </categories>
      <tags>
        <tag>字符串</tag>
        <tag>字典树</tag>
      </tags>
  </entry>
  <entry>
    <title>【专题】扩展KMP</title>
    <url>/posts/a4a14ec9.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:39 GMT+0800 (GMT+08:00) --><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>给定长度为n的<code>文本串S</code>和长度为m的<code>模式串T</code>，定义extend[i]为S[i…n-1]与T[0…m-1]的<strong>最长公共前缀长度</strong>，求extend[i]。当extend[x]==m时，则可知<code>文本串S</code>中包含<code>模式串T</code>，并且首位置为x，而这正是KMP算法处理的模式匹配问题。相较于KMP算法，扩展KMP算法能找到<code>文本串S</code>中所有<code>模式串T</code>的匹配，更一般地，可以知道<code>文本串S</code>中以每个字符开始的后缀与<code>模式串T</code>的最长公共前缀长度，时间复杂度O(n+m)。</p><h1 id="扩展KMP"><a href="#扩展KMP" class="headerlink" title="扩展KMP"></a>扩展KMP</h1><p>假设遍历到i时，已经求出extend[0…i-1]的值。我们记录下遍历过程中匹配成功的字符的最远位置为p，并且这次匹配的起始位置为a。换句话说，计算到x时，匹配成功的最远位置是x+extend[x]-1，p就是x=0…i-1得到的最大值，a就是对应的x。</p><p>设辅助数组next[i]表示<strong>T[i…m-1]和T[0…m-1]的最长公共前缀长度</strong>（注意这里与KMP算法中的next数组含义不同）。令len=next[i-a]，讨论以下两种情况：</p><p>(1) i + len-1 &lt; p</p><p><img src="/posts/a4a14ec9/小于.png" alt="小于"></p><p>由next数组定义可知 <font color="blue">T[0…len-1] == T[i-a…i-a+len-1]</font>，并且由extend数组定义可知 <font color="green">S[a…p] == T[0…p-a]</font>，得到<font color="blue"> S[i…i+len-1] == T[i-a…i-a+len-1] </font>，所以 <font color="blue">S[i…i+len-1] == T[0…len-1]</font>。并且 <font color="red">S[i+len-1…p]</font> != <font color="orange">T[len-1…i-a]</font>，不然违背了next数组最长公共前缀长度的定义。于是，无需任何比较就可以得出extend[i] = len。</p><p>(2) i + len-1 &gt;= p</p><p><img src="/posts/a4a14ec9/大于.png" alt="大于"></p><p>我们可以看到，匹配最远的位置只到p，对于p之后的匹配结果是未知的，所以我们需要继续匹配S[p…n-1]和T[p-i…m-1]。匹配完之后，还需要更新a和p。</p><p>以上就是扩展KMP的主要思想，遍历即可，下面给出字符串下标从0开始的一种exKMP的实现，注意为了实现方便，代码中的p是上面分析的p+1，所以判断的时候是i+next[i-a]。而且同时用了变量j跟踪p在<code>文本串S</code>与<code>模式串T</code>中的对应位置，注意遍历<code>文本串S</code>时，i在递增，j需要递减。</p><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">void ex<span class="constructor">KMP(<span class="params">char</span><span class="operator">*</span> <span class="params">s</span>, <span class="params">char</span><span class="operator">*</span> <span class="params">t</span>, <span class="params">int</span> <span class="params">n</span>, <span class="params">int</span> <span class="params">m</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">int</span> a, p;            </span><br><span class="line">    for (<span class="built_in">int</span> i=<span class="number">0</span>, j=-<span class="number">1</span>; i&lt;n; i++, j--)  <span class="comment">//j即等于p与i的距离，其作用是判断i是否大于p（如果j&lt;0，则i大于p）</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (j&lt;<span class="number">0</span><span class="operator"> || </span>i+nxt<span class="literal">[<span class="identifier">i</span>-<span class="identifier">a</span>]</span> &gt;= p)  </span><br><span class="line">        &#123; </span><br><span class="line">            <span class="keyword">if</span> (j&lt;<span class="number">0</span>) p = i, j = <span class="number">0</span>;      <span class="comment">//如果i大于p</span></span><br><span class="line">            <span class="keyword">while</span> (p&lt;n<span class="operator"> &amp;&amp; </span>j&lt;m<span class="operator"> &amp;&amp; </span>s<span class="literal">[<span class="identifier">p</span>]</span>==t<span class="literal">[<span class="identifier">j</span>]</span>) p++, j++;</span><br><span class="line">            extend<span class="literal">[<span class="identifier">i</span>]</span> = j, a = i;</span><br><span class="line">        &#125; <span class="keyword">else</span></span><br><span class="line">            extend<span class="literal">[<span class="identifier">i</span>]</span> = nxt<span class="literal">[<span class="identifier">i</span>-<span class="identifier">a</span>]</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="next数组"><a href="#next数组" class="headerlink" title="next数组"></a>next数组</h1><p>根据next数组定义，next[i]表示T[i…n]和T[0…n]的最长公共前缀的长度，其实就相当于<code>模式串T</code>与自身的匹配，不过这里next数组是从1开始的，next[0]匹配的肯定是整个串的长度m。有兴趣的可以试试写到一个函数中去，下面模板中给出分离的实现。再次强调C++中<code>next</code>是关键字（迭代器的一个函数），可以换个名字避免 <font color="orange"><code>CE</code></font>。</p><h1 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h1><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> s[mxn], t[mxn];</span><br><span class="line"><span class="keyword">int</span> nxt[mxn], extend[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getnxt</span><span class="params">(<span class="keyword">char</span>* t, <span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a, p; nxt[<span class="number">0</span>] = m;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>, j=<span class="number">-1</span>; i&lt;m; i++, j--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (j&lt;<span class="number">0</span> || i+nxt[i-a] &gt;= p)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (j&lt;<span class="number">0</span>) p = i, j = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span> (p&lt;m &amp;&amp; t[p]==t[j]) p++, j++;</span><br><span class="line">            nxt[i] = j, a = i;</span><br><span class="line">        &#125; <span class="keyword">else</span></span><br><span class="line">            nxt[i] = nxt[i-a];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">exKMP</span><span class="params">(<span class="keyword">char</span>* s, <span class="keyword">char</span>* t, <span class="keyword">int</span> n, <span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a, p;            </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>, j=<span class="number">-1</span>; i&lt;n; i++, j--)  <span class="comment">//j即等于p与i的距离，其作用是判断i是否大于p（如果j&lt;0，则i大于p）</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (j&lt;<span class="number">0</span> || i+nxt[i-a] &gt;= p)  </span><br><span class="line">        &#123; </span><br><span class="line">            <span class="keyword">if</span> (j&lt;<span class="number">0</span>) p = i, j = <span class="number">0</span>;      <span class="comment">//如果i大于p</span></span><br><span class="line">            <span class="keyword">while</span> (p&lt;n &amp;&amp; j&lt;m &amp;&amp; s[p]==t[j]) p++, j++;</span><br><span class="line">            extend[i] = j, a = i;</span><br><span class="line">        &#125; <span class="keyword">else</span></span><br><span class="line">            extend[i] = nxt[i-a];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s%s"</span>, s, t);</span><br><span class="line">    getnxt(t, <span class="built_in">strlen</span>(t));</span><br><span class="line">    exKMP(s, t, <span class="built_in">strlen</span>(s), <span class="built_in">strlen</span>(t));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="built_in">strlen</span>(t); i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d "</span>, nxt[i]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="built_in">strlen</span>(s); i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d "</span>, extend[i]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>专题</category>
        <category>字符串</category>
      </categories>
      <tags>
        <tag>字符串</tag>
        <tag>扩展KMP</tag>
      </tags>
  </entry>
  <entry>
    <title>【专题】最小表示法</title>
    <url>/posts/2cb42e5f.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:39 GMT+0800 (GMT+08:00) --><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>最小表示法，求所有与某个字符串循环同构的字符串中，字典序最小的那个。比如说一个字符串lordash，它长度为7，也就是说最多有七种循环同构的方法。</p><p>lordash、ordashl、rdashlo、dashlor、ashlord、shlorda、hlordas。</p><p>这几个串在原串上的开始位置分别是0,1,2,3,4,5,6。字典序最小的同构即是以4为起点的那个。</p><h1 id="朴素算法"><a href="#朴素算法" class="headerlink" title="朴素算法"></a>朴素算法</h1><p>给出一个朴素的算法，我们每次比较i和j开始的循环同构，把当前比较到的位置记作k，每次遇到不一样的字符时便把大的跳过，最后剩下的就是最优解。最坏时间复杂度$ O(|S|^{2}) $。</p><p>实现代码如下：</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">simple</span><span class="params">(<span class="keyword">char</span>* s, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>, j=<span class="number">1</span>, k=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i&lt;n &amp;&amp; j&lt;n &amp;&amp; k&lt;n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(s[(i+k)%n] == s[(j+k)%n])&#123;</span><br><span class="line">            k++;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(s[(i+k)%n] &gt; s[(j+k)%n])</span><br><span class="line">                i++;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                j++;</span><br><span class="line">            k = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span>(i == j) i++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> min(i, j);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="最小表示法O-S"><a href="#最小表示法O-S" class="headerlink" title="最小表示法O(|S|)"></a>最小表示法O(|S|)</h1><p>如果比较起始位置$i$和起始位置$j$发现$S[i,i+1,\ldots,i+k-1]=S[j,j+1,\ldots,j+k-1]$且$S[i+k] \lt S[j+k]$，则起始位置$j,j+1,\ldots,j+k$都不合法。对于每个数字$0 \le l \le k$都有起始位置$i+l$比起始位置$j+l$优，因为$S[i+l,i+l+1, \ldots,i+k-1]=S[j+l,j+l+1,\ldots,j+k-1]$且$S[i+k] \lt S[j+k]$ 。</p><p>代码如下：</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getmin</span><span class="params">(<span class="keyword">char</span>* s, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>, j=<span class="number">1</span>, k=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i&lt;n &amp;&amp; j&lt;n &amp;&amp; k&lt;n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(s[(i+k)%n] == s[(j+k)%n])&#123;</span><br><span class="line">            k++;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(s[(i+k)%n] &gt; s[(j+k)%n])</span><br><span class="line">                i+=k+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                j+=k+<span class="number">1</span>;</span><br><span class="line">            k = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span>(i == j) i++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> min(i, j);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h1><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> s[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">simple</span><span class="params">(<span class="keyword">char</span>* s, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>, j=<span class="number">1</span>, k=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i&lt;n &amp;&amp; j&lt;n &amp;&amp; k&lt;n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(s[(i+k)%n] == s[(j+k)%n])&#123;</span><br><span class="line">            k++;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(s[(i+k)%n] &gt; s[(j+k)%n])</span><br><span class="line">                i++;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                j++;</span><br><span class="line">            k = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span>(i == j) i++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> min(i, j);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getmin</span><span class="params">(<span class="keyword">char</span>* s, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>, j=<span class="number">1</span>, k=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i&lt;n &amp;&amp; j&lt;n &amp;&amp; k&lt;n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(s[(i+k)%n] == s[(j+k)%n])&#123;</span><br><span class="line">            k++;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(s[(i+k)%n] &gt; s[(j+k)%n])</span><br><span class="line">                i+=k+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                j+=k+<span class="number">1</span>;</span><br><span class="line">            k = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span>(i == j) i++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> min(i, j);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>, s);</span><br><span class="line">    <span class="keyword">int</span> n = <span class="built_in">strlen</span>(s);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, simple(s, n));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, getmin(s, n));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>专题</category>
        <category>字符串</category>
      </categories>
      <tags>
        <tag>字符串</tag>
        <tag>最小表示法</tag>
      </tags>
  </entry>
  <entry>
    <title>【分享】kuangbin带你飞专题目录链接</title>
    <url>/posts/46aaf583.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:39 GMT+0800 (GMT+08:00) --><p>更好的目录链接：<a href="https://vjudge.net/article/187" target="_blank" rel="noopener">https://vjudge.net/article/187</a> 快去全绿吧</p><hr><p><a href="https://vjudge.net/contest/65959" target="_blank" rel="noopener">[kuangbin带你飞]专题一 简单搜索</a><br><a href="https://vjudge.net/contest/65997" target="_blank" rel="noopener">[kuangbin带你飞]专题二 搜索进阶</a><br><a href="https://vjudge.net/contest/65998" target="_blank" rel="noopener">[kuangbin带你飞]专题三 Dancing Links</a><br><a href="https://vjudge.net/contest/66569" target="_blank" rel="noopener">[kuangbin带你飞]专题四 最短路练习</a><br><a href="https://vjudge.net/contest/66964" target="_blank" rel="noopener">[kuangbin带你飞]专题五 并查集</a><br><a href="https://vjudge.net/contest/66965" target="_blank" rel="noopener">[kuangbin带你飞]专题六 最小生成树</a><br><a href="https://vjudge.net/contest/66989" target="_blank" rel="noopener">[kuangbin带你飞]专题七 线段树</a><br><a href="https://vjudge.net/contest/67265" target="_blank" rel="noopener">[kuangbin带你飞]专题八 生成树</a><br><a href="https://vjudge.net/contest/67418" target="_blank" rel="noopener">[kuangbin带你飞]专题九 连通图</a><br><a href="https://vjudge.net/contest/68127" target="_blank" rel="noopener">[kuangbin带你飞]专题十 匹配问题</a><br><a href="https://vjudge.net/contest/68128" target="_blank" rel="noopener">[kuangbin带你飞]专题十一 网络流</a><br><a href="https://vjudge.net/contest/68966" target="_blank" rel="noopener">[kuangbin带你飞]专题十二 基础DP1</a><br><a href="https://vjudge.net/contest/68968" target="_blank" rel="noopener">[kuangbin带你飞]专题十三 基础计算几何</a><br><a href="https://vjudge.net/contest/70017" target="_blank" rel="noopener">[kuangbin带你飞]专题十四 数论基础</a><br><a href="https://vjudge.net/contest/70324" target="_blank" rel="noopener">[kuangbin带你飞]专题十五 数位DP</a><br><a href="https://vjudge.net/contest/70325" target="_blank" rel="noopener">[kuangbin带你飞]专题十六 KMP &amp; 扩展KMP &amp; Manacher</a><br><a href="https://vjudge.net/contest/70326" target="_blank" rel="noopener">[kuangbin带你飞]专题十七 AC自动机</a><br><a href="https://vjudge.net/contest/70655" target="_blank" rel="noopener">[kuangbin带你飞]专题十八 后缀数组</a><br><a href="https://vjudge.net/contest/71746" target="_blank" rel="noopener">[kuangbin带你飞]专题十九 矩阵</a><br><a href="https://vjudge.net/contest/76380" target="_blank" rel="noopener">[kuangbin带你飞]专题二十 斜率DP</a><br><a href="https://vjudge.net/contest/76505" target="_blank" rel="noopener">[kuangbin带你飞]专题二十一 概率&amp;期望</a><br><a href="https://vjudge.net/contest/77874" target="_blank" rel="noopener">[kuangbin带你飞]专题二十二 区间DP</a><br><a href="https://vjudge.net/contest/105570" target="_blank" rel="noopener">[kuangbin带你飞]专题二十三 计算几何之半平面交</a></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>分享</category>
      </categories>
      <tags>
        <tag>kuangbin</tag>
      </tags>
  </entry>
  <entry>
    <title>【分享】增重方法推荐</title>
    <url>/posts/74edaaa8.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:39 GMT+0800 (GMT+08:00) --><h1 id="一、怎么吃都不胖的原因"><a href="#一、怎么吃都不胖的原因" class="headerlink" title="一、怎么吃都不胖的原因"></a>一、怎么吃都不胖的原因</h1><ol><li><p>基因表达，身体倾向于将多余的营养代谢而不是储存</p></li><li><p>饮食习惯，客观上吃得少</p></li><li><p>身体不需要</p></li></ol><h1 id="二、增重为什么要增肌"><a href="#二、增重为什么要增肌" class="headerlink" title="二、增重为什么要增肌"></a>二、增重为什么要增肌</h1><ul><li><p>增肌：肌肉增长可控，锻炼哪增哪</p></li><li><p>增脂：脂肪增长不可控，增长的位置由基因决定</p></li></ul><h1 id="三、怎么练容易显壮"><a href="#三、怎么练容易显壮" class="headerlink" title="三、怎么练容易显壮"></a>三、怎么练容易显壮</h1><p>增肌的基本原理就是通过力量训练，不断刺激肌肉，让肌纤维撕裂，让肌糖原消耗，然后补充足够的营养，让肌肉进行超量恢复，同时负荷渐进。关于增肌有以下要点：</p><ol><li><p>优先练胸、背、臀腿等大肌群。</p><div><div class="fold_hider"><div class="close hider_title">查看详细</div></div><div class="fold"><p>一方面，大肌群的肌肉量占比大，增肌对体型变化的效果更加明显（肩部、手臂、腰腹、小腿则为小肌群，但是由于三角肌在身体两侧，练大了，从正面看人会马上变宽，所以肩部也可以和大肌群在前期安排优先的训练）。另一方面，大肌群的训练会带动小肌群，大部分练胸背的动作，手臂都是有一起参与发力的。很多练臀腿的动作，由于对核心稳定的要求非常高，腰腹核心肌群都是会被一起练到的。</p></div></div></li><li><p>使用大重量训练。</p><div><div class="fold_hider"><div class="close hider_title">查看详细</div></div><div class="fold"><p>何谓“大”，一般来说一口气能做5~10个的动作的重量就足够了。肌肉分为两种，红肌纤维（力量小、耐力强、体积小、体积增长潜力小），白肌纤维（力量大、耐力差、体积大、体积增长潜力大）。所以快速增重，需要增长白肌纤维，也就是使用大重量去刺激。</p></div></div></li><li><p>以复合动作为主。</p><div><div class="fold_hider"><div class="close hider_title">查看详细</div></div><div class="fold"><p>复合动作可以同时满足以上两个条件，大肌群带动小肌群和使用大重量训练。负重训练可以分为两种类型，复合动作和孤立动作。</p><p>复合动作，就是同时要用到多块肌肉，多个关节一起运动的动作。例如，卧推、推举、俯卧撑，可以同时练到胸部、肩部前束和手臂的肱三头肌；引体向上、划船，可以同时练到背部和手臂的肱二头肌；深蹲可以同时练到大腿的前侧、后侧和臀部，对腰腹核心也有刺激；硬拉就更厉害了，除了整个臀部腿部、腰腹核心、背部，甚至前臂都有一定刺激。</p><p>孤立动作，例如弯举，只能针对单一方面的肌肉，但是也特别重要，有些复合动作覆盖不到的地方，或者需要特别加强的地方，就可以使用孤立动作进行补充。</p></div></div></li><li><p>优先选择自由重量，即杠铃哑铃等。</p><div><div class="fold_hider"><div class="close hider_title">查看详细</div></div><div class="fold"><p>自由重量的效果会比固定器械要更好。一方面，是肌肉的受力范围。固定器械的动作轨迹太过单一，只能够刺激到某块肌肉的某个局部。另一方面，是安全性。长期只使用固定器械，会开始依赖固定器械的稳定性，自己反而没有办法学会控制肌肉的稳定性。</p><p>合理的方法应该是由最轻的自由重量开始练。刚开始使用杠铃哑铃，会感觉动作不稳，这是正常的，但由于重量小所以不必担心受伤。多练几次后动作控制很稳了，再逐步循序渐进地增加重量。</p></div></div></li></ol><h1 id="四、训练计划"><a href="#四、训练计划" class="headerlink" title="四、训练计划"></a>四、训练计划</h1><p>训练前需要热身，可以慢跑5~10分钟，再对全身做一些简单的短时间拉伸。</p><ol><li><p>双分化双循环训练（初学者建议）</p><div><div class="fold_hider"><div class="close hider_title">查看详细</div></div><div class="fold"><p>也就是把全身划分为上下两个部分，每次只练其中一个部分，然后一周四练。例如说，周一、四练上半身（胸、背、肩、手臂），周二、五练下半身（腿、臀、小腿、核心）。这样每个部位每周就能训练到两次，训练容量和训练频率都有保障。</p></div></div></li><li><p>躯干 + 四肢（快速显壮）</p><div><div class="fold_hider"><div class="close hider_title">查看详细</div></div><div class="fold"><p>躯干主要就是胸部和背部两方面，胸背练大了，人就不会显得单薄。四肢主要是大腿、肩部和手臂，这些部分夏天特别容易外露，练壮了比较容易突出肌肉感。一周四练的话，周一、四进行躯干训练（胸大肌、背部肌群），周二、五进行四肢训练（臀腿肌群、三角肌中后、肱二头肌）。</p></div></div></li></ol><p><strong>接下来给出【躯干 + 四肢】的训练方案</strong></p><h2 id="躯干-基础"><a href="#躯干-基础" class="headerlink" title="躯干 - 基础"></a>躯干 - 基础</h2><ul><li><p>胸部训练，哑铃卧推</p><div><div class="fold_hider"><div class="close hider_title">查看详细</div></div><div class="fold"><p>自由重量，先把肩胛骨收紧，仰躺在卧推椅上，肩部再往中间收一收，双手垂直在身体上方，然后缓慢有控制地把哑铃往下放，放到最低点再用力往上推，注意小臂全程是垂直地面的，可以想想把两边的手肘往中间夹，这样胸肌挤压的感觉会强烈很多。</p><p>组数：4组<br>次数：8次<br>间歇：1~2分钟<br>练法：最后一组力竭</p></div></div></li><li><p>背部训练，引体向上</p><div><div class="fold_hider"><div class="close hider_title">查看详细</div></div><div class="fold"><p>双手比肩部略宽握着吊杆，身体挺直，先把肩胛骨往下压，然后把整个身体用力拉上去，然后再缓慢有控制地往下放。注意三个问题，①拉起来的过程中不要耸肩，②身体不要往后仰太多，③动作要尽量做完全程。</p><p>组数：自定<br>次数：共30个<br>间歇：1~2分钟<br>练法：完成目标数量即可</p></div></div></li><li><p>胸部训练，上斜卧推</p><div><div class="fold_hider"><div class="close hider_title">查看详细</div></div><div class="fold"><p>上斜卧推，使用杠铃哑铃或者史密斯机，同样先收紧肩胛骨，仰躺在卧推椅上，双手垂直放在身体上方，然后缓慢有控制地把哑铃往下放，放到最低点再用力往上推，同样注意小臂全程是垂直地面的。</p><p>组数：4组<br>次数：8次<br>间歇：1~2分钟<br>练法：最后一组力竭</p></div></div></li><li><p>背部训练，坐姿划船</p><div><div class="fold_hider"><div class="close hider_title">查看详细</div></div><div class="fold"><p>坐在凳子上，双脚踩稳，挺直腰背，核心收紧，用力把把手拉起来，然后缓慢有控制的往下放，身体可能会有小幅度的摆动，但是要保持身体挺直，摆动的幅度也不要太大，要特别注意，往后拉的时候，背部要使劲地往中间夹，这样背部才能练出感觉来。</p><p>组数：4组<br>次数：12次<br>间歇：1~2分钟<br>练法：最后一组力竭</p></div></div></li></ul><h2 id="躯干-附加"><a href="#躯干-附加" class="headerlink" title="躯干 - 附加"></a>躯干 - 附加</h2><ul><li><p>胸部训练，绳索夹胸</p><div><div class="fold_hider"><div class="close hider_title">查看详细</div></div><div class="fold"><p>胸部孤立动作，夹胸，龙门架或者夹胸器械等，可以帮助新手尽快找到胸部肌肉挤压发力的感觉，而且也不会增加手臂的疲劳，注意肩胛骨保持收紧状态。想着把手肘从两边往中间夹，胸肌就有感觉了。</p><p>组数：3组<br>次数：15~20次<br>间歇：45~60秒<br>练法：每组力竭</p></div></div></li><li><p>背部训练，单臂哑铃划船</p><div><div class="fold_hider"><div class="close hider_title">查看详细</div></div><div class="fold"><p>算不上孤立动作，但是可以尽可能的让背部肌肉往后收缩，同样有利于新手找发力感觉的训练，要注意身体的稳定，不要左右摇晃，充分感受肩部和背部往后移动的感觉。</p><p>组数：3组<br>次数：12~15次<br>间歇：45~60秒<br>练法：每组力竭</p></div></div></li></ul><h2 id="躯干-放松"><a href="#躯干-放松" class="headerlink" title="躯干 - 放松"></a>躯干 - 放松</h2><div><div class="fold_hider"><div class="close hider_title">查看详细</div></div><div class="fold"><ul><li>拉伸胸肌</li><li>拉伸背阔肌</li><li>拉伸中背部</li><li>放松大圆肌</li><li>放松胸小肌</li><li>补充糖原（香蕉、增肌粉）</li></ul></div></div><h2 id="四肢-基础"><a href="#四肢-基础" class="headerlink" title="四肢 - 基础"></a>四肢 - 基础</h2><ul><li><p>腿部训练，高脚杯深蹲</p><div><div class="fold_hider"><div class="close hider_title">查看详细</div></div><div class="fold"><p>双手撑着哑铃，紧贴胸前，挺胸收背，双脚站距比肩宽略宽，然后臀部往后推，膝盖往两边打开，适当地往脚尖的方向滑动，顺势蹲下，然后大腿和臀部发力，用力站起来。注意，重心保持在足弓处，腰背要挺直成一条直线，膝盖的朝向要和脚尖的方向一致。</p><p>组数：4组<br>次数：8次<br>间歇：1~2分钟<br>练法：最后一组力竭</p></div></div></li></ul><ul><li><p>腿部训练，罗马尼亚硬拉</p><div><div class="fold_hider"><div class="close hider_title">查看详细</div></div><div class="fold"><p>半程的硬拉，双手握着杠铃或者哑铃，挺直腰背，核心收紧然后往前缓慢有控制地俯身下去，再用力把杠铃拉起来，拉起来地过程不是腰部发力，腰腹核心全程收紧，把髋部往前顶，用臀部发力。</p><p>组数：4组<br>次数：12次<br>间歇：1~2分钟<br>练法：最后一组力竭</p></div></div></li><li><p>肩部训练，侧平举</p><div><div class="fold_hider"><div class="close hider_title">查看详细</div></div><div class="fold"><p>双手握着哑铃在身体的两侧，身体站直，把哑铃往两边抬起来，抬到肩部水平的高度，就可以缓慢有控制地往下放了。要注意身体要稳住，不要前后晃动，不要耸肩，手臂的角度也不要有变化。</p><p>组数：4组<br>次数：15~20次<br>间歇：30~45秒<br>练法：每组力竭</p></div></div></li><li><p>肩部训练，面拉</p><div><div class="fold_hider"><div class="close hider_title">查看详细</div></div><div class="fold"><p>练肩部后束，把手上的绳索以一个往后拉往外旋的方式拉近自己的脸部，注意手肘不要低于肩，双手不要低于手肘。</p><p>组数：4组<br>次数：12~15次<br>间歇：45~60秒<br>练法：每组力竭</p></div></div></li><li><p>手臂训练，杠铃弯举</p><div><div class="fold_hider"><div class="close hider_title">查看详细</div></div><div class="fold"><p>身体不要晃动，动作要做够全程</p><p>组数：3组<br>次数：12次<br>间歇：45~60秒<br>练法：每组力竭</p></div></div></li><li><p>手臂训练，锤式弯举</p><div><div class="fold_hider"><div class="close hider_title">查看详细</div></div><div class="fold"><p>拿起两个哑铃，虎口朝前，左右交替做锤式弯举，身体不要乱晃。</p><p>组数：3组<br>次数：12次<br>间歇：45~60秒<br>练法：每组力竭</p></div></div></li></ul><h2 id="四肢-放松"><a href="#四肢-放松" class="headerlink" title="四肢 - 放松"></a>四肢 - 放松</h2><div><div class="fold_hider"><div class="close hider_title">查看详细</div></div><div class="fold"><ul><li><p>拉伸大腿前侧</p></li><li><p>拉伸大腿后侧</p></li><li><p>蛙趴（大腿内侧）</p></li><li><p>拉伸肩部</p></li><li><p>拉伸肱二头肌</p></li><li><p>放松髂胫束</p></li><li><p>放松股四头肌</p></li></ul></div></div><h1 id="五、饮食"><a href="#五、饮食" class="headerlink" title="五、饮食"></a>五、饮食</h1><p>肌肉不是在训练时增长的，而是在恢复中。没吃够，就没有原料支持肌纤维的超量恢复。三分练，七分吃。</p><ul><li><p>蛋白质，每天每公斤体重1.8克</p><div><div class="fold_hider"><div class="close hider_title">查看详细</div></div><div class="fold"><p>训练强度足够的增肌训练者，每天每公斤体重需要摄入1.5~2克蛋白质。以每天每公斤体重1.8克为例，体重55kg，则需要摄入55 × 1.8 = 99g 蛋白质。肉、蛋、奶和豆类都有丰富的蛋白质，但是注意增肌更需要动物蛋白。</p></div></div></li><li><p>碳水化合物，每天每公斤体重6克</p><div><div class="fold_hider"><div class="close hider_title">查看详细</div></div><div class="fold"><p>同时，肌肉增长还需要补充碳水化合物，用以支持蛋白质的摄入。每天每公斤需要摄入4~8克碳水化合物，以6克碳水化合物为例，体重55kg需要摄入55 × 6 = 330g 碳水化合物。对于体型瘦的人来说，很难吃够这个量，因此来说增肌粉效果通常好于蛋白粉。</p></div></div></li><li><p>不饱和脂肪酸，坚果类等随意</p><div><div class="fold_hider"><div class="close hider_title">查看详细</div></div><div class="fold"><p>坚果类、牛油果、三文鱼都不错，虽然不是增肌的重点，但是适当摄入有益身体健康。</p></div></div></li></ul><p><strong>饮食计算</strong></p><p>使用薄荷营养师等APP以及食物秤，计算每日摄入量是否达标。</p><p><strong>加餐</strong></p><p>可以安排一天6餐。前期困难的话可以循序渐进。</p><p><strong>简单粗暴</strong></p><p>每周一称体重，如果有上升，说明吃够了，反之没有，需要加量。</p><h1 id="六、休息"><a href="#六、休息" class="headerlink" title="六、休息"></a>六、休息</h1><ul><li>不要训练过度，需要注意超量恢复原理，休息很重要。</li><li>连续训练两到三天，需要彻底休息一天。</li><li>同一块肌肉，不要安排连续两天训练。</li><li>每2~3个月安排一周恢复周，训练减半或者完全不练。</li><li>拒绝熬夜，让皮质醇降下去。</li></ul><h1 id="附、家庭计划"><a href="#附、家庭计划" class="headerlink" title="附、家庭计划"></a>附、家庭计划</h1><p>使用弹力带。</p><p>周一四，躯干训练：</p><ul><li>弹力带俯卧撑</li><li>坐姿上斜推胸</li><li>弹力带夹胸</li><li>弹力带俯身划船</li><li>弹力带坐姿划船</li><li>弹力带直臂下压</li></ul><p>周二五，四肢训练：</p><ul><li>弹力带深蹲</li><li>弹力带硬拉</li><li>弹力带侧平举</li><li>弹力带面拉</li><li>弹力带弯举</li><li>弹力带锤式弯举</li></ul><p>此外可以关注本文内容主要来源，B站up及wx公众号“卓叔增重”。</p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>分享</category>
      </categories>
      <tags>
        <tag>健身</tag>
      </tags>
  </entry>
  <entry>
    <title>【测试】nexT的markdown支持</title>
    <url>/posts/74cb93d8.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:39 GMT+0800 (GMT+08:00) --><p>[TOC]</p><p>This is a test!</p><p>这是一个测试</p><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><h3 id="Markdown"><a href="#Markdown" class="headerlink" title="Markdown"></a>Markdown</h3><p>字体 <strong>加粗</strong> 显示<br>字体 <strong>加粗</strong> 显示<br>字体 <em>斜体</em> 显示<br>字体 _斜体_ 显示<br>字体 <strong><em>加粗并斜体</em></strong> 显示<br>字体 <strong>_加粗并斜体_</strong> 显示<br>组合 <em><strong>加粗并斜体</strong></em> 显示</p><blockquote><p>引用</p><blockquote><p>引用引用</p></blockquote></blockquote><p>这样来 <del>删除一段文本</del></p><ul><li><p>无序</p><ul><li>无序<ul><li>无序</li></ul></li></ul></li><li><p>无序</p></li><li><p>无序</p><ul><li>无序</li></ul></li></ul><ol><li>有序</li><li>有序<ol><li>有序</li><li>有序</li></ol></li><li>有序</li></ol><div class="table-container"><table><thead><tr><th>表头</th><th>表头</th></tr></thead><tbody><tr><td>单元格</td><td>单元格</td></tr><tr><td>单元格</td><td>单元格</td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th>表头</th><th>表头</th></tr></thead><tbody><tr><td>单元格</td><td>单元格</td></tr><tr><td>单元格</td><td>单元格</td></tr></tbody></table></div><script type="math/tex;mode=display">a = b * c / d - (e + f)</script><p><a href="http://localhost:4000/" target="_blank" rel="noopener">首页</a></p><p>首页: <a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a></p><hr><h3 id="C"><a href="#C" class="headerlink" title="C++"></a>C++</h3><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//#pragma GCC optimize(3,"Ofast","inline")</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unordered_map&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Mid ((l+r)/2)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mp make_pair</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls ((rt)&lt;&lt;1)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs ((rt)&lt;&lt;1|1)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> sq(u) ((u)*(u))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Abs(u) ((u)&gt;0?(u):-(u))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ze(u) (Abs(u)&lt;eps)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eq(u, v) (ze((u)-(v)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Sgn(u) ((u)&gt;eps?1:((u)&lt;-eps?-1:0))</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> UL;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">double</span> DB;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> LL INF = <span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> DB eps = <span class="number">1e-8</span>;</span><br><span class="line"><span class="keyword">const</span> DB pi = <span class="built_in">acos</span>(<span class="number">-1.0</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = (<span class="keyword">int</span>)<span class="number">1e5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M = (<span class="keyword">int</span>)<span class="number">4e3</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = N + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxm = M + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line">LL ans = <span class="number">1e18</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">SUM</span><span class="params">(LL a, LL b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LL cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (a /= b; a; a /= b) cnt += a;</span><br><span class="line">    <span class="keyword">return</span> cnt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">LL sum = <span class="number">0</span>, upperlim = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">(LL row, LL ld, LL rd)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (row != upperlim)</span><br><span class="line">    &#123;</span><br><span class="line">        LL pos = upperlim &amp; ~(row | ld | rd);</span><br><span class="line">        <span class="keyword">while</span> (pos)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">long</span> p = pos &amp; -pos;</span><br><span class="line">            pos -= p;</span><br><span class="line">            test(row + p, (ld + p) &lt;&lt; <span class="number">1</span>, (rd + p) &gt;&gt; <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        sum++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">LL f[<span class="number">84</span>] = &#123; <span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">2</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fib</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">3</span>; i &lt;= <span class="number">83</span>; i++) &#123;</span><br><span class="line">        f[i] = f[i - <span class="number">1</span>] + f[i - <span class="number">2</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//int T; scanf("%d", &amp;T);</span></span><br><span class="line">    <span class="comment">//int n; scanf("%d", &amp;n);</span></span><br><span class="line">    fib();</span><br><span class="line"></span><br><span class="line">    LL x, m;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld %lld"</span>, &amp;x, &amp;m);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    LL v = <span class="number">1</span>, flag = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (v = <span class="number">1</span>; v &lt;= <span class="number">83</span>; v++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (x == f[v]) &#123;</span><br><span class="line">            flag = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">        <span class="keyword">for</span> (LL i = <span class="number">2</span>; i * i &lt;= m; ++i)</span><br><span class="line">        &#123;</span><br><span class="line">            LL cnt = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span> (m % i == <span class="number">0</span>)++cnt, m /= i;</span><br><span class="line">            <span class="keyword">if</span> (cnt)ans = <span class="built_in">min</span>(ans, SUM(x, i) / cnt);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (m &gt; <span class="number">1</span>)ans = <span class="built_in">min</span>(ans, SUM(x, m));</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, ans);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> n = x % <span class="built_in">min</span>(<span class="number">13L</span>L, m) + <span class="number">1L</span>L;</span><br><span class="line"></span><br><span class="line">    upperlim = (upperlim &lt;&lt; n) - <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    test(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, sum);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure></div></div><h3 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h3><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.jee.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.LocaleResolver;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.InterceptorRegistry;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.WebMvcConfigurer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.i18n.LocaleChangeInterceptor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.i18n.SessionLocaleResolver;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Locale;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyMvcConfiger</span> <span class="keyword">implements</span> <span class="title">WebMvcConfigurer</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addInterceptors</span><span class="params">(InterceptorRegistry registry)</span> </span>&#123;</span><br><span class="line">        registry.addInterceptor(localeChangeInterceptor());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> LocaleResolver <span class="title">localeResolver</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        SessionLocaleResolver sessionLocaleResolver = <span class="keyword">new</span> SessionLocaleResolver();</span><br><span class="line">        sessionLocaleResolver.setDefaultLocale(Locale.CHINA);</span><br><span class="line">        <span class="keyword">return</span> sessionLocaleResolver;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> LocaleChangeInterceptor <span class="title">localeChangeInterceptor</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        LocaleChangeInterceptor localeChangeInterceptor = <span class="keyword">new</span> LocaleChangeInterceptor();</span><br><span class="line">        localeChangeInterceptor.setParamName(<span class="string">"lang"</span>);</span><br><span class="line">        <span class="keyword">return</span> localeChangeInterceptor;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><h3 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h3><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> unittest</span><br><span class="line"></span><br><span class="line">file = open(<span class="string">"test.txt"</span>, <span class="string">"r+"</span>)</span><br><span class="line">article = file.read()</span><br><span class="line"></span><br><span class="line"><span class="meta">@profile</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">count_char_1</span><span class="params">()</span>:</span></span><br><span class="line">    num = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> article:</span><br><span class="line">        <span class="keyword">for</span> word <span class="keyword">in</span> line.split():</span><br><span class="line">            num = num + len(word)</span><br><span class="line">    <span class="keyword">return</span> num</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@profile</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">count_char_2</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> sum([len(word) <span class="keyword">for</span> line <span class="keyword">in</span> article <span class="keyword">for</span> word <span class="keyword">in</span> line.split()])</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="meta">@profile</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">count_char_3</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> sum(len(word) <span class="keyword">for</span> line <span class="keyword">in</span> article <span class="keyword">for</span> word <span class="keyword">in</span> line.split())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    count_char_1()</span><br><span class="line">    count_char_2()</span><br><span class="line">    count_char_3()</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>测试</category>
      </categories>
      <tags>
        <tag>测试</tag>
      </tags>
  </entry>
  <entry>
    <title>【配置】CentOS7配置MySQL和JDBC</title>
    <url>/posts/59316300.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:39 GMT+0800 (GMT+08:00) --><hr><h1 id="一、准备"><a href="#一、准备" class="headerlink" title="一、准备"></a>一、准备</h1><p>卸载已存在的MySQL<br></p><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"># rpm -qa | grep -i mysql</span><br></pre></td></tr></table></figure><br><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"># rpm -e --nodeps PackageName</span><br></pre></td></tr></table></figure><br>于MySQL官网根据需要下载，参考链接：<p></p><ul><li><a href="https://dev.mysql.com/downloads/file/?id=484922" target="_blank" rel="noopener">mysql80-community-release-el7-3.noarch.rpm</a></li><li><a href="https://dev.mysql.com/downloads/file/?id=485761" target="_blank" rel="noopener">mysql-connector-java-8.0.16-1.el7.noarch.rpm</a></li></ul><hr><h1 id="二、MySQL"><a href="#二、MySQL" class="headerlink" title="二、MySQL"></a>二、MySQL</h1><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>更新MySQL的yum源<br></p><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"># rpm -ivh mysql80-community-release-el7-<span class="number">3</span>.noarch.rpm</span><br></pre></td></tr></table></figure><br>yum安装<br><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"># yum install mysql-community-server</span><br></pre></td></tr></table></figure><p></p><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>启动MySQL服务<br></p><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"># systemctl <span class="built_in">start</span> mysqld.service</span><br></pre></td></tr></table></figure><br>查看MySQL的初始密码<br><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"># grep 'password' /var/log/mysqld.log</span><br></pre></td></tr></table></figure><br>登录<br><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"># mysql -uroot -p</span><br></pre></td></tr></table></figure><br>修改密码<br><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">mysql&gt; ALTER USER 'root'@'localhost' IDENTIFIED BY 'new password';</span><br></pre></td></tr></table></figure><br>使用简单密码则需要先执行以下两条<br><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">set</span> global validate_password_policy=<span class="number">0</span>;</span><br><span class="line">mysql&gt; <span class="built_in">set</span> global validate_password_length=<span class="number">1</span>;</span><br></pre></td></tr></table></figure><br>exit退出后即可使用新密码重新登录<p></p><p>附上:<br>关闭MySQL服务</p><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"># systemctl stop mysqld.service</span><br></pre></td></tr></table></figure><p>MySQL的yum源移除<br></p><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"># yum remove mysql80-community-release-el7-<span class="number">3</span>.noarch.rpm</span><br></pre></td></tr></table></figure><p></p><hr><h1 id="三、JDBC"><a href="#三、JDBC" class="headerlink" title="三、JDBC"></a>三、JDBC</h1><h2 id="配置-1"><a href="#配置-1" class="headerlink" title="配置"></a>配置</h2><p>将 mysql-connector-java-8.0.16-1.el7.noarch.rpm 解压，找到 mysql-connector-java.jar，将jar置于java的lib目录下/ext中。以本机为参考，目录是：/usr/lib/jvm/jre/lib/ext/</p><h2 id="测试-1"><a href="#测试-1" class="headerlink" title="测试"></a>测试</h2><p>写一个简单测试 test.java如下，编译运行查看结果即可。</p><div><div class="fold_hider"><div class="close hider_title">查看详细</div></div><div class="fold"><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//Class.forName("com.mysql.jdbc.Driver");</span></span><br><span class="line">            String url = <span class="string">"jdbc:mysql://localhost"</span>;</span><br><span class="line">            Connection con = DriverManager.getConnection(url, <span class="string">"root"</span>, <span class="string">"password"</span>);</span><br><span class="line">            <span class="keyword">if</span> (con != <span class="keyword">null</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">"success..."</span>);</span><br><span class="line">                con.close();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">"failure!!!"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>配置</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>【配置】Windows10配置Hadoop2.9.2单机版</title>
    <url>/posts/64215e7c.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:39 GMT+0800 (GMT+08:00) --><hr><h1 id="一、准备"><a href="#一、准备" class="headerlink" title="一、准备"></a>一、准备</h1><p>基本信息</p><ul><li>操作系统: Windows10</li><li>jdk版本: 1.8</li><li>Hadoop版本: 2.9.2</li></ul><p>下载并解压</p><ul><li><p>Apache Hadoop: <a href="https://hadoop.apache.org/releases.html" target="_blank" rel="noopener">官网</a> 或者 <a href="https://mirrors.tuna.tsinghua.edu.cn/apache/hadoop/common/" target="_blank" rel="noopener">清华源</a></p></li><li><p>winutils: <a href="https://github.com/cdarlint/winutils" target="_blank" rel="noopener">github/cdarlint</a></p></li></ul><hr><h1 id="二、配置"><a href="#二、配置" class="headerlink" title="二、配置"></a>二、配置</h1><h2 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h2><ul><li><p>新建系统变量 <code>HADOOP_HOME</code> 至所在目录，如 <code>D:\environment\hadoop-2.9.2</code></p><p><img src="/posts/64215e7c/HadoopHOME.png" alt="HadoopHOME"></p></li><li><p>在 <code>path</code> 中添加 <code>%HADOOP_HOME%\bin</code> 及 <code>%HADOOP_HOME%\sbin</code> 并以 <code>;</code> (英文分号)与其他项隔开。</p><p><img src="/posts/64215e7c/path.png" alt="path"></p></li></ul><h2 id="Hadoop配置文件"><a href="#Hadoop配置文件" class="headerlink" title="Hadoop配置文件"></a>Hadoop配置文件</h2><p>均在 <code>%HADOOP_HOME%\etc\hadoop\</code> 下面:</p><ol><li><p>修改 <code>hadoop-env.cmd</code> ，查找 <code>set JAVA_HOME</code> ，将后面内容改为JDK目录。</p><div><div class="fold_hider"><div class="close hider_title">查看详细</div></div><div class="fold"><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">@rem The java implementation to use.  Required.</span><br><span class="line">@rem <span class="built_in">set</span> JAVA_HOME=%JAVA_HOME%</span><br><span class="line"><span class="built_in">set</span> JAVA_HOME=D:\environment\Java\jdk1.8.0_201</span><br></pre></td></tr></table></figure></div></div></li><li><p>修改 <code>core-site.xml</code></p><div><div class="fold_hider"><div class="close hider_title">查看详细</div></div><div class="fold"><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>fs.defaultFS<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>hdfs://localhost:9000<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure></div></div></li><li><p>修改 <code>hdfs-site.xml</code></p><div><div class="fold_hider"><div class="close hider_title">查看详细</div></div><div class="fold"><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.replication<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>1<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.name.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>/D:/environment/hadoop-2.9.2/data/namenode<span class="tag">&lt;/<span class="name">value</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.datanode.data.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>/D:/environment/hadoop-2.9.2/data/datanode<span class="tag">&lt;/<span class="name">value</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure></div></div></li><li><p>修改 <code>yarn-site.xml</code></p><div><div class="fold_hider"><div class="close hider_title">查看详细</div></div><div class="fold"><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.nodemanager.aux-services<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>mapreduce_shuffle<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure></div></div></li></ol><h2 id="winutils"><a href="#winutils" class="headerlink" title="winutils"></a>winutils</h2><p>把之前下载的 <code>winutils</code> 解压，找到对应版本，将内容覆盖到 <code>hadoop-2.9.2\bin</code> 中。</p><h2 id="格式化namenode"><a href="#格式化namenode" class="headerlink" title="格式化namenode"></a>格式化namenode</h2><p>以<strong>管理员权限</strong>启动命令行，运行 <code>hdfs namenode -format</code> ，这项命令只用在第一次启动前执行。如果结果中看到有 <code>successfully</code> ，说明以上配置成功。</p><p><img src="/posts/64215e7c/format.png" alt="format"></p><h1 id="三、测试"><a href="#三、测试" class="headerlink" title="三、测试"></a>三、测试</h1><p>以<strong>管理员权限</strong>启动命令行，如果之前没有在 <code>path</code> 中配置 <code>sbin</code> ，那么 <code>cd</code> 至 <code>%HADOOP_HOME%\sbin</code> 中，运行 <code>start-all</code> 启动，出现以下四个窗口：</p><p><img src="/posts/64215e7c/start.png" alt="start"></p><p>即对应运行 <code>jps</code> 显示以下五个进程名称：</p><p><img src="/posts/64215e7c/jps.png" alt="jps"></p><p>访问 <a href="http://localhost:8088" target="_blank" rel="noopener">http://localhost:8088</a> 查看集群状态：</p><p><img src="/posts/64215e7c/8088.png" alt="8088"></p><p>访问 <a href="http://localhost:50070" target="_blank" rel="noopener">http://localhost:50070</a> 查看Hadoop状态：</p><p><img src="/posts/64215e7c/50070.png" alt="50070"></p><p>命令行运行 <code>stop-all</code> 关闭。</p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>配置</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>Hadoop</tag>
      </tags>
  </entry>
  <entry>
    <title>【配置】Windows10配置MySQL和JDBC</title>
    <url>/posts/4e244fdf.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:39 GMT+0800 (GMT+08:00) --><hr><h1 id="一、准备"><a href="#一、准备" class="headerlink" title="一、准备"></a>一、准备</h1><p>于MySQL官网根据需要下载，参考链接：</p><ul><li><a href="https://dev.mysql.com/downloads/file/?id=490026" target="_blank" rel="noopener">mysql-8.0.18-winx64.zip</a></li><li><a href="https://dev.mysql.com/downloads/file/?id=490495" target="_blank" rel="noopener">mysql-connector-java-8.0.18.zip</a></li></ul><hr><h1 id="二、MySQL"><a href="#二、MySQL" class="headerlink" title="二、MySQL"></a>二、MySQL</h1><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>配置系统环境变量，或者以管理员身份运行cmd，进入解压目录下的bin目录中运行命令，例如<br>D:\Program Files (x86)\mysql-8.0.18-winx64\bin&gt;</p><p>生成data目录<br></p><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">&gt; mysqld --initialize-insecure --user=mysql</span><br></pre></td></tr></table></figure><br>安装MySQL<br><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">&gt; mysqld -install</span><br></pre></td></tr></table></figure><p></p><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>启动MySQL服务<br></p><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">&gt; <span class="built_in">net</span> <span class="built_in">start</span> mysql</span><br></pre></td></tr></table></figure><br>登录MySQL（密码为空，直接回车即可）<br><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">&gt; mysql -u root -p</span><br></pre></td></tr></table></figure><br>如果密码不为空，先关闭服务<br><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">&gt; <span class="built_in">net</span> stop mysql</span><br></pre></td></tr></table></figure><br>执行以下命令后，再重启服务，然后重新登录<p></p><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">&gt; mysqld -nt --skip-grant-tables</span><br></pre></td></tr></table></figure><p>（依然无效的，请<strong>删除目录下data文件夹，并重新配置</strong>）</p><p>修改密码</p><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">mysql&gt; ALTER USER 'root'@'localhost' IDENTIFIED BY 'new password';</span><br></pre></td></tr></table></figure><hr><h1 id="三、JDBC"><a href="#三、JDBC" class="headerlink" title="三、JDBC"></a>三、JDBC</h1><h2 id="配置-1"><a href="#配置-1" class="headerlink" title="配置"></a>配置</h2><p>将 mysql-connector-java-8.0.18.zip 解压，找到 mysql-connector-java-8.0.18.jar，置于java jre的<code>lib/ext/</code>目录下。以本机为参考，目录是：<br>C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\</p><h2 id="测试-1"><a href="#测试-1" class="headerlink" title="测试"></a>测试</h2><p>写一个简单测试 test.java如下，编译运行查看结果即可。</p><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Class.forName(<span class="string">"com.mysql.cj.jdbc.Driver"</span>);</span><br><span class="line">            String url = <span class="string">"jdbc:mysql://localhost?useUnicode=true&amp;characterEncoding=UTF-8&amp;serverTimezone=UTC"</span>;</span><br><span class="line">            Connection con = DriverManager.getConnection(url, <span class="string">"root"</span>, <span class="string">"123456"</span>);</span><br><span class="line">            <span class="keyword">if</span> (con != <span class="keyword">null</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">"success..."</span>);</span><br><span class="line">                con.close();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">"failure!!!"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><p>附：</p><ol><li>mysql-connector-java 5中使用<code>com.mysql.jdbc.Driver</code>，而mysql-connector-java 6中则使用<code>com.mysql.cj.jdbc.Driver</code></li><li>连接字符串后加<code>?useUnicode=true&amp;characterEncoding=UTF-8</code>解决中文乱码问题</li><li>连接字符串后加<code>?serverTimezone=UTC</code>解决时区问题</li></ol><!-- rebuild by neat -->]]></content>
      <categories>
        <category>配置</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title>【配置】Windows10配置Scala和Spark</title>
    <url>/posts/c6d4e80f.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:39 GMT+0800 (GMT+08:00) --><hr><h1 id="一、准备"><a href="#一、准备" class="headerlink" title="一、准备"></a>一、准备</h1><p>基本信息</p><ul><li>操作系统: Windows10</li><li>jdk版本: 1.8</li><li>Hadoop版本: 2.9.2<img src="/posts/c6d4e80f/java.png" alt="java"></li></ul><p>下载并解压</p><ul><li>Scala： <a href="https://www.scala-lang.org/download/" target="_blank" rel="noopener">官网</a> 或者 <a href="https://downloads.lightbend.com/scala/2.13.2/scala-2.13.2.zip" target="_blank" rel="noopener">scala-2.13.2.zip</a></li><li>Spark：<a href="http://spark.apache.org/downloads.html" target="_blank" rel="noopener">官网</a> 或者 <a href="https://mirror.bit.edu.cn/apache/spark/spark-3.0.0-preview2/spark-3.0.0-preview2-bin-hadoop2.7.tgz" target="_blank" rel="noopener">spark-3.0.0-preview2-bin-hadoop2.7.tgz</a></li></ul><hr><h1 id="二、Scala"><a href="#二、Scala" class="headerlink" title="二、Scala"></a>二、Scala</h1><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><ul><li><p>新建系统变量 <code>SCALA_HOME</code> 至所在目录，如 <code>D:\environment\scala-2.13.2</code></p><p><img src="/posts/c6d4e80f/scala_home.png" alt="scala_home"></p></li><li><p>在 <code>path</code> 中添加 <code>%SCALA_HOME%\bin</code></p><p><img src="/posts/c6d4e80f/scala_bin.png" alt="scala_bin"></p></li></ul><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>启动命令行，运行 <code>scala -version</code> ，出现以下结果说明成功</p><p><img src="/posts/c6d4e80f/scala_version.png" alt="scala_version"></p><h1 id="三、Spark"><a href="#三、Spark" class="headerlink" title="三、Spark"></a>三、Spark</h1><p>启动命令行，配置环境变量或者<code>cd</code> 至 Spark的 <code>bin</code> 目录下，运行 <code>spark-shell</code> 出现以下结果说明成功。若出现错误，则依据错误提示安装Python或者Hadoop。</p><p><img src="/posts/c6d4e80f/spark.png" alt="spark"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>配置</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>Scala</tag>
        <tag>Spark</tag>
      </tags>
  </entry>
  <entry>
    <title>【配置】hexo及NexT主题的配置</title>
    <url>/posts/a9f2798e.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="一、网站标题栏背景颜色"><a href="#一、网站标题栏背景颜色" class="headerlink" title="一、网站标题栏背景颜色"></a>一、网站标题栏背景颜色</h1><p>打开 <code>themes/next/source/css/_custom/custom.styl</code> , 在里面写下如下代码：</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.site-meta</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgb</span>(<span class="number">85</span>, <span class="number">85</span>, <span class="number">85</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="二、开启加载动画"><a href="#二、开启加载动画" class="headerlink" title="二、开启加载动画"></a>二、开启加载动画</h1><p>修改 <code>themes/next/_config.yml</code>，搜索关键字 <code>pace</code> 并把 <code>false</code>修改为 <code>true</code> ，加载条有许多样式，可自行更换。</p><h1 id="三、浏览页面的时候显示当前浏览进度"><a href="#三、浏览页面的时候显示当前浏览进度" class="headerlink" title="三、浏览页面的时候显示当前浏览进度"></a>三、浏览页面的时候显示当前浏览进度</h1><p>修改 <code>themes/next/_config.yml</code> ，搜索关键字 <code>scrollpercent</code> ， 并把 <code>false</code> 改为 <code>true</code>。</p><h1 id="四、背景的设置"><a href="#四、背景的设置" class="headerlink" title="四、背景的设置"></a>四、背景的设置</h1><p>在主题配置文件中，查找<code>canvas</code>：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Canvas-nest</span></span><br><span class="line"><span class="attr">canvas_nest:</span> <span class="literal">false</span></span><br><span class="line"><span class="comment"># three_waves</span></span><br><span class="line"><span class="attr">three_waves:</span> <span class="literal">false</span></span><br><span class="line"><span class="comment"># canvas_lines</span></span><br><span class="line"><span class="attr">canvas_lines:</span> <span class="literal">false</span></span><br><span class="line"><span class="comment"># canvas_sphere</span></span><br><span class="line"><span class="attr">canvas_sphere:</span> <span class="literal">false</span></span><br><span class="line"><span class="comment"># Only fit scheme Pisces</span></span><br><span class="line"><span class="comment"># Canvas-ribbon</span></span><br><span class="line"><span class="attr">canvas_ribbon:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>开启相应的背景，只要把对应的<code>false</code>设置为<code>true</code>，记得把其他都改为<code>false</code></p><h1 id="五、修改内容区域宽度"><a href="#五、修改内容区域宽度" class="headerlink" title="五、修改内容区域宽度"></a>五、修改内容区域宽度</h1><p>Next 对内容的宽度的设定如下：</p><ul><li>700px，当屏幕宽度 &lt; 1600px</li><li>900px，当屏幕宽度 &gt;= 1600px</li><li>移动设备下，宽度自适应</li></ul><p>在主题目录下的 <code>source\css_variables\custom.styl</code> 文件，新增变量：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 修改成你期望的宽度</span></span><br><span class="line">$content-desktop = <span class="number">700</span>px</span><br><span class="line"><span class="comment">// 当视窗超过 1600px 后的宽度</span></span><br><span class="line">$content-desktop-large = <span class="number">900</span>px</span><br></pre></td></tr></table></figure><p>此方法不适用于 <code>Pisces Scheme</code>， <code>Pisces Scheme</code> 编辑<code>themes\next\source\css\_schemes\Picses\_layout.styl</code>文件，更改以下 css 选项定义值：</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.header</span> &#123;<span class="attribute">width</span>: <span class="number">1150px</span>;&#125;</span><br><span class="line"><span class="selector-class">.container</span> <span class="selector-class">.main-inner</span> &#123;<span class="attribute">width</span>: <span class="number">1150px</span>;&#125;</span><br><span class="line"><span class="selector-class">.content-wrap</span> &#123;<span class="attribute">width</span>: <span class="built_in">calc</span>(<span class="number">100%</span> - <span class="number">260px</span>);&#125;</span><br></pre></td></tr></table></figure><h1 id="六、NexT主题分页的翻页箭头显示"><a href="#六、NexT主题分页的翻页箭头显示" class="headerlink" title="六、NexT主题分页的翻页箭头显示"></a>六、NexT主题分页的翻页箭头显示</h1><ul><li><p>修改: <code>themes\next\layout\_partials\pagination.swig</code> 为</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;% if page.prev or page.next %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">"pagination"</span>&gt;</span></span><br><span class="line">      &#123;&#123;</span><br><span class="line">        paginator(&#123;</span><br><span class="line">          prev_text: '<span class="tag">&lt;<span class="name">',</span></span></span><br><span class="line"><span class="tag">          <span class="attr">next_text:</span> '&gt;</span>',</span><br><span class="line">          mid_size: 1</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line">  &#123;% endif %&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="七、添加自定义menu菜单"><a href="#七、添加自定义menu菜单" class="headerlink" title="七、添加自定义menu菜单"></a>七、添加自定义menu菜单</h1><ol><li>修改<code>themes/next/_config.yml</code>，在menu下添加菜单项，格式为 <code>Key: /link || icon</code> ，icon即为 <a href="http://fontawesome.dashgame.com/" target="_blank" rel="noopener">Font Awesome</a> 提供的图标。注意统一缩进，如果出现地址多了 <code>%20/</code> 无法访问，则删去 <code>||</code> 前的空格， 例如 <code>skill: skill|| book</code>。</li><li>修改 <code>themes/next/languages/zh-Hans.yml</code> ，在menu下添加对应Key的中文，例如 <code>skill: 技能</code> ，注意统一缩进。</li><li>在博客根目录，即执行hexo操作的目录，运行 <code>hexo new page &quot;skill&quot;</code>，也就是第1步对应添加的Key然后编辑新建的 <code>source/skill/index.md</code> 即可。同样，我们也可以使用 <code>技术: /tags/tech || wrench</code>，实现按照标签进行自定义菜单。</li></ol><h1 id="八、搜索功能"><a href="#八、搜索功能" class="headerlink" title="八、搜索功能"></a>八、搜索功能</h1><ul><li><p>安装插件</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">npm <span class="keyword">install</span> hexo-generator-searchdb <span class="comment">--save</span></span><br></pre></td></tr></table></figure></li><li><p>打开 <code>themes/next/_config.yml</code> ，搜索关键字 <code>local_search</code> ，设置为 <code>true</code></p></li><li><p>打开hexo的站点配置 <code>_config.yml</code>，添加</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span></span><br><span class="line">  <span class="attr">format:</span> <span class="string">html</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">10000</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="九、统计功能"><a href="#九、统计功能" class="headerlink" title="九、统计功能"></a>九、统计功能</h1><p>显示文章字数统计、阅读时长及总字数，</p><ul><li><p>安装插件</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm i --save hexo-wordcount</span><br></pre></td></tr></table></figure></li><li><p>打开 <code>themes/next/_config.yml</code> ，搜索关键字 <code>post_wordcount</code>，将所需选项的 <code>false</code> 改为 <code>true</code></p></li><li><p>打开 <code>themes/next/layout/_macro/post.swig</code>，搜索关键词 <code>post.wordcount</code>，添加 <code>字</code> 到末尾</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">title</span>=<span class="string">"&#123;&#123; __('post.wordcount') &#125;&#125;"</span>&gt;</span></span><br><span class="line">    &#123;&#123; wordcount(post.content) &#125;&#125; 字</span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><p>同理，搜索关键词 <code>post.min2read</code>，添加 <code>分钟</code> 到末尾</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">title</span>=<span class="string">"&#123;&#123; __('post.min2read') &#125;&#125;"</span>&gt;</span></span><br><span class="line">    &#123;&#123; min2read(post.content) &#125;&#125; 分钟</span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="十、文章加密访问"><a href="#十、文章加密访问" class="headerlink" title="十、文章加密访问"></a>十、文章加密访问</h1><p>打开 <code>themes/next/layout/_partials/head.swig</code>文件插入代码：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    (<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">if</span>(<span class="string">'&#123;&#123; page.password &#125;&#125;'</span>)&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">if</span> (prompt(<span class="string">'请输入密码'</span>) !== <span class="string">'&#123;&#123; page.password &#125;&#125;'</span>)&#123;</span></span><br><span class="line"><span class="actionscript">                alert(<span class="string">'密码错误'</span>);</span></span><br><span class="line">                history.back();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)();</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>写文章时加上<code>password: *</code>：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="number">2018</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2018</span><span class="number">-10</span><span class="number">-25</span> <span class="number">16</span><span class="string">:10:03</span></span><br><span class="line"><span class="attr">password:</span> <span class="number">123456</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><h1 id="十一、hexo在文章中添加图片"><a href="#十一、hexo在文章中添加图片" class="headerlink" title="十一、hexo在文章中添加图片"></a>十一、hexo在文章中添加图片</h1><ol><li><p>安装图片上传插件<code>npm install hexo-asset-image --save</code></p></li><li><p>在<code>_config.yml</code>配置文件中，修改为 <code>post_asset_folder: true</code></p></li><li><p>修改: <code>/node_modules/hexo-asset-image/index.js</code> 为</p><div><div class="fold_hider"><div class="close hider_title">查看详细</div></div><div class="fold"><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"> ...</span><br><span class="line">    </span><br><span class="line">  <span class="keyword">if</span>(config.post_asset_folder)&#123;</span><br><span class="line">    <span class="keyword">var</span> link = data.permalink;</span><br><span class="line">    <span class="comment">/* 注释以下内容</span></span><br><span class="line"><span class="comment">    var beginPos = getPosition(link, '/', 3) + 1;</span></span><br><span class="line"><span class="comment">    var appendLink = '';</span></span><br><span class="line"><span class="comment">    // In hexo 3.1.1, the permalink of "about" page is like ".../about/index.html".</span></span><br><span class="line"><span class="comment">    // if not with index.html endpos = link.lastIndexOf('.') + 1 support hexo-abbrlink</span></span><br><span class="line"><span class="comment">    if(/.*\/index\.html$/.test(link)) &#123;</span></span><br><span class="line"><span class="comment">      // when permalink is end with index.html, for example 2019/02/20/xxtitle/index.html</span></span><br><span class="line"><span class="comment">      // image in xxtitle/ will go to xxtitle/index/</span></span><br><span class="line"><span class="comment">      appendLink = 'index/';</span></span><br><span class="line"><span class="comment">      var endPos = link.lastIndexOf('/');</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    else &#123;</span></span><br><span class="line"><span class="comment">      var endPos = link.lastIndexOf('.');</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    link = link.substring(beginPos, endPos) + '/' + appendLink;</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="comment">/* 修改为下面四行 */</span></span><br><span class="line">    <span class="keyword">var</span> link = data.permalink;</span><br><span class="line">    <span class="keyword">var</span> beginPos = getPosition(link, <span class="string">'/'</span>, <span class="number">3</span>) + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">var</span> endPos = link.lastIndexOf(<span class="string">'/'</span>) + <span class="number">1</span>;</span><br><span class="line">    link = link.substring(beginPos, endPos);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> toprocess = [<span class="string">'excerpt'</span>, <span class="string">'more'</span>, <span class="string">'content'</span>];</span><br><span class="line"></span><br><span class="line">...</span><br></pre></td></tr></table></figure></div></div></li><li><p>然后每次<code>hexo n &quot;文章标题&quot;</code>时，<code>_posts</code>文件夹里都会新建一个<code>文章标题</code>的文件夹，把你的图片素材统一放这里，然后md格式的文章正文里引用 <code>[图片说明](文章标题/图片名.扩展名)</code></p></li></ol><h1 id="十二、部分图片禁用fancybox"><a href="#十二、部分图片禁用fancybox" class="headerlink" title="十二、部分图片禁用fancybox"></a>十二、部分图片禁用fancybox</h1><p>打开 <code>theme/next/source/js/src/utils.js</code>，添加 <code>if ($(this).hasClass(&#39;nofancybox&#39;)) return;</code></p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">wrapImageWithFancyBox: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    $(<span class="string">'.content img'</span>)</span><br><span class="line">      .not(<span class="string">'[hidden]'</span>)</span><br><span class="line">      .not(<span class="string">'.group-picture img, .post-gallery img'</span>)</span><br><span class="line">      .each(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> $image = $(<span class="keyword">this</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> ($(<span class="keyword">this</span>).hasClass(<span class="string">'nofancybox'</span>)) <span class="keyword">return</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">var</span> imageTitle = $image.attr(<span class="string">'title'</span>);</span><br><span class="line">        <span class="keyword">var</span> $imageWrapLink = $image.parent(<span class="string">'a'</span>);</span><br></pre></td></tr></table></figure><p>使用时，在img标签使用的时候加上 <code>class=&quot;nofancybox&quot;</code> 即可。</p><h1 id="十三、添加代码块折叠功能"><a href="#十三、添加代码块折叠功能" class="headerlink" title="十三、添加代码块折叠功能"></a>十三、添加代码块折叠功能</h1><ol><li><p>先创建 <code>themes/next/scripts/custom/fold_tag.js</code>，</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* global hexo */</span></span><br><span class="line"><span class="comment">// Usage: &#123;% fold ???? %&#125; Something &#123;% endfold %&#125;</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fold</span> (<span class="params">args, content</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> text = args[<span class="number">0</span>];</span><br><span class="line">  <span class="keyword">if</span>(!text) text = <span class="string">"点击显/隐"</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">'&lt;div&gt;&lt;div class="fold_hider"&gt;&lt;div class="close hider_title"&gt;'</span> + text + <span class="string">'&lt;/div&gt;&lt;/div&gt;&lt;div class="fold"&gt;\n'</span> + hexo.render.renderSync(&#123;<span class="attr">text</span>: content, <span class="attr">engine</span>: <span class="string">'markdown'</span>&#125;) + <span class="string">'\n&lt;/div&gt;&lt;/div&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line">hexo.extend.tag.register(<span class="string">'fold'</span>, fold, &#123;<span class="attr">ends</span>: <span class="literal">true</span>&#125;);</span><br></pre></td></tr></table></figure></li><li><p>以及 <code>themes/next/source/custom/fold_action.js</code>文件，</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $(<span class="built_in">document</span>).on(<span class="string">'click'</span>, <span class="string">'.fold_hider'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        $(<span class="string">'&gt;.fold'</span>, <span class="keyword">this</span>.parentNode).slideToggle();</span><br><span class="line">        $(<span class="string">'&gt;:first'</span>, <span class="keyword">this</span>).toggleClass(<span class="string">'open'</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">//默认情况下折叠</span></span><br><span class="line">    $(<span class="string">"div.fold"</span>).css(<span class="string">"display"</span>,<span class="string">"none"</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li><p>然后创建文件 <code>themes/next/layout/_custom/post-details.swig</code></p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;# hexo-theme-next/layout/_custom/post-details.swig</span><br><span class="line">add to: themes/hexo-theme-next/layout/_scripts/pages/post-details.swig</span><br><span class="line">#&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"&#123;&#123; url_for(theme.custom) &#125;&#125;/fold_action.js?v=&#123;&#123; version &#125;&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>并在<code>`themes/next/layout/_scripts/pages/post-details.swig</code>的末尾加上</p><figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">include</span></span> '../../_custom/post-details.swig' %&#125;</span></span><br></pre></td></tr></table></figure></li><li><p>修改主题下的<code>_config.yml</code> ，添加 <code>custom: custom</code>， 注意空格</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Assets</span></span><br><span class="line"><span class="attr">css:</span> <span class="string">css</span></span><br><span class="line"><span class="attr">js:</span> <span class="string">js</span></span><br><span class="line"><span class="attr">images:</span> <span class="string">images</span></span><br><span class="line"><span class="attr">custom:</span> <span class="string">custom</span></span><br></pre></td></tr></table></figure></li><li><p>最后修改 <code>themes/next/source/css/_custom/custom.styl</code>，添加</p><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">.hider_title&#123;</span><br><span class="line">	<span class="attribute">font-family</span>: <span class="string">"Microsoft Yahei"</span>;</span><br><span class="line">	<span class="attribute">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.close</span>:before&#123;</span><br><span class="line">	<span class="attribute">content</span>: <span class="string">"▼"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.open</span>:before&#123;</span><br><span class="line">	<span class="attribute">content</span>: <span class="string">"▲"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h1 id="十四、文章目录修改"><a href="#十四、文章目录修改" class="headerlink" title="十四、文章目录修改"></a>十四、文章目录修改</h1><ul><li><p>目录默认展开。打开 <code>themes/next/source/css/_custom/custom.styl</code> 添加以下内容</p><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="comment">//文章目录默认展开</span></span><br><span class="line"><span class="selector-class">.post-toc</span> <span class="selector-class">.nav</span> <span class="selector-class">.nav-child</span> &#123; <span class="attribute">display</span>: block; &#125;</span><br></pre></td></tr></table></figure></li><li><p>取消自动编号，开启自动换行。打开 <code>themes/next/_config.yml</code>，搜索关键词 <code>toc</code></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">toc:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Automatically add list number to toc.</span></span><br><span class="line">  <span class="attr">number:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># If true, all words will placed on next lines if header width longer then sidebar width.</span></span><br><span class="line">  <span class="attr">wrap:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="十五、文章结束语"><a href="#十五、文章结束语" class="headerlink" title="十五、文章结束语"></a>十五、文章结束语</h1><ul><li><p>添加模板文件</p><p>在主题目录下<code>\layout\_macro</code>中新建 <code>passage-end-tag.swig</code>文件,并添加以下内容：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    &#123;% if not is_index %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"text-align:center;color: #ccc;font-size:14px;"</span>&gt;</span></span><br><span class="line">              -------------本文结束<span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-paw"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>感谢您的阅读-------------</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>导入模板文件</p><p>在<code>\layout\_macro\post.swig</code>文件中，找到：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&#123;<span class="comment">#####################&#125;</span></span><br><span class="line">&#123;<span class="comment">### END POST BODY ###&#125;</span></span><br><span class="line">&#123;<span class="comment">#####################&#125;</span></span><br></pre></td></tr></table></figure><p>在上面代码之前添加：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      &#123;% if not is_index %&#125;</span><br><span class="line">          &#123;% include 'passage-end-tag.swig' %&#125;</span><br><span class="line">      &#123;% endif %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>配置<br>在主题配置文件中添加：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 文章末尾添加“本文结束”标记</span></span><br><span class="line">passage_end_tag:</span><br><span class="line">  enabled: <span class="literal">true</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="十六、增强文章底部标签"><a href="#十六、增强文章底部标签" class="headerlink" title="十六、增强文章底部标签"></a>十六、增强文章底部标签</h1><p>修改模板<code>/themes/next/layout/_macro/post.swig</code>，搜索 <code>rel=”tag”&gt;#</code>，将 <code>#</code>换成</p><figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;i class="fa fa-tag"&gt;&lt;/i&gt;</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
      <categories>
        <category>配置</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>NexT</tag>
      </tags>
  </entry>
  <entry>
    <title>【随笔】hexo文章操作</title>
    <url>/posts/1f9bd172.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="一、创建文章"><a href="#一、创建文章" class="headerlink" title="一、创建文章"></a>一、创建文章</h1><p>命令：</p><figure class="highlight gauss"><table><tr><td class="code"><pre><span class="line">hexo <span class="keyword">new</span> [layout] &lt;<span class="built_in">title</span>&gt;</span><br></pre></td></tr></table></figure><p>参数说明：</p><ul><li>layout可以为以下三种：</li></ul><div class="table-container"><table><thead><tr><th>参数名</th><th>功能</th><th>文章路径</th></tr></thead><tbody><tr><td>post</td><td>新建博文</td><td>source/_posts</td></tr><tr><td>page</td><td>新建页面（如404，分类）</td><td>source</td></tr><tr><td>draft</td><td>草稿</td><td>source/_drafts</td></tr></tbody></table></div><p>草稿可通过一下命令发布：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">hexo publish [layout] <span class="tag">&lt;<span class="name">title</span>&gt;</span></span><br></pre></td></tr></table></figure><p>注意，<code>title</code> 并不是博文的标题，而是博文markdown文件的名字，也就是博文链接的后缀（例如 <code>https://gh1656409967.github.io/随笔/【随笔】hexo文章操作/</code> 中的 <code>【随笔】hexo文章操作</code> ）</p><h1 id="二、文章模版"><a href="#二、文章模版" class="headerlink" title="二、文章模版"></a>二、文章模版</h1><ul><li><p>创建模版</p><p>在新建文章时，hexo 会根据 <code>scaffolds</code> 文件夹内相对应的文件来建立文件，例如：</p><figure class="highlight haxe"><table><tr><td class="code"><pre><span class="line">hexo <span class="keyword">new</span> <span class="type">blog</span> <span class="string">"foo"</span></span><br></pre></td></tr></table></figure><p>在执行这行指令时，hexo 会尝试在 <code>scaffolds</code> 文件夹中寻找 <code>blog.md</code>，并根据其内容建立文章。</p></li><li><p>修改参数</p><p>以下是可以在模版中使用的变量：</p></li></ul><div class="table-container"><table><thead><tr><th>变量</th><th>描述</th></tr></thead><tbody><tr><td>layout</td><td>布局</td></tr><tr><td>title</td><td>标题</td></tr><tr><td>date</td><td>文件建立日期</td></tr></tbody></table></div><h1 id="三、Front-matter"><a href="#三、Front-matter" class="headerlink" title="三、Front-matter"></a>三、Front-matter</h1><p>就是博文最上方以 <code>---</code> 分隔的那部分。</p><p>默认可以使用的Front-matter：</p><div class="table-container"><table><thead><tr><th>参数</th><th>描述</th><th>默认值</th></tr></thead><tbody><tr><td><code>layout</code></td><td>布局</td><td></td></tr><tr><td><code>title</code></td><td>标题</td><td></td></tr><tr><td><code>date</code></td><td>建立日期</td><td>文件建立日期</td></tr><tr><td><code>updated</code></td><td>更新日期</td><td>文件更新日期</td></tr><tr><td><code>comments</code></td><td>开启文章的评论功能</td><td>true</td></tr><tr><td><code>tags</code></td><td>标签（不适用于分页）</td><td></td></tr><tr><td><code>categories</code></td><td>分类（不适用于分页）</td><td></td></tr><tr><td><code>permalink</code></td><td>覆盖文章网址</td></tr></tbody></table></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>【随笔】使用Gpg4win加密邮件</title>
    <url>/posts/9d299c24.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="一、准备"><a href="#一、准备" class="headerlink" title="一、准备"></a>一、准备</h1><p>下载并安装以下两项:</p><ul><li><p><a href="https://www.gpg4win.org/get-gpg4win.html" target="_blank" rel="noopener">Gpg4win</a></p></li><li><p><a href="https://www.thunderbird.net/zh-CN/" target="_blank" rel="noopener">Thunderbird</a></p></li></ul><h1 id="二、配置Gpg4win"><a href="#二、配置Gpg4win" class="headerlink" title="二、配置Gpg4win"></a>二、配置Gpg4win</h1><ol><li><p>一路next安装。</p></li><li><p>新建密钥对，按提示进行。</p></li><li>可以点击 <code>导出...</code> 导出 <code>.asc</code>文件。</li></ol><h1 id="三、配置Thunderbird"><a href="#三、配置Thunderbird" class="headerlink" title="三、配置Thunderbird"></a>三、配置Thunderbird</h1><ol><li><p>一路next安装。</p></li><li><p>开启邮箱的IMAP服务。以QQ邮箱为例，启动QQ邮箱网页版，打开 <code>设置 &gt; 账户</code> 下拉找到该项，并选择开启IMAP/SMTP服务。</p><p><img src="/posts/9d299c24/开启服务.png" alt="开启服务"></p><p>保存提示中的授权码</p><p><img src="/posts/9d299c24/授权码.png" alt="授权码"></p></li><li><p>在Thunderbird中配置邮箱，密码一栏中填写授权码即可。</p></li><li><p>点开 <code>显示菜单</code> 找到 <code>附加组件</code> ，搜索并安装 <code>Enigmail</code> 插件。</p><p><img src="/posts/9d299c24/附加组件.png" alt="附加组件"></p><p><img src="/posts/9d299c24/Enigmail.png" alt="Enigmail"></p></li><li><p>重启应用后，在Thunderbird菜单栏中找到 <code>Enigmail &gt; 密钥管理</code> ，点击 <code>文件 &gt; 从文件导入密钥</code> 可以导入某个邮箱地址的公钥文件，或者在搜索框中通过输入邮箱地址或密钥ID在公钥服务器上搜索对应的公钥，也可以是邮件等方式传递的Gpg4win导出的 <code>.asc</code> 文件。</p></li></ol><h1 id="四、发送-amp-接收邮件"><a href="#四、发送-amp-接收邮件" class="headerlink" title="四、发送&amp;接收邮件"></a>四、发送&amp;接收邮件</h1><ul><li><p>发送邮件</p><p>假设我们需要向XXX@XXX.XXX这个电子邮件地址发送GPG加密邮件，首先应该导入XXX@XXX.XXX对应的公钥文件（该文件将用于加密邮件），或者通过邮件地址XXX@XXX.XXX或对方的密钥ID在公钥服务器上搜索其公钥，搜索到的公钥需要进行指纹验证以确保该公钥不是伪造的。</p><p>在新建邮件界面选中 <code>加密</code> 和 <code>签名邮件</code> 按钮即可。</p><p><img src="/posts/9d299c24/按钮.png" alt="按钮"></p></li><li><p>接收邮件</p><p>打开接收到的加密邮件，会提示验证密码，验证完即可查看内容。</p></li></ul><h1 id="附、疑难解决"><a href="#附、疑难解决" class="headerlink" title="附、疑难解决"></a>附、疑难解决</h1><ul><li>问: Thunderbird添加新邮箱时提示 <code>接受服务器已存在</code> 如何解决？</li><li>答: 彻底退出Thunderbird ( 包括关闭后台进程 )，再重新打开即可。</li></ul><!-- rebuild by neat -->]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>信息安全</tag>
        <tag>GPG</tag>
      </tags>
  </entry>
  <entry>
    <title>【随笔】凯撒密码的简单实现</title>
    <url>/posts/72a3a14f.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="一、恺撒密码简介"><a href="#一、恺撒密码简介" class="headerlink" title="一、恺撒密码简介"></a>一、恺撒密码简介</h1><p>在密码学中，恺撒密码（英语：Caesar cipher），或称恺撒加密、恺撒变换、变换加密，是一种最简单且最广为人知的加密技术。它是一种替换加密的技术，明文中的所有字母都在字母表上向后（或向前）按照一个固定数目进行偏移后被替换成密文。例如，当偏移量是3的时候，所有的字母A将被替换成D，B变成E，以此类推。这个加密方法是以罗马共和时期恺撒的名字命名的，当年恺撒曾用此方法与其将军们进行联系。</p><p>根据偏移量的不同，还存在若干特定的恺撒密码名称：</p><ul><li>偏移量为10：Avocat(A→K)</li><li>偏移量为13：ROT13</li><li>偏移量为-5：Cassis (K 6)</li><li>偏移量为-6：Cassette (K 7)</li></ul><h1 id="二、C-简单实现"><a href="#二、C-简单实现" class="headerlink" title="二、C++简单实现"></a>二、C++简单实现</h1><div><div class="fold_hider"><div class="close hider_title">查看详细</div></div><div class="fold"><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> SIZ = <span class="number">100000</span>;</span><br><span class="line"><span class="keyword">char</span> src[SIZ], enc[SIZ];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">caesar</span><span class="params">(<span class="keyword">char</span> src[], <span class="keyword">char</span> enc[], <span class="keyword">int</span> key)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    key %= <span class="number">26</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; src[i]; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> ((src[i]&lt;<span class="string">'A'</span>) || (src[i]&gt;<span class="string">'Z'</span> &amp;&amp; src[i]&lt;<span class="string">'a'</span>) || src[i]&gt;<span class="string">'z'</span>) &#123;</span><br><span class="line">            enc[i] = src[i]; <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (src[i] &gt;= <span class="string">'a'</span>)</span><br><span class="line">            enc[i] = (src[i] - <span class="string">'a'</span> + key + <span class="number">26</span>) % <span class="number">26</span> + <span class="string">'a'</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            enc[i] = (src[i] - <span class="string">'A'</span> + key + <span class="number">26</span>) % <span class="number">26</span> + <span class="string">'A'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    system(<span class="string">"chcp 65001"</span>);</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"-- 凯撒密码 加/解密 -- \n"</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"1. 加密 \n2. 解密 \n3. 退出 \n"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> select, key; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;select);</span><br><span class="line">        <span class="keyword">if</span> (select == <span class="number">3</span>) <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"请输入原文: "</span>); <span class="built_in">scanf</span>(<span class="string">"%s"</span>, src);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"请输入密钥: "</span>); <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;key);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (select == <span class="number">2</span>) key = -key;</span><br><span class="line">        <span class="built_in">memset</span>(enc, <span class="number">0</span>, <span class="keyword">sizeof</span>(enc));</span><br><span class="line"></span><br><span class="line">        caesar(src, enc, key); <span class="built_in">printf</span>(<span class="string">"密文: %s\n"</span>, enc);</span><br><span class="line">        system(<span class="string">"pause"</span>); system(<span class="string">"cls"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>信息安全</tag>
        <tag>加密技术</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】FZU-1901 Period II</title>
    <url>/posts/4d7b22d7.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="Period-II-FZU-1901"><a href="#Period-II-FZU-1901" class="headerlink" title="Period II(FZU-1901)"></a>Period II(<a href="https://vjudge.net/problem/FZU-1901" target="_blank" rel="noopener">FZU-1901</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>For each prefix with length P of a given string S,if</p><p>S[i]=S[i+P] for i in [0..SIZE(S)-p-1],</p><p>then the prefix is a “period” of S. We want to all the periodic prefixs.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>Input contains multiple cases.</p><p>The first line contains an integer T representing the number of cases. Then following T cases.</p><p>Each test case contains a string S (1 &lt;= SIZE(S) &lt;= 1000000),represents the title.S consists of lowercase ,uppercase letter.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For each test case, first output one line containing “Case #x: y”, where x is the case number (starting from 1) and y is the number of periodic prefixs.Then output the lengths of the periodic prefixs in ascending order.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">4</span></span><br><span class="line">ooo</span><br><span class="line">acmacmacmacmacma</span><br><span class="line">fzufzufzuf</span><br><span class="line">stostootssto</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">Case #<span class="number">1</span>: <span class="number">3</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span></span><br><span class="line">Case #<span class="number">2</span>: <span class="number">6</span></span><br><span class="line"><span class="number">3</span> <span class="number">6</span> <span class="number">9</span> <span class="number">12</span> <span class="number">15</span> <span class="number">16</span></span><br><span class="line">Case #<span class="number">3</span>: <span class="number">4</span></span><br><span class="line"><span class="number">3</span> <span class="number">6</span> <span class="number">9</span> <span class="number">10</span></span><br><span class="line">Case #<span class="number">4</span>: <span class="number">2</span></span><br><span class="line"><span class="number">9</span> <span class="number">12</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>类似<a href="https://blog.lordash.cf/posts/2888cc32.html">【题解】POJ-2752 Seek the Name, Seek the Fame</a>。对于字符串的所有前缀，若存在循环节，输出符合条件的前缀个数与这个前缀字符串的长度。注意输出格式，行尾不得有多余空格。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> t[mxn];</span><br><span class="line"><span class="keyword">int</span> nxt[mxn], ans[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getnxt</span><span class="params">(<span class="keyword">char</span>* t, <span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">-1</span>; nxt[<span class="number">0</span>] = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; m) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (j == <span class="number">-1</span> || t[i] == t[j]) &#123;</span><br><span class="line">            i++, j++;</span><br><span class="line">            <span class="comment">// if (t[i] == t[j])</span></span><br><span class="line">            <span class="comment">//     nxt[i] = nxt[j]; // next数组优化</span></span><br><span class="line">            <span class="comment">// else</span></span><br><span class="line">                nxt[i] = j;</span><br><span class="line">        &#125; <span class="keyword">else</span></span><br><span class="line">            j = nxt[j];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T, cs=<span class="number">1</span>; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>, t);</span><br><span class="line">        <span class="keyword">int</span> tl = <span class="built_in">strlen</span>(t);</span><br><span class="line">        getnxt(t, tl);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=tl; i&gt;<span class="number">0</span>; i=nxt[i])&#123;</span><br><span class="line">            ans[num++] = tl-nxt[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Case #%d: %d\n"</span>, cs++, num);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;num; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i) <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d"</span>, ans[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>字符串</category>
        <category>模式匹配</category>
        <category>KMP</category>
      </categories>
      <tags>
        <tag>KMP</tag>
        <tag>FZU</tag>
        <tag>kuangbin 专题十六</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】FZU-2150 Fire Game</title>
    <url>/posts/17cf3784.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="Fire-Game-FZU-2150"><a href="#Fire-Game-FZU-2150" class="headerlink" title="Fire Game (FZU - 2150)"></a>Fire Game (<a href="https://vjudge.net/problem/FZU-2150" target="_blank" rel="noopener">FZU - 2150</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>Fat brother and Maze are playing a kind of special (hentai) game on an N*M board (N rows, M columns). At the beginning, each grid of this board is consisting of grass or just empty and then they start to fire all the grass. Firstly they choose two grids which are consisting of grass and set fire. As we all know, the fire can spread among the grass. If the grid (x, y) is firing at time t, the grid which is adjacent to this grid will fire at time t+1 which refers to the grid (x+1, y), (x-1, y), (x, y+1), (x, y-1). This process ends when no new grid get fire. If then all the grid which are consisting of grass is get fired, Fat brother and Maze will stand in the middle of the grid and playing a MORE special (hentai) game. (Maybe it’s the OOXX game which decrypted in the last problem, who knows.)</p><p>You can assume that the grass in the board would never burn out and the empty grid would never get fire.</p><p>Note that the two grids they choose can be the same.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>The first line of the date is an integer T, which is the number of the text cases.</p><p>Then T cases follow, each case contains two integers N and M indicate the size of the board. Then goes N line, each line with M character shows the board. “#” Indicates the grass. You can assume that there is at least one grid which is consisting of grass in the board.</p><p>1 &lt;= T &lt;=100, 1 &lt;= n &lt;=10, 1 &lt;= m &lt;=10</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For each case, output the case number first, if they can play the MORE special (hentai) game (fire all the grass), output the minimal time they need to wait after they set fire, otherwise just output -1. See the sample input and output for more details.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight clean"><table><tr><td class="code"><pre><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">3</span> <span class="number">3</span></span><br><span class="line">.#.</span><br><span class="line">###</span><br><span class="line">.#.</span><br><span class="line"><span class="number">3</span> <span class="number">3</span></span><br><span class="line">.#.</span><br><span class="line">#.#</span><br><span class="line">.#.</span><br><span class="line"><span class="number">3</span> <span class="number">3</span></span><br><span class="line">...</span><br><span class="line">#.#</span><br><span class="line">...</span><br><span class="line"><span class="number">3</span> <span class="number">3</span></span><br><span class="line">###</span><br><span class="line">..#</span><br><span class="line">#.#</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">Case <span class="number">1</span>: <span class="number">1</span></span><br><span class="line">Case <span class="number">2</span>: <span class="number">-1</span></span><br><span class="line">Case <span class="number">3</span>: <span class="number">0</span></span><br><span class="line">Case <span class="number">4</span>: <span class="number">2</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>暴力枚举两个起火点跑bfs，统计最小值，注意草的数量少于等于2时可以特判</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e2</span>+<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> b[N][N] = &#123;&#123;<span class="number">0</span>&#125;&#125;;</span><br><span class="line"><span class="keyword">bool</span> vis[N][N] = &#123;&#123;<span class="number">0</span>&#125;&#125;;</span><br><span class="line"><span class="keyword">int</span> T, n, m;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> dx[] = &#123; <span class="number">1</span>, <span class="number">-1</span>,  <span class="number">0</span>,  <span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> dy[] = &#123; <span class="number">0</span>,  <span class="number">0</span>,  <span class="number">1</span>, <span class="number">-1</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">P</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> x, y;</span><br><span class="line">    <span class="keyword">int</span> step;</span><br><span class="line">&#125; p[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">bfs</span><span class="params">(P sp1, P sp2)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(vis, <span class="number">0</span>, <span class="keyword">sizeof</span>(vis));</span><br><span class="line"></span><br><span class="line">    <span class="built_in">queue</span>&lt;P&gt; q;</span><br><span class="line">    q.push(sp1);</span><br><span class="line">    q.push(sp2);</span><br><span class="line">    vis[sp1.x][sp1.y] = <span class="number">1</span>;</span><br><span class="line">    vis[sp2.x][sp2.y] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> t = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(!q.empty()) &#123;</span><br><span class="line">        P tp = q.front();</span><br><span class="line">        q.pop();</span><br><span class="line"></span><br><span class="line">        t = max(t, tp.step);</span><br><span class="line">        P np = tp;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">4</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> x = np.x = tp.x+dx[i];</span><br><span class="line">            <span class="keyword">int</span> y = np.y = tp.y+dy[i];</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(x&lt;<span class="number">0</span> || x&gt;=n || y&lt;<span class="number">0</span> || y&gt;=m) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(!vis[x][y] &amp;&amp; b[x][y]==<span class="string">'#'</span>) &#123;</span><br><span class="line">                np.step = tp.step+<span class="number">1</span>;</span><br><span class="line">                q.push(np);</span><br><span class="line">                vis[x][y] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> t;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">ok</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> m)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;m; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(!vis[i][j] &amp;&amp; b[i][j]==<span class="string">'#'</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> cs=<span class="number">1</span>; cs&lt;=T; cs++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;m);</span><br><span class="line">        <span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;m; j++) &#123;</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">" %c"</span>, &amp;b[i][j]);</span><br><span class="line">                <span class="keyword">if</span>(b[i][j]==<span class="string">'#'</span>) &#123;</span><br><span class="line">                    p[num].x = i;</span><br><span class="line">                    p[num].y = j;</span><br><span class="line">                    p[num].step = <span class="number">0</span>;</span><br><span class="line">                    num++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Case %d: "</span>, cs);</span><br><span class="line">        <span class="keyword">if</span>(num&lt;=<span class="number">2</span>) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"0\n"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">int</span> mi = inf;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;num; i++) &#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>; j&lt;num; j++) &#123;</span><br><span class="line">                    <span class="keyword">int</span> t = bfs(p[i], p[j]);</span><br><span class="line">                    <span class="keyword">if</span>(ok(n, m))</span><br><span class="line">                        mi = min(mi, t);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(mi==inf)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"-1\n"</span>);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, mi);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>搜索</category>
        <category>BFS</category>
      </categories>
      <tags>
        <tag>FZU</tag>
        <tag>BFS</tag>
        <tag>kuangbin 专题一</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】HDU-1029 Ignatius and the Princess IV</title>
    <url>/posts/2ed36710.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="Ignatius-and-the-Princess-IV-HDU-1029"><a href="#Ignatius-and-the-Princess-IV-HDU-1029" class="headerlink" title="Ignatius and the Princess IV (HDU - 1029)"></a>Ignatius and the Princess IV (<a href="https://vjudge.net/problem/HDU-1029" target="_blank" rel="noopener">HDU - 1029</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>“OK, you are not too bad, em… But you can never pass the next test.” feng5166 says.</p><p>“I will tell you an odd number N, and then N integers. There will be a special integer among them, you have to tell me which integer is the special one after I tell you all the integers.” feng5166 says.</p><p>“But what is the characteristic of the special integer?” Ignatius asks.</p><p>“The integer will appear at least (N+1)/2 times. If you can’t find the right integer, I will kill the Princess, and you will be my dinner, too. Hahahaha…..” feng5166 says.</p><p>Can you find the special integer for Ignatius?</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>The input contains several test cases. Each test case contains two lines. The first line consists of an odd integer N(1&lt;=N&lt;=999999) which indicate the number of the integers feng5166 will tell our hero. The second line contains the N integers. The input is terminated by the end of file.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For each test case, you have to output only one line which contains the special number you have found.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="number">5</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">3</span> <span class="number">2</span> <span class="number">3</span> <span class="number">3</span></span><br><span class="line"><span class="number">11</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">5</span> <span class="number">5</span> <span class="number">5</span> <span class="number">5</span> <span class="number">5</span> <span class="number">5</span></span><br><span class="line"><span class="number">7</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[N];</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n)) &#123;</span><br><span class="line">        <span class="keyword">int</span> num=<span class="number">0</span>, ans=<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]);</span><br><span class="line">            <span class="keyword">if</span>(num==<span class="number">0</span>) &#123;</span><br><span class="line">                num++;</span><br><span class="line">                ans = a[i];</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span>(ans!=a[i])</span><br><span class="line">                    num--;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    num++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>动态规划</category>
        <category>基础DP</category>
      </categories>
      <tags>
        <tag>HDU</tag>
        <tag>DP</tag>
        <tag>kuangbin 专题十二</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】HDU-1043 Eight</title>
    <url>/posts/b0c6ee2.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="Eight-HDU-1043"><a href="#Eight-HDU-1043" class="headerlink" title="Eight (HDU - 1043)"></a>Eight (<a href="https://vjudge.net/problem/HDU-1043" target="_blank" rel="noopener">HDU - 1043</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>The 15-puzzle has been around for over 100 years; even if you don’t know it by that name, you’ve seen it. It is constructed with 15 sliding tiles, each with a number from 1 to 15 on it, and all packed into a 4 by 4 frame with one tile missing. Let’s call the missing tile ‘x’; the object of the puzzle is to arrange the tiles so that they are ordered as:</p><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"> <span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span></span><br><span class="line"> <span class="number">5</span>  <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span></span><br><span class="line"> <span class="number">9</span> <span class="number">10</span> <span class="number">11</span> <span class="number">12</span></span><br><span class="line"><span class="number">13</span> <span class="number">14</span> <span class="number">15</span>  x</span><br></pre></td></tr></table></figure><p>where the only legal operation is to exchange ‘x’ with one of the tiles with which it shares an edge. As an example, the following sequence of moves solves a slightly scrambled puzzle:</p><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"> <span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span>     <span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span>     <span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span>     <span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span></span><br><span class="line"> <span class="number">5</span>  <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>     <span class="number">5</span>  <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>     <span class="number">5</span>  <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>     <span class="number">5</span>  <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span></span><br><span class="line"> <span class="number">9</span>  x <span class="number">10</span> <span class="number">12</span>     <span class="number">9</span> <span class="number">10</span>  x <span class="number">12</span>     <span class="number">9</span> <span class="number">10</span> <span class="number">11</span> <span class="number">12</span>     <span class="number">9</span> <span class="number">10</span> <span class="number">11</span> <span class="number">12</span></span><br><span class="line"><span class="number">13</span> <span class="number">14</span> <span class="number">11</span> <span class="number">15</span>    <span class="number">13</span> <span class="number">14</span> <span class="number">11</span> <span class="number">15</span>    <span class="number">13</span> <span class="number">14</span>  x <span class="number">15</span>    <span class="number">13</span> <span class="number">14</span> <span class="number">15</span>  x</span><br><span class="line">            r-&gt;            d-&gt;            r-&gt;</span><br></pre></td></tr></table></figure><p>The letters in the previous row indicate which neighbor of the ‘x’ tile is swapped with the ‘x’ tile at each step; legal values are ‘r’,’l’,’u’ and ‘d’, for right, left, up, and down, respectively.</p><p>Not all puzzles can be solved; in 1870, a man named Sam Loyd was famous for distributing an unsolvable version of the puzzle, and<br>frustrating many people. In fact, all you have to do to make a regular puzzle into an unsolvable one is to swap two tiles (not counting the missing ‘x’ tile, of course).</p><p>In this problem, you will write a program for solving the less well-known 8-puzzle, composed of tiles on a three by three<br>arrangement.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>You will receive, several descriptions of configuration of the 8 puzzle. One description is just a list of the tiles in their initial positions, with the rows listed from top to bottom, and the tiles listed from left to right within a row, where the tiles are represented by numbers 1 to 8, plus ‘x’. For example, this puzzle</p><p>1 2 3<br>x 4 6<br>7 5 8</p><p>is described by this list:</p><p>1 2 3 x 4 6 7 5 8</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>You will print to standard output either the word ``unsolvable’’, if the puzzle has no solution, or a string consisting entirely of the letters ‘r’, ‘l’, ‘u’ and ‘d’ that describes a series of moves that produce a solution. The string should include no spaces and start at the beginning of the line. Do not print a blank line between cases.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">2 </span> <span class="number">3</span>  <span class="number">4</span>  <span class="number">1</span>  <span class="number">5</span>  x  <span class="number">7</span>  <span class="number">6</span>  <span class="number">8</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">ullddrurdllurdruldr</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>考虑多次bfs会TLE，而目标状态是确定的，且由此bfs出的所有状态也是有限的(<strong>9!</strong>)，所以这题不是bfs直接搜出来的，而是bfs打表。<br>暂时没用康拓展开，不过最好去看看，同时感兴趣的圣雄甘地可以了解一下八数码八境界…</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e2</span>+<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n = <span class="number">9</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> dx[] = &#123; <span class="number">1</span>, <span class="number">-1</span>,  <span class="number">0</span>,  <span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> dy[] = &#123; <span class="number">0</span>,  <span class="number">0</span>,  <span class="number">1</span>, <span class="number">-1</span>&#125;;</span><br><span class="line"><span class="keyword">char</span> dir[] = <span class="string">"udlr"</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">P</span> &#123;</span></span><br><span class="line">    <span class="built_in">string</span> s, p;</span><br><span class="line">    <span class="keyword">int</span> x;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="built_in">string</span>&gt; mp;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bfs</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    P sp;</span><br><span class="line">    sp.s = <span class="string">"123456789"</span>;</span><br><span class="line">    sp.p = <span class="string">""</span>;</span><br><span class="line">    sp.x = n<span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">queue</span>&lt;P&gt; q;</span><br><span class="line">    q.push(sp);</span><br><span class="line">    mp[<span class="number">123456789</span>] = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(!q.empty()) &#123;</span><br><span class="line">        P tp = q.front();</span><br><span class="line">        q.pop();</span><br><span class="line"></span><br><span class="line">        P np;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">4</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> x = tp.x/<span class="number">3</span>+dx[i];</span><br><span class="line">            <span class="keyword">int</span> y = tp.x%<span class="number">3</span>+dy[i];</span><br><span class="line">            <span class="keyword">if</span>(x&lt;<span class="number">0</span> || x&gt;=<span class="number">3</span> || y&lt;<span class="number">0</span> || y&gt;=<span class="number">3</span>) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            np = tp;</span><br><span class="line">            np.x = x*<span class="number">3</span>+y;</span><br><span class="line">            swap(np.s[np.x], np.s[tp.x]);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">int</span> d=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">                d = d*<span class="number">10</span>+np.s[i]-<span class="string">'0'</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(mp.find(d)==mp.end()) &#123;</span><br><span class="line">                np.p += i+<span class="string">'0'</span>;</span><br><span class="line">                q.push(np);</span><br><span class="line">                mp[d] = np.p;</span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    bfs();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">char</span> c;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">" %c"</span>, &amp;c)==<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">int</span> d;</span><br><span class="line">        <span class="keyword">if</span>(c==<span class="string">'x'</span>) &#123;</span><br><span class="line">            d = <span class="number">9</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            d = c-<span class="string">'0'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;n; i++) &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">" %c"</span>, &amp;c);</span><br><span class="line">            <span class="keyword">if</span>(c==<span class="string">'x'</span>) &#123;</span><br><span class="line">                d = d*<span class="number">10</span>+<span class="number">9</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                d = d*<span class="number">10</span>+c-<span class="string">'0'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(mp.find(d)==mp.end()) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"unsolvable\n"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">string</span> p = mp[d];</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=p.length()<span class="number">-1</span>; i&gt;=<span class="number">0</span>; i--)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%c"</span>, dir[p[i]-<span class="string">'0'</span>]);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>搜索</category>
        <category>BFS</category>
      </categories>
      <tags>
        <tag>BFS</tag>
        <tag>HDU</tag>
        <tag>kuangbin 专题二</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】HDU-1069 Monkey and Banana</title>
    <url>/posts/9f6acb51.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="Monkey-and-Banana-HDU-1069"><a href="#Monkey-and-Banana-HDU-1069" class="headerlink" title="Monkey and Banana (HDU - 1069)"></a>Monkey and Banana (<a href="https://vjudge.net/problem/HDU-1069" target="_blank" rel="noopener">HDU - 1069</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>A group of researchers are designing an experiment to test the IQ of a monkey. They will hang a banana at the roof of a building, and at the mean time, provide the monkey with some blocks. If the monkey is clever enough, it shall be able to reach the banana by placing one block on the top another to build a tower and climb up to get its favorite food.</p><p>The researchers have n types of blocks, and an unlimited supply of blocks of each type. Each type-i block was a rectangular solid with linear dimensions (xi, yi, zi). A block could be reoriented so that any two of its three dimensions determined the dimensions of the base and the other dimension was the height.</p><p>They want to make sure that the tallest tower possible by stacking blocks can reach the roof. The problem is that, in building a tower, one block could only be placed on top of another block as long as the two base dimensions of the upper block were both strictly smaller than the corresponding base dimensions of the lower block because there has to be some space for the monkey to step on. This meant, for example, that blocks oriented to have equal-sized bases couldn’t be stacked.</p><p>Your job is to write a program that determines the height of the tallest tower the monkey can build with a given set of blocks.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>The input file will contain one or more test cases. The first line of each test case contains an integer n,<br>representing the number of different blocks in the following data set. The maximum value for n is 30.<br>Each of the next n lines contains three integers representing the values xi, yi and zi.<br>Input is terminated by a value of zero (0) for n.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For each test case, print one line containing the case number (they are numbered sequentially starting from 1) and the height of the tallest possible tower in the format “Case case: maximum height = height”.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line"><span class="symbol">10 </span><span class="number">20</span> <span class="number">30</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="symbol">6 </span><span class="number">8</span> <span class="number">10</span></span><br><span class="line"><span class="symbol">5 </span><span class="number">5</span> <span class="number">5</span></span><br><span class="line"><span class="number">7</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">1</span> <span class="number">1</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">2</span> <span class="number">2</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">3</span> <span class="number">3</span></span><br><span class="line"><span class="symbol">4 </span><span class="number">4</span> <span class="number">4</span></span><br><span class="line"><span class="symbol">5 </span><span class="number">5</span> <span class="number">5</span></span><br><span class="line"><span class="symbol">6 </span><span class="number">6</span> <span class="number">6</span></span><br><span class="line"><span class="symbol">7 </span><span class="number">7</span> <span class="number">7</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="symbol">31 </span><span class="number">41</span> <span class="number">59</span></span><br><span class="line"><span class="symbol">26 </span><span class="number">53</span> <span class="number">58</span></span><br><span class="line"><span class="symbol">97 </span><span class="number">93</span> <span class="number">23</span></span><br><span class="line"><span class="symbol">84 </span><span class="number">62</span> <span class="number">64</span></span><br><span class="line"><span class="symbol">33 </span><span class="number">83</span> <span class="number">27</span></span><br><span class="line"><span class="number">0</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">Case <span class="number">1</span>: maximum height = <span class="number">40</span></span><br><span class="line">Case <span class="number">2</span>: maximum height = <span class="number">21</span></span><br><span class="line">Case <span class="number">3</span>: maximum height = <span class="number">28</span></span><br><span class="line">Case <span class="number">4</span>: maximum height = <span class="number">342</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">2e2</span> + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">sc</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> l, w, h;</span><br><span class="line">&#125; a[N];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> f[N] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> n, num = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(sc x, sc y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x.l != y.l)</span><br><span class="line">        <span class="keyword">return</span> x.l &lt; y.l;</span><br><span class="line">    <span class="keyword">return</span> x.w &lt; y.w;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n) &amp;&amp; n) &#123;</span><br><span class="line">        <span class="keyword">int</span> l, w, h, t = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>, &amp;l, &amp;w, &amp;h);</span><br><span class="line">            a[t].l=l, a[t].w=w, a[t++].h=h;</span><br><span class="line">            a[t].l=l, a[t].w=h, a[t++].h=w;</span><br><span class="line">            a[t].l=w, a[t].w=l, a[t++].h=h;</span><br><span class="line">            a[t].l=w, a[t].w=h, a[t++].h=l;</span><br><span class="line">            a[t].l=h, a[t].w=l, a[t++].h=w;</span><br><span class="line">            a[t].l=h, a[t].w=w, a[t++].h=l;</span><br><span class="line">        &#125;</span><br><span class="line">        sort(a, a+t, cmp);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;t; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> mx=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;i; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(a[j].l&lt;a[i].l &amp;&amp; a[j].w&lt;a[i].w)</span><br><span class="line">                    mx = max(mx, f[j]);</span><br><span class="line">            &#125;</span><br><span class="line">            f[i] = a[i].h+mx;</span><br><span class="line">            ans = max(ans, f[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Case %d: maximum height = %d\n"</span>, num++, ans);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>动态规划</category>
        <category>基础DP</category>
      </categories>
      <tags>
        <tag>HDU</tag>
        <tag>DP</tag>
        <tag>kuangbin 专题十二</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】HDU-1160 FatMouse&#39;s Speed</title>
    <url>/posts/1117c6e9.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="FatMouse’s-Speed-HDU-1160"><a href="#FatMouse’s-Speed-HDU-1160" class="headerlink" title="FatMouse’s Speed (HDU - 1160)"></a>FatMouse’s Speed (<a href="https://vjudge.net/problem/HDU-1160" target="_blank" rel="noopener">HDU - 1160</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>FatMouse believes that the fatter a mouse is, the faster it runs. To disprove this, you want to take the data on a collection of mice and put as large a subset of this data as possible into a sequence so that the weights are increasing, but the speeds are decreasing.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>Input contains data for a bunch of mice, one mouse per line, terminated by end of file.</p><p>The data for a particular mouse will consist of a pair of integers: the first representing its size in grams and the second representing its speed in centimeters per second. Both integers are between 1 and 10000. The data in each test case will contain information for at most 1000 mice.</p><p>Two mice may have the same weight, the same speed, or even the same weight and speed.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>Your program should output a sequence of lines of data; the first line should contain a number n; the remaining n lines should each contain a single positive integer (each one representing a mouse). If these n integers are m[1], m[2],…, m[n] then it must be the case that</p><p>W[m[1]] &lt; W[m[2]] &lt; … &lt; W[m[n]]</p><p>and</p><p>S[m[1]] &gt; S[m[2]] &gt; … &gt; S[m[n]]</p><p>In order for the answer to be correct, n should be as large as possible.<br>All inequalities are strict: weights must be strictly increasing, and speeds must be strictly decreasing. There may be many correct outputs for a given input, your program only needs to find one.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">6008 </span><span class="number">1300</span></span><br><span class="line"><span class="symbol">6000 </span><span class="number">2100</span></span><br><span class="line"><span class="symbol">500 </span><span class="number">2000</span></span><br><span class="line"><span class="symbol">1000 </span><span class="number">4000</span></span><br><span class="line"><span class="symbol">1100 </span><span class="number">3000</span></span><br><span class="line"><span class="symbol">6000 </span><span class="number">2000</span></span><br><span class="line"><span class="symbol">8000 </span><span class="number">1400</span></span><br><span class="line"><span class="symbol">6000 </span><span class="number">1200</span></span><br><span class="line"><span class="symbol">2000 </span><span class="number">1900</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">9</span></span><br><span class="line"><span class="number">7</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e3</span>+<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">P</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> w, s, id;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">P a[N];</span><br><span class="line"><span class="keyword">int</span> dp[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(P a, P b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a.w==b.w)</span><br><span class="line">        <span class="keyword">return</span> a.s &gt; b.s;</span><br><span class="line">    <span class="keyword">return</span> a.w &lt; b.w;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;a[n].w, &amp;a[n].s)==<span class="number">2</span>) &#123;</span><br><span class="line">        a[n].id = n+<span class="number">1</span>;</span><br><span class="line">        n++;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(a, a+n, cmp);</span><br><span class="line">    <span class="keyword">int</span> mx = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">        dp[i] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;i; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(a[j].w&lt;a[i].w &amp;&amp; a[j].s&gt;a[i].s) &#123;</span><br><span class="line">                dp[i] = max(dp[i], dp[j]+<span class="number">1</span>);</span><br><span class="line">                mx = max(mx, dp[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, mx);</span><br><span class="line">    <span class="built_in">stack</span>&lt;<span class="keyword">int</span>&gt; st;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=n<span class="number">-1</span>; i&gt;=<span class="number">0</span>; i--) &#123;</span><br><span class="line">        <span class="keyword">if</span>(dp[i]==mx) &#123;</span><br><span class="line">            st.push(a[i].id);</span><br><span class="line">            mx--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(st.size()) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, st.top());</span><br><span class="line">        st.pop();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>动态规划</category>
        <category>LIS</category>
      </categories>
      <tags>
        <tag>HDU</tag>
        <tag>DP</tag>
        <tag>kuangbin 专题十二</tag>
        <tag>LIS</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】HDU-1171 Big Event in HDU</title>
    <url>/posts/3cb90679.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="Big-Event-in-HDU-HDU-1171"><a href="#Big-Event-in-HDU-HDU-1171" class="headerlink" title="Big Event in HDU (HDU - 1171)"></a>Big Event in HDU (<a href="https://vjudge.net/problem/HDU-1171" target="_blank" rel="noopener">HDU - 1171</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>Nowadays, we all know that Computer College is the biggest department in HDU. But, maybe you don’t know that Computer College had ever been split into Computer College and Software College in 2002.<br>The splitting is absolutely a big event in HDU! At the same time, it is a trouble thing too. All facilities must go halves. First, all facilities are assessed, and two facilities are thought to be same if they have the same value. It is assumed that there is N (0&lt;N&lt;1000) kinds of facilities (different value, different kinds).</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>Input contains multiple test cases. Each test case starts with a number N (0 &lt; N &lt;= 50 — the total number of different facilities). The next N lines contain an integer V (0&lt;V&lt;=50 —value of facility) and an integer M (0&lt;M&lt;=100 —corresponding number of the facilities) each. You can assume that all V are different.<br>A test case starting with a negative integer terminates input and this test case is not to be processed.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For each case, print one line containing two integers A and B which denote the value of Computer College and Software College will get respectively. A and B should be as equal as possible. At the same time, you should guarantee that A is not less than B.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">10</span> <span class="number">1</span></span><br><span class="line"><span class="number">20</span> <span class="number">1</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">10</span> <span class="number">1</span> </span><br><span class="line"><span class="number">20</span> <span class="number">2</span></span><br><span class="line"><span class="number">30</span> <span class="number">1</span></span><br><span class="line"><span class="number">-1</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">20 </span><span class="number">10</span></span><br><span class="line"><span class="symbol">40 </span><span class="number">40</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>01背包</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e3</span>+<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> w[<span class="number">5000</span>+<span class="number">5</span>];</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> dp[<span class="number">250000</span>+<span class="number">5</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n)==<span class="number">1</span> &amp;&amp; n&gt;<span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">memset</span>(dp, <span class="number">0</span>, <span class="keyword">sizeof</span>(dp));</span><br><span class="line">        <span class="keyword">int</span> sum=<span class="number">0</span>, tot=<span class="number">0</span>, val, num;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;val, &amp;num);</span><br><span class="line">            <span class="keyword">while</span>(num--)&#123;</span><br><span class="line">                w[tot++] = val;</span><br><span class="line">                sum += val;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;tot; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=sum/<span class="number">2</span>; j&gt;=w[i]; j--) &#123;</span><br><span class="line">                dp[j] = max(dp[j], dp[j-w[i]]+w[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>, sum-dp[sum/<span class="number">2</span>], dp[sum/<span class="number">2</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>动态规划</category>
        <category>背包</category>
        <category>多重背包</category>
      </categories>
      <tags>
        <tag>HDU</tag>
        <tag>DP</tag>
        <tag>背包</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】HDU-1238 Substrings</title>
    <url>/posts/611613b6.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="Substrings-HDU-1238"><a href="#Substrings-HDU-1238" class="headerlink" title="Substrings(HDU-1238)"></a>Substrings(<a href="https://vjudge.net/problem/HDU-1238" target="_blank" rel="noopener">HDU-1238</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>You are given a number of case-sensitive strings of alphabetic characters, find the largest string X, such that either X, or its inverse can be found as a substring of any of the given strings.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>The first line of the input file contains a single integer t (1 &lt;= t &lt;= 10), the number of test cases, followed by the input data for each test case. The first line of each test case contains a single integer n (1 &lt;= n &lt;= 100), the number of given strings, followed by n lines, each representing one string of minimum length 1 and maximum length 100. There is no extra white space before and after a string.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>There should be one line per test case containing the length of the largest string found.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line">ABCD</span><br><span class="line">BCDFF</span><br><span class="line">BRCD</span><br><span class="line"><span class="number">2</span></span><br><span class="line">rose</span><br><span class="line">orchid</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>枚举子串，暴力KMP即可。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> s[<span class="number">105</span>][mxn], t[mxn], t2[mxn];</span><br><span class="line"><span class="keyword">int</span> nxt[mxn], nxt2[mxn], len[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getnxt</span><span class="params">(<span class="keyword">char</span>* t, <span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">-1</span>; nxt[<span class="number">0</span>] = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; m) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (j == <span class="number">-1</span> || t[i] == t[j]) &#123;</span><br><span class="line">            i++, j++;</span><br><span class="line">            <span class="comment">// if (t[i] == t[j])</span></span><br><span class="line">            <span class="comment">//     nxt[i] = nxt[j]; // next数组优化</span></span><br><span class="line">            <span class="comment">// else</span></span><br><span class="line">                nxt[i] = j;</span><br><span class="line">        &#125; <span class="keyword">else</span></span><br><span class="line">            j = nxt[j];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">KMP</span><span class="params">(<span class="keyword">char</span>* s, <span class="keyword">char</span>* t, <span class="keyword">int</span> n, <span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>, ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; n) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (j == <span class="number">-1</span> || s[i] == t[j]) &#123;</span><br><span class="line">            i++, j++;</span><br><span class="line">            <span class="keyword">if</span> (j &gt;= m) &#123;   <span class="comment">// 匹配</span></span><br><span class="line">                <span class="comment">// ans++;</span></span><br><span class="line">                <span class="comment">// j = nxt[j];</span></span><br><span class="line">                <span class="keyword">return</span> i-j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span></span><br><span class="line">            j = nxt[j];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// return ans;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> n; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%s"</span>, s[i]);</span><br><span class="line">            len[i] = <span class="built_in">strlen</span>(s[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;len[<span class="number">0</span>]; i++) <span class="comment">// 枚举模式串起点</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> tl = <span class="number">0</span>, k;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=i; j&lt;len[<span class="number">0</span>]; j++) <span class="comment">// 枚举模式串长度</span></span><br><span class="line">            &#123;</span><br><span class="line">                t[tl++] = s[<span class="number">0</span>][j];</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> x=<span class="number">0</span>; x&lt;tl; x++) t2[x] = t[tl-x<span class="number">-1</span>];</span><br><span class="line">                t[tl] = t2[tl] = <span class="string">'\0'</span>;</span><br><span class="line">                getnxt(t, tl);</span><br><span class="line">                getnxt(t2, tl);</span><br><span class="line">                <span class="keyword">for</span>(k=<span class="number">0</span>; k&lt;n; k++)  <span class="comment">// 枚举所有文本串</span></span><br><span class="line">                    <span class="keyword">if</span>(KMP(s[k], t, len[k], tl) == <span class="number">-1</span> &amp;&amp; KMP(s[k], t2, len[k], tl) == <span class="number">-1</span>)</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">if</span>(k&gt;=n)    <span class="comment">// 满足条件</span></span><br><span class="line">                    ans = max(ans, tl);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>字符串</category>
        <category>模式匹配</category>
        <category>KMP</category>
      </categories>
      <tags>
        <tag>KMP</tag>
        <tag>kuangbin 专题十六</tag>
        <tag>HDU</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】HDU-1241 Oil Deposits</title>
    <url>/posts/c8df81e6.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="Oil-Deposits-HDU-1241"><a href="#Oil-Deposits-HDU-1241" class="headerlink" title="Oil Deposits (HDU - 1241)"></a>Oil Deposits (<a href="https://vjudge.net/problem/HDU-1241" target="_blank" rel="noopener">HDU - 1241</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>The GeoSurvComp geologic survey company is responsible for detecting underground oil deposits. GeoSurvComp works with one large rectangular region of land at a time, and creates a grid that divides the land into numerous square plots. It then analyzes each plot separately, using sensing equipment to determine whether or not the plot contains oil. A plot containing oil is called a pocket. If two pockets are adjacent, then they are part of the same oil deposit. Oil deposits can be quite large and may contain numerous pockets. Your job is to determine how many different oil deposits are contained in a grid.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>The input file contains one or more grids. Each grid begins with a line containing m and n, the number of rows and columns in the grid, separated by a single space. If m = 0 it signals the end of the input; otherwise 1 &lt;= m &lt;= 100 and 1 &lt;= n &lt;= 100. Following this are m lines of n characters each (not counting the end-of-line characters). Each character corresponds to one plot, and is either ‘*’, representing the absence of oil, or ‘@’, representing an oil pocket.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For each grid, output the number of distinct oil deposits. Two different pockets are part of the same oil deposit if they are adjacent horizontally, vertically, or diagonally. An oil deposit will not contain more than 100 pockets.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight mel"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span> <span class="number">1</span></span><br><span class="line">*</span><br><span class="line"><span class="number">3</span> <span class="number">5</span></span><br><span class="line">*@*@*</span><br><span class="line">**@**</span><br><span class="line">*@*@*</span><br><span class="line"><span class="number">1</span> <span class="number">8</span></span><br><span class="line">@@****@*</span><br><span class="line"><span class="number">5</span> <span class="number">5</span> </span><br><span class="line">****@</span><br><span class="line">*@@*@</span><br><span class="line">*@**@</span><br><span class="line">@@@*@</span><br><span class="line">@@**@</span><br><span class="line"><span class="number">0</span> <span class="number">0</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">0</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>bfs求连通块</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e2</span>+<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> b[N][N] = &#123;&#123;<span class="number">0</span>&#125;&#125;;</span><br><span class="line"><span class="keyword">bool</span> vis[N][N] = &#123;&#123;<span class="number">0</span>&#125;&#125;;</span><br><span class="line"><span class="keyword">int</span> n, m, ans = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> dx[] = &#123; <span class="number">1</span>, <span class="number">-1</span>,  <span class="number">0</span>,  <span class="number">0</span>,  <span class="number">1</span>,  <span class="number">1</span>, <span class="number">-1</span>, <span class="number">-1</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> dy[] = &#123; <span class="number">0</span>,  <span class="number">0</span>,  <span class="number">1</span>, <span class="number">-1</span>,  <span class="number">1</span>, <span class="number">-1</span>,  <span class="number">1</span>, <span class="number">-1</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">P</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> x, y;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bfs</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    P sp;</span><br><span class="line">    sp.x = x;</span><br><span class="line">    sp.y = y;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">queue</span>&lt;P&gt; q;</span><br><span class="line">    q.push(sp);</span><br><span class="line">    vis[sp.x][sp.y] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(!q.empty()) &#123;</span><br><span class="line">        P tp = q.front();</span><br><span class="line">        q.pop();</span><br><span class="line"></span><br><span class="line">        P np = tp;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">8</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> x = np.x = tp.x+dx[i];</span><br><span class="line">            <span class="keyword">int</span> y = np.y = tp.y+dy[i];</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(x&lt;<span class="number">0</span> || x&gt;=n || y&lt;<span class="number">0</span> || y&gt;=m) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(!vis[x][y] &amp;&amp; b[x][y]==<span class="string">'@'</span>) &#123;</span><br><span class="line">                q.push(np);</span><br><span class="line">                vis[x][y] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;m)==<span class="number">2</span> &amp;&amp; n &amp;&amp; m) &#123;</span><br><span class="line">        <span class="built_in">memset</span>(vis, <span class="number">0</span>, <span class="keyword">sizeof</span>(vis));</span><br><span class="line">        ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;m; j++) &#123;</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">" %c"</span>, &amp;b[i][j]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;m; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(!vis[i][j] &amp;&amp; b[i][j]==<span class="string">'@'</span>) &#123;</span><br><span class="line">                    bfs(i, j);</span><br><span class="line">                    ans++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>搜索</category>
        <category>BFS</category>
      </categories>
      <tags>
        <tag>BFS</tag>
        <tag>kuangbin 专题一</tag>
        <tag>HDU</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】HDU-1269 迷宫城堡</title>
    <url>/posts/7722f638.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="迷宫城堡-HDU-1269"><a href="#迷宫城堡-HDU-1269" class="headerlink" title="迷宫城堡 (HDU - 1269)"></a>迷宫城堡 (<a href="https://vjudge.net/problem/HDU-1269" target="_blank" rel="noopener">HDU - 1269</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>为了训练小希的方向感，Gardon建立了一座大城堡，里面有N个房间(N&lt;=10000)和M条通道(M&lt;=100000)，每个通道都是单向的，就是说若称某通道连通了A房间和B房间，只说明可以通过这个通道由A房间到达B房间，但并不说明通过它可以由B房间到达A房间。Gardon需要请你写个程序确认一下是否任意两个房间都是相互连通的，即：对于任意的i和j，至少存在一条路径可以从房间i到房间j，也存在一条路径可以从房间j到房间i。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入包含多组数据，输入的第一行有两个数：N和M，接下来的M行每行有两个数a和b，表示了一条通道可以从A房间来到B房间。文件最后以两个0结束。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>对于输入的每组数据，如果任意两个房间都是相互连接的，输出”Yes”，否则输出”No”。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">3 </span><span class="number">3</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">2</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">3</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">1</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">3</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">2</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">3</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">2</span></span><br><span class="line"><span class="symbol">0 </span><span class="number">0</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="literal">Yes</span></span><br><span class="line"><span class="literal">No</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e4</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M = <span class="number">1e5</span>+<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">E</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> to, next;</span><br><span class="line">&#125; e[M];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> H[N], tot;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> S[N], top;</span><br><span class="line"><span class="keyword">int</span> dfn[N], low[N], bel[N], idx, scc;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="keyword">int</span> u, v;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> from, <span class="keyword">int</span> to)</span> </span>&#123;</span><br><span class="line">    e[tot] = &#123;to, H[from]&#125;;</span><br><span class="line">    H[from] = tot++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u)</span> </span>&#123;</span><br><span class="line">    dfn[u] = low[u] = ++idx;</span><br><span class="line">    S[++top]=u;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=H[u]; ~i; i=e[i].next) &#123;</span><br><span class="line">        <span class="keyword">int</span> v = e[i].to;</span><br><span class="line">        <span class="keyword">if</span>(!dfn[v]) &#123;</span><br><span class="line">            dfs(v);</span><br><span class="line">            low[u] = min(low[u], low[v]);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(!bel[v])</span><br><span class="line">            low[u] = min(low[u], dfn[v]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(low[u]==dfn[u]) &#123;</span><br><span class="line">        scc++;</span><br><span class="line">        <span class="keyword">int</span> t;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            t=S[top--];</span><br><span class="line">            bel[t]=scc;</span><br><span class="line">        &#125; <span class="keyword">while</span>(t!=u);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">tarjan</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(dfn, <span class="number">0</span>, <span class="keyword">sizeof</span>(dfn));</span><br><span class="line">    <span class="built_in">memset</span>(bel, <span class="number">0</span>, <span class="keyword">sizeof</span>(bel));</span><br><span class="line">    idx = scc = top = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(!dfn[i])</span><br><span class="line">            dfs(i);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m)==<span class="number">2</span> &amp;&amp; (n || m)) &#123;</span><br><span class="line">        <span class="built_in">memset</span>(H, <span class="number">-1</span>, <span class="keyword">sizeof</span>(H));</span><br><span class="line">        tot = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;m; i++) &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;u, &amp;v);</span><br><span class="line">            add(u, v);</span><br><span class="line">        &#125;</span><br><span class="line">        tarjan();</span><br><span class="line">        <span class="keyword">if</span>(scc==<span class="number">1</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Yes\n"</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"No\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>图论</category>
        <category>连通性</category>
        <category>强连通分量</category>
        <category>Tarjan</category>
      </categories>
      <tags>
        <tag>HDU</tag>
        <tag>Tarjan</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】HDU-1358 Period</title>
    <url>/posts/2e2c0ec9.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="Period-HDU-1358"><a href="#Period-HDU-1358" class="headerlink" title="Period (HDU-1358)"></a>Period (<a href="https://vjudge.net/problem/HDU-1358" target="_blank" rel="noopener">HDU-1358</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>For each prefix of a given string S with N characters (each character has an ASCII code between 97 and 126, inclusive), we want to know whether the prefix is a periodic string. That is, for each i (2 &lt;= i &lt;= N) we want to know the largest K &gt; 1 (if there is one) such that the prefix of S with length i can be written as AK , that is A concatenated K times, for some string A. Of course, we also want to know the period K.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>The input file consists of several test cases. Each test case consists of two lines. The first one contains N (2 &lt;= N &lt;= 1 000 000) – the size of the string S. The second line contains the string S. The input file ends with a line, having the number zero on it.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For each test case, output “Test case #” and the consecutive test case number on a single line; then, for each prefix with length i that has a period K &gt; 1, output the prefix size i and the period K separated by a single space; the prefix sizes must be in increasing order. Print a blank line after each test case.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">3</span><br><span class="line">aaa</span><br><span class="line">12</span><br><span class="line">aabaabaabaab</span><br><span class="line">0</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight subunit"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Test </span>case #1</span><br><span class="line">2 2</span><br><span class="line">3 3</span><br><span class="line"></span><br><span class="line"><span class="keyword">Test </span>case #2</span><br><span class="line">2 2</span><br><span class="line">6 2</span><br><span class="line">9 3</span><br><span class="line">12 4</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>KMP求最小循环节。输出所有可以由循环构成的前缀。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> t[mxn];</span><br><span class="line"><span class="keyword">int</span> nxt[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getnxt</span><span class="params">(<span class="keyword">char</span>* t, <span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">-1</span>; nxt[<span class="number">0</span>] = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; m) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (j == <span class="number">-1</span> || t[i] == t[j]) &#123;</span><br><span class="line">            i++, j++;</span><br><span class="line">            <span class="comment">// if (t[i] == t[j])</span></span><br><span class="line">            <span class="comment">//     nxt[i] = nxt[j]; // next数组优化</span></span><br><span class="line">            <span class="comment">// else</span></span><br><span class="line">                nxt[i] = j;</span><br><span class="line">        &#125; <span class="keyword">else</span></span><br><span class="line">            j = nxt[j];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> cs=<span class="number">0</span>, m;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;m) &amp;&amp; m)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>, t);</span><br><span class="line">        getnxt(t, m);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Test case #%d\n"</span>, ++cs);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;=m; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(nxt[i]&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">int</span> L = i-nxt[i];   <span class="comment">// 最小循环节=原串长度-末位失配，L=len-next[len]</span></span><br><span class="line">                <span class="keyword">if</span>(i%L == <span class="number">0</span>)</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>, i, i/L);  <span class="comment">// 循环周期T=len/L</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>字符串</category>
        <category>模式匹配</category>
        <category>KMP</category>
      </categories>
      <tags>
        <tag>KMP</tag>
        <tag>最小循环节</tag>
        <tag>kuangbin 专题十六</tag>
        <tag>HDU</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】HDU-1495 非常可乐</title>
    <url>/posts/f343bd3c.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="非常可乐-HDU-1495"><a href="#非常可乐-HDU-1495" class="headerlink" title="非常可乐 (HDU - 1495)"></a>非常可乐 (<a href="https://vjudge.net/problem/HDU-1495" target="_blank" rel="noopener">HDU - 1495</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>大家一定觉的运动以后喝可乐是一件很惬意的事情，但是seeyou却不这么认为。因为每次当seeyou买了可乐以后，阿牛就要求和seeyou一起分享这一瓶可乐，而且一定要喝的和seeyou一样多。但seeyou的手中只有两个杯子，它们的容量分别是N 毫升和M 毫升 可乐的体积为S （S&lt;101）毫升　(正好装满一瓶) ，它们三个之间可以相互倒可乐 (都是没有刻度的，且 S==N+M，101＞S＞0，N＞0，M＞0) 。聪明的ACMER你们说他们能平分吗？如果能请输出倒可乐的最少的次数，如果不能输出”NO”。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>三个整数 : S 可乐的体积 , N 和 M是两个杯子的容量，以”0 0 0”结束。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>如果能平分的话请输出最少要倒的次数，否则输出”NO”。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">7 </span><span class="number">4</span> <span class="number">3</span></span><br><span class="line"><span class="symbol">4 </span><span class="number">1</span> <span class="number">3</span></span><br><span class="line"><span class="symbol">0 </span><span class="number">0</span> <span class="number">0</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="literal">NO</span></span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>倒水问题，当S为奇数时无解。数论有简便解法</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> out(a) (cout&lt;&lt;__LINE__&lt;&lt;<span class="meta-string">" : "</span>#a<span class="meta-string">" = "</span>&lt;&lt;(a)&lt;&lt;endl)</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e2</span>+<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> vis[N][N][N] = &#123;&#123;&#123;<span class="number">0</span>&#125;&#125;&#125;;</span><br><span class="line"><span class="keyword">int</span> s, n, m, ans = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">P</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> n, m, s;</span><br><span class="line">    <span class="keyword">int</span> step;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(vis, <span class="number">0</span>, <span class="keyword">sizeof</span>(vis));</span><br><span class="line"></span><br><span class="line">    P sp;</span><br><span class="line">    sp.s = s;</span><br><span class="line">    sp.n = <span class="number">0</span>;</span><br><span class="line">    sp.m = <span class="number">0</span>;</span><br><span class="line">    sp.step = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">queue</span>&lt;P&gt; q;</span><br><span class="line">    q.push(sp);</span><br><span class="line">    vis[sp.s][sp.n][sp.m] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(!q.empty()) &#123;</span><br><span class="line">        P tp = q.front();</span><br><span class="line">        q.pop();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>((!tp.n&amp;&amp;tp.m==tp.s) || (!tp.m&amp;&amp;tp.n==tp.s) || (!tp.s&amp;&amp;tp.n==tp.m)) &#123;</span><br><span class="line">            ans = tp.step;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        P np = tp;</span><br><span class="line">        <span class="keyword">int</span> t;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(tp.n) &#123;</span><br><span class="line">            t = tp.n+tp.m;</span><br><span class="line">            <span class="keyword">if</span>(t&gt;m) &#123;</span><br><span class="line">                np.m = m;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                np.m = t;</span><br><span class="line">            &#125;</span><br><span class="line">            np.n = t-np.m;</span><br><span class="line">            np.s = tp.s;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(!vis[np.s][np.n][np.m]) &#123;</span><br><span class="line">                np.step = tp.step+<span class="number">1</span>;</span><br><span class="line">                q.push(np);</span><br><span class="line">                vis[np.s][np.n][np.m] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            t = tp.n+tp.s;</span><br><span class="line">            <span class="keyword">if</span>(t&gt;s) &#123;</span><br><span class="line">                np.s = s;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                np.s = t;</span><br><span class="line">            &#125;</span><br><span class="line">            np.n = t-np.s;</span><br><span class="line">            np.m = tp.m;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(!vis[np.s][np.n][np.m]) &#123;</span><br><span class="line">                np.step = tp.step+<span class="number">1</span>;</span><br><span class="line">                q.push(np);</span><br><span class="line">                vis[np.s][np.n][np.m] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(tp.m) &#123;</span><br><span class="line">            t = tp.m+tp.n;</span><br><span class="line">            <span class="keyword">if</span>(t&gt;n) &#123;</span><br><span class="line">                np.n = n;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                np.n = t;</span><br><span class="line">            &#125;</span><br><span class="line">            np.m = t-np.n;</span><br><span class="line">            np.s = tp.s;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(!vis[np.s][np.n][np.m]) &#123;</span><br><span class="line">                np.step = tp.step+<span class="number">1</span>;</span><br><span class="line">                q.push(np);</span><br><span class="line">                vis[np.s][np.n][np.m] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            t = tp.m+tp.s;</span><br><span class="line">            <span class="keyword">if</span>(t&gt;s) &#123;</span><br><span class="line">                np.s = s;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                np.s = t;</span><br><span class="line">            &#125;</span><br><span class="line">            np.m = t-np.s;</span><br><span class="line">            np.n = tp.n;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(!vis[np.s][np.n][np.m]) &#123;</span><br><span class="line">                np.step = tp.step+<span class="number">1</span>;</span><br><span class="line">                q.push(np);</span><br><span class="line">                vis[np.s][np.n][np.m] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(tp.s) &#123;</span><br><span class="line">            t = tp.s+tp.n;</span><br><span class="line">            <span class="keyword">if</span>(t&gt;n) &#123;</span><br><span class="line">                np.n = n;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                np.n = t;</span><br><span class="line">            &#125;</span><br><span class="line">            np.s = t-np.n;</span><br><span class="line">            np.m = tp.m;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(!vis[np.s][np.n][np.m]) &#123;</span><br><span class="line">                np.step = tp.step+<span class="number">1</span>;</span><br><span class="line">                q.push(np);</span><br><span class="line">                vis[np.s][np.n][np.m] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            t = tp.s+tp.m;</span><br><span class="line">            <span class="keyword">if</span>(t&gt;m) &#123;</span><br><span class="line">                np.m = m;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                np.m = t;</span><br><span class="line">            &#125;</span><br><span class="line">            np.s = t-np.m;</span><br><span class="line">            np.n = tp.n;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(!vis[np.s][np.n][np.m]) &#123;</span><br><span class="line">                np.step = tp.step+<span class="number">1</span>;</span><br><span class="line">                q.push(np);</span><br><span class="line">                vis[np.s][np.n][np.m] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>, &amp;s, &amp;n, &amp;m)==<span class="number">3</span> &amp;&amp; s &amp;&amp; n &amp;&amp; m) &#123;</span><br><span class="line">        <span class="keyword">if</span>(s%<span class="number">2</span>==<span class="number">0</span> &amp;&amp; bfs()) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"NO\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>搜索</category>
        <category>BFS</category>
      </categories>
      <tags>
        <tag>BFS</tag>
        <tag>kuangbin 专题一</tag>
        <tag>HDU</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】HDU-1527 取石子游戏</title>
    <url>/posts/62b58455.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="取石子游戏-HDU-1527"><a href="#取石子游戏-HDU-1527" class="headerlink" title="取石子游戏(HDU-1527)"></a>取石子游戏(<a href="https://vjudge.net/problem/HDU-1527" target="_blank" rel="noopener">HDU-1527</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>有两堆石子，数量任意，可以不同。游戏开始由两个人轮流取石子。游戏规定，每次有两种不同的取法，一是可以在任意的一堆中取走任意多的石子；二是可以在两堆中同时取走相同数量的石子。最后把石子全部取完者为胜者。现在给出初始的两堆石子的数目，如果轮到你先取，假设双方都采取最好的策略，问最后你是胜者还是败者。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入包含若干行，表示若干种石子的初始情况，其中每一行包含两个非负整数a和b，表示两堆石子的数目，a和b都不大于1,000,000,000。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>输出对应也有若干行，每行包含一个数字1或0，如果最后你是胜者，则为1，反之，则为0。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">2 </span><span class="number">1</span></span><br><span class="line"><span class="symbol">8 </span><span class="number">4</span></span><br><span class="line"><span class="symbol">4 </span><span class="number">7</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">0</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">0</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>Wythoff博弈</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a, b;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;a, &amp;b))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(a &gt; b) swap(a, b);</span><br><span class="line">        <span class="keyword">if</span>(a == (<span class="keyword">int</span>)((<span class="built_in">sqrt</span>(<span class="number">5</span>)+<span class="number">1</span>)/<span class="number">2</span> * (b-a)))&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"0\n"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"1\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>博弈论</category>
      </categories>
      <tags>
        <tag>博弈论</tag>
        <tag>Wythoff博弈</tag>
        <tag>HDU</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】HDU-1686 Oulipo</title>
    <url>/posts/54eee09e.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="Oulipo-HDU-1686"><a href="#Oulipo-HDU-1686" class="headerlink" title="Oulipo (HDU - 1686)"></a>Oulipo (<a href="https://vjudge.net/problem/HDU-1686" target="_blank" rel="noopener">HDU - 1686</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>The French author Georges Perec (1936–1982) once wrote a book, La disparition, without the letter ‘e’. He was a member of the Oulipo group. A quote from the book:</p><p>Tout avait Pair normal, mais tout s’affirmait faux. Tout avait Fair normal, d’abord, puis surgissait l’inhumain, l’affolant. Il aurait voulu savoir où s’articulait l’association qui l’unissait au roman : stir son tapis, assaillant à tout instant son imagination, l’intuition d’un tabou, la vision d’un mal obscur, d’un quoi vacant, d’un non-dit : la vision, l’avision d’un oubli commandant tout, où s’abolissait la raison : tout avait l’air normal mais…</p><p>Perec would probably have scored high (or rather, low) in the following contest. People are asked to write a perhaps even meaningful text on some subject with as few occurrences of a given “word” as possible. Our task is to provide the jury with a program that counts these occurrences, in order to obtain a ranking of the competitors. These competitors often write very long texts with nonsense meaning; a sequence of 500,000 consecutive ‘T’s is not unusual. And they never use spaces.</p><p>So we want to quickly find out how often a word, i.e., a given string, occurs in a text. More formally: given the alphabet {‘A’, ‘B’, ‘C’, …, ‘Z’} and two finite strings over that alphabet, a word W and a text T, count the number of occurrences of W in T. All the consecutive characters of W must exactly match consecutive characters of T. Occurrences may overlap.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>The first line of the input file contains a single number: the number of test cases to follow. Each test case has the following format:</p><p>One line with the word W, a string over {‘A’, ‘B’, ‘C’, …, ‘Z’}, with 1 ≤ |W| ≤ 10,000 (here |W| denotes the length of the string W).<br>One line with the text T, a string over {‘A’, ‘B’, ‘C’, …, ‘Z’}, with |W| ≤ |T| ≤ 1,000,000.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For every test case in the input file, the output should contain a single number, on a single line: the number of occurrences of the word W in the text T.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight armasm"><table><tr><td class="code"><pre><span class="line"><span class="number">3</span></span><br><span class="line"><span class="keyword">BAPC</span></span><br><span class="line"><span class="keyword">BAPC</span></span><br><span class="line"><span class="keyword">AZA</span></span><br><span class="line"><span class="keyword">AZAZAZA</span></span><br><span class="line"><span class="keyword">VERDI</span></span><br><span class="line"><span class="keyword">AVERDXIVYERDIAN</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">0</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>KMP模板题</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> s[mxn], t[mxn];</span><br><span class="line"><span class="keyword">int</span> nxt[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getnxt</span><span class="params">(<span class="keyword">char</span>* t, <span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">-1</span>; nxt[<span class="number">0</span>] = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; m) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (j == <span class="number">-1</span> || t[i] == t[j]) &#123;</span><br><span class="line">            i++, j++;</span><br><span class="line">            <span class="comment">// if (t[i] == t[j])</span></span><br><span class="line">            <span class="comment">//     nxt[i] = nxt[j]; // next数组优化</span></span><br><span class="line">            <span class="comment">// else</span></span><br><span class="line">                nxt[i] = j;</span><br><span class="line">        &#125; <span class="keyword">else</span></span><br><span class="line">            j = nxt[j];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">KMP</span><span class="params">(<span class="keyword">char</span>* s, <span class="keyword">char</span>* t, <span class="keyword">int</span> n, <span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>, ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; n) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (j == <span class="number">-1</span> || s[i] == t[j]) &#123;</span><br><span class="line">            i++, j++;</span><br><span class="line">            <span class="keyword">if</span> (j &gt;= m) &#123;   <span class="comment">// 匹配</span></span><br><span class="line">                ans++;</span><br><span class="line">                j = nxt[j];</span><br><span class="line">                <span class="comment">// return i-j;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span></span><br><span class="line">            j = nxt[j];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">    <span class="comment">// return -1;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s%s"</span>, t, s);</span><br><span class="line">        <span class="keyword">int</span> tl = <span class="built_in">strlen</span>(t), sl = <span class="built_in">strlen</span>(s);</span><br><span class="line">        getnxt(t, tl);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, KMP(s, t, sl, tl));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>字符串</category>
        <category>模式匹配</category>
        <category>KMP</category>
      </categories>
      <tags>
        <tag>KMP</tag>
        <tag>kuangbin 专题十六</tag>
        <tag>HDU</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】HDU-1711 Number Sequence</title>
    <url>/posts/f850f733.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="Number-Sequence-HDU-1711"><a href="#Number-Sequence-HDU-1711" class="headerlink" title="Number Sequence (HDU-1711)"></a>Number Sequence (<a href="https://vjudge.net/problem/HDU-1711" target="_blank" rel="noopener">HDU-1711</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>Given two sequences of numbers : a[1], a[2], …… , a[N], and b[1], b[2], …… , b[M] (1 &lt;= M &lt;= 10000, 1 &lt;= N &lt;= 1000000). Your task is to find a number K which make a[K] = b[1], a[K + 1] = b[2], …… , a[K + M - 1] = b[M]. If there are more than one K exist, output the smallest one.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>The first line of input is a number T which indicate the number of cases. Each case contains three lines. The first line is two numbers N and M (1 &lt;= M &lt;= 10000, 1 &lt;= N &lt;= 1000000). The second line contains N integers which indicate a[1], a[2], …… , a[N]. The third line contains M integers which indicate b[1], b[2], …… , b[M]. All integers are in the range of [-1000000, 1000000].</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For each test case, you should output one line which only contain K described above. If no such K exists, output -1 instead.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="number">2</span></span><br><span class="line"><span class="symbol">13 </span><span class="number">5</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">2</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">1</span> <span class="number">3</span> <span class="number">2</span> <span class="number">1</span> <span class="number">2</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">2</span> <span class="number">3</span> <span class="number">1</span> <span class="number">3</span></span><br><span class="line"><span class="symbol">13 </span><span class="number">5</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">2</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">1</span> <span class="number">3</span> <span class="number">2</span> <span class="number">1</span> <span class="number">2</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">2</span> <span class="number">3</span> <span class="number">2</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">6</span></span><br><span class="line"><span class="number">-1</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>KMP模板题</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> s[mxn], t[mxn];</span><br><span class="line"><span class="keyword">int</span> nxt[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getnxt</span><span class="params">(<span class="keyword">int</span>* t, <span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">-1</span>; nxt[<span class="number">0</span>] = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; m) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (j == <span class="number">-1</span> || t[i] == t[j]) &#123;</span><br><span class="line">            i++, j++;</span><br><span class="line">            <span class="comment">// if (t[i] == t[j])</span></span><br><span class="line">            <span class="comment">//     nxt[i] = nxt[j]; // next数组优化</span></span><br><span class="line">            <span class="comment">// else</span></span><br><span class="line">                nxt[i] = j;</span><br><span class="line">        &#125; <span class="keyword">else</span></span><br><span class="line">            j = nxt[j];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">KMP</span><span class="params">(<span class="keyword">int</span>* s, <span class="keyword">int</span>* t, <span class="keyword">int</span> n, <span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>, ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; n) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (j == <span class="number">-1</span> || s[i] == t[j]) &#123;</span><br><span class="line">            i++, j++;</span><br><span class="line">            <span class="keyword">if</span> (j &gt;= m) &#123;   <span class="comment">// 匹配</span></span><br><span class="line">                <span class="comment">// ans++;</span></span><br><span class="line">                <span class="comment">// j = nxt[j];</span></span><br><span class="line">                <span class="keyword">return</span> i-j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span></span><br><span class="line">            j = nxt[j];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// return ans;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> n, m;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;n, &amp;m);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;s[i]);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;m; i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;t[i]);</span><br><span class="line">        getnxt(t, m);</span><br><span class="line">        <span class="keyword">int</span> ans = KMP(s, t, n, m);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans == <span class="number">-1</span> ? <span class="number">-1</span> : ans+<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>字符串</category>
        <category>模式匹配</category>
        <category>KMP</category>
      </categories>
      <tags>
        <tag>KMP</tag>
        <tag>kuangbin 专题十六</tag>
        <tag>HDU</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】HDU-1805 Being a Good Boy in Spring Festival</title>
    <url>/posts/8be1193a.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="Being-a-Good-Boy-in-Spring-Festival-HDU-1805"><a href="#Being-a-Good-Boy-in-Spring-Festival-HDU-1805" class="headerlink" title="Being a Good Boy in Spring Festival(HDU-1805)"></a>Being a Good Boy in Spring Festival(<a href="https://vjudge.net/problem/HDU-1850" target="_blank" rel="noopener">HDU-1805</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>一年在外 父母时刻牵挂<br>春节回家 你能做几天好孩子吗<br>寒假里尝试做做下面的事情吧</p><p>陪妈妈逛一次菜场<br>悄悄给爸爸买个小礼物<br>主动地 强烈地 要求洗一次碗<br>某一天早起 给爸妈用心地做回早餐</p><p>如果愿意 你还可以和爸妈说<br>咱们玩个小游戏吧 ACM课上学的呢～</p><p>下面是一个二人小游戏：桌子上有M堆扑克牌；每堆牌的数量分别为Ni(i=1…M)；两人轮流进行；每走一步可以任意选择一堆并取走其中的任意张牌；桌子上的扑克全部取光，则游戏结束；最后一次取牌的人为胜者。<br>现在我们不想研究到底先手为胜还是为负，我只想问大家：<br>——“先手的人如果想赢，第一步有几种选择呢？”</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入数据包含多个测试用例，每个测试用例占2行，首先一行包含一个整数M(1&lt;M&lt;=100)，表示扑克牌的堆数，紧接着一行包含M个整数Ni(1&lt;=Ni&lt;=1000000，i=1…M)，分别表示M堆扑克的数量。M为0则表示输入数据的结束。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>如果先手的人能赢，请输出他第一步可行的方案数，否则请输出0，每个实例的输出占一行。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="number">3</span></span><br><span class="line"><span class="symbol">5 </span><span class="number">7</span> <span class="number">9</span></span><br><span class="line"><span class="number">0</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>Nim博弈</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> a[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n) &amp;&amp; n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> nim = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]);</span><br><span class="line">            nim ^= a[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(nim)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">                <span class="keyword">if</span>(a[i] &gt; (a[i]^nim))</span><br><span class="line">                    ans++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>博弈论</category>
      </categories>
      <tags>
        <tag>博弈论</tag>
        <tag>Nim博弈</tag>
        <tag>HDU</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】HDU-1827 Summer Holiday</title>
    <url>/posts/b432dba3.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="Summer-Holiday-HDU-1827"><a href="#Summer-Holiday-HDU-1827" class="headerlink" title="Summer Holiday (HDU - 1827)"></a>Summer Holiday (<a href="https://vjudge.net/problem/HDU-1827" target="_blank" rel="noopener">HDU - 1827</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>To see a World in a Grain of Sand<br>And a Heaven in a Wild Flower,<br>Hold Infinity in the palm of your hand<br>And Eternity in an hour.<br>—— William Blake</p><p>听说lcy帮大家预定了新马泰7日游，Wiskey真是高兴的夜不能寐啊，他想着得快点把这消息告诉大家，虽然他手上有所有人的联系方式，但是一个一个联系过去实在太耗时间和电话费了。他知道其他人也有一些别人的联系方式，这样他可以通知其他人，再让其他人帮忙通知一下别人。你能帮Wiskey计算出至少要通知多少人，至少得花多少电话费就能让所有人都被通知到吗？</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>多组测试数组，以EOF结束。<br>第一行两个整数N和M（1&lt;=N&lt;=1000, 1&lt;=M&lt;=2000），表示人数和联系对数。<br>接下一行有N个整数，表示Wiskey联系第i个人的电话费用。<br>接着有M行，每行有两个整数X，Y，表示X能联系到Y，但是不表示Y也能联系X。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>输出最小联系人数和最小花费。<br>每个CASE输出答案一行。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">12 </span><span class="number">16</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">2</span> <span class="number">2</span> <span class="number">2</span> <span class="number">2</span> <span class="number">2</span> <span class="number">2</span> <span class="number">2</span> <span class="number">2</span> <span class="number">2</span> <span class="number">2</span> <span class="number">2</span> </span><br><span class="line"><span class="symbol">1 </span><span class="number">3</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">2</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">1</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">4</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">4</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">5</span></span><br><span class="line"><span class="symbol">5 </span><span class="number">4</span></span><br><span class="line"><span class="symbol">4 </span><span class="number">6</span></span><br><span class="line"><span class="symbol">6 </span><span class="number">4</span></span><br><span class="line"><span class="symbol">7 </span><span class="number">4</span></span><br><span class="line"><span class="symbol">7 </span><span class="number">12</span></span><br><span class="line"><span class="symbol">7 </span><span class="number">8</span></span><br><span class="line"><span class="symbol">8 </span><span class="number">7</span></span><br><span class="line"><span class="symbol">8 </span><span class="number">9</span></span><br><span class="line"><span class="symbol">10 </span><span class="number">9</span></span><br><span class="line"><span class="symbol">11 </span><span class="number">10</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">3 </span><span class="number">6</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">2e4</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M = <span class="number">5e4</span>+<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">E</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> to, next;</span><br><span class="line">&#125; e[M];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> H[N], tot;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> S[N], top;</span><br><span class="line"><span class="keyword">int</span> dfn[N], low[N], bel[N], idx, scc;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m, cost[N];</span><br><span class="line"><span class="keyword">int</span> u, v;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> sc[N], id[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> from, <span class="keyword">int</span> to)</span> </span>&#123;</span><br><span class="line">    e[tot] = &#123;to, H[from]&#125;;</span><br><span class="line">    H[from] = tot++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u)</span> </span>&#123;</span><br><span class="line">    dfn[u] = low[u] = ++idx;</span><br><span class="line">    S[++top]=u;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=H[u]; ~i; i=e[i].next) &#123;</span><br><span class="line">        <span class="keyword">int</span> v = e[i].to;</span><br><span class="line">        <span class="keyword">if</span>(!dfn[v]) &#123;</span><br><span class="line">            dfs(v);</span><br><span class="line">            low[u] = min(low[u], low[v]);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(!bel[v])</span><br><span class="line">            low[u] = min(low[u], dfn[v]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(low[u]==dfn[u]) &#123;</span><br><span class="line">        scc++;</span><br><span class="line">        <span class="keyword">int</span> t;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            t=S[top--];</span><br><span class="line">            bel[t]=scc;</span><br><span class="line">        &#125; <span class="keyword">while</span>(t!=u);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">tarjan</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(dfn, <span class="number">0</span>, <span class="keyword">sizeof</span>(dfn));</span><br><span class="line">    <span class="built_in">memset</span>(bel, <span class="number">0</span>, <span class="keyword">sizeof</span>(bel));</span><br><span class="line">    idx = scc = top = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(!dfn[i])</span><br><span class="line">            dfs(i);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">(<span class="keyword">int</span> &amp;num, <span class="keyword">int</span> &amp;sum)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(sc, inf, <span class="keyword">sizeof</span>(sc));</span><br><span class="line">    <span class="built_in">memset</span>(id, <span class="number">0</span>, <span class="keyword">sizeof</span>(id));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        sc[bel[i]] = min(sc[bel[i]], cost[i]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> u=<span class="number">1</span>; u&lt;=n; u++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=H[u]; ~i; i=e[i].next) &#123;</span><br><span class="line">            <span class="keyword">int</span> v = e[i].to;</span><br><span class="line">            <span class="keyword">if</span>(bel[u]!=bel[v]) &#123;</span><br><span class="line">                id[bel[v]]++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> a=<span class="number">0</span>, b=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=scc; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(!id[i])</span><br><span class="line">            num++, sum+=sc[i];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;m)==<span class="number">2</span>) &#123;</span><br><span class="line">        <span class="built_in">memset</span>(H, <span class="number">-1</span>, <span class="keyword">sizeof</span>(H));</span><br><span class="line">        tot = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;cost[i]);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;m; i++) &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;u, &amp;v);</span><br><span class="line">            add(u, v);</span><br><span class="line">        &#125;</span><br><span class="line">        tarjan();</span><br><span class="line">        <span class="keyword">int</span> num=<span class="number">0</span>, sum=<span class="number">0</span>;</span><br><span class="line">        solve(num, sum);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>, num, sum);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>图论</category>
        <category>连通性</category>
        <category>强连通分量</category>
        <category>Tarjan</category>
      </categories>
      <tags>
        <tag>HDU</tag>
        <tag>Tarjan</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】HDU-1846 Brave Game</title>
    <url>/posts/980a3c4e.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="Brave-Game-HDU-1846"><a href="#Brave-Game-HDU-1846" class="headerlink" title="Brave Game(HDU-1846)"></a>Brave Game(<a href="https://vjudge.net/problem/HDU-1846" target="_blank" rel="noopener">HDU-1846</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>十年前读大学的时候，中国每年都要从国外引进一些电影大片，其中有一部电影就叫《勇敢者的游戏》（英文名称：Zathura），一直到现在，我依然对于电影中的部分电脑特技印象深刻。<br>今天，大家选择上机考试，就是一种勇敢（brave）的选择；这个短学期，我们讲的是博弈（game）专题；所以，大家现在玩的也是“勇敢者的游戏”，这也是我命名这个题目的原因。<br>当然，除了“勇敢”，我还希望看到“诚信”，无论考试成绩如何，希望看到的都是一个真实的结果，我也相信大家一定能做到的~</p><p>各位勇敢者要玩的第一个游戏是什么呢？很简单，它是这样定义的：<br>1、 本游戏是一个二人游戏;<br>2、 有一堆石子一共有n个；<br>3、 两人轮流进行;<br>4、 每走一步可以取走1…m个石子；<br>5、 最先取光石子的一方为胜；</p><p>如果游戏的双方使用的都是最优策略，请输出哪个人能赢。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入数据首先包含一个正整数C(C&lt;=100)，表示有C组测试数据。<br>每组测试数据占一行，包含两个整数n和m（1&lt;=n,m&lt;=1000），n和m的含义见题目描述。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>如果先走的人能赢，请输出“first”，否则请输出“second”，每个实例的输出占一行。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="number">2</span></span><br><span class="line"><span class="symbol">23 </span><span class="number">2</span></span><br><span class="line"><span class="symbol">4 </span><span class="number">3</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">first</span></span><br><span class="line"><span class="keyword">second</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>Bash博弈</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> n, m; </span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;n, &amp;m);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(n%(m+<span class="number">1</span>)==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"second\n"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"first\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>博弈论</category>
      </categories>
      <tags>
        <tag>博弈论</tag>
        <tag>Bash博弈</tag>
        <tag>HDU</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】HDU-1847 Good Luck in CET-4 Everybody!</title>
    <url>/posts/5a5f7567.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="Good-Luck-in-CET-4-Everybody-HDU-1847"><a href="#Good-Luck-in-CET-4-Everybody-HDU-1847" class="headerlink" title="Good Luck in CET-4 Everybody!(HDU-1847)"></a>Good Luck in CET-4 Everybody!(<a href="https://vjudge.net/problem/HDU-1847" target="_blank" rel="noopener">HDU-1847</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>大学英语四级考试就要来临了，你是不是在紧张的复习？也许紧张得连短学期的ACM都没工夫练习了，反正我知道的Kiki和Cici都是如此。当然，作为在考场浸润了十几载的当代大学生，Kiki和Cici更懂得考前的放松，所谓“张弛有道”就是这个意思。这不，Kiki和Cici在每天晚上休息之前都要玩一会儿扑克牌以放松神经。<br>“升级”？“双扣”？“红五”？还是“斗地主”？<br>当然都不是！那多俗啊~<br>作为计算机学院的学生，Kiki和Cici打牌的时候可没忘记专业，她们打牌的规则是这样的：<br>1、 总共n张牌;<br>2、 双方轮流抓牌；<br>3、 每人每次抓牌的个数只能是2的幂次（即：1，2，4，8，16…）<br>4、 抓完牌，胜负结果也出来了：最后抓完牌的人为胜者；<br>假设Kiki和Cici都是足够聪明（其实不用假设，哪有不聪明的学生~），并且每次都是Kiki先抓牌，请问谁能赢呢？<br>当然，打牌无论谁赢都问题不大，重要的是马上到来的CET-4能有好的状态。</p><p>Good luck in CET-4 everybody!</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入数据包含多个测试用例，每个测试用例占一行，包含一个整数n（1&lt;=n&lt;=1000）。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>如果Kiki能赢的话，请输出“Kiki”，否则请输出“Cici”，每个实例的输出占一行。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">Kiki</span></span><br><span class="line"><span class="attribute">Cici</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>打表，n为3的倍数时，先手必败</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n) &amp;&amp; n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(n%<span class="number">3</span>==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Cici\n"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Kiki\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>博弈论</category>
      </categories>
      <tags>
        <tag>博弈论</tag>
        <tag>HDU</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】HDU-1848 Fibonacci again and again</title>
    <url>/posts/59ec8781.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="Fibonacci-again-and-again-HDU-1848"><a href="#Fibonacci-again-and-again-HDU-1848" class="headerlink" title="Fibonacci again and again(HDU-1848)"></a>Fibonacci again and again(<a href="https://vjudge.net/problem/HDU-1848" target="_blank" rel="noopener">HDU-1848</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>任何一个大学生对菲波那契数列(Fibonacci numbers)应该都不会陌生，它是这样定义的：<br>F(1)=1;<br>F(2)=2;<br>F(n)=F(n-1)+F(n-2)(n&gt;=3);<br>所以，1,2,3,5,8,13……就是菲波那契数列。<br>在HDOJ上有不少相关的题目，比如1005 Fibonacci again就是曾经的浙江省赛题。<br>今天，又一个关于Fibonacci的题目出现了，它是一个小游戏，定义如下：<br>1、 这是一个二人游戏;<br>2、 一共有3堆石子，数量分别是m, n, p个；<br>3、 两人轮流走;<br>4、 每走一步可以选择任意一堆石子，然后取走f个；<br>5、 f只能是菲波那契数列中的元素（即每次只能取1，2，3，5，8…等数量）；<br>6、 最先取光所有石子的人为胜者；</p><p>假设双方都使用最优策略，请判断先手的人会赢还是后手的人会赢。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入数据包含多个测试用例，每个测试用例占一行，包含3个整数m,n,p（1&lt;=m,n,p&lt;=1000）。<br>m=n=p=0则表示输入结束。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>如果先手的人能赢，请输出“Fibo”，否则请输出“Nacci”，每个实例的输出占一行。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">1 </span><span class="number">1</span> <span class="number">1</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">4</span> <span class="number">1</span></span><br><span class="line"><span class="symbol">0 </span><span class="number">0</span> <span class="number">0</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">Fibo</span></span><br><span class="line"><span class="attribute">Nacci</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>预处理斐波那契数列，SG函数打表。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> SG[<span class="number">1000</span>], f[<span class="number">1000</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fib</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">    f[<span class="number">1</span>] = f[<span class="number">2</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">3</span>; ; i++)&#123;</span><br><span class="line">        f[i] = f[i<span class="number">-1</span>] + f[i<span class="number">-2</span>];</span><br><span class="line">        <span class="keyword">if</span>(f[i] &gt; n) <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getSg</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">        <span class="keyword">bool</span> S[<span class="number">1000</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; f[j]&lt;=i; j++)&#123;</span><br><span class="line">            S[SG[i-f[j]]] = <span class="number">1</span>;</span><br><span class="line">        &#125;    </span><br><span class="line">        <span class="keyword">int</span> mex=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(S[mex]) mex++;</span><br><span class="line">        SG[i]=mex;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    fib(<span class="number">1000</span>);</span><br><span class="line">    getSg(<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> n, m, p;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>, &amp;n, &amp;m, &amp;p) &amp;&amp; n &amp;&amp; m &amp;&amp; p)</span><br><span class="line">    &#123; </span><br><span class="line">        <span class="keyword">if</span>(SG[n] ^ SG[m] ^ SG[p])&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Fibo\n"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Nacci\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>博弈论</category>
      </categories>
      <tags>
        <tag>博弈论</tag>
        <tag>SG函数</tag>
        <tag>HDU</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】HDU-1849 Rabbit and Grass</title>
    <url>/posts/4f88a2e6.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="Rabbit-and-Grass-HDU-1849"><a href="#Rabbit-and-Grass-HDU-1849" class="headerlink" title="Rabbit and Grass(HDU-1849)"></a>Rabbit and Grass(<a href="https://vjudge.net/problem/HDU-1849" target="_blank" rel="noopener">HDU-1849</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>大学时光是浪漫的，女生是浪漫的，圣诞更是浪漫的，但是Rabbit和Grass这两个大学女生在今年的圣诞节却表现得一点都不浪漫：不去逛商场，不去逛公园，不去和AC男约会，两个人竟然猫在寝食下棋……<br>说是下棋，其实只是一个简单的小游戏而已，游戏的规则是这样的：<br>1、棋盘包含1*n个方格，方格从左到右分别编号为0，1，2，…，n-1；<br>2、m个棋子放在棋盘的方格上，方格可以为空，也可以放多于一个的棋子；<br>3、双方轮流走棋；<br>4、每一步可以选择任意一个棋子向左移动到任意的位置（可以多个棋子位于同一个方格），当然，任何棋子不能超出棋盘边界；<br>5、如果所有的棋子都位于最左边（即编号为0的位置），则游戏结束，并且规定最后走棋的一方为胜者。</p><p>对于本题，你不需要考虑n的大小（我们可以假设在初始状态，棋子总是位于棋盘的适当位置）。下面的示意图即为一个1*15的棋盘，共有6个棋子，其中，编号8的位置有两个棋子。</p><p><img src="https://vj.z180.cn/6a067d51d92b3f8822e1ce20cac5a5b2?v=1594266833" alt="img"></p><p>大家知道，虽然偶尔不够浪漫，但是Rabbit和Grass都是冰雪聪明的女生，如果每次都是Rabbit先走棋，请输出最后的结果。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入数据包含多组测试用例，每个测试用例占二行，首先一行包含一个整数m（0&lt;=m&lt;=1000），表示本测试用例的棋子数目，紧跟着的一行包含m个整数Ki(i=1…m; 0&lt;=Ki&lt;=1000)，分别表示m个棋子初始的位置，m=0则结束输入。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>如果Rabbit能赢的话，请输出“Rabbit Win!”，否则请输出“Grass Win!”，每个实例的输出占一行。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">2 </span></span><br><span class="line"><span class="symbol">3 </span><span class="number">5</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">5</span> <span class="number">6</span></span><br><span class="line"><span class="number">0</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight erlang-repl"><table><tr><td class="code"><pre><span class="line">Rabbit Win!</span><br><span class="line">Grass Win!</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>Nim博弈</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n) &amp;&amp; n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> nim = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> x; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;x);</span><br><span class="line">            nim ^= x;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(nim)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Rabbit Win!\n"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Grass Win!\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>博弈论</category>
      </categories>
      <tags>
        <tag>博弈论</tag>
        <tag>Nim博弈</tag>
        <tag>HDU</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】HDU-2087 剪花布条</title>
    <url>/posts/af28da96.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="剪花布条-HDU-2087"><a href="#剪花布条-HDU-2087" class="headerlink" title="剪花布条 (HDU-2087)"></a>剪花布条 (<a href="https://vjudge.net/problem/HDU-2087" target="_blank" rel="noopener">HDU-2087</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>一块花布条，里面有些图案，另有一块直接可用的小饰条，里面也有一些图案。对于给定的花布条和小饰条，计算一下能从花布条中尽可能剪出几块小饰条来呢？</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入中含有一些数据，分别是成对出现的花布条和小饰条，其布条都是用可见ASCII字符表示的，可见的ASCII字符有多少个，布条的花纹也有多少种花样。花纹条和小饰条不会超过1000个字符长。如果遇见#字符，则不再进行工作。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>输出能从花纹布中剪出的最多小饰条个数，如果一块都没有，那就老老实实输出0，每个结果之间应换行。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">abcde</span> <span class="string">a3</span></span><br><span class="line"><span class="attr">aaaaaa</span>  <span class="string">aa</span></span><br><span class="line"><span class="comment">#</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">0</span></span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>KMP模板题，注意匹配成功之后j=0而不是继续接着上一个的。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> s[mxn], t[mxn];</span><br><span class="line"><span class="keyword">int</span> nxt[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getnxt</span><span class="params">(<span class="keyword">char</span>* t, <span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">-1</span>; nxt[<span class="number">0</span>] = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; m) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (j == <span class="number">-1</span> || t[i] == t[j]) &#123;</span><br><span class="line">            i++, j++;</span><br><span class="line">            <span class="comment">// if (t[i] == t[j])</span></span><br><span class="line">            <span class="comment">//     nxt[i] = nxt[j]; // next数组优化</span></span><br><span class="line">            <span class="comment">// else</span></span><br><span class="line">                nxt[i] = j;</span><br><span class="line">        &#125; <span class="keyword">else</span></span><br><span class="line">            j = nxt[j];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">KMP</span><span class="params">(<span class="keyword">char</span>* s, <span class="keyword">char</span>* t, <span class="keyword">int</span> n, <span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>, ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; n) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (j == <span class="number">-1</span> || s[i] == t[j]) &#123;</span><br><span class="line">            i++, j++;</span><br><span class="line">            <span class="keyword">if</span> (j &gt;= m) &#123;   <span class="comment">// 匹配</span></span><br><span class="line">                ans++;</span><br><span class="line">                j = <span class="number">0</span>;</span><br><span class="line">                <span class="comment">// return i-j;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span></span><br><span class="line">            j = nxt[j];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">    <span class="comment">// return -1;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%s"</span>, s)==<span class="number">1</span> &amp;&amp; <span class="built_in">strcmp</span>(s, <span class="string">"#"</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>, t);</span><br><span class="line">        <span class="keyword">int</span> tl = <span class="built_in">strlen</span>(t), sl = <span class="built_in">strlen</span>(s);</span><br><span class="line">        getnxt(t, tl);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, KMP(s, t, sl, tl));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>字符串</category>
        <category>模式匹配</category>
        <category>KMP</category>
      </categories>
      <tags>
        <tag>KMP</tag>
        <tag>kuangbin 专题十六</tag>
        <tag>HDU</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】HDU-2147 kiki&#39;s game</title>
    <url>/posts/78149d59.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="kiki’s-game-HDU-2147"><a href="#kiki’s-game-HDU-2147" class="headerlink" title="kiki’s game(HDU-2147)"></a>kiki’s game(<a href="https://vjudge.net/problem/HDU-2147" target="_blank" rel="noopener">HDU-2147</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>Recently kiki has nothing to do. While she is bored, an idea appears in his mind, she just playes the checkerboard game.The size of the chesserboard is n*m.First of all, a coin is placed in the top right corner(1,m). Each time one people can move the coin into the left, the underneath or the left-underneath blank space.The person who can’t make a move will lose the game. kiki plays it with ZZ.The game always starts with kiki. If both play perfectly, who will win the game?</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>Input contains multiple test cases. Each line contains two integer n, m (0&lt;n,m&lt;=2000). The input is terminated when n=0 and m=0.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>If kiki wins the game printf “Wonderful!”, else “What a pity!”.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">5 </span><span class="number">3</span></span><br><span class="line"><span class="symbol">5 </span><span class="number">4</span></span><br><span class="line"><span class="symbol">6 </span><span class="number">6</span></span><br><span class="line"><span class="symbol">0 </span><span class="number">0</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight erlang-repl"><table><tr><td class="code"><pre><span class="line">What a pity!</span><br><span class="line">Wonderful!</span><br><span class="line">Wonderful!</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>如果行列都为奇数时，先手必败</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, m;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;n, &amp;m) &amp;&amp; n &amp;&amp; m)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>((n&amp;<span class="number">1</span>) &amp;&amp; (m&amp;<span class="number">1</span>))&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"What a pity!\n"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Wonderful!\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>博弈论</category>
      </categories>
      <tags>
        <tag>博弈论</tag>
        <tag>HDU</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】HDU-2149 Public Sale</title>
    <url>/posts/21d8d6e0.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="Public-Sale-HDU-2149"><a href="#Public-Sale-HDU-2149" class="headerlink" title="Public Sale(HDU-2149)"></a>Public Sale(<a href="https://vjudge.net/problem/HDU-2149" target="_blank" rel="noopener">HDU-2149</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>虽然不想，但是现实总归是现实，Lele始终没有逃过退学的命运，因为他没有拿到奖学金。现在等待他的，就是像FarmJohn一样的农田生涯。</p><p>要种田得有田才行，Lele听说街上正在举行一场别开生面的拍卖会，拍卖的物品正好就是一块20亩的田地。于是，Lele带上他的全部积蓄，冲往拍卖会。</p><p>后来发现，整个拍卖会只有Lele和他的死对头Yueyue。</p><p>通过打听，Lele知道这场拍卖的规则是这样的：刚开始底价为0，两个人轮流开始加价，不过每次加价的幅度要在1～N之间，当价格大于或等于田地的成本价 M 时，主办方就把这块田地卖给这次叫价的人。</p><p>Lele和Yueyue虽然考试不行，但是对拍卖却十分精通，而且他们两个人都十分想得到这块田地。所以他们每次都是选对自己最有利的方式进行加价。</p><p>由于Lele字典序比Yueyue靠前，所以每次都是由Lele先开始加价，请问，第一次加价的时候，<br>Lele要出多少才能保证自己买得到这块地呢？</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>本题目包含多组测试，请处理到文件结束(EOF)。每组测试占一行。<br>每组测试包含两个整数M和N(含义见题目描述，0&lt;N，M&lt;1100)</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>对于每组数据，在一行里按递增的顺序输出Lele第一次可以加的价。两个数据之间用空格隔开。<br>如果Lele在第一次无论如何出价都无法买到这块土地，就输出”none”。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">4 </span><span class="number">2</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">2</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">5</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line">none</span><br><span class="line"><span class="number">3</span> <span class="number">4</span> <span class="number">5</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>Bash博弈</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, m;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;m, &amp;n))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(m%(n+<span class="number">1</span>)==<span class="number">0</span>) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"none\n"</span>);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d"</span>, m%(n+<span class="number">1</span>));</span><br><span class="line">        <span class="keyword">if</span>(m&lt;n)</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=m+<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">" %d"</span>, i);</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>博弈论</category>
      </categories>
      <tags>
        <tag>博弈论</tag>
        <tag>Bash博弈</tag>
        <tag>HDU</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】HDU-2177 取(2堆)石子游戏</title>
    <url>/posts/438632f1.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="取-2堆-石子游戏-HDU-2177"><a href="#取-2堆-石子游戏-HDU-2177" class="headerlink" title="取(2堆)石子游戏(HDU-2177)"></a>取(2堆)石子游戏(<a href="https://vjudge.net/problem/HDU-2177" target="_blank" rel="noopener">HDU-2177</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>有两堆石子，数量任意，可以不同。游戏开始由两个人轮流取石子。游戏规定，每次有两种不同的取法，一是可以在任意的一堆中取走任意多的石子；二是可以在两堆中同时取走相同数量的石子。最后把石子全部取完者为胜者。现在给出初始的两堆石子的数目，如果轮到你先取，假设双方都采取最好的策略，问最后你是胜者还是败者。如果你胜，你第1次怎样取子?</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入包含若干行，表示若干种石子的初始情况，其中每一行包含两个非负整数a和b，表示两堆石子的数目，a和b都不大于1,000,000，且a&lt;=b。a=b=0退出。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>输出也有若干行，如果最后你是败者，则为0，反之，输出1，并输出使你胜的你第1次取石子后剩下的两堆石子的数量x,y,x&lt;=y。如果在任意的一堆中取走石子能胜同时在两堆中同时取走相同数量的石子也能胜，先输出取走相同数量的石子的情况.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">1 </span><span class="number">2</span> </span><br><span class="line"><span class="symbol">5 </span><span class="number">8</span></span><br><span class="line"><span class="symbol">4 </span><span class="number">7</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">2</span></span><br><span class="line"><span class="symbol">0 </span><span class="number">0</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="number">0</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="symbol">4 </span><span class="number">7</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">5</span></span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="symbol">0 </span><span class="number">0</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">2</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>Wythoff博弈，由b-a可以算出同时取的情况，然后暴力枚举一下单个取的情况，数据很水，自己找样例测测。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> t = (<span class="built_in">sqrt</span>(<span class="number">5</span>) + <span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a, b;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;a, &amp;b) &amp;&amp; (a || b))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(a &gt; b) swap(a, b);</span><br><span class="line">        <span class="keyword">int</span> x = t * (b-a);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(a == x)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"0\n"</span>);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"1\n"</span>);</span><br><span class="line">        <span class="built_in">set</span>&lt;pii &gt; s;</span><br><span class="line">        <span class="keyword">if</span>(a&gt;x)&#123;                        <span class="comment">// 同时取</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>, x, x+b-a);</span><br><span class="line">            s.insert(pii(x, x+b-a));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=a<span class="number">-1</span>; i&gt;=<span class="number">0</span>; i--)&#123;      <span class="comment">// 取a</span></span><br><span class="line">            <span class="keyword">if</span>(i==(<span class="keyword">int</span>)(t * (b-i)) &amp;&amp; s.find(pii(i, b))==s.end())&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>, i, b);</span><br><span class="line">                s.insert(pii(i, b));</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=b<span class="number">-1</span>; i&gt;=<span class="number">0</span>; i--)&#123;      <span class="comment">// 取b</span></span><br><span class="line">            <span class="keyword">int</span> n=min(a, i), m=max(a, i);</span><br><span class="line">            <span class="keyword">if</span>(n==(<span class="keyword">int</span>)(t * (m-n)) &amp;&amp; s.find(pii(n, m))==s.end()) &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>, n, m);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>博弈论</category>
      </categories>
      <tags>
        <tag>博弈论</tag>
        <tag>Wythoff博弈</tag>
        <tag>HDU</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】HDU-2188 悼念512</title>
    <url>/posts/33fad116.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="悼念512汶川大地震遇难同胞——选拔志愿者-HDU-2188"><a href="#悼念512汶川大地震遇难同胞——选拔志愿者-HDU-2188" class="headerlink" title="悼念512汶川大地震遇难同胞——选拔志愿者(HDU-2188)"></a>悼念512汶川大地震遇难同胞——选拔志愿者(<a href="https://vjudge.net/problem/HDU-2188" target="_blank" rel="noopener">HDU-2188</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>对于四川同胞遭受的灾难，全国人民纷纷伸出援助之手，几乎每个省市都派出了大量的救援人员，这其中包括抢险救灾的武警部队，治疗和防疫的医护人员，以及进行心理疏导的心理学专家。根据要求，我校也有一个奔赴灾区救灾的名额，由于广大师生报名踊跃，学校不得不进行选拔来决定最后的人选。经过多轮的考核，形势逐渐明朗，最后的名额将在“林队”和“徐队”之间产生。但是很巧合，2个人的简历几乎一模一样，这让主持选拔的8600很是为难。无奈，他决定通过捐款来决定两人谁能入选。<br>选拔规则如下：<br>1、最初的捐款箱是空的；<br>2、两人轮流捐款，每次捐款额必须为正整数，并且每人每次捐款最多不超过m元(1&lt;=m&lt;=10)。<br>3、最先使得总捐款额达到或者超过n元（0&lt;n&lt;10000）的一方为胜者，则其可以亲赴灾区服务。<br>我们知道，两人都很想入选志愿者名单，并且都是非常聪明的人，假设林队先捐，请你判断谁能入选最后的名单？</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入数据首先包含一个正整数C，表示包含C组测试用例，然后是C行数据，每行包含两个正整数n，m，n和m的含义参见上面提到的规则。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>对于每组测试数据，如果林队能入选，请输出字符串”Grass”， 如果徐队能入选，请输出字符串”Rabbit”，每个实例的输出占一行。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="number">2</span></span><br><span class="line"><span class="symbol">8 </span><span class="number">10</span></span><br><span class="line"><span class="symbol">11 </span><span class="number">10</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">Grass</span></span><br><span class="line"><span class="attribute">Rabbit</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>Bash博弈。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> n, m;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;n, &amp;m);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(n%(m+<span class="number">1</span>)==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Rabbit\n"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Grass\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>博弈论</category>
      </categories>
      <tags>
        <tag>博弈论</tag>
        <tag>Bash博弈</tag>
        <tag>HDU</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】HDU-2191 悼念512</title>
    <url>/posts/d312a3fc.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="悼念512汶川大地震遇难同胞——珍惜现在，感恩生活-HDU-2191"><a href="#悼念512汶川大地震遇难同胞——珍惜现在，感恩生活-HDU-2191" class="headerlink" title="悼念512汶川大地震遇难同胞——珍惜现在，感恩生活 (HDU - 2191)"></a>悼念512汶川大地震遇难同胞——珍惜现在，感恩生活 (<a href="https://vjudge.net/problem/HDU-2191" target="_blank" rel="noopener">HDU - 2191</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>急！灾区的食物依然短缺！<br>为了挽救灾区同胞的生命，心系灾区同胞的你准备自己采购一些粮食支援灾区，现在假设你一共有资金n元，而市场有m种大米，每种大米都是袋装产品，其价格不等，并且只能整袋购买。<br>请问：你用有限的资金最多能采购多少公斤粮食呢？</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入数据首先包含一个正整数C，表示有C组测试用例，每组测试用例的第一行是两个整数n和m(1&lt;=n&lt;=100, 1&lt;=m&lt;=100),分别表示经费的金额和大米的种类，然后是m行数据，每行包含3个数p，h和c(1&lt;=p&lt;=20,1&lt;=h&lt;=200,1&lt;=c&lt;=20)，分别表示每袋的价格、每袋的重量以及对应种类大米的袋数。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>对于每组测试数据，请输出能够购买大米的最多重量，你可以假设经费买不光所有的大米，并且经费你可以不用完。每个实例的输出占一行。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line"><span class="symbol">8 </span><span class="number">2</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">100</span> <span class="number">4</span></span><br><span class="line"><span class="symbol">4 </span><span class="number">100</span> <span class="number">2</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">400</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e2</span>+<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> w, c, num;</span><br><span class="line"><span class="keyword">int</span> T, n, m;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> dp[N], q[N], k[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--) &#123;</span><br><span class="line">        <span class="built_in">memset</span>(dp, <span class="number">0</span>, <span class="keyword">sizeof</span>(dp));</span><br><span class="line">        <span class="built_in">memset</span>(q, <span class="number">0</span>, <span class="keyword">sizeof</span>(q));</span><br><span class="line">        <span class="built_in">memset</span>(k, <span class="number">0</span>, <span class="keyword">sizeof</span>(k));</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;m, &amp;n);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>, &amp;c, &amp;w, &amp;num);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> b=<span class="number">0</span>; b&lt;c; b++) &#123;</span><br><span class="line">                <span class="keyword">int</span> head=<span class="number">0</span>, tail=<span class="number">-1</span>;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j*c+b&lt;=m; j++) &#123;</span><br><span class="line">                    <span class="keyword">int</span> tmp = dp[j*c+b]-j*w;</span><br><span class="line">                    <span class="keyword">while</span>(head&lt;=tail &amp;&amp; q[tail]&lt;=tmp)</span><br><span class="line">                        tail--;</span><br><span class="line">                    k[++tail] = j;</span><br><span class="line">                    q[tail] = tmp;</span><br><span class="line">                    dp[j*c+b] = q[head]+j*w;</span><br><span class="line">                    <span class="keyword">if</span>(k[head]==j-num)</span><br><span class="line">                        head++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, dp[m]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>动态规划</category>
        <category>背包</category>
        <category>多重背包</category>
      </categories>
      <tags>
        <tag>HDU</tag>
        <tag>DP</tag>
        <tag>背包</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】HDU-2328 Corporate Identity</title>
    <url>/posts/8af7bd9c.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="Corporate-Identity-HDU-2328"><a href="#Corporate-Identity-HDU-2328" class="headerlink" title="Corporate Identity(HDU-2328)"></a>Corporate Identity(<a href="https://vjudge.net/problem/HDU-2328" target="_blank" rel="noopener">HDU-2328</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>Beside other services, ACM helps companies to clearly state their “corporate identity”, which includes company logo but also other signs, like trademarks. One of such companies is Internet Building Masters (IBM), which has recently asked ACM for a help with their new identity. IBM do not want to change their existing logos and trademarks completely, because their customers are used to the old ones. Therefore, ACM will only change existing trademarks instead of creating new ones.</p><p>After several other proposals, it was decided to take all existing trademarks and find the longest common sequence of letters that is contained in all of them. This sequence will be graphically emphasized to form a new logo. Then, the old trademarks may still be used while showing the new identity.</p><p>Your task is to find such a sequence.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>The input contains several tasks. Each task begins with a line containing a positive integer N, the number of trademarks (2 ≤ N ≤ 4000). The number is followed by N lines, each containing one trademark. Trademarks will be composed only from lowercase letters, the length of each trademark will be at least 1 and at most 200 characters.</p><p>After the last trademark, the next task begins. The last task is followed by a line containing zero.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For each task, output a single line containing the longest string contained as a substring in all trademarks. If there are several strings of the same length, print the one that is lexicographically smallest. If there is no such non-empty string, output the words “IDENTITY LOST” instead.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">3</span></span><br><span class="line">aabbaabb</span><br><span class="line">abbababb</span><br><span class="line">bbbbbabb</span><br><span class="line"><span class="number">2</span></span><br><span class="line">xyz</span><br><span class="line">abc</span><br><span class="line"><span class="number">0</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">abb</span><br><span class="line">IDENTITY LOST</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>同<a href="https://blog.lordash.cf/posts/d3a525ce.html">【题解】POJ-3080 Blue Jeans</a>，枚举子串，暴力KMP即可。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> s[mxn][mxm], t[mxm], ans[mxm];</span><br><span class="line"><span class="keyword">int</span> nxt[mxm];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getnxt</span><span class="params">(<span class="keyword">char</span>* t, <span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">-1</span>; nxt[<span class="number">0</span>] = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; m) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (j == <span class="number">-1</span> || t[i] == t[j]) &#123;</span><br><span class="line">            i++, j++;</span><br><span class="line">            <span class="comment">// if (t[i] == t[j])</span></span><br><span class="line">            <span class="comment">//     nxt[i] = nxt[j]; // next数组优化</span></span><br><span class="line">            <span class="comment">// else</span></span><br><span class="line">                nxt[i] = j;</span><br><span class="line">        &#125; <span class="keyword">else</span></span><br><span class="line">            j = nxt[j];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">KMP</span><span class="params">(<span class="keyword">char</span>* s, <span class="keyword">char</span>* t, <span class="keyword">int</span> n, <span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>, ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; n) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (j == <span class="number">-1</span> || s[i] == t[j]) &#123;</span><br><span class="line">            i++, j++;</span><br><span class="line">            <span class="keyword">if</span> (j &gt;= m) &#123;   <span class="comment">// 匹配</span></span><br><span class="line">                <span class="comment">// ans++;</span></span><br><span class="line">                <span class="comment">// j = nxt[j];</span></span><br><span class="line">                <span class="keyword">return</span> i-j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span></span><br><span class="line">            j = nxt[j];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// return ans;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n) &amp;&amp; n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) <span class="built_in">scanf</span>(<span class="string">"%s"</span>, s[i]);</span><br><span class="line">        <span class="keyword">int</span> sl = <span class="built_in">strlen</span>(s[<span class="number">0</span>]), f=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;sl; i++) <span class="comment">// 枚举模式串起点</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> tl = <span class="number">0</span>, k;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=i; j&lt;sl; j++) <span class="comment">// 枚举模式串长度</span></span><br><span class="line">            &#123;</span><br><span class="line">                t[tl++] = s[<span class="number">0</span>][j];</span><br><span class="line">                t[tl] = <span class="string">'\0'</span>;</span><br><span class="line">                getnxt(t, tl);</span><br><span class="line">                <span class="keyword">for</span>(k=<span class="number">0</span>; k&lt;n; k++)  <span class="comment">// 枚举所有文本串</span></span><br><span class="line">                    <span class="keyword">if</span>(KMP(s[k], t, sl, tl) == <span class="number">-1</span>)</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">if</span>(k&gt;=n)    <span class="comment">// 所有串公共子串</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span>(!f || tl&gt;<span class="built_in">strlen</span>(ans))&#123;   <span class="comment">// 长度最长</span></span><br><span class="line">                        <span class="built_in">strcpy</span>(ans, t); f=<span class="number">1</span>;</span><br><span class="line">                    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(tl==<span class="built_in">strlen</span>(ans) &amp;&amp; <span class="built_in">strcmp</span>(t, ans)&lt;<span class="number">0</span>)&#123;  <span class="comment">// 字典序最小</span></span><br><span class="line">                        <span class="built_in">strcpy</span>(ans, t);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!f)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"IDENTITY LOST\n"</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%s\n"</span>, ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>字符串</category>
        <category>模式匹配</category>
        <category>KMP</category>
      </categories>
      <tags>
        <tag>KMP</tag>
        <tag>kuangbin 专题十六</tag>
        <tag>HDU</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】HDU-2486 A simple stone game</title>
    <url>/posts/3fae0bc7.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="A-simple-stone-game-HDU-2486"><a href="#A-simple-stone-game-HDU-2486" class="headerlink" title="A simple stone game(HDU-2486)"></a>A simple stone game(<a href="https://vjudge.net/problem/HDU-2486" target="_blank" rel="noopener">HDU-2486</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>After he has learned how to play Nim game, Mike begins to try another stone game which seems much easier.</p><p>The game goes like this: Two players start the game with a pile of n stones. They take stones from the pile in turn and every time they take at least one stone. The one who goes first can take at most n-1 stones for his first move. From then on a player can take at most k times as many stones as his opponent has taken last time. For example, if one player take m stones in his turn, then the other player can take at most k * m stones next time. The player who takes the last stone wins the game. Suppose that those two players always take the best moves and never make mistakes, your job is to find out who will definitely win the game.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>The first line contains a integer t, indicating that there are t test cases following.(t&lt;=20).<br>Each test case is a line consisting of two integer n and k.(2&lt;=n&lt;=10^8,1&lt;=k&lt;=10^5).</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For each test case, output one line starting with “Case N: ”, N is the case number. And then, if the first player can ensure a winning, print the minimum number of stones he should take in his first turn. Otherwise, print “lose”. Please note that there is a blank following the colon.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">5 </span></span><br><span class="line"><span class="symbol">16 </span><span class="number">1</span> </span><br><span class="line"><span class="symbol">11 </span><span class="number">1</span> </span><br><span class="line"><span class="symbol">32 </span><span class="number">2</span> </span><br><span class="line"><span class="symbol">34 </span><span class="number">2</span> </span><br><span class="line"><span class="symbol">19 </span><span class="number">3</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">Case <span class="number">1</span>: lose</span><br><span class="line">Case <span class="number">2</span>: <span class="number">1</span></span><br><span class="line">Case <span class="number">3</span>: <span class="number">3</span></span><br><span class="line">Case <span class="number">4</span>: lose</span><br><span class="line">Case <span class="number">5</span>: <span class="number">4</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>When k = 1, the first player will definitely lose if the initial amount of stones is in the set {2, 4, 8, 16, 32, …}. Let’s call this kind of set “first-player-lose set”.</p><p>When k = 2, the first-player-lose set is {2, 3, 5, 8, 13, 21, 34, 57 …} , which happens to be the Fibonacci sequence starting from 2.</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>K倍动态减法博弈，参照<a href="https://blog.lordash.cf/posts/466426a4.html#Fibonacci博弈">斐波那契博弈</a>和<a href="https://blog.lordash.cf/posts/466426a4.html#Zeckendorf定理">齐肯多夫定理</a>的证明过程，将 $ f_{i} = f_{i-1} + f_{i-2} $ 替换为 $ f_{i} = f_{i-1} + f_{k} \mid _{ K \times f_{k-1} \lt f_{i-1} \le K \times f_{k}} $ ，也就是将齐肯多夫定理表述中的 <code>若干不连续的项</code> 替换为 <code>若干两两之比大于K项</code>。预处理出类似斐波那契博弈中的斐波那契序列，面对局势为序列项的，先手必败。</p><p>注意时间复杂度为 $ O(Tlog_{\frac{k+1}{k}}N) \approx 2 \times 10^{8} $，卡常。</p><p>详细参考<a href="http://www.doc88.com/p-5098170314707.html" target="_blank" rel="noopener">《从“k倍动态减法游戏”出发探究一类组合游戏问题》</a>、<a href="https://blog.csdn.net/ta201314/article/details/44892055" target="_blank" rel="noopener">[POJ3922]Now解题报告</a>。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> f[<span class="number">1000005</span>] = &#123;<span class="number">1</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> cs=<span class="number">1</span>; cs&lt;=T; cs++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> n, k;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;n, &amp;k);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> i=<span class="number">1</span>, j=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(; f[i] &lt;= n; i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(; <span class="number">1L</span>L * k * f[j] &lt; f[i]; j++);</span><br><span class="line">            f[i+<span class="number">1</span>] = f[i] + f[j];</span><br><span class="line">        &#125;</span><br><span class="line">        i--;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Case %d: "</span>, cs);</span><br><span class="line">        <span class="keyword">if</span>(f[i] == n)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"lose\n"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">while</span>(n != f[i])&#123;</span><br><span class="line">                <span class="keyword">for</span>(n-=f[i]; n&lt;f[i]; i--);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, n);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>博弈论</category>
      </categories>
      <tags>
        <tag>博弈论</tag>
        <tag>HDU</tag>
        <tag>K倍动态减法博弈</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】HDU-2509 Be the Winner</title>
    <url>/posts/cf18ffb6.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="Be-the-Winner-HDU-2509"><a href="#Be-the-Winner-HDU-2509" class="headerlink" title="Be the Winner(HDU-2509)"></a>Be the Winner(<a href="https://vjudge.net/problem/HDU-2509" target="_blank" rel="noopener">HDU-2509</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>Let’s consider m apples divided into n groups. Each group contains no more than 100 apples, arranged in a line. You can take any number of consecutive apples at one time.<br>For example “@@@” can be turned into “@@” or “@” or “@ @”(two piles). two people get apples one after another and the one who takes the last is<br>the loser. Fra wants to know in which situations he can win by playing strategies (that is, no matter what action the rival takes, fra will win).</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>You will be given several cases. Each test case begins with a single number n (1 &lt;= n &lt;= 100), followed by a line with n numbers, the number of apples in each pile. There is a blank line between cases.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>If a winning strategies can be found, print a single line with “Yes”, otherwise print “No”.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="number">2</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">2</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="literal">No</span></span><br><span class="line"><span class="literal">Yes</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>Anti-Nim博弈，可以参见<a href="https://blog.lordash.cf/posts/a3deb991.html">【题解】POJ-3480 John</a>。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">for</span>(~<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> nim=<span class="number">0</span>, anti=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> x; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;x);</span><br><span class="line">            <span class="keyword">if</span>(x&gt;<span class="number">1</span>) anti = <span class="number">1</span>;</span><br><span class="line">            nim ^=x;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>((!nim&amp;&amp;!anti) || (nim&amp;&amp;anti))&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Yes\n"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"No\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>博弈论</category>
      </categories>
      <tags>
        <tag>博弈论</tag>
        <tag>HDU</tag>
        <tag>Anti-Nim博弈</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】HDU-2516 取石子游戏</title>
    <url>/posts/a03cdfbe.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="取石子游戏-HDU-2516"><a href="#取石子游戏-HDU-2516" class="headerlink" title="取石子游戏(HDU-2516)"></a>取石子游戏(<a href="https://vjudge.net/problem/HDU-2516" target="_blank" rel="noopener">HDU-2516</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>1堆石子有n个,两人轮流取.先取者第1次可以取任意多个，但不能全部取完.以后每次取的石子数不能超过上次取子数的2倍。取完者胜.先取者负输出”Second win”.先取者胜输出”First win”.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入有多组.每组第1行是2&lt;=n&lt;2^31. n=0退出.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>先取者负输出”Second win”. 先取者胜输出”First win”.<br>参看Sample Output.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">13</span></span><br><span class="line"><span class="number">10000</span></span><br><span class="line"><span class="number">0</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight arcade"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Second</span> win</span><br><span class="line"><span class="built_in">Second</span> win</span><br><span class="line"><span class="built_in">First</span> win</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>单堆Fibonacci博弈，不用求SG函数。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> f[<span class="number">50</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fib</span><span class="params">()</span></span>&#123;</span><br><span class="line">    f[<span class="number">1</span>] = f[<span class="number">2</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">3</span>; i&lt;<span class="number">47</span>; i++)&#123;</span><br><span class="line">        f[i] = f[i<span class="number">-1</span>] + f[i<span class="number">-2</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    fib();</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n) &amp;&amp; n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> flag = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;<span class="number">47</span>; i++)&#123;    </span><br><span class="line">            <span class="keyword">if</span>(f[i]==n)&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"Second win\n"</span>);</span><br><span class="line">                flag = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(flag)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"First win\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>博弈论</category>
      </categories>
      <tags>
        <tag>博弈论</tag>
        <tag>Fibonacci博弈</tag>
        <tag>HDU</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】HDU-2594 Simpsons’ Hidden Talents</title>
    <url>/posts/507b23e0.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="Simpsons’-Hidden-Talents-HDU-2594"><a href="#Simpsons’-Hidden-Talents-HDU-2594" class="headerlink" title="Simpsons’ Hidden Talents(HDU-2594)"></a>Simpsons’ Hidden Talents(<a href="https://vjudge.net/problem/HDU-2594" target="_blank" rel="noopener">HDU-2594</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>Homer: Marge, I just figured out a way to discover some of the talents we weren’t aware we had.<br>Marge: Yeah, what is it?<br>Homer: Take me for example. I want to find out if I have a talent in politics, OK?<br>Marge: OK.<br>Homer: So I take some politician’s name, say Clinton, and try to find the length of the longest prefix<br>in Clinton’s name that is a suffix in my name. That’s how close I am to being a politician like Clinton<br>Marge: Why on earth choose the longest prefix that is a suffix???<br>Homer: Well, our talents are deeply hidden within ourselves, Marge.<br>Marge: So how close are you?<br>Homer: 0!<br>Marge: I’m not surprised.<br>Homer: But you know, you must have some real math talent hidden deep in you.<br>Marge: How come?<br>Homer: Riemann and Marjorie gives 3!!!<br>Marge: Who the heck is Riemann?<br>Homer: Never mind.<br>Write a program that, when given strings s1 and s2, finds the longest prefix of s1 that is a suffix of s2.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>Input consists of two lines. The first line contains s1 and the second line contains s2. You may assume all letters are in lowercase.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>Output consists of a single line that contains the longest string that is a prefix of s1 and a suffix of s2, followed by the length of that prefix. If the longest such string is the empty string, then the output should be 0.<br>The lengths of s1 and s2 will be at most 50000.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">clinton</span></span><br><span class="line"><span class="attribute">homer</span></span><br><span class="line"><span class="attribute">riemann</span></span><br><span class="line"><span class="attribute">marjorie</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">0</span></span><br><span class="line">rie <span class="number">3</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>求最长的相等的S的前缀与T的后缀。将S和T拼接起来，求next数组即可，注意答案与原长求min。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> s[mxn], t[mxn];</span><br><span class="line"><span class="keyword">int</span> nxt[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getnxt</span><span class="params">(<span class="keyword">char</span>* t, <span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">-1</span>; nxt[<span class="number">0</span>] = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; m) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (j == <span class="number">-1</span> || t[i] == t[j]) &#123;</span><br><span class="line">            i++, j++;</span><br><span class="line">            <span class="comment">// if (t[i] == t[j])</span></span><br><span class="line">            <span class="comment">//     nxt[i] = nxt[j]; // next数组优化</span></span><br><span class="line">            <span class="comment">// else</span></span><br><span class="line">                nxt[i] = j;</span><br><span class="line">        &#125; <span class="keyword">else</span></span><br><span class="line">            j = nxt[j];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%s %s"</span>, s, t))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> n = <span class="built_in">strlen</span>(s), m = <span class="built_in">strlen</span>(t);</span><br><span class="line">        <span class="built_in">strcpy</span>(s+n, t);</span><br><span class="line">        getnxt(s, n+m);</span><br><span class="line">        <span class="keyword">int</span> ans = min(nxt[n+m], min(n, m));</span><br><span class="line">        <span class="keyword">if</span>(ans)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%s "</span>, s+n+m-ans);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>字符串</category>
        <category>模式匹配</category>
        <category>KMP</category>
      </categories>
      <tags>
        <tag>KMP</tag>
        <tag>kuangbin 专题十六</tag>
        <tag>HDU</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】HDU-2546 饭卡</title>
    <url>/posts/7daf58e2.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="饭卡-HDU-2546"><a href="#饭卡-HDU-2546" class="headerlink" title="饭卡 (HDU - 2546)"></a>饭卡 (<a href="https://vjudge.net/problem/HDU-2546" target="_blank" rel="noopener">HDU - 2546</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>电子科大本部食堂的饭卡有一种很诡异的设计，即在购买之前判断余额。如果购买一个商品之前，卡上的剩余金额大于或等于5元，就一定可以购买成功（即使购买后卡上余额为负），否则无法购买（即使金额足够）。所以大家都希望尽量使卡上的余额最少。<br>某天，食堂中有n种菜出售，每种菜可购买一次。已知每种菜的价格以及卡上的余额，问最少可使卡上的余额为多少。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>多组数据。对于每组数据：<br>第一行为正整数n，表示菜的数量。n&lt;=1000。<br>第二行包括n个正整数，表示每种菜的价格。价格不超过50。<br>第三行包括一个正整数m，表示卡上的余额。m&lt;=1000。</p><p>n=0表示数据结束。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>对于每组输入,输出一行,包含一个整数，表示卡上可能的最小余额。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">50</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">10</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">2</span> <span class="number">1</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">2</span> <span class="number">1</span></span><br><span class="line"><span class="number">50</span></span><br><span class="line"><span class="number">0</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">-45</span></span><br><span class="line"><span class="number">32</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e3</span>+<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> w[N];</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> dp[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n)==<span class="number">1</span> &amp;&amp; n) &#123;</span><br><span class="line">        <span class="built_in">memset</span>(dp, <span class="number">0</span>, <span class="keyword">sizeof</span>(dp));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;w[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        sort(w, w+n);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;m);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(m&lt;<span class="number">5</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, m);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n<span class="number">-1</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=m<span class="number">-5</span>; j&gt;=w[i]; j--) &#123;</span><br><span class="line">                    dp[j] = max(dp[j], dp[j-w[i]]+w[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, m-dp[m<span class="number">-5</span>]-w[n<span class="number">-1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>动态规划</category>
        <category>背包</category>
        <category>01背包</category>
      </categories>
      <tags>
        <tag>HDU</tag>
        <tag>DP</tag>
        <tag>背包</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】HDU-2602 Bone Collector</title>
    <url>/posts/634c5e77.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="Bone-Collector-HDU-2602"><a href="#Bone-Collector-HDU-2602" class="headerlink" title="Bone Collector (HDU - 2602)"></a>Bone Collector (<a href="https://vjudge.net/problem/HDU-2602" target="_blank" rel="noopener">HDU - 2602</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>Many years ago , in Teddy’s hometown there was a man who was called “Bone Collector”. This man like to collect varies of bones , such as dog’s , cow’s , also he went to the grave …<br>The bone collector had a big bag with a volume of V ,and along his trip of collecting there are a lot of bones , obviously , different bone has different value and different volume, now given the each bone’s value along his trip , can you calculate out the maximum of the total value the bone collector can get ?</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>The first line contain a integer T , the number of cases.<br>Followed by T cases , each case three lines , the first line contain two integer N , V, (N &lt;= 1000 , V &lt;= 1000 )representing the number of bones and the volume of his bag. And the second line contain N integers representing the value of each bone. The third line contain N integers representing the volume of each bone.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>One integer per line representing the maximum of the total value (this number will be less than 2^31).</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line"><span class="symbol">5 </span><span class="number">10</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span></span><br><span class="line"><span class="symbol">5 </span><span class="number">4</span> <span class="number">3</span> <span class="number">2</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">14</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e3</span>+<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> T, n, m;</span><br><span class="line"><span class="keyword">int</span> c[N], w[N];</span><br><span class="line"><span class="keyword">int</span> dp[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;m);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;w[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;c[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">memset</span>(dp, <span class="number">0</span>, <span class="keyword">sizeof</span>(dp));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=m; j&gt;=c[i]; j--) &#123;</span><br><span class="line">                dp[j] = max(dp[j], dp[j-c[i]]+w[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, dp[m]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>动态规划</category>
        <category>背包</category>
        <category>01背包</category>
      </categories>
      <tags>
        <tag>HDU</tag>
        <tag>DP</tag>
        <tag>背包</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】HDU-2609 How many</title>
    <url>/posts/77c0fafb.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="How-many-HDU-2609"><a href="#How-many-HDU-2609" class="headerlink" title="How many(HDU-2609)"></a>How many(<a href="https://vjudge.net/problem/HDU-2609" target="_blank" rel="noopener">HDU-2609</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>Give you n ( n &lt; 10000) necklaces ,the length of necklace will not large than 100,tell me<br>How many kinds of necklaces total have.(if two necklaces can equal by rotating ,we say the two necklaces are some).<br>For example 0110 express a necklace, you can rotate it. 0110 -&gt; 1100 -&gt; 1001 -&gt; 0011-&gt; 0110.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>The input contains multiple test cases.<br>Each test case include: first one integers n. (2&lt;=n&lt;=10000)<br>Next n lines follow. Each line has a equal length character string. (string only include ‘0’,’1’).</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For each test case output a integer , how many different necklaces.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">0110</span></span><br><span class="line"><span class="number">1100</span></span><br><span class="line"><span class="number">1001</span></span><br><span class="line"><span class="number">0011</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">1010</span></span><br><span class="line"><span class="number">0101</span></span><br><span class="line"><span class="number">1000</span></span><br><span class="line"><span class="number">0001</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>先用<a href="https://blog.lordash.cf/posts/2cb42e5f.html">最小表示法</a>，求出最小字典序，然后map去重。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">string</span> s;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getmin</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>, j=<span class="number">1</span>, k=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i&lt;n &amp;&amp; j&lt;n &amp;&amp; k&lt;n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(s[(i+k)%n] == s[(j+k)%n])&#123;</span><br><span class="line">            k++;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(s[(i+k)%n] &gt; s[(j+k)%n])</span><br><span class="line">                i+=k+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                j+=k+<span class="number">1</span>;</span><br><span class="line">            k = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span>(i == j) i++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> min(i, j);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">map</span>&lt;<span class="built_in">string</span>, <span class="keyword">int</span>&gt; mp;</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; s;</span><br><span class="line">            <span class="built_in">string</span> ss = <span class="string">""</span>;</span><br><span class="line">            <span class="keyword">int</span> st = getmin(s.length());</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=st; i&lt;s.length(); i++) ss += s[i];</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;st; i++) ss += s[i];</span><br><span class="line">            <span class="keyword">if</span>(mp[ss] == <span class="number">0</span>)&#123;</span><br><span class="line">                mp[ss] = <span class="number">1</span>;</span><br><span class="line">                ans++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>字符串</category>
        <category>最小表示法</category>
      </categories>
      <tags>
        <tag>最小表示法</tag>
        <tag>kuangbin 专题十六</tag>
        <tag>HDU</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】HDU-2612 Find a way</title>
    <url>/posts/6e32815b.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="Find-a-way-HDU-2612"><a href="#Find-a-way-HDU-2612" class="headerlink" title="Find a way (HDU - 2612)"></a>Find a way (<a href="https://vjudge.net/problem/HDU-2612" target="_blank" rel="noopener">HDU - 2612</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>Pass a year learning in Hangzhou, yifenfei arrival hometown Ningbo at finally. Leave Ningbo one year, yifenfei have many people to meet. Especially a good friend Merceki.<br>Yifenfei’s home is at the countryside, but Merceki’s home is in the center of city. So yifenfei made arrangements with Merceki to meet at a KFC. There are many KFC in Ningbo, they want to choose one that let the total time to it be most smallest.<br>Now give you a Ningbo map, Both yifenfei and Merceki can move up, down ,left, right to the adjacent road by cost 11 minutes.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>The input contains multiple test cases.<br>Each test case include, first two integers n, m. (2&lt;=n,m&lt;=200).<br>Next n lines, each line included m character.<br>‘Y’ express yifenfei initial position.<br>‘M’ express Merceki initial position.<br>‘#’ forbid road;<br>‘.’ Road.<br>‘@’ KCF</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For each test case output the minimum total time that both yifenfei and Merceki to arrival one of KFC.You may sure there is always have a KFC that can let them meet.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line">4 4</span><br><span class="line">Y.<span class="comment">#@</span></span><br><span class="line"><span class="string">....</span></span><br><span class="line">.<span class="comment">#..</span></span><br><span class="line">@<span class="string">..M</span></span><br><span class="line">4 4</span><br><span class="line">Y.<span class="comment">#@</span></span><br><span class="line"><span class="string">....</span></span><br><span class="line">.<span class="comment">#..</span></span><br><span class="line">@<span class="comment">#.M</span></span><br><span class="line">5 5</span><br><span class="line">Y..@.</span><br><span class="line">.<span class="comment">#...</span></span><br><span class="line">.<span class="comment">#...</span></span><br><span class="line">@<span class="string">..M.</span></span><br><span class="line"><span class="comment">#...#</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">66</span></span><br><span class="line"><span class="number">88</span></span><br><span class="line"><span class="number">66</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>跑两遍bfs记录Y和M到达kfc的时间并求和，再遍历总时间寻找最短的。注意有的kfc可能无法到达，时间初始化应为inf</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e3</span>+<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> b[N][N] = &#123;&#123;<span class="number">0</span>&#125;&#125;;</span><br><span class="line"><span class="keyword">bool</span> vis[N][N] = &#123;&#123;<span class="number">0</span>&#125;&#125;;</span><br><span class="line"><span class="keyword">int</span> t[N][N] = &#123;&#123;<span class="number">0</span>&#125;&#125;;</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> dx[] = &#123; <span class="number">1</span>, <span class="number">-1</span>,  <span class="number">0</span>,  <span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> dy[] = &#123; <span class="number">0</span>,  <span class="number">0</span>,  <span class="number">1</span>, <span class="number">-1</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">P</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> x, y;</span><br><span class="line">    <span class="keyword">int</span> step;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bfs</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(vis, <span class="number">0</span>, <span class="keyword">sizeof</span>(vis));</span><br><span class="line"></span><br><span class="line">    P sp;</span><br><span class="line">    sp.x = x;</span><br><span class="line">    sp.y = y;</span><br><span class="line">    sp.step = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">queue</span>&lt;P&gt; q;</span><br><span class="line">    q.push(sp);</span><br><span class="line">    vis[sp.x][sp.y] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(!q.empty()) &#123;</span><br><span class="line">        P tp = q.front();</span><br><span class="line">        q.pop();</span><br><span class="line"></span><br><span class="line">        P np = tp;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">4</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> x = np.x = tp.x+dx[i];</span><br><span class="line">            <span class="keyword">int</span> y = np.y = tp.y+dy[i];</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(x&lt;<span class="number">0</span> || x&gt;=n || y&lt;<span class="number">0</span> || y&gt;=m) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(!vis[x][y] &amp;&amp; b[x][y]!=<span class="string">'#'</span>) &#123;</span><br><span class="line">                np.step = tp.step+<span class="number">1</span>;</span><br><span class="line">                q.push(np);</span><br><span class="line">                vis[x][y] = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span>(t[x][y]==inf)</span><br><span class="line">                    t[x][y] = np.step;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    t[x][y] += np.step;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;m)==<span class="number">2</span>) &#123;</span><br><span class="line">        <span class="built_in">memset</span>(t, inf, <span class="keyword">sizeof</span>(t));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;m; j++) &#123;</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">" %c"</span>, &amp;b[i][j]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;m; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(b[i][j]==<span class="string">'Y'</span> || b[i][j]==<span class="string">'M'</span>) &#123;</span><br><span class="line">                    bfs(i, j);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> mi = inf;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;m; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(b[i][j]==<span class="string">'@'</span>)</span><br><span class="line">                    mi = min(mi, t[i][j]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, mi*<span class="number">11</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>搜索</category>
        <category>BFS</category>
      </categories>
      <tags>
        <tag>BFS</tag>
        <tag>kuangbin 专题一</tag>
        <tag>HDU</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】HDU-2639 Bone Collector II</title>
    <url>/posts/e60547bb.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="Bone-Collector-II-HDU-2639"><a href="#Bone-Collector-II-HDU-2639" class="headerlink" title="Bone Collector II (HDU - 2639)"></a>Bone Collector II (<a href="https://vjudge.net/problem/HDU-2639" target="_blank" rel="noopener">HDU - 2639</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>The title of this problem is familiar,isn’t it?yeah,if you had took part in the “Rookie Cup” competition,you must have seem this title.If you haven’t seen it before,it doesn’t matter,I will give you a link:</p><p>Here is the link: <a href="http://acm.hdu.edu.cn/showproblem.php?pid=2602" target="_blank" rel="noopener">http://acm.hdu.edu.cn/showproblem.php?pid=2602</a></p><p>Today we are not desiring the maximum value of bones,but the K-th maximum value of the bones.NOTICE that,we considerate two ways that get the same value of bones are the same.That means,it will be a strictly decreasing sequence from the 1st maximum , 2nd maximum .. to the K-th maximum.</p><p>If the total number of different values is less than K,just ouput 0.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>The first line contain a integer T , the number of cases.<br>Followed by T cases , each case three lines , the first line contain two integer N , V, K(N &lt;= 100 , V &lt;= 1000 , K &lt;= 30)representing the number of bones and the volume of his bag and the K we need. And the second line contain N integers representing the value of each bone. The third line contain N integers representing the volume of each bone.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>One integer per line representing the K-th maximum of the total value (this number will be less than 2^31).</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="number">3</span></span><br><span class="line"><span class="symbol">5 </span><span class="number">10</span> <span class="number">2</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span></span><br><span class="line"><span class="symbol">5 </span><span class="number">4</span> <span class="number">3</span> <span class="number">2</span> <span class="number">1</span></span><br><span class="line"><span class="symbol">5 </span><span class="number">10</span> <span class="number">12</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span></span><br><span class="line"><span class="symbol">5 </span><span class="number">4</span> <span class="number">3</span> <span class="number">2</span> <span class="number">1</span></span><br><span class="line"><span class="symbol">5 </span><span class="number">10</span> <span class="number">16</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span></span><br><span class="line"><span class="symbol">5 </span><span class="number">4</span> <span class="number">3</span> <span class="number">2</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">12</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">0</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e3</span>+<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> w[N], c[N];</span><br><span class="line"><span class="keyword">int</span> T, n, v, m;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> dp[N][N], a[N], b[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>, &amp;n, &amp;v, &amp;m);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;w[i]);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;c[i]);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">memset</span>(dp, <span class="number">0</span>, <span class="keyword">sizeof</span>(dp));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=v; j&gt;=c[i]; j--) &#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>; k&lt;=m; k++) &#123;</span><br><span class="line">                    a[k] = dp[j][k];</span><br><span class="line">                    b[k] = dp[j-c[i]][k]+w[i];</span><br><span class="line">                &#125;</span><br><span class="line">                a[m+<span class="number">1</span>] = b[m+<span class="number">1</span>] = <span class="number">-1</span>;</span><br><span class="line">                <span class="keyword">int</span> di=<span class="number">1</span>, ai=<span class="number">1</span>, bi=<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">while</span>(di&lt;=m &amp;&amp; (ai&lt;=m || bi&lt;=m)) &#123;</span><br><span class="line">                    <span class="keyword">if</span>(a[ai]&gt;b[bi])</span><br><span class="line">                        dp[j][di] = a[ai++];</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                        dp[j][di] = b[bi++];</span><br><span class="line">                    <span class="keyword">if</span>(dp[j][di]!=dp[j][di<span class="number">-1</span>])</span><br><span class="line">                        di++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, dp[v][m]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>动态规划</category>
        <category>背包</category>
        <category>01背包</category>
      </categories>
      <tags>
        <tag>HDU</tag>
        <tag>DP</tag>
        <tag>背包</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】HDU-2767 Proving Equivalences</title>
    <url>/posts/1debcc8e.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="Proving-Equivalences-HDU-2767"><a href="#Proving-Equivalences-HDU-2767" class="headerlink" title="Proving Equivalences (HDU - 2767)"></a>Proving Equivalences (<a href="https://vjudge.net/problem/HDU-2767" target="_blank" rel="noopener">HDU - 2767</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>Consider the following exercise, found in a generic linear algebra textbook.</p><p>Let A be an n × n matrix. Prove that the following statements are equivalent:</p><p>\1. A is invertible.<br>\2. Ax = b has exactly one solution for every n × 1 matrix b.<br>\3. Ax = b is consistent for every n × 1 matrix b.<br>\4. Ax = 0 has only the trivial solution x = 0.</p><p>The typical way to solve such an exercise is to show a series of implications. For instance, one can proceed by showing that (a) implies (b), that (b) implies (c), that (c) implies (d), and finally that (d) implies (a). These four implications show that the four statements are equivalent.</p><p>Another way would be to show that (a) is equivalent to (b) (by proving that (a) implies (b) and that (b) implies (a)), that (b) is equivalent to (c), and that (c) is equivalent to (d). However, this way requires proving six implications, which is clearly a lot more work than just proving four implications!</p><p>I have been given some similar tasks, and have already started proving some implications. Now I wonder, how many more implications do I have to prove? Can you help me determine this?</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>On the first line one positive number: the number of testcases, at most 100. After that per testcase:</p><p>* One line containing two integers n (1 ≤ n ≤ 20000) and m (0 ≤ m ≤ 50000): the number of statements and the number of implications that have already been proved.<br>* m lines with two integers s1 and s2 (1 ≤ s1, s2 ≤ n and s1 ≠ s2) each, indicating that it has been proved that statement s1 implies statement s2.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>Per testcase:</p><p>* One line with the minimum number of additional implications that need to be proved in order to prove that all statements are equivalent.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="number">2</span></span><br><span class="line"><span class="symbol">4 </span><span class="number">0</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">2</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">2</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">3</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e4</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M = <span class="number">1e5</span>+<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">E</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> to, next;</span><br><span class="line">&#125; e[M];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> H[N], tot;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> S[N], top;</span><br><span class="line"><span class="keyword">int</span> dfn[N], low[N], bel[N], idx, scc;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> T, n, m;</span><br><span class="line"><span class="keyword">int</span> u, v;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> id[N], od[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> from, <span class="keyword">int</span> to)</span> </span>&#123;</span><br><span class="line">    e[tot] = &#123;to, H[from]&#125;;</span><br><span class="line">    H[from] = tot++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u)</span> </span>&#123;</span><br><span class="line">    dfn[u] = low[u] = ++idx;</span><br><span class="line">    S[++top]=u;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=H[u]; ~i; i=e[i].next) &#123;</span><br><span class="line">        <span class="keyword">int</span> v = e[i].to;</span><br><span class="line">        <span class="keyword">if</span>(!dfn[v]) &#123;</span><br><span class="line">            dfs(v);</span><br><span class="line">            low[u] = min(low[u], low[v]);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(!bel[v])</span><br><span class="line">            low[u] = min(low[u], dfn[v]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(low[u]==dfn[u]) &#123;</span><br><span class="line">        scc++;</span><br><span class="line">        <span class="keyword">int</span> t;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            t=S[top--];</span><br><span class="line">            bel[t]=scc;</span><br><span class="line">        &#125; <span class="keyword">while</span>(t!=u);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">tarjan</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(dfn, <span class="number">0</span>, <span class="keyword">sizeof</span>(dfn));</span><br><span class="line">    <span class="built_in">memset</span>(bel, <span class="number">0</span>, <span class="keyword">sizeof</span>(bel));</span><br><span class="line">    idx = scc = top = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(!dfn[i])</span><br><span class="line">            dfs(i);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(scc==<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">memset</span>(id, <span class="number">0</span>, <span class="keyword">sizeof</span>(id));</span><br><span class="line">    <span class="built_in">memset</span>(od, <span class="number">0</span>, <span class="keyword">sizeof</span>(od));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> u=<span class="number">1</span>; u&lt;=n; u++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=H[u]; ~i; i=e[i].next) &#123;</span><br><span class="line">            <span class="keyword">int</span> v = e[i].to;</span><br><span class="line">            <span class="keyword">if</span>(bel[u]!=bel[v]) &#123;</span><br><span class="line">                od[bel[u]]++;</span><br><span class="line">                id[bel[v]]++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> a=<span class="number">0</span>, b=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=scc; i++) &#123;</span><br><span class="line">        a+=!id[i];</span><br><span class="line">        b+=!od[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> max(a, b);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;m);</span><br><span class="line">        <span class="built_in">memset</span>(H, <span class="number">-1</span>, <span class="keyword">sizeof</span>(H));</span><br><span class="line">        tot = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;m; i++) &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;u, &amp;v);</span><br><span class="line">            add(u, v);</span><br><span class="line">        &#125;</span><br><span class="line">        tarjan();</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, solve());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>图论</category>
        <category>连通性</category>
        <category>强连通分量</category>
        <category>Tarjan</category>
      </categories>
      <tags>
        <tag>HDU</tag>
        <tag>Tarjan</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】HDU-2897 邂逅明下</title>
    <url>/posts/4005d632.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="邂逅明下-HDU-2897"><a href="#邂逅明下-HDU-2897" class="headerlink" title="邂逅明下(HDU-2897)"></a>邂逅明下(<a href="https://vjudge.net/problem/HDU-2897" target="_blank" rel="noopener">HDU-2897</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>当日遇到月，于是有了明。当我遇到了你，便成了侣。<br>那天，日月相会，我见到了你。而且，大地失去了光辉，你我是否成侣？这注定是个凄美的故事。（以上是废话）<br>小t和所有世俗的人们一样，期待那百年难遇的日食。驻足街头看天，看日月渐渐走近，小t的脖子那个酸呀（他坚持这个姿势已经有半个多小时啦）。他低下仰起的头，环顾四周。忽然发现身边竟站着位漂亮的mm。天渐渐暗下，这mm在这街头竟然如此耀眼，她是天使吗？站着小t身边的天使。<br>小t对mm惊呼：“缘分呐~~”。mm却毫不含糊：“是啊，500年一遇哦！”（此后省略5000字….）<br>小t赶紧向mm要联系方式，可mm说：“我和你玩个游戏吧，赢了，我就把我的手机号告诉你。”小t，心想天下哪有题目能难倒我呢，便满口答应下来。mm开始说游戏规则：“我有一堆硬币，一共7枚，从这个硬币堆里取硬币，一次最少取2枚，最多4枚，如果剩下少于2枚就要一次取完。我和你轮流取，直到堆里的硬币取完，最后一次取硬币的算输。我玩过这个游戏好多次了，就让让你，让你先取吧~”<br>小t掐指一算，不对呀，这是不可能的任务么。小t露出得意的笑：“还是mm优先啦，呵呵~”mm霎时愣住了，想是对小t的反应出乎意料吧。<br>她却也不生气：“好小子，挺聪明呢，要不这样吧，你把我的邮箱给我，我给你发个文本，每行有三个数字n，p，q，表示一堆硬币一共有n枚，从这个硬币堆里取硬币，一次最少取p枚，最多q枚，如果剩下少于p枚就要一次取完。两人轮流取，直到堆里的硬币取完，最后一次取硬币的算输。对于每一行的三个数字，给出先取的人是否有必胜策略，如果有回答WIN，否则回答LOST。你把对应的答案发给我，如果你能在今天晚上8点以前发给我正确答案，或许我们明天下午可以再见。”<br>小t二话没说，将自己的邮箱给了mm。当他兴冲冲得赶回家，上网看邮箱，哇！mm的邮件已经到了。他发现文本长达100000行，每行的三个数字都很大，但是都是不超过65536的整数。小t看表已经下午6点了，要想手工算出所有结果，看来是不可能了。你能帮帮他，让他再见到那个mm吗？</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>不超过100000行，每行三个正整数n，p，q。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>对应每行输入，按前面介绍的游戏规则，判断先取者是否有必胜策略。输出WIN或者LOST。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">7 </span><span class="number">2</span> <span class="number">4</span></span><br><span class="line"><span class="symbol">6 </span><span class="number">2</span> <span class="number">4</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">LOST</span></span><br><span class="line"><span class="attribute">WIN</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>Bash博弈变形，Bash博弈可以参考<a href="https://blog.lordash.cf/posts/f0fbaf1d.html">【专题】Bash博弈</a>。</p><p>若当前石子共有n =（p+q）* r个，则先手必胜，必胜策略为：先手第一次取q个，以后每次若后手取K个，先手取（p+q-k）个，如此下去最后必剩下p个给后手，所以先手必胜。</p><p>若n =（p+q）* r + left个（1&lt; left &lt;= p）后手必胜，必胜策略为：每次取石子活动中，若先手取k个，则后手取（p+q-k）个，那么最后剩下left个给先手，此时left &lt;= p，所以先手只能一次取完，后手胜。</p><p>若n =（p+q）* r + left个（p &lt; left &lt;= q），则先手必胜，必胜策略为：先手第一次取t（1&lt;left – t &lt;= p）个，以后每次后手取k个，则先手取（p+q-k）个，那么最后留下1&lt; left – t &lt;=p给后手，则先手胜。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, p, q;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>, &amp;n, &amp;p, &amp;q))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> s = n % (p+q);</span><br><span class="line">        <span class="keyword">if</span>(s!=<span class="number">0</span> &amp;&amp; s&lt;=p)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"LOST\n"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"WIN\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>博弈论</category>
      </categories>
      <tags>
        <tag>博弈论</tag>
        <tag>Bash博弈</tag>
        <tag>HDU</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】HDU-2955 Robberies</title>
    <url>/posts/5ba33c0e.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="Robberies-HDU-2955"><a href="#Robberies-HDU-2955" class="headerlink" title="Robberies (HDU - 2955)"></a>Robberies (<a href="https://vjudge.net/problem/HDU-2955" target="_blank" rel="noopener">HDU - 2955</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>The aspiring Roy the Robber has seen a lot of American movies, and knows that the bad guys usually gets caught in the end, often because they become too greedy. He has decided to work in the lucrative business of bank robbery only for a short while, before retiring to a comfortable job at a university.</p><p>For a few months now, Roy has been assessing the security of various banks and the amount of cash they hold. He wants to make a calculated risk, and grab as much money as possible.</p><p>His mother, Ola, has decided upon a tolerable probability of getting caught. She feels that he is safe enough if the banks he robs together give a probability less than this.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>The first line of input gives T, the number of cases. For each scenario, the first line of input gives a floating point number P, the probability Roy needs to be below, and an integer N, the number of banks he has plans for. Then follow N lines, where line j gives an integer Mj and a floating point number Pj .<br>Bank j contains Mj millions, and the probability of getting caught from robbing it is Pj .</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For each test case, output a line with the maximum number of millions he can expect to get while the probability of getting caught is less than the limit set.</p><p>Notes and Constraints<br>0 &lt; T &lt;= 100<br>0.0 &lt;= P &lt;= 1.0<br>0 &lt; N &lt;= 100<br>0 &lt; Mj &lt;= 100<br>0.0 &lt;= Pj &lt;= 1.0<br>A bank goes bankrupt if it is robbed, and you may assume that all probabilities are independent as the police have very low funds.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">0.04</span> <span class="number">3</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">0.02</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">0.03</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">0.05</span></span><br><span class="line"><span class="number">0.06</span> <span class="number">3</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">0.03</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">0.03</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">0.05</span></span><br><span class="line"><span class="number">0.10</span> <span class="number">3</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">0.03</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">0.02</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">0.05</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">6</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e2</span>+<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">double</span> m, w[N];</span><br><span class="line"><span class="keyword">int</span> T, n, c[N];</span><br><span class="line"></span><br><span class="line"><span class="keyword">double</span> dp[N*N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lf%d"</span>, &amp;m, &amp;n);</span><br><span class="line">        <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d%lf"</span>, &amp;c[i], &amp;w[i]);</span><br><span class="line">            sum += c[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">memset</span>(dp, <span class="number">0</span>, <span class="keyword">sizeof</span>(dp));</span><br><span class="line">        dp[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=sum; j&gt;=c[i]; j--) &#123;</span><br><span class="line">                dp[j] = max(dp[j], dp[j-c[i]]*(<span class="number">1.0</span>-w[i]));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> ans;</span><br><span class="line">        <span class="keyword">for</span>(ans=sum; dp[ans]&lt;=<span class="number">1</span>-m; ans--);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>动态规划</category>
        <category>背包</category>
        <category>01背包</category>
      </categories>
      <tags>
        <tag>HDU</tag>
        <tag>DP</tag>
        <tag>背包</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】HDU-3068 最长回文</title>
    <url>/posts/941d5e0f.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="最长回文-HDU-3068"><a href="#最长回文-HDU-3068" class="headerlink" title="最长回文(HDU-3068)"></a>最长回文(<a href="https://vjudge.net/problem/HDU-3068" target="_blank" rel="noopener">HDU-3068</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>给出一个只由小写英文字符a,b,c…y,z组成的字符串S,求S中最长回文串的长度.<br>回文就是正反读都是一样的字符串,如aba, abba等</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入有多组case,不超过120组,每组输入为一行小写英文字符a,b,c…y,z组成的字符串S<br>两组case之间由空行隔开(该空行不用处理)<br>字符串长度len &lt;= 110000</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>每一行一个整数x,对应一组case,表示该组case的字符串中所包含的最长回文长度.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">aaaa</span></span><br><span class="line"></span><br><span class="line"><span class="attribute">abab</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>Manacher模板题。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> s[mxn], t[mxn];</span><br><span class="line"><span class="keyword">int</span> p[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">manacher_init</span><span class="params">(<span class="keyword">char</span> *s, <span class="keyword">char</span> *t, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> j = <span class="number">2</span>; t[<span class="number">0</span>] = <span class="string">'$'</span>, t[<span class="number">1</span>] = <span class="string">'#'</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        t[j++] = s[i];</span><br><span class="line">        t[j++] = <span class="string">'#'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    t[j] = <span class="string">'\0'</span>;</span><br><span class="line">    <span class="keyword">return</span> j;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">manacher</span><span class="params">(<span class="keyword">char</span> *t, <span class="keyword">int</span> *p, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> id = <span class="number">0</span>, mx = <span class="number">0</span>, ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        p[i] = i&lt;mx ? min(p[<span class="number">2</span>*id-i], mx-i) : <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (t[i+p[i]] == t[i-p[i]]) p[i]++;    <span class="comment">// 中心扩展</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (mx &lt; i+p[i])</span><br><span class="line">            mx = i+p[i], id = i;</span><br><span class="line"></span><br><span class="line">        ans = max(ans, p[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%s"</span>, s))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> n = manacher_init(s, t, <span class="built_in">strlen</span>(s));</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, manacher(t, p, n));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>字符串</category>
        <category>Manacher</category>
      </categories>
      <tags>
        <tag>Manacher</tag>
        <tag>kuangbin 专题十六</tag>
        <tag>HDU</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】HDU-3294 Girls&#39; research</title>
    <url>/posts/4afdf261.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="Girls’-research-HDU-3294"><a href="#Girls’-research-HDU-3294" class="headerlink" title="Girls’ research(HDU-3294)"></a>Girls’ research(<a href="https://vjudge.net/problem/HDU-3294" target="_blank" rel="noopener">HDU-3294</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>One day, sailormoon girls are so delighted that they intend to research about palindromic strings. Operation contains two steps:<br>First step: girls will write a long string (only contains lower case) on the paper. For example, “abcde”, but ‘a’ inside is not the real ‘a’, that means if we define the ‘b’ is the real ‘a’, then we can infer that ‘c’ is the real ‘b’, ‘d’ is the real ‘c’ ……, ‘a’ is the real ‘z’. According to this, string “abcde” changes to “bcdef”.<br>Second step: girls will find out the longest palindromic string in the given string, the length of palindromic string must be equal or more than 2.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>Input contains multiple cases.<br>Each case contains two parts, a character and a string, they are separated by one space, the character representing the real ‘a’ is and the length of the string will not exceed 200000.All input must be lowercase.<br>If the length of string is len, it is marked from 0 to len-1.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>Please execute the operation following the two steps.<br>If you find one, output the start position and end position of palindromic string in a line, next line output the real palindromic string, or output “No solution!”.<br>If there are several answers available, please choose the string which first appears.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight armasm"><table><tr><td class="code"><pre><span class="line"><span class="keyword">b </span><span class="keyword">babd</span></span><br><span class="line"><span class="keyword">a </span>abcd</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="number">0</span> <span class="number">2</span></span><br><span class="line"><span class="string">aza</span></span><br><span class="line"><span class="literal">No</span> <span class="string">solution!</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>Manacher，字符置换不影响回文性质，先求出最长回文子串长度和起点，输出的时候替换一下即可。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> s[mxn], t[mxn];</span><br><span class="line"><span class="keyword">int</span> p[mxn], l;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">manacher_init</span><span class="params">(<span class="keyword">char</span> *s, <span class="keyword">char</span> *t, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> j = <span class="number">2</span>;</span><br><span class="line">    t[<span class="number">0</span>] = <span class="number">-2</span>, t[<span class="number">1</span>] = <span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        t[j++] = s[i];</span><br><span class="line">        t[j++] = <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    t[j] = <span class="number">-3</span>;</span><br><span class="line">    <span class="keyword">return</span> j;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">manacher</span><span class="params">(<span class="keyword">char</span> *t, <span class="keyword">int</span> *p, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> id = <span class="number">0</span>, mx = <span class="number">0</span>, ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        p[i] = i&lt;mx ? min(p[<span class="number">2</span>*id-i], mx-i) : <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (t[i+p[i]] == t[i-p[i]]) p[i]++;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (mx &lt; i+p[i])</span><br><span class="line">            mx = i+p[i], id = i;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(ans &lt; p[i])&#123;</span><br><span class="line">            ans = p[i];</span><br><span class="line">            l = (i-p[i])/<span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> c;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">" %c %s"</span>, &amp;c, s))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> n = manacher_init(s, t, <span class="built_in">strlen</span>(s));</span><br><span class="line">        <span class="keyword">int</span> ans = manacher(t, p, n);</span><br><span class="line">        <span class="keyword">if</span>(ans&gt;<span class="number">2</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>, l, l+ans<span class="number">-1</span>);</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;ans; i++)&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%c"</span>, (s[i+l]-c+<span class="number">26</span>)%<span class="number">26</span>+<span class="string">'a'</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"No solution!\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>字符串</category>
        <category>Manacher</category>
      </categories>
      <tags>
        <tag>Manacher</tag>
        <tag>kuangbin 专题十六</tag>
        <tag>HDU</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】HDU-3336 Count the string</title>
    <url>/posts/351a41da.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="Count-the-string-HDU-3336"><a href="#Count-the-string-HDU-3336" class="headerlink" title="Count the string(HDU-3336)"></a>Count the string(<a href="https://vjudge.net/problem/HDU-3336" target="_blank" rel="noopener">HDU-3336</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>It is well known that AekdyCoin is good at string problems as well as number theory problems. When given a string s, we can write down all the non-empty prefixes of this string. For example:<br>s: “abab”<br>The prefixes are: “a”, “ab”, “aba”, “abab”<br>For each prefix, we can count the times it matches in s. So we can see that prefix “a” matches twice, “ab” matches twice too, “aba” matches once, and “abab” matches once. Now you are asked to calculate the sum of the match times for all the prefixes. For “abab”, it is 2 + 2 + 1 + 1 = 6.<br>The answer may be very large, so output the answer mod 10007.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>The first line is a single integer T, indicating the number of test cases.<br>For each case, the first line is an integer n (1 &lt;= n &lt;= 200000), which is the length of string s. A line follows giving the string s. The characters in the strings are all lower-case letters.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For each case, output only one number: the sum of the match times for all the prefixes of s mod 10007.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line">abab</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">6</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>求next数组，每个相等的前后缀都会对它的回溯+1贡献。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> t[mxn];</span><br><span class="line"><span class="keyword">int</span> nxt[mxn], ans[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getnxt</span><span class="params">(<span class="keyword">char</span>* t, <span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">-1</span>; nxt[<span class="number">0</span>] = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; m) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (j == <span class="number">-1</span> || t[i] == t[j]) &#123;</span><br><span class="line">            i++, j++;</span><br><span class="line">            <span class="comment">// if (t[i] == t[j])</span></span><br><span class="line">            <span class="comment">//     nxt[i] = nxt[j]; // next数组优化</span></span><br><span class="line">            <span class="comment">// else</span></span><br><span class="line">                nxt[i] = j;</span><br><span class="line">        &#125; <span class="keyword">else</span></span><br><span class="line">            j = nxt[j];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> m, mod = <span class="number">10007</span>;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %s"</span>, &amp;m, t);</span><br><span class="line">        getnxt(t, m);</span><br><span class="line">        <span class="built_in">memset</span>(ans, <span class="number">0</span> ,<span class="keyword">sizeof</span>(ans));</span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++)&#123;</span><br><span class="line">            ans[i] = ans[nxt[i]] + <span class="number">1</span>;</span><br><span class="line">            sum = (sum + ans[i]) % mod;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, sum);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>字符串</category>
        <category>模式匹配</category>
        <category>KMP</category>
      </categories>
      <tags>
        <tag>KMP</tag>
        <tag>kuangbin 专题十六</tag>
        <tag>HDU</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】HDU-3374 String Problem</title>
    <url>/posts/e63eacfd.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="String-Problem-HDU-3374"><a href="#String-Problem-HDU-3374" class="headerlink" title="String Problem(HDU-3374)"></a>String Problem(<a href="https://vjudge.net/problem/HDU-3374" target="_blank" rel="noopener">HDU-3374</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>Give you a string with length N, you can generate N strings by left shifts. For example let consider the string “SKYLONG”, we can generate seven strings:<br>String Rank<br>SKYLONG 1<br>KYLONGS 2<br>YLONGSK 3<br>LONGSKY 4<br>ONGSKYL 5<br>NGSKYLO 6<br>GSKYLON 7<br>and lexicographically first of them is GSKYLON, lexicographically last is YLONGSK, both of them appear only once.<br>Your task is easy, calculate the lexicographically fisrt string’s Rank (if there are multiple answers, choose the smallest one), its times, lexicographically last string’s Rank (if there are multiple answers, choose the smallest one), and its times also.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>Each line contains one line the string S with length N (N &lt;= 1000000) formed by lower case letters.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>Output four integers separated by one space, lexicographically fisrt string’s Rank (if there are multiple answers, choose the smallest one), the string’s times in the N generated strings, lexicographically last string’s Rank (if there are multiple answers, choose the smallest one), and its times also.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">abcder</span></span><br><span class="line"><span class="attribute">aaaaaa</span></span><br><span class="line"><span class="attribute">ababab</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">1 </span><span class="number">1</span> <span class="number">6</span> <span class="number">1</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">6</span> <span class="number">1</span> <span class="number">6</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">3</span> <span class="number">2</span> <span class="number">3</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>先用<a href="https://blog.lordash.cf/posts/2cb42e5f.html">最小表示法</a>，求出最大最小字典序的子串，然后跑KMP。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> s[mxn];</span><br><span class="line"><span class="keyword">int</span> nxt[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getnxt</span><span class="params">(<span class="keyword">char</span>* t, <span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">-1</span>; nxt[<span class="number">0</span>] = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; m) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (j == <span class="number">-1</span> || t[i] == t[j]) &#123;</span><br><span class="line">            i++, j++;</span><br><span class="line">            <span class="comment">// if (t[i] == t[j])</span></span><br><span class="line">            <span class="comment">//     nxt[i] = nxt[j]; // next数组优化</span></span><br><span class="line">            <span class="comment">// else</span></span><br><span class="line">                nxt[i] = j;</span><br><span class="line">        &#125; <span class="keyword">else</span></span><br><span class="line">            j = nxt[j];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">KMP</span><span class="params">(<span class="keyword">char</span>* s, <span class="keyword">char</span>* t, <span class="keyword">int</span> n, <span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>, ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; n) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (j == <span class="number">-1</span> || s[i] == t[j]) &#123;</span><br><span class="line">            i++, j++;</span><br><span class="line">            <span class="keyword">if</span> (j &gt;= m) &#123;   <span class="comment">// 匹配</span></span><br><span class="line">                ans++;</span><br><span class="line">                j = nxt[j];</span><br><span class="line">                <span class="comment">// return i-j;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span></span><br><span class="line">            j = nxt[j];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">    <span class="comment">// return -1;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getmin</span><span class="params">(<span class="keyword">char</span>* s, <span class="keyword">int</span> n, <span class="keyword">int</span> cd)</span> <span class="comment">// cd 0:最小 1:最大</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>, j=<span class="number">1</span>, k=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i&lt;n &amp;&amp; j&lt;n &amp;&amp; k&lt;n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(s[(i+k)%n] == s[(j+k)%n])&#123;</span><br><span class="line">            k++;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>((s[(i+k)%n] &gt; s[(j+k)%n]) ^ cd)</span><br><span class="line">                i+=k+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                j+=k+<span class="number">1</span>;</span><br><span class="line">            k = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span>(i == j) i++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> min(i, j);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%s"</span>, s))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> sl = <span class="built_in">strlen</span>(s);</span><br><span class="line">        <span class="keyword">int</span> id1 = getmin(s, sl, <span class="number">0</span>); <span class="comment">// 最小表示</span></span><br><span class="line">        <span class="keyword">int</span> id2 = getmin(s, sl, <span class="number">1</span>); <span class="comment">// 最大表示</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;sl; i++) s[i+sl] = s[i];</span><br><span class="line">        s[sl+sl] = <span class="string">'\0'</span>;</span><br><span class="line"></span><br><span class="line">        getnxt(s+id1, sl);</span><br><span class="line">        <span class="keyword">int</span> ans1 = KMP(s, s+id1, sl+sl<span class="number">-1</span>, sl);</span><br><span class="line"></span><br><span class="line">        getnxt(s+id2, sl);</span><br><span class="line">        <span class="keyword">int</span> ans2 = KMP(s, s+id2, sl+sl<span class="number">-1</span>, sl);</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d %d %d %d\n"</span>, id1+<span class="number">1</span>, ans1, id2+<span class="number">1</span>, ans2);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>字符串</category>
        <category>最小表示法</category>
      </categories>
      <tags>
        <tag>KMP</tag>
        <tag>最小表示法</tag>
        <tag>kuangbin 专题十六</tag>
        <tag>HDU</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】HDU-3404 Switch lights</title>
    <url>/posts/55e38792.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="Switch-lights-HDU-3404"><a href="#Switch-lights-HDU-3404" class="headerlink" title="Switch lights(HDU-3404)"></a>Switch lights(<a href="https://vjudge.net/problem/HDU-3404" target="_blank" rel="noopener">HDU-3404</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>lxhgww is playing a game with his computer Deep Blue.<br>The game is played on a matrix containing lights. At first, some lights are on, while others are off. lxhgww and Deep Blue take turns to switch the lights. For each step, the player should choose a rectangle in the matrix: (x1 , y1) , (x1 , y2) , (x2 , y1) , (x2 , y2) , (x1&lt;=x2,y1&lt;=y2, the light at (x2, y2) should be on) and change the lights’ status on the four vertex of the rectangle, namely on to off, and off to on. The player turns all the lights off wins the game. Notice the rectangle is possibly degenerated to line or even a single cell so that the player may also switch two or one besides four lights in a move.<br>Deep Blue’s strategy is perfect, if it has a chance to win, never will it lose. Does lxhgww have a chance to win if he takes the first step?</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>The first line is an integer T(T&lt;=100) indicating the case number.<br>Each case has one integers n (n&lt;= 1000 ), the number of on-lights at the beginning of the game.<br>Then come n lines, each line has two integers, xi , yi, (1&lt;=xi&lt;=10000, 1&lt;=yi&lt;=10000) , so light at (xi, yi) is on at first. (No two lights at the same position)</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>If lxhgww still has a chance to win, output “Have a try, lxhgww.”, otherwise tell lxhgww “Don’t waste your time.”</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">2</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">1</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">2</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight erlang"><table><tr><td class="code"><pre><span class="line">Don't waste your time.</span><br><span class="line">Have a <span class="keyword">try</span>, lxhgww.</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>一个二维矩阵上，有若干个亮着的灯泡 。 每次选择一个矩阵（右上角的灯泡必须是亮的），改变四个角灯泡的状态，不能操作的选手判负。</p><p>Nim积定义</p><blockquote><p>$ x \otimes y = sg(x, y) = mex\{(a \otimes y) \oplus (x \otimes b) \oplus (a \otimes b), 0 \le a \lt x, 0 \le b \lt y\} $</p></blockquote><p>以下是对于 x, y≤4 的一个小表。</p><div class="table-container"><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">0</th><th style="text-align:center">1</th><th style="text-align:center">2</th><th style="text-align:center">3</th><th style="text-align:center">4</th></tr></thead><tbody><tr><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">1</td><td style="text-align:center">0</td><td style="text-align:center">1</td><td style="text-align:center">2</td><td style="text-align:center">3</td><td style="text-align:center">4</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">0</td><td style="text-align:center">2</td><td style="text-align:center">3</td><td style="text-align:center">1</td><td style="text-align:center">8</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">0</td><td style="text-align:center">3</td><td style="text-align:center">1</td><td style="text-align:center">2</td><td style="text-align:center">12</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center">0</td><td style="text-align:center">4</td><td style="text-align:center">8</td><td style="text-align:center">12</td><td style="text-align:center">6</td></tr></tbody></table></div><p>定义费马数Fermat 2-power为$ 2^{2^{k}} $，对于$ x,y &lt; 2^{2^{k}} $有以下性质</p><ul><li><p>一个 Fermat 2-power 与任意小于它的数的 Nim 积为一般意义下乘法的积，即$ x \otimes 2^{2^{k}} = x * 2^{2^{k}} $</p></li><li><p>一个 Fermat 2-power 与自己的 Nim 积为自己的 $ \frac{3}{2} $ 倍，即 $ 2^{2^{k}} \otimes 2^{2^{k}} = \frac{3}{2} * 2^{2^{k}}$</p></li><li><p>$ x \otimes y &lt; 2^{2^{k}} $</p></li></ul><p>根据性质可以得出递归求Nim积的板子。</p><p>详细参见论文<a href="http://www.doc88.com/p-5098170314707.html" target="_blank" rel="noopener">《从“k倍动态减法游戏”出发探究一类组合游戏问题》</a>。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    Nim积 x @ y = mex&#123;(a @ y) ^ (x @ b) ^ (a @ b)&#125;, 0 &lt;= a &lt; x, 0 &lt;= b &lt; y</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    1. X x 2^(2^a) = X * 2^(2^a)</span></span><br><span class="line"><span class="comment">    2. X x Y &lt; 2^(2^a)</span></span><br><span class="line"><span class="comment">    3. 2^(2^a) x 2^(2^a) = (3/2) * 2^(2^a)</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    模板一：调用 ans ^= f(x, y)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> SG[<span class="number">20</span>][<span class="number">20</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">f</span><span class="params">(<span class="keyword">int</span>, <span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">g</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span>                         <span class="comment">// 计算2^x与2^y的nim积</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(SG[x][y] != <span class="number">-1</span>) <span class="keyword">return</span> SG[x][y];</span><br><span class="line">    <span class="keyword">if</span>(!x) <span class="keyword">return</span> SG[x][y] = <span class="number">1</span>&lt;&lt;y;          <span class="comment">// x==0也就是1与2^y的nim积，等于2^y</span></span><br><span class="line">    <span class="keyword">if</span>(!y) <span class="keyword">return</span> SG[x][y] = <span class="number">1</span>&lt;&lt;x;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">1</span>, t;</span><br><span class="line">    <span class="keyword">int</span> xx=x, yy=y, k=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(x || y)                           <span class="comment">// 再将x和y分为二进制，这里计算那些普通乘积的（即对应二进制位不同的）</span></span><br><span class="line">    &#123;</span><br><span class="line">        t = <span class="number">1</span>&lt;&lt;k;                           <span class="comment">// 从此位得到的最终的数2^k</span></span><br><span class="line">        <span class="keyword">if</span>((x^y)&amp;<span class="number">1</span>)  ans *= t;              <span class="comment">// 该位不同</span></span><br><span class="line">        x&gt;&gt;=<span class="number">1</span>; y&gt;&gt;=<span class="number">1</span>; k&lt;&lt;=<span class="number">1</span>;                <span class="comment">// 从此位得到的指数(本身也是2的幂)</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    x=xx; y=yy; k=<span class="number">1</span>;    </span><br><span class="line">    <span class="keyword">while</span>(x || y)                           <span class="comment">// 计算那些相同的fermat 2-power 数，与已得出的数的nim积</span></span><br><span class="line">    &#123;</span><br><span class="line">        t = <span class="number">1</span>&lt;&lt;k;</span><br><span class="line">        <span class="keyword">if</span> ((x&amp;y)&amp;<span class="number">1</span>) ans = f(ans, t/<span class="number">2</span>*<span class="number">3</span>);   <span class="comment">// 该位相同</span></span><br><span class="line">        x&gt;&gt;=<span class="number">1</span>; y&gt;&gt;=<span class="number">1</span>; k&lt;&lt;=<span class="number">1</span>;                <span class="comment">// 从此位得到的指数(本身也是2的幂)</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> SG[xx][yy] = ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">f</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span>                         <span class="comment">//计算二位Nim积</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!x || !y) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(x == <span class="number">1</span>) <span class="keyword">return</span> y;</span><br><span class="line">    <span class="keyword">if</span>(y == <span class="number">1</span>) <span class="keyword">return</span> x;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=x, a=<span class="number">0</span>; i; i&gt;&gt;=<span class="number">1</span>, a++)       <span class="comment">//将x和二进制分解</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> ((i&amp;<span class="number">1</span>)==<span class="number">0</span>) <span class="keyword">continue</span>;             <span class="comment">//该位是1才计算</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=y, b=<span class="number">0</span>; j; j&gt;&gt;=<span class="number">1</span>, b++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> ((j&amp;<span class="number">1</span>)==<span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">            ans ^= g(a, b);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    k为最大的整数满足 M = 2^(2^k) &lt;= x</span></span><br><span class="line"><span class="comment">    x = p * M + q, y = s * M + t</span></span><br><span class="line"><span class="comment">    x @ y = spMM + sqM + tpM + tq</span></span><br><span class="line"><span class="comment">          = M(sp+sq+tp) + tq + (M/2 @ sp)</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    模板二：调用 ans ^ Nim_Multi(x, y)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getSg</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!x || !y) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(SG[x][y]!=<span class="number">-1</span>) <span class="keyword">return</span> SG[x][y];</span><br><span class="line">    <span class="keyword">bool</span> S[<span class="number">1</span>&lt;&lt;<span class="number">8</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;x; i++)</span><br><span class="line">        S[getSg(i, y)] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;y; i++)</span><br><span class="line">        S[getSg(x, i)] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;x; i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;y; j++)</span><br><span class="line">            S[getSg(i,y) ^ getSg(x,j) ^ getSg(i,j)] = <span class="number">1</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> mex = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(S[mex]) mex++;</span><br><span class="line">    <span class="keyword">return</span> SG[x][y]=mex;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Nim_Multi_Power</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x &lt; <span class="number">16</span>) <span class="keyword">return</span> getSg(x, y);</span><br><span class="line">    <span class="keyword">int</span> a=<span class="number">1</span>, m;</span><br><span class="line">    <span class="keyword">for</span>(; (<span class="number">1</span>&lt;&lt;a) &lt;= x; a&lt;&lt;=<span class="number">1</span>);</span><br><span class="line">    a &gt;&gt;= <span class="number">1</span>; m = <span class="number">1</span>&lt;&lt;a;</span><br><span class="line">    <span class="keyword">int</span> p = x/m, s = y/m, t = y&amp;(m<span class="number">-1</span>);</span><br><span class="line">    <span class="keyword">int</span> d1 = Nim_Multi_Power(p, s);</span><br><span class="line">    <span class="keyword">int</span> d2 = Nim_Multi_Power(p, t);</span><br><span class="line">    <span class="keyword">return</span> ((d1^d2) &lt;&lt; a) ^ Nim_Multi_Power(m/<span class="number">2</span>, d1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Nim_Multi</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x &lt; y) swap(x, y);</span><br><span class="line">    <span class="keyword">if</span> (x &lt; <span class="number">16</span>) <span class="keyword">return</span> getSg(x, y);</span><br><span class="line">    <span class="keyword">int</span> a=<span class="number">1</span>, m;</span><br><span class="line">    <span class="keyword">for</span>(; (<span class="number">1</span>&lt;&lt;a) &lt;= x; a&lt;&lt;=<span class="number">1</span>);</span><br><span class="line">    a &gt;&gt;= <span class="number">1</span>; m = <span class="number">1</span>&lt;&lt;a;</span><br><span class="line">    <span class="keyword">int</span> p = x/m, q = x&amp;(m<span class="number">-1</span>), s = y/ m, t = y&amp;(m<span class="number">-1</span>);</span><br><span class="line">    <span class="keyword">int</span> c1 = Nim_Multi(p, s);</span><br><span class="line">    <span class="keyword">int</span> c2 = Nim_Multi(p, t) ^ Nim_Multi(q, s);</span><br><span class="line">    <span class="keyword">int</span> c3 = Nim_Multi(q, t);</span><br><span class="line">    <span class="keyword">return</span> ((c1^c2) &lt;&lt; a) ^ c3 ^ Nim_Multi_Power(m/<span class="number">2</span>, c1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(SG, <span class="number">-1</span>, <span class="keyword">sizeof</span>(SG));</span><br><span class="line">    <span class="keyword">int</span> T; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> n; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> nim=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> x, y; </span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;x, &amp;y);</span><br><span class="line">            <span class="comment">//nim ^= f(x, y);</span></span><br><span class="line">            nim ^= Nim_Multi(x, y);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(nim)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Have a try, lxhgww.\n"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Don't waste your time.\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>博弈论</category>
      </categories>
      <tags>
        <tag>博弈论</tag>
        <tag>HDU</tag>
        <tag>Nim积</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】HDU-3567 Eight II</title>
    <url>/posts/186147ad.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="Eight-II-（HDU-3567"><a href="#Eight-II-（HDU-3567" class="headerlink" title="Eight II （HDU - 3567)"></a>Eight II （<a href="https://vjudge.net/problem/HDU-3567" target="_blank" rel="noopener">HDU - 3567</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>Eight-puzzle, which is also called “Nine grids”, comes from an old game.</p><p>In this game, you are given a 3 by 3 board and 8 tiles. The tiles are numbered from 1 to 8 and each covers a grid. As you see, there is a blank grid which can be represented as an ‘X’. Tiles in grids having a common edge with the blank grid can be moved into that blank grid. This operation leads to an exchange of ‘X’ with one tile.</p><p>We use the symbol ‘r’ to represent exchanging ‘X’ with the tile on its right side, and ‘l’ for the left side, ‘u’ for the one above it, ‘d’ for the one below it.</p><p><img src="/posts/186147ad/HDU3567-1.png" alt="img"></p><p>A state of the board can be represented by a string S using the rule showed below.</p><p><img src="/posts/186147ad/HDU3567-2.png" alt="img"></p><p>The problem is to operate an operation list of ‘r’, ‘u’, ‘l’, ‘d’ to turn the state of the board from state A to state B. You are required to find the result which meets the following constrains:<br>\1. It is of minimum length among all possible solutions.<br>\2. It is the lexicographically smallest one of all solutions of minimum length.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>The first line is T (T &lt;= 200), which means the number of test cases of this problem.</p><p>The input of each test case consists of two lines with state A occupying the first line and state B on the second line.<br>It is guaranteed that there is an available solution from state A to B.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For each test case two lines are expected.</p><p>The first line is in the format of “Case x: d”, in which x is the case number counted from one, d is the minimum length of operation list you need to turn A to B.<br>S is the operation list meeting the constraints and it should be showed on the second line.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">12</span>X453786</span><br><span class="line"><span class="number">12345678</span>X</span><br><span class="line"><span class="number">564178</span>X23</span><br><span class="line"><span class="number">7568</span>X4123</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">Case <span class="number">1</span>: <span class="number">2</span></span><br><span class="line">dd</span><br><span class="line">Case <span class="number">2</span>: <span class="number">8</span></span><br><span class="line">urrulldr</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>思考一下，’X’在9个不同位置的目标状态可以反推所有情况。这时我们只需要简单映射一下：</p><p><strong>564178<em>X</em>23→123456<em>X</em>78</strong></p><p><strong>7568<em>X</em>4123→5126<em>X</em>3478</strong></p><p>大致思路就很明确了。继续思考字典序的问题，由于推导顺序和题目要求一致，则不需要和Eight(<a href="https://vjudge.net/problem/HDU-1043" target="_blank" rel="noopener">HDU - 1043</a>)一般将方向颠倒，只用按字典序(dlru)排就行<br>注意参考代码中最后的路径是由pre数组链接的，直接倒推回去恰好和我们需要的相反，所以存入串中再逆序输出。而初始状态的方向被随意的存了一个1(vis数组)，所以在数量上和最后输出中都要-1<br>用了康拓展开，感觉再用上逆展开太耗时了，没想到好的方法，就在结构体里面丢了一个数组。尽管本题时间和空间限制范围都挺大。以后还得好好深入一下八数码八境界</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">4e5</span>+<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> vis[<span class="number">9</span>][N], pre[<span class="number">9</span>][N];</span><br><span class="line"><span class="keyword">int</span> T, n = <span class="number">9</span>;</span><br><span class="line"><span class="keyword">int</span> fac[] = &#123;<span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">6</span>, <span class="number">24</span>, <span class="number">120</span>, <span class="number">720</span>, <span class="number">5040</span>, <span class="number">40320</span>, <span class="number">362880</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> dx[] = &#123; <span class="number">1</span>,  <span class="number">0</span>,  <span class="number">0</span>, <span class="number">-1</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> dy[] = &#123; <span class="number">0</span>, <span class="number">-1</span>,  <span class="number">1</span>,  <span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">char</span> dir[] = <span class="string">"dlru"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> s[][<span class="number">9</span>] = &#123;</span><br><span class="line">    &#123;<span class="number">9</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>&#125;,</span><br><span class="line">    &#123;<span class="number">1</span>, <span class="number">9</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>&#125;,</span><br><span class="line">    &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">9</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>&#125;,</span><br><span class="line">    &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">9</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>&#125;,</span><br><span class="line">    &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>&#125;,</span><br><span class="line">    &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">9</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>&#125;,</span><br><span class="line">    &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">7</span>, <span class="number">8</span>&#125;,</span><br><span class="line">    &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">8</span>&#125;,</span><br><span class="line">    &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">P</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> a[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">int</span> h, x;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cantor</span><span class="params">(<span class="keyword">int</span> *s)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">        <span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>; j&lt;n; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(s[j]&lt;s[i])</span><br><span class="line">                num++;</span><br><span class="line">        &#125;</span><br><span class="line">        sum += num*fac[n-i<span class="number">-1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">decantor</span><span class="params">(<span class="keyword">int</span> sum, <span class="keyword">int</span> *t)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> vis[<span class="number">10</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">        <span class="keyword">int</span> tmp = sum/fac[n-i<span class="number">-1</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;=tmp; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(vis[j])</span><br><span class="line">                tmp++;</span><br><span class="line">        &#125;</span><br><span class="line">        t[i] = tmp+<span class="number">1</span>;</span><br><span class="line">        vis[tmp] = <span class="number">1</span>;</span><br><span class="line">        sum %= fac[n-i<span class="number">-1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bfs</span><span class="params">(<span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">    P sp;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">        sp.a[i] = s[k][i];</span><br><span class="line">    &#125;</span><br><span class="line">    sp.h = cantor(sp.a);</span><br><span class="line">    sp.x = k;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">queue</span>&lt;P&gt; q;</span><br><span class="line">    q.push(sp);</span><br><span class="line">    vis[k][sp.h] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(!q.empty()) &#123;</span><br><span class="line">        P tp = q.front();</span><br><span class="line">        q.pop();</span><br><span class="line"></span><br><span class="line">        P np;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">4</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> x = tp.x/<span class="number">3</span>+dx[i];</span><br><span class="line">            <span class="keyword">int</span> y = tp.x%<span class="number">3</span>+dy[i];</span><br><span class="line">            <span class="keyword">if</span>(x&lt;<span class="number">0</span> || x&gt;=<span class="number">3</span> || y&lt;<span class="number">0</span> || y&gt;=<span class="number">3</span>) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            np = tp;</span><br><span class="line">            np.x = x*<span class="number">3</span>+y;</span><br><span class="line"></span><br><span class="line">            swap(np.a[np.x], np.a[tp.x]);</span><br><span class="line">            np.h = cantor(np.a);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(vis[k][np.h]==<span class="number">-1</span>) &#123;</span><br><span class="line">                q.push(np);</span><br><span class="line">                vis[k][np.h] = i;</span><br><span class="line">                pre[k][np.h] = tp.h;</span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(vis, <span class="number">-1</span>, <span class="keyword">sizeof</span>(vis));</span><br><span class="line">    <span class="built_in">memset</span>(pre, <span class="number">-1</span>, <span class="keyword">sizeof</span>(pre));</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">        bfs(i);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> cs=<span class="number">1</span>; cs&lt;=T; cs++) &#123;</span><br><span class="line">        <span class="keyword">char</span> str[<span class="number">10</span>];</span><br><span class="line">        <span class="keyword">int</span> k, num[<span class="number">10</span>], t[<span class="number">10</span>];</span><br><span class="line"></span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>, str);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>, j=<span class="number">1</span>; i&lt;n; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(str[i]==<span class="string">'X'</span>)</span><br><span class="line">                k = i;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                num[str[i]-<span class="string">'0'</span>] = j++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>, str);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(str[i]==<span class="string">'X'</span>)</span><br><span class="line">                t[i] = <span class="number">9</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                t[i] = num[str[i]-<span class="string">'0'</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> h = cantor(t);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">string</span> path = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">while</span>(h!=<span class="number">-1</span>) &#123;</span><br><span class="line">            path += dir[vis[k][h]];</span><br><span class="line">            h = pre[k][h];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Case %d: %d\n"</span>, cs, path.length()<span class="number">-1</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=path.length()<span class="number">-2</span>; i&gt;=<span class="number">0</span>; i--)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%c"</span>, path[i]);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>搜索</category>
        <category>BFS</category>
      </categories>
      <tags>
        <tag>BFS</tag>
        <tag>HDU</tag>
        <tag>kuangbin 专题二</tag>
        <tag>康拓展开</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】HDU-3613 Best Reward</title>
    <url>/posts/6d2cc4d5.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="Best-Reward-HDU-3613"><a href="#Best-Reward-HDU-3613" class="headerlink" title="Best Reward(HDU-3613)"></a>Best Reward(<a href="https://vjudge.net/problem/HDU-3613" target="_blank" rel="noopener">HDU-3613</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>After an uphill battle, General Li won a great victory. Now the head of state decide to reward him with honor and treasures for his great exploit.</p><p>One of these treasures is a necklace made up of 26 different kinds of gemstones, and the length of the necklace is n. (That is to say: n gemstones are stringed together to constitute this necklace, and each of these gemstones belongs to only one of the 26 kinds.)</p><p>In accordance with the classical view, a necklace is valuable if and only if it is a palindrome - the necklace looks the same in either direction. However, the necklace we mentioned above may not a palindrome at the beginning. So the head of state decide to cut the necklace into two part, and then give both of them to General Li.</p><p>All gemstones of the same kind has the same value (may be positive or negative because of their quality - some kinds are beautiful while some others may looks just like normal stones). A necklace that is palindrom has value equal to the sum of its gemstones’ value. while a necklace that is not palindrom has value zero.</p><p>Now the problem is: how to cut the given necklace so that the sum of the two necklaces’s value is greatest. Output this value.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>The first line of input is a single integer T (1 ≤ T ≤ 10) - the number of test cases. The description of these test cases follows.</p><p>For each test case, the first line is 26 integers: v1, v2, …, v26 (-100 ≤ vi ≤ 100, 1 ≤ i ≤ 26), represent the value of gemstones of each kind.</p><p>The second line of each test case is a string made up of charactor ‘a’ to ‘z’. representing the necklace. Different charactor representing different kinds of gemstones, and the value of ‘a’ is v1, the value of ‘b’ is v2, …, and so on. The length of the string is no more than 500000.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>Output a single Integer: the maximum value General Li can get from the necklace.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span></span><br><span class="line">aba</span><br><span class="line"><span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span></span><br><span class="line">acacac</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">6</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>将一个字符串分为两部分，若某一子串是回文串，则该子串的价值为各字符的权值和，否则价值为0。求一种分割方法，使得两部分价值和最大。</p><p>首先跑一遍Manacher，对于原串的前缀回文子串，满足中心点<code>i==p[i]</code>，而对于原串的后缀回文子串，满足中心点<code>i+p[i] == 处理过的原串长度 即2*len(原串)+2</code>。i为处理过的字符串数组下标，p数组是最大回文半径。</p><p>所以枚举n+n-1个回文中心，看是否是原串的前缀回文子串，讨论剩下的部分，若剩下部分是回文串，则可能的<code>回文中心r = (处理过的原串长度n + 前缀回文子串的右端点i+p[i]-1) / 2</code>，以此判断后半部分是否为回文串，取最大价值和即可。获取回文子串的价值可以用前缀和优化。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> s[mxn], t[mxn];</span><br><span class="line"><span class="keyword">int</span> p[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">manacher_init</span><span class="params">(<span class="keyword">char</span> *s, <span class="keyword">char</span> *t, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> j = <span class="number">2</span>; t[<span class="number">0</span>] = <span class="string">'$'</span>, t[<span class="number">1</span>] = <span class="string">'#'</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        t[j++] = s[i];</span><br><span class="line">        t[j++] = <span class="string">'#'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    t[j] = <span class="string">'\0'</span>;</span><br><span class="line">    <span class="keyword">return</span> j;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">manacher</span><span class="params">(<span class="keyword">char</span> *t, <span class="keyword">int</span> *p, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span>  id = <span class="number">0</span>, mx = <span class="number">0</span>, ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        p[i] = mx&gt;i ? min(p[<span class="number">2</span>*id-i], mx-i) : <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (t[i+p[i]] == t[i-p[i]]) p[i]++;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (mx &lt; i+p[i])</span><br><span class="line">            mx = i+p[i], id = i;</span><br><span class="line"></span><br><span class="line">        ans = max(ans, p[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[<span class="number">30</span>];</span><br><span class="line"><span class="keyword">int</span> sum[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;    </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">26</span>; i++) </span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>, s);</span><br><span class="line">        <span class="keyword">int</span> n = manacher_init(s, t, <span class="built_in">strlen</span>(s));</span><br><span class="line">        manacher(t, p, n);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">/* 前缀和 */</span></span><br><span class="line">        sum[<span class="number">0</span>] = sum[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>; i&lt;n; i++)&#123;</span><br><span class="line">            sum[i] = i&amp;<span class="number">1</span> ? sum[i<span class="number">-1</span>] : sum[i<span class="number">-2</span>] + a[t[i]-<span class="string">'a'</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>; i&lt;n; i++)  <span class="comment">// 枚举前半部分回文中心</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> a=<span class="number">0</span>, b=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span>(i==p[i])&#123;        <span class="comment">// 如果前半部分是回文串</span></span><br><span class="line">                a = sum[i+p[i]<span class="number">-1</span>];</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">int</span> r = (n + i+p[i]<span class="number">-1</span>)/<span class="number">2</span>;   <span class="comment">// 获得后半部分回文中心</span></span><br><span class="line">            <span class="keyword">if</span>(r == n<span class="number">-1</span>)                <span class="comment">// 前半部分为原串，没有后半部分</span></span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(r+p[r] == n)&#123;            <span class="comment">// 如果后半部分是回文串</span></span><br><span class="line">                b = sum[n<span class="number">-2</span>] - sum[i+p[i]<span class="number">-1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">            ans = max(ans, a+b);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>字符串</category>
        <category>Manacher</category>
      </categories>
      <tags>
        <tag>Manacher</tag>
        <tag>kuangbin 专题十六</tag>
        <tag>HDU</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】HDU-3639 Hawk-and-Chicken</title>
    <url>/posts/3e49eec.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="Hawk-and-Chicken-HDU-3639"><a href="#Hawk-and-Chicken-HDU-3639" class="headerlink" title="Hawk-and-Chicken (HDU - 3639)"></a>Hawk-and-Chicken (<a href="https://vjudge.net/problem/HDU-3639" target="_blank" rel="noopener">HDU - 3639</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>Kids in kindergarten enjoy playing a game called Hawk-and-Chicken. But there always exists a big problem: every kid in this game want to play the role of Hawk.<br>So the teacher came up with an idea: Vote. Every child have some nice handkerchiefs, and if he/she think someone is suitable for the role of Hawk, he/she gives a handkerchief to this kid, which means this kid who is given the handkerchief win the support. Note the support can be transmitted. Kids who get the most supports win in the vote and able to play the role of Hawk.(A note:if A can win<br>support from B(A != B) A can win only one support from B in any case the number of the supports transmitted from B to A are many. And A can’t win the support from himself in any case.<br>If two or more kids own the same number of support from others, we treat all of them as winner.<br>Here’s a sample: 3 kids A, B and C, A gives a handkerchief to B, B gives a handkerchief to C, so C wins 2 supports and he is choosen to be the Hawk.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>There are several test cases. First is a integer T(T &lt;= 50), means the number of test cases.<br>Each test case start with two integer n, m in a line (2 &lt;= n &lt;= 5000, 0 &lt;m &lt;= 30000). n means there are n children(numbered from 0 to n - 1). Each of the following m lines contains two integers A and B(A != B) denoting that the child numbered A give a handkerchief to B.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For each test case, the output should first contain one line with “Case x:”, here x means the case number start from 1. Followed by one number which is the total supports the winner(s) get.<br>Then follow a line contain all the Hawks’ number. The numbers must be listed in increasing order and separated by single spaces.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="number">2</span></span><br><span class="line"><span class="symbol">4 </span><span class="number">3</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">2</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">0</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="symbol">3 </span><span class="number">3</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">0</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">1</span></span><br><span class="line"><span class="symbol">0 </span><span class="number">2</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">Case <span class="number">1</span>: <span class="number">2</span></span><br><span class="line"><span class="number">0</span> <span class="number">1</span></span><br><span class="line">Case <span class="number">2</span>: <span class="number">2</span></span><br><span class="line"><span class="number">0</span> <span class="number">1</span> <span class="number">2</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">5e3</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M = <span class="number">3e4</span>+<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">E</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> to, next;</span><br><span class="line">&#125; e[M];</span><br><span class="line"><span class="keyword">int</span> H[N], tot, R[N];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> S[N], top;</span><br><span class="line"><span class="keyword">int</span> dfn[N], low[N], bel[N], idx, scc;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> T, n, m;</span><br><span class="line"><span class="keyword">int</span> u, v;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> od[N], num[N], sum[N];</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> *H, <span class="keyword">int</span> from, <span class="keyword">int</span> to)</span> </span>&#123;</span><br><span class="line">    e[tot] = &#123;to, H[from]&#125;;</span><br><span class="line">    H[from] = tot++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u)</span> </span>&#123;</span><br><span class="line">    dfn[u] = low[u] = ++idx;</span><br><span class="line">    S[++top]=u;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=H[u]; ~i; i=e[i].next) &#123;</span><br><span class="line">        <span class="keyword">int</span> v = e[i].to;</span><br><span class="line">        <span class="keyword">if</span>(!dfn[v]) &#123;</span><br><span class="line">            dfs(v);</span><br><span class="line">            low[u] = min(low[u], low[v]);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(!bel[v])</span><br><span class="line">            low[u] = min(low[u], dfn[v]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(low[u]==dfn[u]) &#123;</span><br><span class="line">        scc++;</span><br><span class="line">        <span class="keyword">int</span> t;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            t=S[top--];</span><br><span class="line">            bel[t]=scc;</span><br><span class="line">        &#125; <span class="keyword">while</span>(t!=u);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">tarjan</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(dfn, <span class="number">0</span>, <span class="keyword">sizeof</span>(dfn));</span><br><span class="line">    <span class="built_in">memset</span>(bel, <span class="number">0</span>, <span class="keyword">sizeof</span>(bel));</span><br><span class="line">    idx = scc = top = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(!dfn[i])</span><br><span class="line">            dfs(i);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">stat</span><span class="params">(<span class="keyword">int</span> u)</span> </span>&#123;</span><br><span class="line">    vis[u] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> t = num[u];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=R[u]; ~i; i=e[i].next) &#123;</span><br><span class="line">        <span class="keyword">int</span> v = e[i].to;</span><br><span class="line">        <span class="keyword">if</span>(!vis[v]) &#123;</span><br><span class="line">            t += stat(v);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> t;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(od, <span class="number">0</span>, <span class="keyword">sizeof</span>(od));</span><br><span class="line">    <span class="built_in">memset</span>(num, <span class="number">0</span>, <span class="keyword">sizeof</span>(num));</span><br><span class="line">    <span class="built_in">memset</span>(sum, <span class="number">0</span>, <span class="keyword">sizeof</span>(sum));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++) &#123;</span><br><span class="line">        num[bel[i]]++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> u=<span class="number">1</span>; u&lt;=n; u++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=H[u]; ~i; i=e[i].next) &#123;</span><br><span class="line">            <span class="keyword">int</span> v = e[i].to;</span><br><span class="line">            <span class="keyword">if</span>(bel[u]!=bel[v]) &#123;</span><br><span class="line">                add(R, bel[v], bel[u]);</span><br><span class="line">                od[bel[u]]++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=scc; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(!od[i]) &#123;</span><br><span class="line">            <span class="built_in">memset</span>(vis, <span class="number">0</span>, <span class="keyword">sizeof</span>(vis));</span><br><span class="line">            sum[i] = stat(i)<span class="number">-1</span>;</span><br><span class="line">            ans = max(ans, sum[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> cs=<span class="number">1</span>; cs&lt;=T; cs++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;m);</span><br><span class="line">        <span class="built_in">memset</span>(H, <span class="number">-1</span>, <span class="keyword">sizeof</span>(H));</span><br><span class="line">        <span class="built_in">memset</span>(R, <span class="number">-1</span>, <span class="keyword">sizeof</span>(R));</span><br><span class="line">        tot = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;m; i++) &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;u, &amp;v);</span><br><span class="line">            add(H, u+<span class="number">1</span>, v+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        tarjan();</span><br><span class="line">        <span class="keyword">int</span> ans = solve(), flag = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Case %d: %d\n"</span>, cs, ans);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(sum[bel[i]]==ans) &#123;</span><br><span class="line">                <span class="keyword">if</span>(flag)</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    flag = <span class="number">1</span>;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%d"</span>, i<span class="number">-1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>图论</category>
        <category>连通性</category>
        <category>强连通分量</category>
        <category>Tarjan</category>
      </categories>
      <tags>
        <tag>HDU</tag>
        <tag>Tarjan</tag>
        <tag>DFS</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】HDU-3746 Cyclic Nacklace</title>
    <url>/posts/5c75aa0.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="Cyclic-Nacklace-HDU-3746"><a href="#Cyclic-Nacklace-HDU-3746" class="headerlink" title="Cyclic Nacklace (HDU-3746)"></a>Cyclic Nacklace (<a href="https://vjudge.net/problem/HDU-3746" target="_blank" rel="noopener">HDU-3746</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>CC always becomes very depressed at the end of this month, he has checked his credit card yesterday, without any surprise, there are only 99.9 yuan left. he is too distressed and thinking about how to tide over the last days. Being inspired by the entrepreneurial spirit of “HDU CakeMan”, he wants to sell some little things to make money. Of course, this is not an easy task.</p><p>As Christmas is around the corner, Boys are busy in choosing christmas presents to send to their girlfriends. It is believed that chain bracelet is a good choice. However, Things are not always so simple, as is known to everyone, girl’s fond of the colorful decoration to make bracelet appears vivid and lively, meanwhile they want to display their mature side as college students. after CC understands the girls demands, he intends to sell the chain bracelet called CharmBracelet. The CharmBracelet is made up with colorful pearls to show girls’ lively, and the most important thing is that it must be connected by a cyclic chain which means the color of pearls are cyclic connected from the left to right. And the cyclic count must be more than one. If you connect the leftmost pearl and the rightmost pearl of such chain, you can make a CharmBracelet. Just like the pictrue below, this CharmBracelet’s cycle is 9 and its cyclic count is 2:<br><img src="https://vj.z180.cn/53f6d763e6047bb71352513fe2805f00?v=1596012463" alt="img"><br>Now CC has brought in some ordinary bracelet chains, he wants to buy minimum number of pearls to make CharmBracelets so that he can save more money. but when remaking the bracelet, he can only add color pearls to the left end and right end of the chain, that is to say, adding to the middle is forbidden.<br>CC is satisfied with his ideas and ask you for help.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>The first line of the input is a single integer T ( 0 &lt; T &lt;= 100 ) which means the number of test cases.<br>Each test case contains only one line describe the original ordinary chain to be remade. Each character in the string stands for one pearl and there are 26 kinds of pearls being described by ‘a’ ~’z’ characters. The length of the string Len: ( 3 &lt;= Len &lt;= 100000 ).</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For each case, you are required to output the minimum count of pearls added to make a CharmBracelet.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">3</span><br><span class="line">aaa</span><br><span class="line">abca</span><br><span class="line">abcde</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">0</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">5</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>KMP求最小循环节。</p><ol><li>最小循环节=原串长度-末位失配，L=len-next[len]。</li><li>如果len可以被len-next[len]整除，则表明字符串S可以完全由循环节循环组成，循环周期T=len/L。</li><li>需要补的个数是循环个数L-len%L = L-(len-L)%L = L-next[len]%L。</li></ol><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> t[mxn];</span><br><span class="line"><span class="keyword">int</span> nxt[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getnxt</span><span class="params">(<span class="keyword">char</span>* t, <span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">-1</span>; nxt[<span class="number">0</span>] = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; m) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (j == <span class="number">-1</span> || t[i] == t[j]) &#123;</span><br><span class="line">            i++, j++;</span><br><span class="line">            <span class="comment">// if (t[i] == t[j])</span></span><br><span class="line">            <span class="comment">//     nxt[i] = nxt[j]; // next数组优化</span></span><br><span class="line">            <span class="comment">// else</span></span><br><span class="line">                nxt[i] = j;</span><br><span class="line">        &#125; <span class="keyword">else</span></span><br><span class="line">            j = nxt[j];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>, t);</span><br><span class="line">        <span class="keyword">int</span> m = <span class="built_in">strlen</span>(t);</span><br><span class="line">        getnxt(t, m);</span><br><span class="line">        <span class="keyword">if</span>(nxt[m] == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, m);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">int</span> L = m - nxt[m]; <span class="comment">// 最小循环节=原串长度-末位失配，L=len-next[len]</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, m%L ? L-m%L : <span class="number">0</span>);    <span class="comment">// 需要补的个数是循环个数L-len%L = L-(len-L)%L = L-next[len]%L</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>字符串</category>
        <category>模式匹配</category>
        <category>KMP</category>
      </categories>
      <tags>
        <tag>KMP</tag>
        <tag>最小循环节</tag>
        <tag>kuangbin 专题十六</tag>
        <tag>HDU</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】HDU-3980 Paint Chain</title>
    <url>/posts/9fb4723d.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="Paint-Chain-HDU-3980"><a href="#Paint-Chain-HDU-3980" class="headerlink" title="Paint Chain(HDU-3980)"></a>Paint Chain(<a href="https://vjudge.net/problem/HDU-3980" target="_blank" rel="noopener">HDU-3980</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>Aekdycoin and abcdxyzk are playing a game. They get a circle chain with some beads. Initially none of the beads is painted. They take turns to paint the chain. In Each turn one player must paint a unpainted beads. Whoever is unable to paint in his turn lose the game. Aekdycoin will take the first move.</p><p>Now, they thought this game is too simple, and they want to change some rules. In each turn one player must select a certain number of consecutive unpainted beads to paint. The other rules is The same as the original. Who will win under the rules ?You may assume that both of them are so clever.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>First line contains T, the number of test cases. Following T line contain 2 integer N, M, indicate the chain has N beads, and each turn one player must paint M consecutive beads. (1 &lt;= N, M &lt;= 1000)</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For each case, print “Case #idx: “ first where idx is the case number start from 1, and the name of the winner.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">2 </span></span><br><span class="line"><span class="symbol">3 </span><span class="number">1</span> </span><br><span class="line"><span class="symbol">4 </span><span class="number">2</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight autoit"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Case</span> <span class="meta">#1: aekdycoin </span></span><br><span class="line"><span class="keyword">Case</span> <span class="meta">#2: abcdxyzk</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>Anti-Nim博弈，可以参见<a href="https://blog.lordash.cf/posts/a3deb991.html">【题解】POJ-3480 John</a>。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> SG[<span class="number">1005</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getSg</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> m)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(n&lt;m) <span class="keyword">return</span> SG[n]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(SG[n]!=<span class="number">-1</span>) <span class="keyword">return</span> SG[n];</span><br><span class="line">    <span class="keyword">bool</span> S[<span class="number">1005</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;=n-m; i++)</span><br><span class="line">        S[getSg(i, m) ^ getSg(n-m-i, m)] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> mex = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(S[mex]) mex++;</span><br><span class="line">    <span class="keyword">return</span> SG[n]=mex;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> cs=<span class="number">1</span>; cs&lt;=T; cs++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">memset</span>(SG, <span class="number">-1</span>, <span class="keyword">sizeof</span>(SG));</span><br><span class="line">        <span class="keyword">int</span> n, m;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;n, &amp;m);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Case #%d: "</span>, cs);</span><br><span class="line">        <span class="keyword">if</span>(n&lt;m || getSg(n-m, m))&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"abcdxyzk\n"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"aekdycoin\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>博弈论</category>
      </categories>
      <tags>
        <tag>博弈论</tag>
        <tag>SG函数</tag>
        <tag>HDU</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】HDU-4300 Clairewd’s message</title>
    <url>/posts/45459a98.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="Clairewd’s-message-HDU-4300"><a href="#Clairewd’s-message-HDU-4300" class="headerlink" title="Clairewd’s message(HDU-4300)"></a>Clairewd’s message(<a href="https://vjudge.net/problem/HDU-4300" target="_blank" rel="noopener">HDU-4300</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>Clairewd is a member of FBI. After several years concealing in BUPT, she intercepted some important messages and she was preparing for sending it to ykwd. They had agreed that each letter of these messages would be transfered to another one according to a conversion table.<br>Unfortunately, GFW(someone’s name, not what you just think about) has detected their action. He also got their conversion table by some unknown methods before. Clairewd was so clever and vigilant that when she realized that somebody was monitoring their action, she just stopped transmitting messages.<br>But GFW knows that Clairewd would always firstly send the ciphertext and then plaintext(Note that they won’t overlap each other). But he doesn’t know how to separate the text because he has no idea about the whole message. However, he thinks that recovering the shortest possible text is not a hard task for you.<br>Now GFW will give you the intercepted text and the conversion table. You should help him work out this problem.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>The first line contains only one integer T, which is the number of test cases.<br>Each test case contains two lines. The first line of each test case is the conversion table S. S[i] is the ith latin letter’s cryptographic letter. The second line is the intercepted text which has n letters that you should recover. It is possible that the text is complete.</p><p>Range of test data:<br>T&lt;= 100 ;<br>n&lt;= 100000;</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For each test case, output one line contains the shorest possible complete text.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">2</span></span><br><span class="line">abcdefghijklmnopqrstuvwxyz</span><br><span class="line">abcdab</span><br><span class="line">qwertyuiopasdfghjklzxcvbnm</span><br><span class="line">qwertabcde</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">abcdabcd</span></span><br><span class="line"><span class="attribute">qwertabcde</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>给你一个a-z的对照表，以及一个 密文+不完整明文 的字符串。求最短的 密文+完整明文。先解密前半部分，再求一个最大公共前缀后缀。注意考虑前后缀重叠的情况，即next[len]&gt;len/2。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> s[mxn], t[mxn], p[mxn];</span><br><span class="line"><span class="keyword">int</span> nxt[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getnxt</span><span class="params">(<span class="keyword">char</span>* t, <span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">-1</span>; nxt[<span class="number">0</span>] = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; m) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (j == <span class="number">-1</span> || t[i] == t[j]) &#123;</span><br><span class="line">            i++, j++;</span><br><span class="line">            <span class="comment">// if (t[i] == t[j])</span></span><br><span class="line">            <span class="comment">//     nxt[i] = nxt[j]; // next数组优化</span></span><br><span class="line">            <span class="comment">// else</span></span><br><span class="line">                nxt[i] = j;</span><br><span class="line">        &#125; <span class="keyword">else</span></span><br><span class="line">            j = nxt[j];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">26</span>; i++)&#123;</span><br><span class="line">            <span class="keyword">char</span> c; <span class="built_in">scanf</span>(<span class="string">" %c"</span>, &amp;c);</span><br><span class="line">            p[c-<span class="string">'a'</span>] = <span class="string">'a'</span>+i;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>, s);</span><br><span class="line">        <span class="keyword">int</span> n = <span class="built_in">strlen</span>(s);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> m = (n+<span class="number">1</span>)/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;m; i++)&#123;</span><br><span class="line">            t[i] = p[s[i]-<span class="string">'a'</span>];</span><br><span class="line">            t[i+m] = s[i+m];</span><br><span class="line">        &#125;</span><br><span class="line">        getnxt(t, n);</span><br><span class="line"></span><br><span class="line">        m = nxt[n];</span><br><span class="line">        <span class="keyword">if</span>(m &gt; n/<span class="number">2</span>)</span><br><span class="line">            m = n/<span class="number">2</span>;</span><br><span class="line">        m = n-m;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;m; i++)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%c"</span>, s[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;m; i++)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%c"</span>, p[s[i]-<span class="string">'a'</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>字符串</category>
        <category>模式匹配</category>
        <category>KMP</category>
      </categories>
      <tags>
        <tag>KMP</tag>
        <tag>kuangbin 专题十六</tag>
        <tag>HDU</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】HDU-4513 吉哥系列故事-完美队形II</title>
    <url>/posts/c0082580.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="吉哥系列故事-完美队形II-HDU-4513"><a href="#吉哥系列故事-完美队形II-HDU-4513" class="headerlink" title="吉哥系列故事-完美队形II(HDU-4513)"></a>吉哥系列故事-完美队形II(<a href="https://vjudge.net/problem/HDU-4513" target="_blank" rel="noopener">HDU-4513</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>吉哥又想出了一个新的完美队形游戏！<br>假设有n个人按顺序站在他的面前，他们的身高分别是h[1], h[2] … h[n]，吉哥希望从中挑出一些人，让这些人形成一个新的队形，新的队形若满足以下三点要求，则就是新的完美队形：</p><p>1、挑出的人保持原队形的相对顺序不变，且必须都是在原队形中连续的；<br>2、左右对称，假设有m个人形成新的队形，则第1个人和第m个人身高相同，第2个人和第m-1个人身高相同，依此类推，当然如果m是奇数，中间那个人可以任意；<br>3、从左到中间那个人，身高需保证不下降，如果用H表示新队形的高度，则H[1] &lt;= H[2] &lt;= H[3] …. &lt;= H[mid]。</p><p>现在吉哥想知道：最多能选出多少人组成新的完美队形呢？</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入数据第一行包含一个整数T，表示总共有T组测试数据(T &lt;= 20)；<br>每组数据首先是一个整数n(1 &lt;= n &lt;= 100000)，表示原先队形的人数，接下来一行输入n个整数，表示原队形从左到右站的人的身高（50 &lt;= h &lt;= 250，不排除特别矮小和高大的）。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>请输出能组成完美队形的最多人数，每组输出占一行。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="symbol">51 </span><span class="number">52</span> <span class="number">51</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="symbol">51 </span><span class="number">52</span> <span class="number">52</span> <span class="number">51</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">4</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>Manacher，中心扩展的时候判断一下条件即可。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> s[mxn], t[mxn];</span><br><span class="line"><span class="keyword">int</span> p[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">manacher_init</span><span class="params">(<span class="keyword">int</span> *s, <span class="keyword">int</span> *t, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> j = <span class="number">2</span>;</span><br><span class="line">    t[<span class="number">0</span>] = <span class="number">-2</span>, t[<span class="number">1</span>] = <span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        t[j++] = s[i];</span><br><span class="line">        t[j++] = <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    t[j] = <span class="number">-3</span>;</span><br><span class="line">    <span class="keyword">return</span> j;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">manacher</span><span class="params">(<span class="keyword">int</span> *t, <span class="keyword">int</span> *p, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> id = <span class="number">0</span>, mx = <span class="number">0</span>, ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        p[i] = i&lt;mx ? min(p[<span class="number">2</span>*id-i], mx-i) : <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (t[i+p[i]] == t[i-p[i]])&#123;</span><br><span class="line">            <span class="keyword">if</span>(t[i+p[i]<span class="number">-2</span>] &lt; t[i+p[i]]) <span class="keyword">break</span>;</span><br><span class="line">            p[i]++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (mx &lt; i+p[i])</span><br><span class="line">            mx = i+p[i], id = i;</span><br><span class="line"></span><br><span class="line">        ans = max(ans, p[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> n; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;s[i]);</span><br><span class="line">        n = manacher_init(s, t, n);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, manacher(t, p, n));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>字符串</category>
        <category>Manacher</category>
      </categories>
      <tags>
        <tag>Manacher</tag>
        <tag>kuangbin 专题十六</tag>
        <tag>HDU</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】HDU-4388 Stone Game II</title>
    <url>/posts/fb172cdc.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="Stone-Game-II-HDU-4388"><a href="#Stone-Game-II-HDU-4388" class="headerlink" title="Stone Game II (HDU-4388)"></a>Stone Game II (<a href="https://vjudge.net/problem/HDU-4388" target="_blank" rel="noopener">HDU-4388</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>Stone Game II comes. It needs two players to play this game. There are some piles of stones on the desk at the beginning. Two players move the stones in turn. At each step of the game the player should do the following operations.<br>First, choose a pile of stones. (We assume that the number of stones in this pile is n)<br>Second, take some stones from this pile. Assume the number of stones left in this pile is k. The player must ensure that 0 &lt; k &lt; n and (k XOR n) &lt; n, otherwise he loses.<br>At last, add a new pile of size (k XOR n). Now the player can add a pile of size ((2*k) XOR n) instead of (k XOR n) (However, there is only one opportunity for each player in each game).<br>The first player who can’t do these operations loses. Suppose two players will do their best in the game, you are asked to write a program to determine who will win the game.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>The first line contains the number T of test cases (T&lt;=150). The first line of each test cases contains an integer number n (n&lt;=50), denoting the number of piles. The following n integers describe the number of stones in each pile at the beginning of the game.<br>You can assume that all the number of stones in each pile will not exceed 100,000.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For each test case, print the case number and the answer. if the first player will win the game print “Yes”(quotes for clarity) in a single line, otherwise print “No”(quotes for clarity).</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">2</span> <span class="number">3</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">2</span> <span class="number">3</span> <span class="number">3</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">Case 1:</span> <span class="literal">No</span></span><br><span class="line"><span class="attr">Case 2:</span> <span class="literal">Yes</span></span><br><span class="line"><span class="attr">Case 3:</span> <span class="literal">No</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>对于每一堆，分解到2的幂就无法再次分解了，所以我们统计一下二进制下1的数量，cnt-1为奇数时先手胜，反之。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">bitcount</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(x)&#123;</span><br><span class="line">        x &amp;= x<span class="number">-1</span>;</span><br><span class="line">        ans++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> cs=<span class="number">1</span>; cs&lt;=T; cs++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> n; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> nim = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> x; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;x);</span><br><span class="line">            nim ^= (bitcount(x)<span class="number">-1</span>) &amp; <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Case %d: "</span>, cs);</span><br><span class="line">        <span class="keyword">if</span>(nim)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Yes\n"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"No\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>博弈论</category>
      </categories>
      <tags>
        <tag>博弈论</tag>
        <tag>HDU</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】HDU-4763 Theme Section</title>
    <url>/posts/4d9aeab4.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="Theme-Section-HDU-4763"><a href="#Theme-Section-HDU-4763" class="headerlink" title="Theme Section(HDU-4763)"></a>Theme Section(<a href="https://vjudge.net/problem/HDU-HDU-4763" target="_blank" rel="noopener">HDU-4763</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>It’s time for music! A lot of popular musicians are invited to join us in the music festival. Each of them will play one of their representative songs. To make the programs more interesting and challenging, the hosts are going to add some constraints to the rhythm of the songs, i.e., each song is required to have a ‘theme section’. The theme section shall be played at the beginning, the middle, and the end of each song. More specifically, given a theme section E, the song will be in the format of ‘EAEBE’, where section A and section B could have arbitrary number of notes. Note that there are 26 types of notes, denoted by lower case letters ‘a’ - ‘z’.</p><p>To get well prepared for the festival, the hosts want to know the maximum possible length of the theme section of each song. Can you help us?</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>The integer N in the first line denotes the total number of songs in the festival. Each of the following N lines consists of one string, indicating the notes of the i-th (1 &lt;= i &lt;= N) song. The length of the string will not exceed 10^6.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>There will be N lines in the output, where the i-th line denotes the maximum possible length of the theme section of the i-th song.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">5</span><br><span class="line">xy</span><br><span class="line">abc</span><br><span class="line">aaa</span><br><span class="line">aaaaba</span><br><span class="line">aaxoaaaaa</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">0</span></span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>标记第一个E的结尾，枚举第二个E，满足条件的求个max即可。数据有点水。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> t[mxn];</span><br><span class="line"><span class="keyword">int</span> nxt[mxn], vis[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getnxt</span><span class="params">(<span class="keyword">char</span>* t, <span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">-1</span>; nxt[<span class="number">0</span>] = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; m) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (j == <span class="number">-1</span> || t[i] == t[j]) &#123;</span><br><span class="line">            i++, j++;</span><br><span class="line">            <span class="comment">// if (t[i] == t[j])</span></span><br><span class="line">            <span class="comment">//     nxt[i] = nxt[j]; // next数组优化</span></span><br><span class="line">            <span class="comment">// else</span></span><br><span class="line">                nxt[i] = j;</span><br><span class="line">        &#125; <span class="keyword">else</span></span><br><span class="line">            j = nxt[j];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>, t);</span><br><span class="line">        <span class="keyword">int</span> n = <span class="built_in">strlen</span>(t);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) vis[i] = <span class="number">0</span>;</span><br><span class="line">        getnxt(t, n);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=n; i&gt;<span class="number">0</span>; i=nxt[i])&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="number">3</span>*i&lt;=n)</span><br><span class="line">                vis[i] = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=n<span class="number">-1</span>; i&gt;<span class="number">1</span>; i--) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=i; j&gt;<span class="number">0</span>; j=nxt[j]) &#123;</span><br><span class="line">                <span class="keyword">if</span>(vis[j] &amp;&amp; <span class="number">2</span>*j&lt;=i &amp;&amp; i+j&lt;=n) &#123;</span><br><span class="line">                    ans = max(ans, j);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>字符串</category>
        <category>模式匹配</category>
        <category>KMP</category>
      </categories>
      <tags>
        <tag>KMP</tag>
        <tag>kuangbin 专题十六</tag>
        <tag>HDU</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】HDU-4847 Wow! Such Doge!</title>
    <url>/posts/5bf0f461.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="Wow-Such-Doge-HDU-4847"><a href="#Wow-Such-Doge-HDU-4847" class="headerlink" title="Wow! Such Doge!(HDU-4847)"></a>Wow! Such Doge!(<a href="https://vjudge.net/problem/HDU-4847" target="_blank" rel="noopener">HDU-4847</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>Chen, Adrian (November 7, 2013). “Doge Is An Ac- tually Good Internet Meme. Wow.”. Gawker. Retrieved November 22, 2013.</p><p>Doge is an Internet meme that became popular in 2013. The meme typically con- sists of a picture of a Shiba Inu dog ac- companied by multicolored text in Comic Sans MS font in the foreground. The text, representing a kind of internal monologue, is deliberately written in broken English, and usually contains the word “wow” and the phrases “such x”, “much x”, “many x”, “very x” and “so x”.<br>Kabosu, the Shiba Inu featured in the original meme, was first pictured in a 2010 blog post by Atsuko Sato, a Japanese kindergarten teacher. Afterwards, varia- tions of the pictures using overlaid Comic Sans text were posted from a Tumblr blog, Shiba Confessions. However, the use of the intentionally misspelled “doge” dates back to June 2005, when it was mentioned in an episode of Homestar Runners puppet series.<br>In August 2013, images of the meme were spammed on Reddit’s r/MURICA subreddit by 4chan’s random imageboard, /b/. A search of the term doge on Google Trends shows an explosion of popularity occurring in October 2013, and more so in the following month. By November 2013, the meme had become widespread on the Internet. Google later created a Doge Easter egg: when doge meme was entered into the YouTube search bar, all of the site’s text would be displayed in colorful Comic Sans, similar to the kind used by the meme.<br>The meme was ranked #12 on MTV’s list of “50 Things Pop Culture Had Us Giving Thanks For” in 2013. Io9 compared the internal dialog of the Shiba Inu dogs to lolcat-speak. The image most commonly associated with the meme is of a female Shiba Inu named Kabosu, taken from a Japanese blog documenting the dog’s daily activities. The spelling of doge has several variants, leading to debate on its actual pronunciation. On December 13, Doge was named the “top meme” of 2013 by Know Your Meme.<br>In December 2013, the Dogecoin was introduced as a new cryptocurrency, making it the first cryptocurrency to be based on an Internet meme; the viral phenomenon, along with usage of the Comic Sans MS typeface, gave it “the Internet density of a large star” according to Medium writer Quinn Norton.<br>In late December 2013, members of the U.S. Congress produced material in the meme’s style. Huffington Post commented that Doge was “killed” because of the Congress members’ usage of the meme.<br>By early 2014, Doge’s popularity was sustained by internet communities on social media, accompanied by the rapid growth and acceptance of Dogecoin. In April 2014, Doge experienced a second major media resurgence due to revelations of the Dogecoin community’s intent to sponsor Josh Wise in NASCAR and place a picture of the Shiba Inu on his vehicle.</p><p>—— Doge (meme). (2014, May 18).<br>In Wikipedia, The Free Encyclopedia. Retrieved 02:00, May 22, 2014, from<br><a href="http://en.wikipedia.org/w/index.php?title=Doge_(meme)&amp;oldid=609040691" target="_blank" rel="noopener">http://en.wikipedia.org/w/index.php?title=Doge_(meme)&amp;oldid=609040691</a></p><p>Now, Doge wants to know how many words “doge” are there in a given article. Would you like to help Doge solve this problem?</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>An article that Doge wants to know.<br>The size of the article does not exceed 64KB. The article contains only ASCII characters.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>Please output the number of word “doge” (case-<strong>in</strong>sensitive). Refer to the samples for more details.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight erlang-repl"><table><tr><td class="code"><pre><span class="line">adoge</span><br><span class="line">cutedo </span><br><span class="line">yourge </span><br><span class="line">blownDoge</span><br><span class="line">lovelyDooge</span><br><span class="line">Wow!	Such Dooooooooooooooge!!!</span><br><span class="line">D0ge</span><br><span class="line">dOge DOGE </span><br><span class="line">dogedoge</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">6</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>可以用KMP。</p><p><img src="https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1596864629044&amp;di=2c4c494fd9bb102ca6f316f05b38e346&amp;imgtype=0&amp;src=http%3A%2F%2Fimg.mp.itc.cn%2Fq_70%2Cc_zoom%2Cw_640%2Fupload%2F20160711%2Fdc120ebb640943dba489423d874ef6aa_th.jpg" alt="doge"></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> s[mxn], t[] = <span class="string">"doge"</span>;</span><br><span class="line"><span class="keyword">int</span> nxt[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getnxt</span><span class="params">(<span class="keyword">char</span>* t, <span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">-1</span>; nxt[<span class="number">0</span>] = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; m) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (j == <span class="number">-1</span> || t[i] == t[j]) &#123;</span><br><span class="line">            i++, j++;</span><br><span class="line">            <span class="comment">// if (t[i] == t[j])</span></span><br><span class="line">            <span class="comment">//     nxt[i] = nxt[j]; // next数组优化</span></span><br><span class="line">            <span class="comment">// else</span></span><br><span class="line">                nxt[i] = j;</span><br><span class="line">        &#125; <span class="keyword">else</span></span><br><span class="line">            j = nxt[j];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">KMP</span><span class="params">(<span class="keyword">char</span>* s, <span class="keyword">char</span>* t, <span class="keyword">int</span> n, <span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>, ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; n) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (j == <span class="number">-1</span> || s[i] == t[j]) &#123;</span><br><span class="line">            i++, j++;</span><br><span class="line">            <span class="keyword">if</span> (j &gt;= m) &#123;   <span class="comment">// 匹配</span></span><br><span class="line">                ans++;</span><br><span class="line">                j = <span class="number">0</span>;</span><br><span class="line">                <span class="comment">// return i-j;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span></span><br><span class="line">            j = nxt[j];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">    <span class="comment">// return -1;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    getnxt(t, <span class="number">4</span>);</span><br><span class="line">    <span class="keyword">while</span>(fgets(s, mxn, <span class="built_in">stdin</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> n = <span class="built_in">strlen</span>(s);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) s[i] = <span class="built_in">tolower</span>(s[i]);</span><br><span class="line">        ans += KMP(s, t, n, <span class="number">4</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>字符串</category>
        <category>模式匹配</category>
        <category>KMP</category>
      </categories>
      <tags>
        <tag>KMP</tag>
        <tag>kuangbin 专题十六</tag>
        <tag>HDU</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】LightOJ-1186 Incredible Chess</title>
    <url>/posts/ffea73e7.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="Incredible-Chess-LightOJ-1186"><a href="#Incredible-Chess-LightOJ-1186" class="headerlink" title="Incredible Chess(LightOJ-1186)"></a>Incredible Chess(<a href="https://vjudge.net/problem/LightOJ-1186" target="_blank" rel="noopener">LightOJ-1186</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>You are given an <strong>n x n</strong> chess board. Only pawn is used in the ‘Incredible Chess’ and they can move forward or backward. In each column there are two pawns, one white and one black. White pawns are placed in the lower part of the board and the black pawns are placed in the upper part of the board.</p><p>The game is played by two players. Initially a board configuration is given. One player uses white pieces while the other uses black. In each move, a player can move a pawn of his piece, which can go forward or backward any positive integer steps, but it cannot jump over any piece. White gives the first move.</p><p>The game ends when there is no move for a player and he will lose the game. Now you are given the initial configuration of the board. You have to write a program to determine who will be the winner.</p><p><img src="https://vj.z180.cn/e013d8d58fc971cd42fd70fa43bbdee0?v=1594961486" alt="Example of a Board"></p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>Input starts with an integer <strong>T (≤ 200)</strong>, denoting the number of test cases.</p><p>Each case starts with an integer <strong>n (3 ≤ n ≤ 100)</strong> denoting the dimension of the board. The next line will contain <strong>n</strong> integers, <strong>W0, W1, …, Wn-1</strong> giving the position of the white pieces. The next line will also contain <strong>n</strong> integers, <strong>B0, B1, … Bn-1</strong> giving the position of the black pieces. <strong>Wi</strong> means the row position of the white piece of <strong>ith</strong> column. And <strong>Bi</strong> means the row position of the black piece of <strong>ith</strong> column. You can assume that <strong>(0 ≤ Wi &lt; Bi &lt; n)</strong> for <strong>(0 ≤ i &lt; n)</strong> and at least one move is remaining.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For each case, print the case number and <strong>‘white wins’</strong> or <strong>‘black wins’</strong> depending on the result.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">6</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">3</span> <span class="number">2</span> <span class="number">2</span> <span class="number">0</span> <span class="number">1</span></span><br><span class="line"><span class="symbol">5 </span><span class="number">5</span> <span class="number">5</span> <span class="number">3</span> <span class="number">1</span> <span class="number">2</span></span><br><span class="line"><span class="number">7</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">3</span> <span class="number">2</span> <span class="number">2</span> <span class="number">0</span> <span class="number">4</span> <span class="number">0</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">4</span> <span class="number">4</span> <span class="number">3</span> <span class="number">1</span> <span class="number">5</span> <span class="number">6</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight ada"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Case</span> <span class="number">1</span>: black wins</span><br><span class="line"><span class="keyword">Case</span> <span class="number">2</span>: white wins</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>Nim博弈，以黑白棋子间距为石子堆数做一个NIm博弈即可。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1000</span>;</span><br><span class="line"><span class="keyword">int</span> a[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> cs=<span class="number">1</span>; cs&lt;=T; cs++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> n; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) </span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">int</span> nim = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> x; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;x);</span><br><span class="line">            nim ^= x-a[i]<span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Case %d: "</span>, cs);</span><br><span class="line">        <span class="keyword">if</span>(nim)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"white wins\n"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"black wins\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>博弈论</category>
      </categories>
      <tags>
        <tag>博弈论</tag>
        <tag>Nim博弈</tag>
        <tag>LightOJ</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】HDU-6699 Block Breaker</title>
    <url>/posts/dfda367a.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="Block-Breaker-HDU-6699"><a href="#Block-Breaker-HDU-6699" class="headerlink" title="Block Breaker (HDU - 6699)"></a>Block Breaker (<a href="https://vjudge.net/problem/HDU-6699" target="_blank" rel="noopener">HDU - 6699</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>Given a rectangle frame of size <strong>n × m.</strong> Initially, the frame is strewn with <strong>n × m</strong> square blocks of size <strong>1 × 1</strong>. Due to the friction with the frame and each other, the blocks are stable and will not drop.</p><p>However, the blocks can be knocked down. When a block is knocked down, other remaining blocks may also drop since the friction provided by other remaining blocks may not sustain them anymore. Formally, a block will drop if it is knocked or not stable, which means that at least one of the left block and the right block has been dropped and at least one of the front block and the back block has been dropped. Especially, the frame can be regarded as a huge stable block, which means that if one block’s left is the frame, only when its right block has been dropped and at least one of the front block and the back block has been dropped can it drop. The rest situations are similar.</p><p>Now you, the block breaker, want to knock down the blocks. Formally, you will do it <strong>q</strong> times. In each time, you may choose a position <strong>(xi, yi)</strong> If there remains a block at the chosen position, you will knock it down; otherwise, nothing will happen. Moreover, after knocking down the block, you will wait until no unstable blocks are going to drop and then do the next operation.</p><p>For example, please look at the following illustration, the frame is of size <strong>2 × 2</strong> and the block <strong>(1, 1)</strong> and <strong>(1, 2)</strong> have been dropped. If we are going to knock the block <strong>(2, 1)</strong> , not only itself but also the block <strong>(2 , 1)</strong> will drop in this knocking operation.</p><p><img src="/posts/dfda367a/HDU6699.png" alt="img"></p><p>You want to know how many blocks will drop in total in each knocking operation. Specifically, if nothing happens in one operation, the answer should be regarded as <strong>0</strong>.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>The first line contains one positive integer <strong>T ( 1 ≤ T ≤ 10 ) </strong>, denoting the number of test cases.</p><p>For each test case:</p><p>The first line contains three positive integers <strong>n, m</strong> and <strong>q ( 1 ≤ n , m ≤ 2000, 1 ≤ q ≤ 100000 )</strong> , denoting the sizes in two dimensions of the frame and the number of knocking operations.</p><p>Each of the following <strong>q</strong> lines contains two positive integers <strong>xi</strong> and <strong>yi ( 1 ≤ xi ≤ n , 1 ≤ yi ≤ m ) </strong>, describing a knocking operation.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For each test case, output <strong>q</strong> lines, each of which contains a non-negative integer, denoting the number of dropped blocks in the corresponding knocking operation.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="number">2</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">2</span> <span class="number">3</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">1</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">2</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">2</span></span><br><span class="line"><span class="symbol">4 </span><span class="number">4</span> <span class="number">6</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">1</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">2</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">1</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">2</span></span><br><span class="line"><span class="symbol">4 </span><span class="number">4</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">3</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">11</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">2e3</span> + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> vis[N][N];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> T, n, m, q;</span><br><span class="line"><span class="keyword">int</span> x, y;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">P</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> x, y;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> dx[] = &#123;<span class="number">1</span>, <span class="number">-1</span>, <span class="number">0</span>, <span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> dy[] = &#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">-1</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">ok</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> ((x + <span class="number">1</span> &gt; n || !vis[x + <span class="number">1</span>][y]) &amp;&amp; (x - <span class="number">1</span> &lt;= <span class="number">0</span> || !vis[x - <span class="number">1</span>][y]))</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> ((y + <span class="number">1</span> &gt; m || !vis[x][y + <span class="number">1</span>]) &amp;&amp; (y - <span class="number">1</span> &lt;= <span class="number">0</span> || !vis[x][y - <span class="number">1</span>]))</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">solve</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (vis[x][y])</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">1</span>;</span><br><span class="line">    vis[x][y] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    P sp;</span><br><span class="line">    sp.x = x;</span><br><span class="line">    sp.y = y;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">queue</span>&lt;P&gt; q;</span><br><span class="line">    q.push(sp);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (!q.empty()) &#123;</span><br><span class="line">        P tp = q.front();</span><br><span class="line">        q.pop();</span><br><span class="line"></span><br><span class="line">        P np = tp;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> xi = np.x = tp.x + dx[i];</span><br><span class="line">            <span class="keyword">int</span> yi = np.y = tp.y + dy[i];</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (xi &lt;= <span class="number">0</span> || xi &gt; n || yi &lt;= <span class="number">0</span> || yi &gt; m)</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (!vis[xi][yi] &amp;&amp; !ok(xi, yi)) &#123;</span><br><span class="line">                sum++;</span><br><span class="line">                q.push(np);</span><br><span class="line">                vis[xi][yi] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">while</span> (T--) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>, &amp;n, &amp;m, &amp;q);</span><br><span class="line">        <span class="built_in">memset</span>(vis, <span class="number">0</span>, <span class="keyword">sizeof</span>(vis));</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; q; i++) &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;x, &amp;y);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, solve(x, y));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>搜索</category>
        <category>BFS</category>
      </categories>
      <tags>
        <tag>BFS</tag>
        <tag>HDU</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】LightOJ-1192 Left Right</title>
    <url>/posts/7189f769.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="Left-Right-LightOJ-1192"><a href="#Left-Right-LightOJ-1192" class="headerlink" title="Left Right(LightOJ-1192)"></a>Left Right(<a href="https://vjudge.net/problem/LightOJ-1192" target="_blank" rel="noopener">LightOJ-1192</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>Two players, Alice and Bob are playing a strange game in a <strong>1 x n</strong> board. The cells are numbered from <strong>0</strong> to <strong>n-1</strong>, where the left most cell is marked as cell <strong>0</strong>. Each cell can contain at most one piece.</p><p><img src="https://vj.z180.cn/1399dde8cfda6248dfda3472115477bd?v=1594677220" alt="img"></p><p>Fig 1: an example</p><p>There are two kinds of pieces, gray and white. Alice moves all gray pieces, and bob moves all white ones. The pieces alternate, that is, leftmost piece is gray, next is white, next to that is gray, then it’s white again, and so on. There will always be equal number of black and gray pieces. Alice can only move pieces to the right. Bob can only move pieces to the left.</p><p>At each move, a player selects one piece and moves that piece, either to its left (Bob) or to its right (Alice), any number of cells (at least 1) but, it can neither jump over other pieces, nor it can move outside the board. The players alternate their turns.</p><p>For example, if Alice decides to move the left most gray piece, these two moves are available to her.</p><p><img src="https://vj.z180.cn/f7b519d1703bc62e078dbdebe87da6c7?v=1594677220" alt="img"></p><p>Fig 2: Moving the gray piece one cell to the right</p><p><img src="https://vj.z180.cn/acf825ebaa1a7119c72fdf8d59046a7c?v=1594677220" alt="img"></p><p>Fig 3: Moving the gray piece two cells to the right</p><p>Alice moves first. The game ends, when someone is unable to make any move, and loses the game. You can assume that, both of them play optimally (that is, if it is possible to apply a strategy that will ensure someone’s win, he/she will always use that strategy).</p><p>Now you are given a configuration of a board, you have to find the winner.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>Input starts with an integer <strong>T (≤ 200)</strong>, denoting the number of test cases.</p><p>Each case starts with a line containing an integer <strong>k (1 ≤ k ≤ 100)</strong> denoting the number of gray pieces in the board. The next line contains <strong>2k</strong> distinct integers (in ascending order) denoting the position of the pieces. The first integer denotes a gray piece, the second integer denotes a white piece, the next integer denotes a gray piece and so on. All the integers will lie in the range <strong>[0, 10^9]</strong>. Assume that <strong>n</strong> is sufficiently large to contain all the pieces. And at least one move is remaining.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For each case, print the case number and <strong>‘Alice’</strong> or <strong>‘Bob’</strong> depending on the winner of the game.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="symbol">0 </span><span class="number">3</span> <span class="number">7</span> <span class="number">9</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">3</span> <span class="number">7</span> <span class="number">9</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight ada"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Case</span> <span class="number">1</span>: Alice</span><br><span class="line"><span class="keyword">Case</span> <span class="number">2</span>: Bob</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>Nim博弈，以间距为石子堆数做一个NIm博弈即可。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> cs=<span class="number">1</span>; cs&lt;=T; cs++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> n; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> nim = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> a, b;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;a, &amp;b);</span><br><span class="line">            nim ^= b-a<span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Case %d: "</span>, cs);</span><br><span class="line">        <span class="keyword">if</span>(nim)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Alice\n"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Bob\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>博弈论</category>
      </categories>
      <tags>
        <tag>博弈论</tag>
        <tag>Nim博弈</tag>
        <tag>LightOJ</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】LightOJ-1199 Partitioning Game</title>
    <url>/posts/31b2a877.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="Partitioning-Game-LightOJ-1199"><a href="#Partitioning-Game-LightOJ-1199" class="headerlink" title="Partitioning Game(LightOJ-1199)"></a>Partitioning Game(<a href="https://vjudge.net/problem/LightOJ-1199" target="_blank" rel="noopener">LightOJ-1199</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>Alice and Bob are playing a strange game. The rules of the game are:</p><ol><li>Initially there are <strong>n</strong> piles.</li><li>A pile is formed by some cells.</li><li>Alice starts the game and they alternate turns.</li><li>In each tern a player can pick any pile and divide it into two unequal piles.</li><li>If a player cannot do so, he/she loses the game.</li></ol><p>Now you are given the number of cells in each of the piles, you have to find the winner of the game if both of them play optimally.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>Input starts with an integer <strong>T (≤ 1000)</strong>, denoting the number of test cases.</p><p>Each case starts with a line containing an integer <strong>n (1 ≤ n ≤ 100)</strong>. The next line contains <strong>n</strong> integers, where the ith integer denotes the number of cells in the ith pile. You can assume that the number of cells in each pile is between <strong>1</strong> and <strong>10000</strong>.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For each case, print the case number and <strong>‘Alice’</strong> or <strong>‘Bob’</strong> depending on the winner of the game.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">2</span> <span class="number">3</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">7</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight ada"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Case</span> <span class="number">1</span>: Bob</span><br><span class="line"><span class="keyword">Case</span> <span class="number">2</span>: Alice</span><br><span class="line"><span class="keyword">Case</span> <span class="number">3</span>: Bob</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>SG函数打表。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> SG[<span class="number">10005</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getSg</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">        <span class="keyword">bool</span> S[<span class="number">10005</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j+j&lt;i; j++)</span><br><span class="line">            S[SG[j] ^ SG[i-j]] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> mex = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(S[mex]) mex++;</span><br><span class="line">        SG[i] = mex;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    getSg(<span class="number">10005</span>);</span><br><span class="line">    <span class="keyword">int</span> T; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> cs=<span class="number">1</span>; cs&lt;=T; cs++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> n; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> nim = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> x; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;x);</span><br><span class="line">            nim ^= SG[x];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Case %d: "</span>, cs);</span><br><span class="line">        <span class="keyword">if</span>(nim)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Alice\n"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Bob\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>博弈论</category>
      </categories>
      <tags>
        <tag>博弈论</tag>
        <tag>SG函数</tag>
        <tag>LightOJ</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】LightOJ-1247 Matrix Game</title>
    <url>/posts/faf58ec1.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="Matrix-Game-LightOJ-1247"><a href="#Matrix-Game-LightOJ-1247" class="headerlink" title="Matrix Game(LightOJ-1247)"></a>Matrix Game(<a href="https://vjudge.net/problem/LightOJ-1247" target="_blank" rel="noopener">LightOJ-1247</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>Given an <strong>m x n</strong> matrix, where <strong>m</strong> denotes the number of rows and <strong>n</strong> denotes the number of columns and in each cell a pile of stones is given. For example, let there be a <strong>2 x 3</strong> matrix, and the piles are</p><p>2 3 8</p><p>5 2 7</p><p>That means that in cell(1, 1) there is a pile with 2 stones, in cell(1, 2) there is a pile with 3 stones and so on.</p><p>Now Alice and Bob are playing a strange game in this matrix. Alice starts first and they alternate turns. In each turn a player selects a row, and can draw any number of stones from any number of cells in that row. But he/she must draw at least one stone. For example, if Alice chooses the 2nd row in the given matrix, she can pick 2 stones from cell(2, 1), 0 stones from cell (2, 2), 7 stones from cell(2, 3). Or she can pick 5 stones from cell(2, 1), 1 stone from cell(2, 2), 4 stones from cell(2, 3). There are many other ways but she must pick at least one stone from all piles. The player who can’t take any stones loses.</p><p>Now if both play optimally who will win?</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>Input starts with an integer <strong>T (≤ 100)</strong>, denoting the number of test cases.</p><p>Each case starts with a line containing two integers: <strong>m</strong> and <strong>n (1 ≤ m, n ≤ 50)</strong>. Each of the next <strong>m</strong> lines contains <strong>n</strong> space separated integers that form the matrix. All the integers will be between <strong>0</strong> and <strong>10^9</strong> (inclusive).</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For each case, print the case number and <strong>‘Alice’</strong> if Alice wins, or <strong>‘Bob’</strong> otherwise.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="number">2</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">3</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">3</span> <span class="number">8</span></span><br><span class="line"><span class="symbol">5 </span><span class="number">2</span> <span class="number">7</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">3</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">2</span> <span class="number">3</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">2</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight ada"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Case</span> <span class="number">1</span>: Alice</span><br><span class="line"><span class="keyword">Case</span> <span class="number">2</span>: Bob</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>Nim博弈，每行任意取，以每行总和为石子堆数做一个NIm博弈即可。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T); </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> cs=<span class="number">1</span>; cs&lt;=T; cs++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> n, m;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;n, &amp;m);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> nim = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;m; j++)&#123;</span><br><span class="line">                <span class="keyword">int</span> x; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;x);</span><br><span class="line">                sum += x;</span><br><span class="line">            &#125;</span><br><span class="line">            nim ^= sum;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Case %d: "</span>, cs);</span><br><span class="line">        <span class="keyword">if</span>(nim)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Alice\n"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Bob\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>博弈论</category>
      </categories>
      <tags>
        <tag>博弈论</tag>
        <tag>Nim博弈</tag>
        <tag>LightOJ</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】LightOJ-1253 Misere Nim</title>
    <url>/posts/e44290a.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="Misere-Nim-LightOJ-1253"><a href="#Misere-Nim-LightOJ-1253" class="headerlink" title="Misere Nim(LightOJ-1253)"></a>Misere Nim(<a href="https://vjudge.net/problem/LightOJ-1253" target="_blank" rel="noopener">LightOJ-1253</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>Alice and Bob are playing game of <strong>Misère Nim</strong>. Misère Nim is a game playing on <strong>k</strong> piles of stones, each pile containing one or more stones. The players alternate turns and in each turn a player can select one of the piles and can remove as many stones from that pile unless the pile is empty. In each turn a player must remove at least one stone from any pile. Alice starts first. The player who removes the last stone <strong>loses</strong> the game.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>Input starts with an integer <strong>T (≤ 200)</strong>, denoting the number of test cases.</p><p>Each case starts with a line containing an integer <strong>k (1 ≤ k ≤ 100)</strong>. The next line contains <strong>k</strong> space separated integers denoting the number of stones in each pile. The number of stones in a pile lies in the range <strong>[1, 109]</strong>.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For each case, print the case number and <strong>‘Alice’</strong> if Alice wins otherwise print <strong>‘Bob’</strong>.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">3</span> <span class="number">4</span> <span class="number">5</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">1</span> <span class="number">2</span> <span class="number">4</span> <span class="number">10</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight ada"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Case</span> <span class="number">1</span>: Bob</span><br><span class="line"><span class="keyword">Case</span> <span class="number">2</span>: Alice</span><br><span class="line"><span class="keyword">Case</span> <span class="number">3</span>: Bob</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>Anti-Nim博弈，可以参见<a href="https://blog.lordash.cf/posts/a3deb991.html">【题解】POJ-3480 John</a>。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> cs=<span class="number">1</span>; cs&lt;=T; cs++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> n; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> nim=<span class="number">0</span>, anti=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> x; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;x);</span><br><span class="line">            <span class="keyword">if</span>(x&gt;<span class="number">1</span>) anti = <span class="number">1</span>;</span><br><span class="line">            nim ^=x;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Case %d: "</span>, cs);</span><br><span class="line">        <span class="keyword">if</span>((!nim&amp;&amp;!anti) || (nim&amp;&amp;anti))&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Alice\n"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Bob\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>博弈论</category>
      </categories>
      <tags>
        <tag>博弈论</tag>
        <tag>Anti-Nim博弈</tag>
        <tag>LightOJ</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】LightOJ-1355 Game of CS</title>
    <url>/posts/e077fd41.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="Game-of-CS-LightOJ-1355"><a href="#Game-of-CS-LightOJ-1355" class="headerlink" title="Game of CS(LightOJ-1355)"></a>Game of CS(<a href="https://vjudge.net/problem/LightOJ-1355" target="_blank" rel="noopener">LightOJ-1355</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>Jolly and Emily are two bees studying in Computer Science. Unlike other bees they are fond of playing two-player games. They used to play Tic-tac-toe, Chess etc. But now since they are in CS they invented a new game that definitely requires some knowledge of computer science.</p><p>Initially they draw a random rooted tree (a connected graph with no cycles) in a paper which consists of <strong>n</strong> nodes, where the nodes are numbered from <strong>0</strong> to <strong>n-1</strong> and <strong>0</strong> is the root, and the edges are weighted. Initially all the edges are unmarked. And an edge weigh <strong>w</strong>, has <strong>w</strong> identical units.</p><ol><li><p>Jolly has a green marker and Emily has a red marker. Emily starts the game first and they alternate turns.</p></li><li><p>In each turn, a player can color <strong>one unit</strong> of an edge of the tree if that edge has some (at least one) uncolored units and the edge can be traversed from the root using only free edges. An edge is said to be free if the edge is not fully colored (may be uncolored or partially colored).</p></li><li><p>If it’s Emily’s turn, she finds such an edge and colors one unit of it using the red marker.</p></li><li><p>If it’s Jolly’s turn, he finds such an edge and colors one unit of it with the green marker.</p></li><li><p>The player, who can’t find any edges to color, loses the game.</p></li></ol><p>For example, Fig 1 shows the initial tree they have drawn. The tree contains four nodes and the weights of the edge <strong>(0, 1), (1, 2)</strong> and <strong>(0, 3)</strong> are 1, 1 and 2 respectively. Emily starts the game. She can color any edge she wants; she colors one unit of edge <strong>(0 1)</strong> with her red marker (Fig 2). Since the weight of edge <strong>(0 1)</strong> is 1 so, this edge is fully colored.</p><div class="table-container"><table><thead><tr><th style="text-align:center"><img src="https://vj.z180.cn/45b31a9bd032a40aea4b9dd272256c27?v=1596409197" alt="img"></th><th style="text-align:center"><img src="https://vj.z180.cn/3f96228dd8176c936c951458fd027d77?v=1596409197" alt="img"></th><th style="text-align:center"><img src="https://vj.z180.cn/3479468f6b9f55a6cc4679f37b78fa0d?v=1596409197" alt="img"></th><th style="text-align:center"><img src="https://vj.z180.cn/06f630f359f8540f805c5e122d7bd9f2?v=1596409197" alt="img"></th></tr></thead><tbody><tr><td style="text-align:center">Fig 1</td><td style="text-align:center">Fig 2</td><td style="text-align:center">Fig 3</td><td style="text-align:center">Fig 4</td></tr></tbody></table></div><p>Now it’s Jolly’s turn. He can only color one unit of edge <strong>(0 3)</strong>. He can’t color edge <strong>(1 2)</strong> since if he wants to traverse it from the root <strong>(0)</strong>, he needs to use <strong>(0, 1)</strong> which is fully colored already. So, he colors one unit of edge <strong>(0 3)</strong> with his green marker (Fig 3). And now Emily has only one option and she colors the other unit of <strong>(0 3)</strong> with the red marker (Fig 4). So, both units of edge <strong>(0 3)</strong> are colored. Now it’s Jolly’s turn but he has no move left. Thus Emily wins. But if Emily would have colored edge <strong>(1 2)</strong> instead of edge <strong>(0 1)</strong>, then Jolly would win. So, for this tree Emily will surely win if both of them play optimally.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>Input starts with an integer <strong>T (</strong> <strong>≤ 500)</strong>, denoting the number of test cases.</p><p>Each case starts with a line containing an integer <strong>n (2 ≤ n ≤ 1000)</strong>. Each of the next <strong>n-1</strong> lines contains two integers <strong>u v w (0 ≤ u, v &lt; n, u ≠ v, 1 ≤ w ≤ 109)</strong> denoting that there is an edge between <strong>u</strong> and <strong>v</strong> and their weight is <strong>w</strong>. You can assume that the given tree is valid.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For each case, print the case number and the name of the winner. See the samples for details.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="symbol">0 </span><span class="number">1</span> <span class="number">1</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">2</span> <span class="number">1</span></span><br><span class="line"><span class="symbol">0 </span><span class="number">3</span> <span class="number">2</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="symbol">0 </span><span class="number">1</span> <span class="number">1</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">2</span> <span class="number">2</span></span><br><span class="line"><span class="symbol">0 </span><span class="number">3</span> <span class="number">3</span></span><br><span class="line"><span class="symbol">0 </span><span class="number">4</span> <span class="number">7</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="symbol">0 </span><span class="number">1</span> <span class="number">1</span></span><br><span class="line"><span class="symbol">0 </span><span class="number">2</span> <span class="number">1</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="symbol">0 </span><span class="number">1</span> <span class="number">1</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">2</span> <span class="number">1</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">3</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight ada"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Case</span> <span class="number">1</span>: Emily</span><br><span class="line"><span class="keyword">Case</span> <span class="number">2</span>: Emily</span><br><span class="line"><span class="keyword">Case</span> <span class="number">3</span>: Jolly</span><br><span class="line"><span class="keyword">Case</span> <span class="number">4</span>: Emily</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>给定图，以0为根节点，每条边有一个长度，两个人轮流操作，每次为一条边上色，上一个单位长度，当一条边的颜色被涂满，则算作是减掉整段子树。判断先手是否必胜。</p><p>SG定理，对于当前节点u，每次考虑字节点v，u-v边的长度为l<br>当l为1时：sg(u) ^= (sg(v) + 1)<br>当l为奇数时： 需要判断sg(v)奇偶性，奇数-1，偶数+1；<br>当l为偶数时：sg(u) ^= sg(v)</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; g[mxm];</span><br><span class="line"><span class="keyword">int</span> W[mxm][mxm];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getSg</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> p)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> nim = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;g[u].size(); i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> v = g[u][i];</span><br><span class="line">        <span class="keyword">if</span>(v != p)&#123;</span><br><span class="line">            <span class="keyword">int</span> t = getSg(v, u);</span><br><span class="line">            <span class="keyword">if</span>(W[u][v] == <span class="number">1</span>)</span><br><span class="line">                nim ^= t+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(W[u][v] &amp; <span class="number">1</span>)</span><br><span class="line">                nim ^= t + (t&amp;<span class="number">1</span> ? <span class="number">-1</span> : <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                nim ^= t;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> nim;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T, cs=<span class="number">1</span>; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> n; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) g[i].clear();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;n; i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> u, v, w;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>, &amp;u, &amp;v, &amp;w);</span><br><span class="line">            g[u].push_back(v);</span><br><span class="line">            g[v].push_back(u);</span><br><span class="line">            W[u][v] = W[v][u] = w;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Case %d: "</span>, cs++);</span><br><span class="line">        <span class="keyword">if</span>(getSg(<span class="number">0</span>, <span class="number">-1</span>))</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Emily\n"</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Jolly\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>博弈论</category>
      </categories>
      <tags>
        <tag>SG函数</tag>
        <tag>LightOJ</tag>
        <tag>树链博弈</tag>
        <tag>Green Hackenbush</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】LightOJ-1393 Crazy Calendar</title>
    <url>/posts/8f914ec.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="Crazy-Calendar-LightOJ-1393"><a href="#Crazy-Calendar-LightOJ-1393" class="headerlink" title="Crazy Calendar(LightOJ-1393)"></a>Crazy Calendar(<a href="https://vjudge.net/problem/LightOJ-1393" target="_blank" rel="noopener">LightOJ-1393</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>2011 was a crazy year. Many people all over the world proposed on 11-11-11, married on 11-11-11, some even went through surgery only to have 11-11-11 as their child’s birth date. How crazy people can be! Don’t they see there is a “20” hidden? Then what to do? A very elegant solution came from ARR, a very famous and funny character - why do we need to follow Christian (or some calls it Gregorian) calendar? Why don’t we start our own calendar on the day of marriage? And those who like to celebrate their marriage ceremony too frequent, why don’t they declare only 1 day per year. In that fashion they can celebrate their anniversary every day. And may be one minute a year or a second or … Uh.. getting complex. Let’s back to the title. From now, we start to have a new calendar system, “Kisu Pari Na”. And we hope to update this calendar on every national contest.</p><p>The purpose of this calendar is - we all will try our best to learn something new in every year. For this first year let’s learn some combinatory. It reminds me of my first year in college. I faced this problem but could not solve this then. But see how easy it is:</p><div class="table-container"><table><thead><tr><th style="text-align:center"></th><th style="text-align:center"></th><th style="text-align:center"></th><th style="text-align:center"></th></tr></thead><tbody><tr><td style="text-align:center">(1, 1)</td><td style="text-align:center">(1, 2)</td><td style="text-align:center">(1, 3)</td><td style="text-align:center">(1, 4)</td></tr><tr><td style="text-align:center">(2, 1)</td><td style="text-align:center">(2, 2)</td><td style="text-align:center">(2, 3)</td><td style="text-align:center">(2, 4)</td></tr><tr><td style="text-align:center">(3, 1)</td><td style="text-align:center">(3, 2)</td><td style="text-align:center">(3, 3)</td><td style="text-align:center">(3, 4)</td></tr></tbody></table></div><p>Say you start from upper left cell and want to go to lower right cell. The only restriction is you can only move downward or rightward. How many ways are there? How to solve it? Not that difficult. You have to go two times Down and three times Right (whichever way you try) to reach the goal from the starting cell, right? So the answer is number of ways you can arrange two <strong>D</strong> (represents Down) and three <strong>R</strong> (represent Right). 2 same characters and 3 same characters, total 5 characters. So it is:</p><p>$ \frac{5!}{2!3!} $ Or = $ \frac{(D+R)!}{D!R!} $ <em>D+RCR</em>. Easy isn’t it?</p><p>Ok enough with learning. Now back to problem, given a grid and at each cell there are some coins. Inky and Pinky are playing a game getting inspiration from the above problem. At each turn, a player chooses a non empty cell and then removes one or more coins from that cell and put them to the cell exactly right of it or exactly beneath it. A player can’t divide the coins and put one part to right and others to down. Note that, for the cells at the right column the player can’t move it to more right, and same for the bottom-most row. So a player can’t move coins from the lower right cell. The game will finish when no moves are available and the player who moved last will win. Now inky being very modest asked Pinky to move first. Can you say if Pinky will win if both play perfectly?</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>Input starts with an integer <strong>T (≤ 100)</strong>, denoting the number of test cases.</p><p>Each case starts with a line containing two integers <strong>R C (1 ≤ R * C ≤ 50000),</strong> where <strong>R</strong> denotes the number of rows and <strong>C</strong> denotes the number of columns of the grid respectively. Each of the next <strong>R</strong> lines contains <strong>C</strong> space separated integers denoting the grid. These integers lie in the range <strong>[0, 109]</strong>.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For every test case, output case number followed by <strong>“win”</strong> if Pinky can win or <strong>“lose”</strong>.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">2</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">1</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight ada"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Case</span> <span class="number">1</span>: lose</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>Dataset is huge, use faster I/O methods.</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>可以发现曼哈顿距离为偶数的，先手必胜；为奇数的，Nim一下。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> cs=<span class="number">1</span>; cs&lt;=T; cs++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> n, m;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;n, &amp;m);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> nim=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;m; j++)&#123;</span><br><span class="line">                <span class="keyword">int</span> x; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;x);</span><br><span class="line">                <span class="keyword">if</span>((n-i+m-j) &amp; <span class="number">1</span>)</span><br><span class="line">                    nim ^= x;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Case %d: "</span>, cs);</span><br><span class="line">        <span class="keyword">if</span>(nim)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"win\n"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"lose\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>博弈论</category>
      </categories>
      <tags>
        <tag>博弈论</tag>
        <tag>Nim博弈</tag>
        <tag>LightOJ</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATA-1001 A+B Format</title>
    <url>/posts/99856309.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="A-B-Format-PATA-1001"><a href="#A-B-Format-PATA-1001" class="headerlink" title="A+B Format(PATA-1001)"></a>A+B Format(<a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805528788582400" target="_blank" rel="noopener">PATA-1001</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>Calculate a+b and output the sum in standard format — that is, the digits must be separated into groups of three by commas (unless there are less than four digits).</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>Each input file contains one test case. Each case contains a pair of integers a and b where −10^6≤a,b≤10^6. The numbers are separated by a space.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For each test case, you should output the sum of a and b in one line. The sum must be written in the standard format.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">-1000000</span> <span class="number">9</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">-999</span>,<span class="number">991</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a, b; <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;a, &amp;b);</span><br><span class="line">    <span class="keyword">char</span> s[<span class="number">20</span>]; <span class="built_in">sprintf</span>(s, <span class="string">"%d"</span>, a+b);</span><br><span class="line">    <span class="keyword">int</span> len=<span class="built_in">strlen</span>(s), f=(a+b&lt;<span class="number">0</span>), st, num;</span><br><span class="line">    <span class="keyword">if</span>(f)&#123;</span><br><span class="line">        st = (len<span class="number">-2</span>)%<span class="number">3</span>+<span class="number">1</span>;</span><br><span class="line">        num = (len<span class="number">-2</span>)/<span class="number">3</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        st = (len<span class="number">-1</span>)%<span class="number">3</span>;</span><br><span class="line">        num = (len<span class="number">-1</span>)/<span class="number">3</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;len; i++)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%c"</span>, s[i]);</span><br><span class="line">        <span class="keyword">if</span>(num &amp;&amp; i==st)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">","</span>);</span><br><span class="line">            num--, st+=<span class="number">3</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATA</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATA-1002 A+B for Polynomials</title>
    <url>/posts/da8abfa0.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="A-B-for-Polynomials-PATA-1002"><a href="#A-B-for-Polynomials-PATA-1002" class="headerlink" title="A+B for Polynomials(PATA-1002)"></a>A+B for Polynomials(<a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805526272000000" target="_blank" rel="noopener">PATA-1002</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>This time, you are supposed to find A+B where A and B are two polynomials.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>Each input file contains one test case. Each case occupies 2 lines, and each line contains the information of a polynomial:</p><p>K N1 aN1 N2 aN2 … NK aNK</p><p>where K is the number of nonzero terms in the polynomial, Ni and aNi (i=1,2,⋯,K) are the exponents and coefficients, respectively. It is given that 1≤K≤10，0≤NK&lt;⋯&lt;N2&lt;N1≤1000.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For each test case you should output the sum of A and B in one line, with the same format as the input. Notice that there must be NO extra space at the end of each line. Please be accurate to 1 decimal place.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">2 </span><span class="number">1</span> <span class="number">2.4</span> <span class="number">0</span> <span class="number">3.2</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">2</span> <span class="number">1.5</span> <span class="number">1</span> <span class="number">0.5</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">3 </span><span class="number">2</span> <span class="number">1.5</span> <span class="number">1</span> <span class="number">2.9</span> <span class="number">0</span> <span class="number">3.2</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Sg(u) ((u)&gt;eps?1:((u)&lt;-eps?-1:0))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Abs(u) (Sg(u)&gt;=0?(u):-(u))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Ze(u) (!Sg(u))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Eq(u,v) (Ze((u)-(v)))</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-6</span>;</span><br><span class="line"><span class="keyword">double</span> a[<span class="number">1005</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> an; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;an);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;an; i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> n; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lf"</span>, &amp;a[n]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> bn; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;bn);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;bn; i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> n; <span class="keyword">double</span> x;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %lf"</span>, &amp;n, &amp;x);</span><br><span class="line">        a[n] += x;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1000</span>; i&gt;=<span class="number">0</span>; i--)&#123;</span><br><span class="line">        <span class="keyword">if</span>(Sg(a[i]))</span><br><span class="line">            ans++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>, ans);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1000</span>; i&gt;=<span class="number">0</span>; i--)&#123;</span><br><span class="line">        <span class="keyword">if</span>(Sg(a[i]))</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">" %d %.1lf"</span>, i, a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATA</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATA-1003 Emergency</title>
    <url>/posts/29b94704.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="Emergency-PATA-1003"><a href="#Emergency-PATA-1003" class="headerlink" title="Emergency(PATA-1003)"></a>Emergency(<a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805523835109376" target="_blank" rel="noopener">PATA-1003</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>As an emergency rescue team leader of a city, you are given a special map of your country. The map shows several scattered cities connected by some roads. Amount of rescue teams in each city and the length of each road between any pair of cities are marked on the map. When there is an emergency call to you from some other city, your job is to lead your men to the place as quickly as possible, and at the mean time, call up as many hands on the way as possible.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>Each input file contains one test case. For each test case, the first line contains 4 positive integers: N (≤500) - the number of cities (and the cities are numbered from 0 to N−1), M - the number of roads, C1 and C2 - the cities that you are currently in and that you must save, respectively. The next line contains N integers, where the i-th integer is the number of rescue teams in the i-th city. Then M lines follow, each describes a road with three integers c1, c2 and L, which are the pair of cities connected by a road and the length of that road, respectively. It is guaranteed that there exists at least one path from C1 to C2.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For each test case, print in one line two numbers: the number of different shortest paths between C1 and C2, and the maximum amount of rescue teams you can possibly gather. All the numbers in a line must be separated by exactly one space, and there is no extra space allowed at the end of a line.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">5 </span><span class="number">6</span> <span class="number">0</span> <span class="number">2</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">2</span> <span class="number">1</span> <span class="number">5</span> <span class="number">3</span></span><br><span class="line"><span class="symbol">0 </span><span class="number">1</span> <span class="number">1</span></span><br><span class="line"><span class="symbol">0 </span><span class="number">2</span> <span class="number">2</span></span><br><span class="line"><span class="symbol">0 </span><span class="number">3</span> <span class="number">1</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">2</span> <span class="number">1</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">4</span> <span class="number">1</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">4</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">2 </span><span class="number">4</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>给你一个连通图，及其点权和边权。求起点c1到终点c2的最短路径数量，以及最短路径上点权最大和。</p><p>跑Dijkstra，在$dis[u]+w \le dis[v]$的时候，分类讨论，更新最短路径数量和点权最大和。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e3</span> + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">E</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> to, next, w;</span><br><span class="line">&#125;e[mxn];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> H[mxn], tot;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> from, <span class="keyword">int</span> to, <span class="keyword">int</span> w)</span></span>&#123;</span><br><span class="line">    e[tot] = &#123;to, H[from], w&#125;;</span><br><span class="line">    H[from] = tot++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">graph_init</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">        H[i] = <span class="number">-1</span>;</span><br><span class="line">    tot = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> dis[mxn], num[mxn], man[mxn];</span><br><span class="line"><span class="keyword">bool</span> vis[mxn];</span><br><span class="line">priority_queue&lt;pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt;, <span class="built_in">vector</span>&lt;pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; &gt;, greater&lt;pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; &gt; &gt; q;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> t[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dijkstra_init</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)&#123;</span><br><span class="line">        dis[i] = inf;</span><br><span class="line">        man[i] = vis[i] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dijkstra</span><span class="params">(<span class="keyword">int</span> s, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    num[s] = <span class="number">1</span>; man[s] = t[s];</span><br><span class="line">    q.push(&#123;dis[s]=<span class="number">0</span>, s&#125;);</span><br><span class="line">    <span class="keyword">while</span>(!q.empty())&#123;</span><br><span class="line">        <span class="keyword">int</span> u = q.top().second; q.pop();</span><br><span class="line">        <span class="keyword">if</span>(vis[u]) <span class="keyword">continue</span>; </span><br><span class="line">        vis[u] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=H[u]; ~i; i=e[i].next)&#123;</span><br><span class="line">            <span class="keyword">int</span> v=e[i].to, w=e[i].w;</span><br><span class="line">            <span class="keyword">if</span>(!vis[v] &amp;&amp; dis[u]+w &lt; dis[v])&#123;</span><br><span class="line">                dis[v] = dis[u]+w;</span><br><span class="line">                q.push(&#123;dis[v], v&#125;);</span><br><span class="line">                num[v] = num[u];</span><br><span class="line">                man[v] = max(man[v], man[u]+t[v]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(!vis[v] &amp;&amp; dis[u]+w == dis[v])&#123;</span><br><span class="line">                num[v] += num[u];</span><br><span class="line">                man[v] = max(man[v], man[u]+t[v]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, m, c1, c2;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d %d %d"</span>, &amp;n, &amp;m, &amp;c1, &amp;c2);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;t[i]);</span><br><span class="line"></span><br><span class="line">    graph_init(n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;m; i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> u, v, w;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>, &amp;u, &amp;v, &amp;w);</span><br><span class="line">        add(u, v, w);</span><br><span class="line">        add(v, u, w);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    dijkstra_init(n);</span><br><span class="line">    dijkstra(c1, n);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>, num[c2], man[c2]);    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>图论</category>
        <category>最短路</category>
        <category>Dijkstra</category>
      </categories>
      <tags>
        <tag>最短路</tag>
        <tag>Dijkstra</tag>
        <tag>PATA</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATA-1004 Counting Leaves</title>
    <url>/posts/fd729830.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="Counting-Leaves-PATA-1004"><a href="#Counting-Leaves-PATA-1004" class="headerlink" title="Counting Leaves(PATA-1004)"></a>Counting Leaves(<a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805521431773184" target="_blank" rel="noopener">PATA-1004</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>A family hierarchy is usually presented by a pedigree tree. Your job is to count those family members who have no child.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>Each input file contains one test case. Each case starts with a line containing 0&lt;N&lt;100, the number of nodes in a tree, and M (&lt;N), the number of non-leaf nodes. Then M lines follow, each in the format:</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">ID</span> <span class="selector-tag">K</span> <span class="selector-tag">ID</span><span class="selector-attr">[1]</span> <span class="selector-tag">ID</span><span class="selector-attr">[2]</span> ... <span class="selector-tag">ID</span><span class="selector-attr">[K]</span></span><br></pre></td></tr></table></figure><p>where <code>ID</code> is a two-digit number representing a given non-leaf node, <code>K</code> is the number of its children, followed by a sequence of two-digit <code>ID</code>‘s of its children. For the sake of simplicity, let us fix the root ID to be <code>01</code>.</p><p>The input ends with N being 0. That case must NOT be processed.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For each test case, you are supposed to count those family members who have no child <strong>for every seniority level</strong> starting from the root. The numbers must be printed in a line, separated by a space, and there must be no extra space at the end of each line.</p><p>The sample case represents a tree with only 2 nodes, where <code>01</code> is the root and <code>02</code> is its only child. Hence on the root <code>01</code> level, there is <code>0</code> leaf node; and on the next level, there is <code>1</code> leaf node. Then we should output <code>0 1</code> in a line.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">2 </span><span class="number">1</span></span><br><span class="line"><span class="symbol">01 </span><span class="number">1</span> <span class="number">02</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">0 </span><span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>给你一棵树，求每一层叶子节点的个数。</p><p>开个数组保存，然后dfs一下，到叶子节点就加一。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e3</span> + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; a[mxn];</span><br><span class="line"><span class="keyword">int</span> num[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> rt, <span class="keyword">int</span> &amp;d, <span class="keyword">int</span> h)</span></span>&#123;</span><br><span class="line">    d = max(d, h);</span><br><span class="line">    <span class="keyword">if</span>(a[rt].size() == <span class="number">0</span>)&#123;</span><br><span class="line">        num[h]++;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;a[rt].size(); i++)&#123;</span><br><span class="line">        dfs(a[rt][i], d, h+<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, m;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;n, &amp;m);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;m; i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> f, k, s;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;f, &amp;k);</span><br><span class="line">        <span class="keyword">while</span>(k--)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;s);</span><br><span class="line">            a[f].push_back(s);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> d = <span class="number">0</span>;</span><br><span class="line">    dfs(<span class="number">1</span>, d, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;=d; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(i) <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d"</span>, num[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>图论</category>
        <category>树</category>
      </categories>
      <tags>
        <tag>DFS</tag>
        <tag>PATA</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATA-1005 Spell It Right</title>
    <url>/posts/dc65dcf8.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="Spell-It-Right-PATA-1005"><a href="#Spell-It-Right-PATA-1005" class="headerlink" title="Spell It Right(PATA-1005)"></a>Spell It Right(<a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805519074574336" target="_blank" rel="noopener">PATA-1005</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>Given a non-negative integer N, your task is to compute the sum of all the digits of N, and output every digit of the sum in English.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>Each input file contains one test case. Each case occupies one line which contains an N (≤10^100).</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For each test case, output in one line the digits of the sum in English words. There must be one space between two consecutive words, but no extra space at the end of a line.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">12345</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line"><span class="literal">one</span> <span class="literal">five</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>水题，每一位加起来输出即可。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e3</span> + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> s[mxn], p[][<span class="number">10</span>] = &#123;</span><br><span class="line">    <span class="string">"zero"</span>, <span class="string">"one"</span>, <span class="string">"two"</span>, <span class="string">"three"</span>, <span class="string">"four"</span>, <span class="string">"five"</span>, <span class="string">"six"</span>, <span class="string">"seven"</span>,  <span class="string">"eight"</span>, <span class="string">"nine"</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>, s);</span><br><span class="line">    <span class="keyword">int</span> n = <span class="built_in">strlen</span>(s), ans = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)&#123;</span><br><span class="line">        ans += s[i]-<span class="string">'0'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sprintf</span>(s, <span class="string">"%d"</span>, ans);</span><br><span class="line">    n = <span class="built_in">strlen</span>(s);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(i) <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%s"</span>, p[s[i]-<span class="string">'0'</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATA</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATA-1006 Sign In and Sign Out</title>
    <url>/posts/8044b5fc.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="Sign-In-and-Sign-Out-PATA-1006"><a href="#Sign-In-and-Sign-Out-PATA-1006" class="headerlink" title="Sign In and Sign Out(PATA-1006)"></a>Sign In and Sign Out(<a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805516654460928" target="_blank" rel="noopener">PATA-1006</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>At the beginning of every day, the first person who signs in the computer room will unlock the door, and the last one who signs out will lock the door. Given the records of signing in’s and out’s, you are supposed to find the ones who have unlocked and locked the door on that day.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>Each input file contains one test case. Each case contains the records for one day. The case starts with a positive integer M, which is the total number of records, followed by M lines, each in the format:</p><figure class="highlight ceylon"><table><tr><td class="code"><pre><span class="line">ID<span class="number">_n</span>umber Sign<span class="number">_</span><span class="keyword">in</span><span class="number">_</span>time Sign<span class="number">_</span><span class="keyword">out</span><span class="number">_</span>time</span><br></pre></td></tr></table></figure><p>where times are given in the format <code>HH:MM:SS</code>, and <code>ID_number</code> is a string with no more than 15 characters.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For each test case, output in one line the ID numbers of the persons who have unlocked and locked the door on that day. The two ID numbers must be separated by one space.</p><p>Note: It is guaranteed that the records are consistent. That is, the sign in time must be earlier than the sign out time for each person, and there are no two persons sign in or out at the same moment.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">3</span></span><br><span class="line">CS301111 <span class="number">15</span>:<span class="number">30</span>:<span class="number">28</span> <span class="number">17</span>:<span class="number">00</span>:<span class="number">10</span></span><br><span class="line">SC3021234 <span class="number">08</span>:<span class="number">00</span>:<span class="number">00</span> <span class="number">11</span>:<span class="number">25</span>:<span class="number">25</span></span><br><span class="line">CS301133 <span class="number">21</span>:<span class="number">45</span>:<span class="number">00</span> <span class="number">21</span>:<span class="number">58</span>:<span class="number">40</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight dns"><table><tr><td class="code"><pre><span class="line">SC<span class="number">3021234</span> CS301133</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>比大小的水题。RE就是数组开小了。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> name[<span class="number">20</span>], in[<span class="number">10</span>], out[<span class="number">10</span>];</span><br><span class="line"><span class="keyword">char</span> locked[<span class="number">20</span>]=<span class="string">""</span>, unlock[<span class="number">20</span>]=<span class="string">""</span>, mx[<span class="number">10</span>]=<span class="string">"00:00:00"</span>, mi[<span class="number">10</span>]=<span class="string">"99:99:99"</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span>  i=<span class="number">0</span>; i&lt;n; i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s %s %s"</span>, name, in, out);</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">strcmp</span>(mi, in) &gt; <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">strcpy</span>(mi, in);</span><br><span class="line">            <span class="built_in">strcpy</span>(unlock, name);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">strcmp</span>(mx, out) &lt; <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">strcpy</span>(mx, out);</span><br><span class="line">            <span class="built_in">strcpy</span>(locked, name);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%s %s\n"</span>, unlock, locked);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATA</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATA-1007 Maximum Subsequence Sum</title>
    <url>/posts/3970be0f.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="Maximum-Subsequence-Sum-PATA-1007"><a href="#Maximum-Subsequence-Sum-PATA-1007" class="headerlink" title="Maximum Subsequence Sum(PATA-1007)"></a>Maximum Subsequence Sum(<a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805514284679168" target="_blank" rel="noopener">PATA-1007</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>Given a sequence of K integers { N1, N2, …, NK }. A continuous subsequence is defined to be { Ni, Ni+1, …, Nj } where 1≤i≤j≤K. The Maximum Subsequence is the continuous subsequence which has the largest sum of its elements. For example, given sequence { -2, 11, -4, 13, -5, -2 }, its maximum subsequence is { 11, -4, 13 } with the largest sum being 20.</p><p>Now you are supposed to find the largest sum, together with the first and the last numbers of the maximum subsequence.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>Each input file contains one test case. Each case occupies two lines. The first line contains a positive integer K (≤10000). The second line contains K numbers, separated by a space.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For each test case, output in one line the largest sum, together with the first and the last numbers of the maximum subsequence. The numbers must be separated by one space, but there must be no extra space at the end of a line. In case that the maximum subsequence is not unique, output the one with the smallest indices i and j (as shown by the sample case). If all the K numbers are negative, then its maximum sum is defined to be 0, and you are supposed to output the first and the last numbers of the whole sequence.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">10</span></span><br><span class="line"><span class="number">-10</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">-5</span> <span class="number">-23</span> <span class="number">3</span> <span class="number">7</span> <span class="number">-21</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">10 </span><span class="number">1</span> <span class="number">4</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>基础DP，最大子列和。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e4</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> a[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">-1</span>, t=<span class="number">0</span>, tl=<span class="number">0</span>, l, r;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]);</span><br><span class="line">        t += a[i];</span><br><span class="line">        <span class="keyword">if</span>(t &lt; <span class="number">0</span>)&#123;</span><br><span class="line">            t = <span class="number">0</span>;</span><br><span class="line">            tl = i+<span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(t &gt; ans)&#123;</span><br><span class="line">            ans = t;</span><br><span class="line">            l = tl;</span><br><span class="line">            r = i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(ans &lt; <span class="number">0</span>)</span><br><span class="line">        ans = <span class="number">0</span>, l = <span class="number">0</span>, r = n<span class="number">-1</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d %d %d\n"</span>, ans, a[l], a[r]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>动态规划</category>
        <category>最大子列和</category>
      </categories>
      <tags>
        <tag>DP</tag>
        <tag>PATA</tag>
        <tag>最大子列和</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATA-1008 Elevator</title>
    <url>/posts/8fd73d8d.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="Elevator-PATA-1008"><a href="#Elevator-PATA-1008" class="headerlink" title="Elevator(PATA-1008)"></a>Elevator(<a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805511923286016" target="_blank" rel="noopener">PATA-1008</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>The highest building in our city has only one elevator. A request list is made up with N positive numbers. The numbers denote at which floors the elevator will stop, in specified order. It costs 6 seconds to move the elevator up one floor, and 4 seconds to move down one floor. The elevator will stay for 5 seconds at each stop.</p><p>For a given request list, you are to compute the total time spent to fulfill the requests on the list. The elevator is on the 0th floor at the beginning and does not have to return to the ground floor when the requests are fulfilled.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>Each input file contains one test case. Each case contains a positive integer N, followed by N positive numbers. All the numbers in the input are less than 100.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For each test case, print the total time on a single line.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">3 </span><span class="number">2</span> <span class="number">3</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">41</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>电梯初始在0层，每上升一层花费6s，下降一层花费4s，停留花费5s，给你要停的楼层序列，求总耗时。水题。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>, l = <span class="number">0</span>, t;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;t);</span><br><span class="line">        <span class="keyword">if</span>(t &gt; l)&#123;</span><br><span class="line">            ans += (t-l) * <span class="number">6</span> + <span class="number">5</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            ans += (l-t) * <span class="number">4</span> + <span class="number">5</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        l = t;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATA</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATA-1010 Radix</title>
    <url>/posts/53b97647.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="Radix-PATA-1010"><a href="#Radix-PATA-1010" class="headerlink" title="Radix(PATA-1010)"></a>Radix(<a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805507225665536" target="_blank" rel="noopener">PATA-1010</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>Given a pair of positive integers, for example, 6 and 110, can this equation 6 = 110 be true? The answer is <code>yes</code>, if 6 is a decimal number and 110 is a binary number.</p><p>Now for any pair of positive integers N1 and N2, your task is to find the radix of one number while that of the other is given.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>Each input file contains one test case. Each case occupies a line which contains 4 positive integers:</p><figure class="highlight crmsh"><table><tr><td class="code"><pre><span class="line">N1 N2 <span class="keyword">tag</span> <span class="title">radix</span></span><br></pre></td></tr></table></figure><p>Here <code>N1</code> and <code>N2</code> each has no more than 10 digits. A digit is less than its radix and is chosen from the set { 0-9, <code>a</code>-<code>z</code> } where 0-9 represent the decimal numbers 0-9, and <code>a</code>-<code>z</code> represent the decimal numbers 10-35. The last number <code>radix</code> is the radix of <code>N1</code> if <code>tag</code> is 1, or of <code>N2</code> if <code>tag</code> is 2.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For each test case, print in one line the radix of the other number so that the equation <code>N1</code> = <code>N2</code> is true. If the equation is impossible, print <code>Impossible</code>. If the solution is not unique, output the smallest possible radix.</p></blockquote><h2 id="样例输入1"><a href="#样例输入1" class="headerlink" title="样例输入1"></a>样例输入1</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">6 </span><span class="number">110</span> <span class="number">1</span> <span class="number">10</span></span><br></pre></td></tr></table></figure><h2 id="样例输出1"><a href="#样例输出1" class="headerlink" title="样例输出1"></a>样例输出1</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure><h2 id="样例输入2"><a href="#样例输入2" class="headerlink" title="样例输入2"></a>样例输入2</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">1 </span>ab <span class="number">1</span> <span class="number">2</span></span><br></pre></td></tr></table></figure><h2 id="样例输出2"><a href="#样例输出2" class="headerlink" title="样例输出2"></a>样例输出2</h2><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">Impossible</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>二分。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> a[mxn], b[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">getnum</span><span class="params">(<span class="keyword">char</span> *s, LL r)</span></span>&#123;</span><br><span class="line">    LL ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(; *s; s++)</span><br><span class="line">        ans = ans * r + (*s - (*s &lt;= <span class="string">'9'</span> ? <span class="string">'0'</span> : <span class="string">'a'</span><span class="number">-10</span>));</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">getans</span><span class="params">(<span class="keyword">char</span> *s, <span class="keyword">char</span> *t, LL r)</span></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> mx = *max_element(t, t+<span class="built_in">strlen</span>(t));</span><br><span class="line">    LL l = mx - (mx &lt;= <span class="string">'9'</span> ? <span class="string">'0'</span> : <span class="string">'a'</span><span class="number">-10</span>) + <span class="number">1</span>;</span><br><span class="line">    LL f=<span class="number">0</span>, at = getnum(s, r); r = max(l, at);</span><br><span class="line">    <span class="keyword">while</span>(l &lt;= r)&#123;</span><br><span class="line">        LL m = (l + r) / <span class="number">2</span>;</span><br><span class="line">        LL bt = getnum(t, m);</span><br><span class="line">        <span class="keyword">if</span>(bt &lt; <span class="number">0</span> || bt &gt; at)&#123;</span><br><span class="line">            r = m - <span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(at == bt)&#123;</span><br><span class="line">            f = m;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            l = m + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LL t, r;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s %s %lld %lld"</span>, a, b, &amp;t, &amp;r);</span><br><span class="line">    LL f = (t==<span class="number">1</span>) ? getans(a, b, r) : getans(b, a, r);</span><br><span class="line">    <span class="keyword">if</span>(f)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, f);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Impossible\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>搜索</category>
        <category>二分</category>
      </categories>
      <tags>
        <tag>PATA</tag>
        <tag>二分</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATA-1009 Product of Polynomials</title>
    <url>/posts/5b60b88c.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="Product-of-Polynomials-PATA-1009"><a href="#Product-of-Polynomials-PATA-1009" class="headerlink" title="Product of Polynomials(PATA-1009)"></a>Product of Polynomials(<a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805509540921344" target="_blank" rel="noopener">PATA-1009</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>This time, you are supposed to find A×B where A and B are two polynomials.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>Each input file contains one test case. Each case occupies 2 lines, and each line contains the information of a polynomial:</p><p>K N1 aN1 N2 aN2 … NK aNK</p><p>where K is the number of nonzero terms in the polynomial, Ni and aNi (i=1,2,⋯,K) are the exponents and coefficients, respectively. It is given that 1≤K≤10, 0≤NK&lt;⋯&lt;N2&lt;N1≤1000.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For each test case you should output the product of A and B in one line, with the same format as the input. Notice that there must be <strong>NO</strong> extra space at the end of each line. Please be accurate up to 1 decimal place.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">2 </span><span class="number">1</span> <span class="number">2.4</span> <span class="number">0</span> <span class="number">3.2</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">2</span> <span class="number">1.5</span> <span class="number">1</span> <span class="number">0.5</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">3 </span><span class="number">3</span> <span class="number">3.6</span> <span class="number">2</span> <span class="number">6.0</span> <span class="number">1</span> <span class="number">1.6</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>类似<a href="https://blog.lordash.cf/posts/da8abfa0.html">【题解】PATA-1002 A+B for Polynomials</a>，修改一下。水题。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Sg(u) ((u)&gt;eps?1:((u)&lt;-eps?-1:0))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Abs(u) (Sg(u)&gt;=0?(u):-(u))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Ze(u) (!Sg(u))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Eq(u,v) (Ze((u)-(v)))</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-6</span>;</span><br><span class="line"><span class="keyword">double</span> a[<span class="number">2005</span>], b[<span class="number">2005</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> an; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;an);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;an; i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> n; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lf"</span>, &amp;b[n]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> bn; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;bn);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;bn; i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> n; <span class="keyword">double</span> x;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %lf"</span>, &amp;n, &amp;x);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;=<span class="number">2000</span>; j++)</span><br><span class="line">            <span class="keyword">if</span>(Sg(b[j]))</span><br><span class="line">                a[n+j] += x * b[j];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2000</span>; i&gt;=<span class="number">0</span>; i--)&#123;</span><br><span class="line">        <span class="keyword">if</span>(Sg(a[i]))</span><br><span class="line">            ans++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>, ans);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2000</span>; i&gt;=<span class="number">0</span>; i--)&#123;</span><br><span class="line">        <span class="keyword">if</span>(Sg(a[i]))</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">" %d %.1lf"</span>, i, a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>PATA</tag>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1001 害死人不偿命的(3n+1)猜想</title>
    <url>/posts/eea1e8c7.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="害死人不偿命的-3n-1-猜想-PATB-1001"><a href="#害死人不偿命的-3n-1-猜想-PATB-1001" class="headerlink" title="害死人不偿命的(3n+1)猜想 (PATB-1001)"></a>害死人不偿命的(3n+1)猜想 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805325918486528" target="_blank" rel="noopener">PATB-1001</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>卡拉兹(Callatz)猜想：</p><p>对任何一个正整数 n，如果它是偶数，那么把它砍掉一半；如果它是奇数，那么把 (3n+1) 砍掉一半。这样一直反复砍下去，最后一定在某一步得到 n=1。卡拉兹在 1950 年的世界数学家大会上公布了这个猜想，传说当时耶鲁大学师生齐动员，拼命想证明这个貌似很傻很天真的命题，结果闹得学生们无心学业，一心只证 (3n+1)，以至于有人说这是一个阴谋，卡拉兹是在蓄意延缓美国数学界教学与科研的进展……</p><p>我们今天的题目不是证明卡拉兹猜想，而是对给定的任一不超过 1000 的正整数 n，简单地数一下，需要多少步（砍几下）才能得到 n=1？</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>每个测试输入包含 1 个测试用例，即给出正整数 n 的值。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>输出从 n 计算到 1 需要的步数。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">5</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> T;</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    m = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (n != <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (n &amp; <span class="number">1</span>)</span><br><span class="line">            n = (<span class="number">3</span> * n + <span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            n /= <span class="number">2</span>;</span><br><span class="line">        m++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, m);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1002 写出这个数</title>
    <url>/posts/1cf12a6b.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="写出这个数-PATB-1002"><a href="#写出这个数-PATB-1002" class="headerlink" title="写出这个数 (PATB-1002)"></a>写出这个数 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805324509200384" target="_blank" rel="noopener">PATB-1002</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>读入一个正整数 n，计算其各位数字之和，用汉语拼音写出和的每一位数字。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>每个测试输入包含 1 个测试用例，即给出自然数 n 的值。这里保证 n 小于 10^100。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>在一行内输出 n 的各位数字之和的每一位，拼音数字间有 1 空格，但一行中最后一个拼音数字后没有空格。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">1234567890987654321123456789</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">yi <span class="keyword">san</span> <span class="keyword">wu</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> T;</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> s[][<span class="number">5</span>] = &#123;</span><br><span class="line">    <span class="string">"ling"</span>, <span class="string">"yi"</span>, <span class="string">"er"</span>, <span class="string">"san"</span>, <span class="string">"si"</span>,</span><br><span class="line">    <span class="string">"wu"</span>, <span class="string">"liu"</span>, <span class="string">"qi"</span>, <span class="string">"ba"</span>, <span class="string">"jiu"</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> c;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (~<span class="built_in">scanf</span>(<span class="string">"%c"</span>, &amp;c) &amp;&amp; c != <span class="string">'\n'</span>) </span><br><span class="line">    &#123;</span><br><span class="line">        n += c - <span class="string">'0'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">char</span> t[<span class="number">5</span>] = <span class="string">""</span>;</span><br><span class="line">    <span class="built_in">sprintf</span>(t, <span class="string">"%d"</span>, n);</span><br><span class="line">    <span class="keyword">int</span> len = <span class="built_in">strlen</span>(t);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (i)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%s"</span>, s[t[i] - <span class="string">'0'</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1003 我要通过！</title>
    <url>/posts/a591a553.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="我要通过！-PATB-1003"><a href="#我要通过！-PATB-1003" class="headerlink" title="我要通过！ (PATB-1003)"></a>我要通过！ (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805323154440192" target="_blank" rel="noopener">PATB-1003</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>“<strong>答案正确</strong>”是自动判题系统给出的最令人欢喜的回复。本题属于 PAT 的“<strong>答案正确</strong>”大派送 —— 只要读入的字符串满足下列条件，系统就输出“<strong>答案正确</strong>”，否则输出“<strong>答案错误</strong>”。</p><p>得到“<strong>答案正确</strong>”的条件是：</p><ol><li>字符串中必须仅有 <code>P</code>、 <code>A</code>、 <code>T</code>这三种字符，不可以包含其它字符；</li><li>任意形如 <code>xPATx</code> 的字符串都可以获得“<strong>答案正确</strong>”，其中 <code>x</code> 或者是空字符串，或者是仅由字母 <code>A</code> 组成的字符串；</li><li>如果 <code>aPbTc</code> 是正确的，那么 <code>aPbATca</code> 也是正确的，其中 <code>a</code>、 <code>b</code>、 <code>c</code> 均或者是空字符串，或者是仅由字母 <code>A</code> 组成的字符串。</li></ol><p>现在就请你为 PAT 写一个自动裁判程序，判定哪些字符串是可以获得“<strong>答案正确</strong>”的。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>每个测试输入包含 1 个测试用例。第 1 行给出一个正整数 n (&lt;10)，是需要检测的字符串个数。接下来每个字符串占一行，字符串长度不超过 100，且不包含空格。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>每个字符串的检测结果占一行，如果该字符串可以获得“<strong>答案正确</strong>”，则输出 <code>YES</code>，否则输出 <code>NO</code>。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">8</span></span><br><span class="line">PAT</span><br><span class="line">PAAT</span><br><span class="line">AAPATAA</span><br><span class="line">AAPAATAAAA</span><br><span class="line">xPATx</span><br><span class="line">PT</span><br><span class="line">Whatever</span><br><span class="line">APAAATAA</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="literal">YES</span></span><br><span class="line"><span class="literal">YES</span></span><br><span class="line"><span class="literal">YES</span></span><br><span class="line"><span class="literal">YES</span></span><br><span class="line"><span class="literal">NO</span></span><br><span class="line"><span class="literal">NO</span></span><br><span class="line"><span class="literal">NO</span></span><br><span class="line"><span class="literal">NO</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> s[<span class="number">105</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    <span class="keyword">while</span> (n--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> err = <span class="number">0</span>, p = <span class="number">0</span>, t = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> la = <span class="number">0</span>, ma = <span class="number">0</span>, ra = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>, s);</span><br><span class="line">        <span class="keyword">int</span> len = <span class="built_in">strlen</span>(s);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (s[i] == <span class="string">'P'</span>) </span><br><span class="line">            &#123;</span><br><span class="line">                p++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (s[i] == <span class="string">'A'</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (!p)</span><br><span class="line">                    la++;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (!t)</span><br><span class="line">                    ma++;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (t)</span><br><span class="line">                    ra++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (s[i] == <span class="string">'T'</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (p &amp;&amp; ma)</span><br><span class="line">                    t++;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    err = <span class="number">1</span>;    </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                err = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (p != <span class="number">1</span> || ma == <span class="number">0</span> || t != <span class="number">1</span> || la * ma != ra)</span><br><span class="line">        &#123;</span><br><span class="line">            err = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (err)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"NO\n"</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"YES\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1004 成绩排名</title>
    <url>/posts/288c0447.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="成绩排名-PATB-1004"><a href="#成绩排名-PATB-1004" class="headerlink" title="成绩排名 (PATB-1004)"></a>成绩排名 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805321640296448" target="_blank" rel="noopener">PATB-1004</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>读入 n（&gt;0）名学生的姓名、学号、成绩，分别输出成绩最高和成绩最低学生的姓名和学号。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>每个测试输入包含 1 个测试用例，格式为</p><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">第 <span class="number">1</span> 行：正整数 n</span><br><span class="line">第 <span class="number">2</span> 行：第 <span class="number">1</span> 个学生的姓名 学号 成绩</span><br><span class="line">第 <span class="number">3</span> 行：第 <span class="number">2</span> 个学生的姓名 学号 成绩</span><br><span class="line">  ... ... ...</span><br><span class="line">第 n+<span class="number">1</span> 行：第 n 个学生的姓名 学号 成绩</span><br></pre></td></tr></table></figure><p>其中<code>姓名</code>和<code>学号</code>均为不超过 10 个字符的字符串，成绩为 0 到 100 之间的一个整数，这里保证在一组测试用例中没有两个学生的成绩是相同的。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>对每个测试用例输出 2 行，第 1 行是成绩最高学生的姓名和学号，第 2 行是成绩最低学生的姓名和学号，字符串间有 1 空格。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">3</span></span><br><span class="line">Joe Math990112 <span class="number">89</span></span><br><span class="line">Mike CS991301 <span class="number">100</span></span><br><span class="line">Mary EE990830 <span class="number">95</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">Mike</span> <span class="string">CS991301</span></span><br><span class="line"><span class="attr">Joe</span> <span class="string">Math990112</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">P</span> &#123;</span></span><br><span class="line">    <span class="keyword">char</span> a[<span class="number">15</span>];</span><br><span class="line">    <span class="keyword">char</span> b[<span class="number">15</span>];</span><br><span class="line">    <span class="keyword">int</span> c;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    P t;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s %s %d"</span>, t.a, t.b, &amp;t.c);</span><br><span class="line">    P mx = t, mi = t;</span><br><span class="line">    n--;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (n--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s %s %d"</span>, t.a, t.b, &amp;t.c);</span><br><span class="line">        <span class="keyword">if</span> (t.c &gt; mx.c)</span><br><span class="line">            mx = t;</span><br><span class="line">        <span class="keyword">if</span> (t.c &lt; mi.c)</span><br><span class="line">            mi = t;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%s %s\n"</span>, mx.a, mx.b);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%s %s\n"</span>, mi.a, mi.b);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1005 继续(3n+1)猜想</title>
    <url>/posts/e5fb8f9.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="继续-3n-1-猜想-PATB-1005"><a href="#继续-3n-1-猜想-PATB-1005" class="headerlink" title="继续(3n+1)猜想 (PATB-1005)"></a>继续(3n+1)猜想 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805320306507776" target="_blank" rel="noopener">PATB-1005</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>卡拉兹(Callatz)猜想已经在1001中给出了描述。在这个题目里，情况稍微有些复杂。</p><p>当我们验证卡拉兹猜想的时候，为了避免重复计算，可以记录下递推过程中遇到的每一个数。例如对 n=3 进行验证的时候，我们需要计算 3、5、8、4、2、1，则当我们对 n=5、8、4、2 进行验证的时候，就可以直接判定卡拉兹猜想的真伪，而不需要重复计算，因为这 4 个数已经在验证3的时候遇到过了，我们称 5、8、4、2 是被 3“覆盖”的数。我们称一个数列中的某个数 n 为“关键数”，如果 n 不能被数列中的其他数字所覆盖。</p><p>现在给定一系列待验证的数字，我们只需要验证其中的几个关键数，就可以不必再重复验证余下的数字。你的任务就是找出这些关键数字，并按从大到小的顺序输出它们。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>每个测试输入包含 1 个测试用例，第 1 行给出一个正整数 K (&lt;100)，第 2 行给出 K 个互不相同的待验证的正整数 n (1&lt;n≤100)的值，数字间用空格隔开。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>每个测试用例的输出占一行，按从大到小的顺序输出关键数字。数字间用 1 个空格隔开，但一行中最后一个数字后没有空格。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="number">6</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">5</span> <span class="number">6</span> <span class="number">7</span> <span class="number">8</span> <span class="number">11</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">7 </span><span class="number">6</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> vis[<span class="number">105</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(vis, <span class="number">0</span>, <span class="keyword">sizeof</span> vis);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;m);</span><br><span class="line">        vis[m] = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">100</span>; i &gt;= <span class="number">1</span>; i--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!vis[i])</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> t = i; t != <span class="number">1</span>;)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (t &amp; <span class="number">1</span>)</span><br><span class="line">                t = (<span class="number">3</span> * t + <span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                t = t / <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (t &lt;= <span class="number">100</span>)</span><br><span class="line">                vis[t] = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> nf = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">100</span>; i &gt;= <span class="number">1</span>; i--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (vis[i])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (nf)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                nf = <span class="number">1</span>;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d"</span>, i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1006 换个格式输出整数</title>
    <url>/posts/86ddc20b.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="换个格式输出整数-PATB-1006"><a href="#换个格式输出整数-PATB-1006" class="headerlink" title="换个格式输出整数 (PATB-1006)"></a>换个格式输出整数 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805318855278592" target="_blank" rel="noopener">PATB-1006</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>让我们用字母 <code>B</code> 来表示“百”、字母 <code>S</code> 表示“十”，用 <code>12...n</code> 来表示不为零的个位数字 <code>n</code>（&lt;10），换个格式来输出任一个不超过 3 位的正整数。例如 <code>234</code> 应该被输出为 <code>BBSSS1234</code>，因为它有 2 个“百”、3 个“十”、以及个位的 4。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>每个测试输入包含 1 个测试用例，给出正整数 n（&lt;1000）。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>每个测试用例的输出占一行，用规定的格式输出 n。</p></blockquote><h2 id="样例输入1"><a href="#样例输入1" class="headerlink" title="样例输入1"></a>样例输入1</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">234</span></span><br></pre></td></tr></table></figure><h2 id="样例输出1"><a href="#样例输出1" class="headerlink" title="样例输出1"></a>样例输出1</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">BBSSS1234</span><br></pre></td></tr></table></figure><h2 id="样例输入2"><a href="#样例输入2" class="headerlink" title="样例输入2"></a>样例输入2</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">23</span></span><br></pre></td></tr></table></figure><h2 id="样例输出2"><a href="#样例输出2" class="headerlink" title="样例输出2"></a>样例输出2</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SS123</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    <span class="keyword">int</span> b = n / <span class="number">100</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; b; i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"B"</span>);</span><br><span class="line">    <span class="keyword">int</span> s = n / <span class="number">10</span> % <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; s; i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"S"</span>);</span><br><span class="line">    <span class="keyword">int</span> x = n % <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= x; i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d"</span>, i);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1007 素数对猜想</title>
    <url>/posts/dc06ef83.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="素数对猜想-PATB-1007"><a href="#素数对猜想-PATB-1007" class="headerlink" title="素数对猜想 (PATB-1007)"></a>素数对猜想 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805317546655744" target="_blank" rel="noopener">PATB-1007</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>让我们定义dn为：dn=pn+1−pn，其中pi是第i个素数。显然有d1=1，且对于n&gt;1有dn是偶数。“素数对猜想”认为“存在无穷多对相邻且差为2的素数”。</p><p>现给定任意正整数<code>N</code>(&lt;10^5)，请计算不超过<code>N</code>的满足猜想的素数对的个数。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在一行给出正整数<code>N</code>。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>在一行中输出不超过<code>N</code>的满足猜想的素数对的个数。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">20</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">4</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> isP[mxn];</span><br><span class="line"><span class="keyword">int</span> prime[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">euler</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(isP, <span class="number">1</span>, <span class="keyword">sizeof</span> isP);</span><br><span class="line">    isP[<span class="number">0</span>] = isP[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (isP[i]) prime[++cnt] = i;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= cnt; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (i * prime[j] &gt; n) <span class="keyword">break</span>;</span><br><span class="line">            isP[i * prime[j]] = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span> (i % prime[j] == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> cnt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> cnt = euler(N);</span><br><span class="line">    <span class="built_in">memset</span>(a, <span class="number">0</span>, <span class="keyword">sizeof</span> a);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">3</span>; i &lt;= N; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (isP[i] &amp;&amp; isP[i - <span class="number">2</span>])</span><br><span class="line">            a[i] = a[i - <span class="number">1</span>] + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            a[i] = a[i - <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, a[n]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>数论</category>
        <category>素数</category>
        <category>素数筛</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
        <tag>素数</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1008 数组元素循环右移问题</title>
    <url>/posts/3582aba2.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="数组元素循环右移问题-PATB-1008"><a href="#数组元素循环右移问题-PATB-1008" class="headerlink" title="数组元素循环右移问题 (PATB-1008)"></a>数组元素循环右移问题 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805316250615808" target="_blank" rel="noopener">PATB-1008</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>一个数组A中存有N（&gt;0）个整数，在不允许使用另外数组的前提下，将每个整数循环向右移M（≥0）个位置，即将A中的数据由（A0A1⋯AN−1）变换为（AN−M⋯AN−1A0A1⋯AN−M−1）（最后M个数循环移至最前面的M个位置）。如果需要考虑程序移动数据的次数尽量少，要如何设计移动的方法？</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>每个输入包含一个测试用例，第1行输入N（1≤N≤100）和M（≥0）；第2行输入N个整数，之间用空格分隔。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>在一行中输出循环右移M位以后的整数序列，之间用空格分隔，序列结尾不能有多余空格。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">6 </span><span class="number">2</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">5 </span><span class="number">6</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> a[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;n, &amp;m);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> nf = <span class="number">0</span>, t = n - (m % n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = t; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (nf)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            nf = <span class="number">1</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d"</span>, a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; t; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (nf)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            nf = <span class="number">1</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d"</span>, a[i]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1009 说反话</title>
    <url>/posts/ec9e9c51.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="说反话-PATB-1009"><a href="#说反话-PATB-1009" class="headerlink" title="说反话 (PATB-1009)"></a>说反话 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805314941992960" target="_blank" rel="noopener">PATB-1009</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>给定一句英语，要求你编写程序，将句中所有单词的顺序颠倒输出。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>测试输入包含一个测试用例，在一行内给出总长度不超过 80 的字符串。字符串由若干单词和若干空格组成，其中单词是由英文字母（大小写有区分）组成的字符串，单词之间用 1 个空格分开，输入保证句子末尾没有多余的空格。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>每个测试用例的输出占一行，输出倒序后的句子。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">Hello World Here I Come</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">Come I Here World Hello</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> s[<span class="number">105</span>][<span class="number">105</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (n = <span class="number">0</span>; ~<span class="built_in">scanf</span>(<span class="string">"%s"</span>, s[n]); n++);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=n<span class="number">-1</span>; i &gt;= <span class="number">0</span>; i--) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (i != n - <span class="number">1</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%s"</span>, s[i]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1010 一元多项式求导</title>
    <url>/posts/d6441837.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="一元多项式求导-PATB-1010"><a href="#一元多项式求导-PATB-1010" class="headerlink" title="一元多项式求导 (PATB-1010)"></a>一元多项式求导 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805313708867584" target="_blank" rel="noopener">PATB-1010</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>设计函数求一元多项式的导数。（注：x^n（n为整数）的一阶导数为nx^n−1。）</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>以指数递降方式输入多项式非零项系数和指数（绝对值均为不超过 1000 的整数）。数字间以空格分隔。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>以与输入相同的格式输出导数多项式非零项的系数和指数。数字间以空格分隔，但结尾不能有多余空格。注意“零多项式”的指数和系数都是 0，但是表示为 <code>0 0</code>。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">3 </span><span class="number">4</span> -<span class="number">5</span> <span class="number">2</span> <span class="number">6</span> <span class="number">1</span> -<span class="number">2</span> <span class="number">0</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">12 </span><span class="number">3</span> -<span class="number">10</span> <span class="number">1</span> <span class="number">6</span> <span class="number">0</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> nf = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (~<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;m) &amp;&amp; m)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (nf)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            nf = <span class="number">1</span>;      </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d %d"</span>, n * m, m - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!nf)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"0 0"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1011 A+B 和 C</title>
    <url>/posts/5d533e86.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="A-B-和-C-PATB-1011"><a href="#A-B-和-C-PATB-1011" class="headerlink" title="A+B 和 C (PATB-1011)"></a>A+B 和 C (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805312417021952" target="_blank" rel="noopener">PATB-1011</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>给定区间 [−2^31,2^31] 内的 3 个整数 A、B 和 C，请判断 A+B 是否大于 C。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入第 1 行给出正整数 T (≤10)，是测试用例的个数。随后给出 T 组测试用例，每组占一行，顺序给出 A、B 和 C。整数间以空格分隔。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>对每组测试用例，在一行中输出 <code>Case #X: true</code> 如果 A+B&gt;C，否则输出 <code>Case #X: false</code>，其中 <code>X</code> 是测试用例的编号（从 1 开始）。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="number">4</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">2</span> <span class="number">3</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">3</span> <span class="number">4</span></span><br><span class="line"><span class="symbol">2147483647 </span><span class="number">0</span> <span class="number">2147483646</span></span><br><span class="line"><span class="symbol">0 </span>-<span class="number">2147483648</span> -<span class="number">2147483647</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight cal"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Case</span> <span class="string">#1</span>: <span class="literal">false</span></span><br><span class="line"><span class="keyword">Case</span> <span class="string">#2</span>: <span class="literal">true</span></span><br><span class="line"><span class="keyword">Case</span> <span class="string">#3</span>: <span class="literal">true</span></span><br><span class="line"><span class="keyword">Case</span> <span class="string">#4</span>: <span class="literal">false</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        LL a, b, c;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld %lld %lld"</span>, &amp;a, &amp;b, &amp;c);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Case #%d: "</span>, i);</span><br><span class="line">        <span class="keyword">if</span> (a + b &gt; c)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"true\n"</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"false\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1012 数字分类</title>
    <url>/posts/b9fac3f2.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="数字分类-PATB-1012"><a href="#数字分类-PATB-1012" class="headerlink" title="数字分类 (PATB-1012)"></a>数字分类 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805311146147840" target="_blank" rel="noopener">PATB-1012</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>给定一系列正整数，请按要求对数字进行分类，并输出以下 5 个数字：</p><ul><li>A1 = 能被 5 整除的数字中所有偶数的和；</li><li>A2 = 将被 5 除后余 1 的数字按给出顺序进行交错求和，即计算 n1−n2+n3−n4⋯；</li><li>A3 = 被 5 除后余 2 的数字的个数；</li><li>A4 = 被 5 除后余 3 的数字的平均数，精确到小数点后 1 位；</li><li>A5 = 被 5 除后余 4 的数字中最大数字。</li></ul></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>每个输入包含 1 个测试用例。每个测试用例先给出一个不超过 1000 的正整数 N，随后给出 N 个不超过 1000 的待分类的正整数。数字间以空格分隔。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>对给定的 N 个正整数，按题目要求计算 A1~A5 并在一行中顺序输出。数字间以空格分隔，但行末不得有多余空格。</p><p>若其中某一类数字不存在，则在相应位置输出 <code>N</code>。</p></blockquote><h2 id="样例输入1"><a href="#样例输入1" class="headerlink" title="样例输入1"></a>样例输入1</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">13</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">7</span> <span class="number">8</span> <span class="number">9</span> <span class="number">10</span> <span class="number">20</span> <span class="number">16</span> <span class="number">18</span></span><br></pre></td></tr></table></figure><h2 id="样例输出1"><a href="#样例输出1" class="headerlink" title="样例输出1"></a>样例输出1</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">30 </span><span class="number">11</span> <span class="number">2</span> <span class="number">9.7</span> <span class="number">9</span></span><br></pre></td></tr></table></figure><h2 id="样例输入2"><a href="#样例输入2" class="headerlink" title="样例输入2"></a>样例输入2</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">8 </span><span class="number">1</span> <span class="number">2</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">7</span> <span class="number">9</span> <span class="number">16</span></span><br></pre></td></tr></table></figure><h2 id="样例输出2"><a href="#样例输出2" class="headerlink" title="样例输出2"></a>样例输出2</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">N <span class="number">11</span> <span class="number">2</span> N <span class="number">9</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> a1 = <span class="number">0</span>, a2 = <span class="number">0</span>, a3 = <span class="number">0</span>, a5 = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> c1 = <span class="number">0</span>, c2 = <span class="number">0</span>, c4 = <span class="number">0</span>, c5 = <span class="number">0</span>;</span><br><span class="line">    DB a4 = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;m);</span><br><span class="line">        <span class="keyword">switch</span> (m % <span class="number">5</span>)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">if</span> (m % <span class="number">2</span> == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                c1++;</span><br><span class="line">                a1 += m;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            c2++;</span><br><span class="line">            a2 = a2 + m * ((c2 &amp; <span class="number">1</span>) ? <span class="number">1</span> : <span class="number">-1</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            a3++;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            c4++, a4 += m;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">            c5++;</span><br><span class="line">            a5 = max(a5, m);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (c1)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d"</span>, a1);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"N"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (c2)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">" %d"</span>, a2);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">" N"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (a3)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">" %d"</span>, a3);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">" N"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (c4)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">" %.1lf"</span>, a4 / c4);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">" N"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (c5)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">" %d"</span>, a5);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">" N"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1013 数素数</title>
    <url>/posts/1e9dc8f7.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="数素数-PATB-1013"><a href="#数素数-PATB-1013" class="headerlink" title="数素数 (PATB-1013)"></a>数素数 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805309963354112" target="_blank" rel="noopener">PATB-1013</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>令 Pi 表示第 i 个素数。现任给两个正整数 M≤N≤10^4，请输出 PM 到 PN 的所有素数。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在一行中给出 M 和 N，其间以空格分隔。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>输出从 PM 到 PN 的所有素数，每 10 个数字占 1 行，其间以空格分隔，但行末不得有多余空格。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">5 </span><span class="number">27</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">11 </span><span class="number">13</span> <span class="number">17</span> <span class="number">19</span> <span class="number">23</span> <span class="number">29</span> <span class="number">31</span> <span class="number">37</span> <span class="number">41</span> <span class="number">43</span></span><br><span class="line"><span class="symbol">47 </span><span class="number">53</span> <span class="number">59</span> <span class="number">61</span> <span class="number">67</span> <span class="number">71</span> <span class="number">73</span> <span class="number">79</span> <span class="number">83</span> <span class="number">89</span></span><br><span class="line"><span class="symbol">97 </span><span class="number">101</span> <span class="number">103</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">bool</span> isP[mxn];</span><br><span class="line"><span class="keyword">int</span> prime[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">euler</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(isP, <span class="number">1</span>, <span class="keyword">sizeof</span> isP);</span><br><span class="line">    isP[<span class="number">0</span>] = isP[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (isP[i]) prime[++cnt] = i;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= cnt; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (i * prime[j] &gt; n) <span class="keyword">break</span>;</span><br><span class="line">            isP[i * prime[j]] = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span> (i % prime[j] == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> cnt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> cnt = euler(N);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;n, &amp;m);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> nf = <span class="number">0</span>, lc = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = n; i &lt;= m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (nf)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            nf = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d"</span>, prime[i]);</span><br><span class="line">        lc++;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (lc % <span class="number">10</span> == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            nf = <span class="number">0</span>;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>数论</category>
        <category>素数</category>
        <category>素数筛</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
        <tag>素数</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1014 福尔摩斯的约会</title>
    <url>/posts/2eff5e03.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="福尔摩斯的约会-PATB-1014"><a href="#福尔摩斯的约会-PATB-1014" class="headerlink" title="福尔摩斯的约会 (PATB-1014)"></a>福尔摩斯的约会 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805308755394560" target="_blank" rel="noopener">PATB-1014</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>大侦探福尔摩斯接到一张奇怪的字条：<code>我们约会吧！ 3485djDkxh4hhGE 2984akDfkkkkggEdsb s&amp;hgsfdk d&amp;Hyscvnm</code>。大侦探很快就明白了，字条上奇怪的乱码实际上就是约会的时间<code>星期四 14:04</code>，因为前面两字符串中第 1 对相同的大写英文字母（大小写有区分）是第 4 个字母 <code>D</code>，代表星期四；第 2 对相同的字符是 <code>E</code> ，那是第 5 个英文字母，代表一天里的第 14 个钟头（于是一天的 0 点到 23 点由数字 0 到 9、以及大写字母 <code>A</code> 到 <code>N</code> 表示）；后面两字符串第 1 对相同的英文字母 <code>s</code> 出现在第 4 个位置（从 0 开始计数）上，代表第 4 分钟。现给定两对字符串，请帮助福尔摩斯解码得到约会的时间。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在 4 行中分别给出 4 个非空、不包含空格、且长度不超过 60 的字符串。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>在一行中输出约会的时间，格式为 <code>DAY HH:MM</code>，其中 <code>DAY</code> 是某星期的 3 字符缩写，即 <code>MON</code> 表示星期一，<code>TUE</code> 表示星期二，<code>WED</code> 表示星期三，<code>THU</code> 表示星期四，<code>FRI</code> 表示星期五，<code>SAT</code> 表示星期六，<code>SUN</code> 表示星期日。题目输入保证每个测试存在唯一解。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight 1c"><table><tr><td class="code"><pre><span class="line"><span class="number">3485</span>djDkxh4hhGE </span><br><span class="line"><span class="number">2984</span>akDfkkkkggEdsb </span><br><span class="line">s<span class="meta">&amp;hgsfdk </span></span><br><span class="line">d<span class="meta">&amp;Hyscvnm</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">THU <span class="number">14</span>:<span class="number">04</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> day[][<span class="number">5</span>] = &#123; <span class="string">"MON"</span>,<span class="string">"TUE"</span>,<span class="string">"WED"</span>,<span class="string">"THU"</span>,<span class="string">"FRI"</span>,<span class="string">"SAT"</span>,<span class="string">"SUN"</span> &#125;;</span><br><span class="line"><span class="keyword">char</span> HH[] = <span class="string">"0123456789ABCDEFGHIJKLMN"</span>;</span><br><span class="line"><span class="keyword">char</span> s1[<span class="number">105</span>], s2[<span class="number">105</span>], s3[<span class="number">105</span>], s4[<span class="number">105</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s %s %s %s"</span>, s1, s2, s3, s4);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> len = min(<span class="built_in">strlen</span>(s1), <span class="built_in">strlen</span>(s2)), flag = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (s1[i] == s2[i])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="string">'A'</span> &lt;= s1[i] &amp;&amp; s1[i] &lt;= <span class="string">'G'</span> &amp;&amp; flag)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%s "</span>, day[s1[i] - <span class="string">'A'</span>]);</span><br><span class="line">                flag = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> ((<span class="built_in">isdigit</span>(s1[i]) || (<span class="string">'A'</span> &lt;= s1[i] &amp;&amp; s1[i] &lt;= <span class="string">'N'</span>)) &amp;&amp; !flag)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%02d:"</span>, <span class="built_in">strchr</span>(HH, s1[i]) - HH);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    len = min(<span class="built_in">strlen</span>(s3), <span class="built_in">strlen</span>(s4));</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">isalpha</span>(s3[i]) &amp;&amp; s3[i] == s4[i])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%02d\n"</span>, i);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1015 德才论</title>
    <url>/posts/b8528da2.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="德才论-PATB-1015"><a href="#德才论-PATB-1015" class="headerlink" title="德才论 (PATB-1015)"></a>德才论 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805307551629312" target="_blank" rel="noopener">PATB-1015</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>宋代史学家司马光在《资治通鉴》中有一段著名的“德才论”：“是故才德全尽谓之圣人，才德兼亡谓之愚人，德胜才谓之君子，才胜德谓之小人。凡取人之术，苟不得圣人，君子而与之，与其得小人，不若得愚人。”</p><p>现给出一批考生的德才分数，请根据司马光的理论给出录取排名。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入第一行给出 3 个正整数，分别为：N（≤10^5），即考生总数；L（≥60），为录取最低分数线，即德分和才分均不低于 L 的考生才有资格被考虑录取；H（&lt;100），为优先录取线——德分和才分均不低于此线的被定义为“才德全尽”，此类考生按德才总分从高到低排序；才分不到但德分到线的一类考生属于“德胜才”，也按总分排序，但排在第一类考生之后；德才分均低于 H，但是德分不低于才分的考生属于“才德兼亡”但尚有“德胜才”者，按总分排序，但排在第二类考生之后；其他达到最低线 L 的考生也按总分排序，但排在第三类考生之后。</p><p>随后 N 行，每行给出一位考生的信息，包括：<code>准考证号 德分 才分</code>，其中<code>准考证号</code>为 8 位整数，德才分为区间 [0, 100] 内的整数。数字间以空格分隔。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>输出第一行首先给出达到最低分数线的考生人数 M，随后 M 行，每行按照输入格式输出一位考生的信息，考生按输入中说明的规则从高到低排序。当某类考生中有多人总分相同时，按其德分降序排列；若德分也并列，则按准考证号的升序输出。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">14 </span><span class="number">60</span> <span class="number">80</span></span><br><span class="line"><span class="symbol">10000001 </span><span class="number">64</span> <span class="number">90</span></span><br><span class="line"><span class="symbol">10000002 </span><span class="number">90</span> <span class="number">60</span></span><br><span class="line"><span class="symbol">10000011 </span><span class="number">85</span> <span class="number">80</span></span><br><span class="line"><span class="symbol">10000003 </span><span class="number">85</span> <span class="number">80</span></span><br><span class="line"><span class="symbol">10000004 </span><span class="number">80</span> <span class="number">85</span></span><br><span class="line"><span class="symbol">10000005 </span><span class="number">82</span> <span class="number">77</span></span><br><span class="line"><span class="symbol">10000006 </span><span class="number">83</span> <span class="number">76</span></span><br><span class="line"><span class="symbol">10000007 </span><span class="number">90</span> <span class="number">78</span></span><br><span class="line"><span class="symbol">10000008 </span><span class="number">75</span> <span class="number">79</span></span><br><span class="line"><span class="symbol">10000009 </span><span class="number">59</span> <span class="number">90</span></span><br><span class="line"><span class="symbol">10000010 </span><span class="number">88</span> <span class="number">45</span></span><br><span class="line"><span class="symbol">10000012 </span><span class="number">80</span> <span class="number">100</span></span><br><span class="line"><span class="symbol">10000013 </span><span class="number">90</span> <span class="number">99</span></span><br><span class="line"><span class="symbol">10000014 </span><span class="number">66</span> <span class="number">60</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="number">12</span></span><br><span class="line"><span class="symbol">10000013 </span><span class="number">90</span> <span class="number">99</span></span><br><span class="line"><span class="symbol">10000012 </span><span class="number">80</span> <span class="number">100</span></span><br><span class="line"><span class="symbol">10000003 </span><span class="number">85</span> <span class="number">80</span></span><br><span class="line"><span class="symbol">10000011 </span><span class="number">85</span> <span class="number">80</span></span><br><span class="line"><span class="symbol">10000004 </span><span class="number">80</span> <span class="number">85</span></span><br><span class="line"><span class="symbol">10000007 </span><span class="number">90</span> <span class="number">78</span></span><br><span class="line"><span class="symbol">10000006 </span><span class="number">83</span> <span class="number">76</span></span><br><span class="line"><span class="symbol">10000005 </span><span class="number">82</span> <span class="number">77</span></span><br><span class="line"><span class="symbol">10000002 </span><span class="number">90</span> <span class="number">60</span></span><br><span class="line"><span class="symbol">10000014 </span><span class="number">66</span> <span class="number">60</span></span><br><span class="line"><span class="symbol">10000008 </span><span class="number">75</span> <span class="number">79</span></span><br><span class="line"><span class="symbol">10000001 </span><span class="number">64</span> <span class="number">90</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">P</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> num, d, c;</span><br><span class="line">    <span class="keyword">int</span> lv;</span><br><span class="line">&#125; a[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(P x, P y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x.lv != y.lv)</span><br><span class="line">        <span class="keyword">return</span> x.lv &lt; y.lv;</span><br><span class="line">    <span class="keyword">if</span> (x.d + x.c != y.d + y.c)</span><br><span class="line">        <span class="keyword">return</span> x.d + x.c &gt; y.d + y.c;</span><br><span class="line">    <span class="keyword">if</span> (x.d != y.d)</span><br><span class="line">        <span class="keyword">return</span> x.d &gt; y.d;</span><br><span class="line">    <span class="keyword">return</span> x.num &lt; y.num;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> l, h;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>, &amp;n, &amp;l, &amp;h);</span><br><span class="line">    <span class="built_in">memset</span>(a, <span class="number">0</span>, <span class="keyword">sizeof</span> a);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> num = n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>, &amp;a[i].num, &amp;a[i].d, &amp;a[i].c);</span><br><span class="line">        <span class="keyword">if</span> (a[i].d &gt;= h &amp;&amp; a[i].c &gt;= h)</span><br><span class="line">            a[i].lv = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (a[i].d &gt;= h &amp;&amp; a[i].c &gt;= l)</span><br><span class="line">            a[i].lv = <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (a[i].d &gt;= a[i].c &amp;&amp; a[i].d &gt;= l &amp;&amp; a[i].c &gt;= l)</span><br><span class="line">            a[i].lv = <span class="number">3</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (a[i].d &gt;= l &amp;&amp; a[i].c &gt;= l)</span><br><span class="line">            a[i].lv = <span class="number">4</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            a[i].lv = <span class="number">5</span>;</span><br><span class="line">            num--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(a, a + n, cmp);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, num);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; num; i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d %d %d\n"</span>, a[i].num, a[i].d, a[i].c);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1016 部分A+B</title>
    <url>/posts/7141eec.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="部分A-B-PATB-1016"><a href="#部分A-B-PATB-1016" class="headerlink" title="部分A+B (PATB-1016)"></a>部分A+B (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805306310115328" target="_blank" rel="noopener">PATB-1016</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>正整数 A 的“DA（为 1 位整数）部分”定义为由 A 中所有 DA 组成的新整数 PA。例如：给定 A=3862767，DA=6，则 A 的“6 部分”PA 是 66，因为 A 中有 2 个 6。</p><p>现给定 A、DA、B、DB，请编写程序计算 PA+PB。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在一行中依次给出 A、DA、B、DB，中间以空格分隔，其中 0&lt;A,B&lt;10^10。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>在一行中输出 PA+PB 的值。</p></blockquote><h2 id="样例输入1"><a href="#样例输入1" class="headerlink" title="样例输入1"></a>样例输入1</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">3862767 </span><span class="number">6</span> <span class="number">13530293</span> <span class="number">3</span></span><br></pre></td></tr></table></figure><h2 id="样例输出1"><a href="#样例输出1" class="headerlink" title="样例输出1"></a>样例输出1</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">399</span></span><br></pre></td></tr></table></figure><h2 id="样例输入2"><a href="#样例输入2" class="headerlink" title="样例输入2"></a>样例输入2</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">3862767 </span><span class="number">1</span> <span class="number">13530293</span> <span class="number">8</span></span><br></pre></td></tr></table></figure><h2 id="样例输出2"><a href="#样例输出2" class="headerlink" title="样例输出2"></a>样例输出2</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">0</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> a, b, da, db;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d %d %d"</span>, &amp;a, &amp;da, &amp;b, &amp;db);</span><br><span class="line">    <span class="keyword">int</span> ta = <span class="number">0</span>, tb = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (a)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (a % <span class="number">10</span> == da)</span><br><span class="line">            ta = ta * <span class="number">10</span> + da;</span><br><span class="line">        a /= <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (b)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (b % <span class="number">10</span> == db)</span><br><span class="line">            tb = tb * <span class="number">10</span> + db;</span><br><span class="line">        b /= <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ta + tb);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1017 A除以B</title>
    <url>/posts/36967551.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="A除以B-PATB-1017"><a href="#A除以B-PATB-1017" class="headerlink" title="A除以B (PATB-1017)"></a>A除以B (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805305181847552" target="_blank" rel="noopener">PATB-1017</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>本题要求计算 A/B，其中 A 是不超过 1000 位的正整数，B 是 1 位正整数。你需要输出商数 Q 和余数 R，使得 A=B×Q+R 成立。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在一行中依次给出 A 和 B，中间以 1 空格分隔。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>在一行中依次输出 Q 和 R，中间以 1 空格分隔。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">123456789050987654321 </span><span class="number">7</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">17636684150141093474 </span><span class="number">3</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">char</span> a[mxn];</span><br><span class="line"><span class="keyword">int</span> b;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s %d"</span>, a, &amp;b);</span><br><span class="line">    <span class="keyword">int</span> len = <span class="built_in">strlen</span>(a), t = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        t = t * <span class="number">10</span> + a[i] - <span class="string">'0'</span>;</span><br><span class="line">        <span class="keyword">if</span> (i || t / b || len &lt;= <span class="number">1</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d"</span>, t / b);</span><br><span class="line">        t %= b;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">" %d\n"</span>, t);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1018 锤子剪刀布</title>
    <url>/posts/6c977856.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="锤子剪刀布-PATB-1018"><a href="#锤子剪刀布-PATB-1018" class="headerlink" title="锤子剪刀布 (PATB-1018)"></a>锤子剪刀布 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805304020025344" target="_blank" rel="noopener">PATB-1018</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>大家应该都会玩“锤子剪刀布”的游戏：两人同时给出手势，胜负规则如图所示：</p><p><img src="https://images.ptausercontent.com/724da598-b37f-4f1f-99b4-71459654ce3a.jpg" alt="FigCJB.jpg"></p><p>现给出两人的交锋记录，请统计双方的胜、平、负次数，并且给出双方分别出什么手势的胜算最大。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入第 1 行给出正整数 N（≤10^5），即双方交锋的次数。随后 N 行，每行给出一次交锋的信息，即甲、乙双方同时给出的的手势。<code>C</code> 代表“锤子”、<code>J</code> 代表“剪刀”、<code>B</code> 代表“布”，第 1 个字母代表甲方，第 2 个代表乙方，中间有 1 个空格。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>输出第 1、2 行分别给出甲、乙的胜、平、负次数，数字间以 1 个空格分隔。第 3 行给出两个字母，分别代表甲、乙获胜次数最多的手势，中间有 1 个空格。如果解不唯一，则输出按字母序最小的解。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight mipsasm"><table><tr><td class="code"><pre><span class="line"><span class="number">10</span></span><br><span class="line">C <span class="keyword">J</span></span><br><span class="line"><span class="keyword">J </span><span class="keyword">B</span></span><br><span class="line"><span class="keyword">C </span><span class="keyword">B</span></span><br><span class="line"><span class="keyword">B </span><span class="keyword">B</span></span><br><span class="line"><span class="keyword">B </span>C</span><br><span class="line">C C</span><br><span class="line">C <span class="keyword">B</span></span><br><span class="line"><span class="keyword">J </span><span class="keyword">B</span></span><br><span class="line"><span class="keyword">B </span>C</span><br><span class="line"><span class="keyword">J </span><span class="keyword">J</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">5</span> <span class="number">3</span> <span class="number">2</span></span><br><span class="line"><span class="number">2</span> <span class="number">3</span> <span class="number">5</span></span><br><span class="line">B B</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> s[] = <span class="string">" BCJ"</span>;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">10</span>], b[<span class="number">10</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">char</span> x, y;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">" %c %c"</span>, &amp;x, &amp;y);</span><br><span class="line">        <span class="keyword">if</span> (x == y)</span><br><span class="line">        &#123;</span><br><span class="line">            a[<span class="number">5</span>]++, b[<span class="number">5</span>]++;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (x == <span class="string">'B'</span> &amp;&amp; y == <span class="string">'C'</span>)</span><br><span class="line">            a[<span class="number">1</span>]++, a[<span class="number">4</span>]++, b[<span class="number">6</span>]++;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (x == <span class="string">'B'</span> &amp;&amp; y == <span class="string">'J'</span>)</span><br><span class="line">            b[<span class="number">3</span>]++, a[<span class="number">6</span>]++, b[<span class="number">4</span>]++;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (x == <span class="string">'C'</span> &amp;&amp; y == <span class="string">'J'</span>)</span><br><span class="line">            a[<span class="number">2</span>]++, a[<span class="number">4</span>]++, b[<span class="number">6</span>]++;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (x == <span class="string">'C'</span> &amp;&amp; y == <span class="string">'B'</span>)</span><br><span class="line">            b[<span class="number">1</span>]++, a[<span class="number">6</span>]++, b[<span class="number">4</span>]++;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (y == <span class="string">'B'</span>)</span><br><span class="line">            a[<span class="number">3</span>]++, a[<span class="number">4</span>]++, b[<span class="number">6</span>]++;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            b[<span class="number">2</span>]++, a[<span class="number">6</span>]++, b[<span class="number">4</span>]++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d %d %d\n"</span>, a[<span class="number">4</span>], a[<span class="number">5</span>], a[<span class="number">6</span>]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d %d %d\n"</span>, b[<span class="number">4</span>], b[<span class="number">5</span>], b[<span class="number">6</span>]);</span><br><span class="line">    <span class="keyword">int</span> idx1 = <span class="number">1</span>, idx2 = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">3</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[idx1] &lt; a[i])</span><br><span class="line">            idx1 = i;</span><br><span class="line">        <span class="keyword">if</span> (b[idx2] &lt; b[i])</span><br><span class="line">            idx2 = i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%c %c\n"</span>, s[idx1], s[idx2]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1019 数字黑洞</title>
    <url>/posts/9dfedf21.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="数字黑洞-PATB-1019"><a href="#数字黑洞-PATB-1019" class="headerlink" title="数字黑洞 (PATB-1019)"></a>数字黑洞 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805302786899968" target="_blank" rel="noopener">PATB-1019</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>给定任一个各位数字不完全相同的 4 位正整数，如果我们先把 4 个数字按非递增排序，再按非递减排序，然后用第 1 个数字减第 2 个数字，将得到一个新的数字。一直重复这样做，我们很快会停在有“数字黑洞”之称的 <code>6174</code>，这个神奇的数字也叫 Kaprekar 常数。</p><p>例如，我们从<code>6767</code>开始，将得到</p><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">7766</span> - <span class="number">6677</span> = <span class="number">1089</span></span><br><span class="line"><span class="number">9810</span> - <span class="number">0189</span> = <span class="number">9621</span></span><br><span class="line"><span class="number">9621</span> - <span class="number">1269</span> = <span class="number">8352</span></span><br><span class="line"><span class="number">8532</span> - <span class="number">2358</span> = <span class="number">6174</span></span><br><span class="line"><span class="number">7641</span> - <span class="number">1467</span> = <span class="number">6174</span></span><br><span class="line">... ...</span><br></pre></td></tr></table></figure><p>现给定任意 4 位正整数，请编写程序演示到达黑洞的过程。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入给出一个 (0,10^4) 区间内的正整数 N。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>如果 N 的 4 位数字全相等，则在一行内输出 <code>N - N = 0000</code>；否则将计算的每一步在一行内输出，直到 <code>6174</code> 作为差出现，输出格式见样例。注意每个数字按 <code>4</code> 位数格式输出。</p></blockquote><h2 id="样例输入1"><a href="#样例输入1" class="headerlink" title="样例输入1"></a>样例输入1</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">6767</span></span><br></pre></td></tr></table></figure><h2 id="样例输出1"><a href="#样例输出1" class="headerlink" title="样例输出1"></a>样例输出1</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">7766 </span>- <span class="number">6677</span> = <span class="number">1089</span></span><br><span class="line"><span class="symbol">9810 </span>- <span class="number">0189</span> = <span class="number">9621</span></span><br><span class="line"><span class="symbol">9621 </span>- <span class="number">1269</span> = <span class="number">8352</span></span><br><span class="line"><span class="symbol">8532 </span>- <span class="number">2358</span> = <span class="number">6174</span></span><br></pre></td></tr></table></figure><h2 id="样例输入2"><a href="#样例输入2" class="headerlink" title="样例输入2"></a>样例输入2</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">2222</span></span><br></pre></td></tr></table></figure><h2 id="样例输出2"><a href="#样例输出2" class="headerlink" title="样例输出2"></a>样例输出2</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">2222 </span>- <span class="number">2222</span> = <span class="number">0000</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">strrev</span><span class="params">(<span class="keyword">char</span>* s, <span class="keyword">char</span>* t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> len = <span class="built_in">strlen</span>(s);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        t[i] = s[len - i - <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    t[len] = <span class="string">'\0'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    <span class="keyword">char</span> t1[<span class="number">15</span>], t2[<span class="number">15</span>], t3[<span class="number">15</span>];</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">sprintf</span>(t2, <span class="string">"%04d"</span>, n);</span><br><span class="line">        sort(t2, t2 + <span class="number">4</span>);</span><br><span class="line">        strrev(t2, t1);</span><br><span class="line">        <span class="built_in">sscanf</span>(t1, <span class="string">"%d"</span>, &amp;n);</span><br><span class="line">        <span class="built_in">sscanf</span>(t2, <span class="string">"%d"</span>, &amp;m);</span><br><span class="line">        n = n - m;</span><br><span class="line">        <span class="built_in">sprintf</span>(t3, <span class="string">"%04d"</span>, n);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%s - %s = %s\n"</span>, t1, t2, t3);</span><br><span class="line">        <span class="keyword">if</span> (n == <span class="number">0</span> || n == <span class="number">6174</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1020 月饼</title>
    <url>/posts/48cb6b9.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="月饼-PATB-1020"><a href="#月饼-PATB-1020" class="headerlink" title="月饼 (PATB-1020)"></a>月饼 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805301562163200" target="_blank" rel="noopener">PATB-1020</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>月饼是中国人在中秋佳节时吃的一种传统食品，不同地区有许多不同风味的月饼。现给定所有种类月饼的库存量、总售价、以及市场的最大需求量，请你计算可以获得的最大收益是多少。</p><p>注意：销售时允许取出一部分库存。样例给出的情形是这样的：假如我们有 3 种月饼，其库存量分别为 18、15、10 万吨，总售价分别为 75、72、45 亿元。如果市场的最大需求量只有 20 万吨，那么我们最大收益策略应该是卖出全部 15 万吨第 2 种月饼、以及 5 万吨第 3 种月饼，获得 72 + 45/2 = 94.5（亿元）。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>每个输入包含一个测试用例。每个测试用例先给出一个不超过 1000 的正整数 N 表示月饼的种类数、以及不超过 500（以万吨为单位）的正整数 D 表示市场最大需求量。随后一行给出 N 个正数表示每种月饼的库存量（以万吨为单位）；最后一行给出 N 个正数表示每种月饼的总售价（以亿元为单位）。数字间以空格分隔。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>对每组测试用例，在一行中输出最大收益，以亿元为单位并精确到小数点后 2 位。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">3 </span><span class="number">20</span></span><br><span class="line"><span class="symbol">18 </span><span class="number">15</span> <span class="number">10</span></span><br><span class="line"><span class="symbol">75 </span><span class="number">72</span> <span class="number">45</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">94.50</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">P</span> &#123;</span></span><br><span class="line">    DB num, price;</span><br><span class="line">&#125;a[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(P x, P y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x.price / x.num &gt; y.price / y.num;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;n, &amp;m);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lf"</span>, &amp;a[i].num);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lf"</span>, &amp;a[i].price);</span><br><span class="line"></span><br><span class="line">    sort(a, a + n, cmp);</span><br><span class="line"></span><br><span class="line">    DB ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (m &gt; a[i].num)</span><br><span class="line">        &#123;</span><br><span class="line">            ans += a[i].price;</span><br><span class="line">            m -= a[i].num;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            ans += m * (a[i].price / a[i].num);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%.2lf\n"</span>, ans);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1022 D进制的A+B</title>
    <url>/posts/e18f1ff7.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="D进制的A-B-PATB-1022"><a href="#D进制的A-B-PATB-1022" class="headerlink" title="D进制的A+B (PATB-1022)"></a>D进制的A+B (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805299301433344" target="_blank" rel="noopener">PATB-1022</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>输入两个非负 10 进制整数 A 和 B (≤2^30−1)，输出 A+B 的 D (1&lt;D≤10)进制数。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在一行中依次给出 3 个整数 A、B 和 D。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>输出 A+B 的 D 进制数。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">123 </span><span class="number">456</span> <span class="number">8</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">1103</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="keyword">char</span> s[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LL a, b, d;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld %lld %lld"</span>, &amp;a, &amp;b, &amp;d);</span><br><span class="line"></span><br><span class="line">    LL t = a + b;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (n = <span class="number">0</span>; t; t/=d)</span><br><span class="line">        s[++n] = <span class="string">"0123456789"</span>[t % d];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (!n)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"0"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(; n; n--)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%c"</span>, s[n]);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1021 个位数统计</title>
    <url>/posts/52f9ac89.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="个位数统计-PATB-1021"><a href="#个位数统计-PATB-1021" class="headerlink" title="个位数统计 (PATB-1021)"></a>个位数统计 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805300404535296" target="_blank" rel="noopener">PATB-1021</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>给定一个 k 位整数 N=dk−1×10^(k−1)+⋯+d1×10^1+d0 (0≤di≤9, i=0,⋯,k−1, dk−1&gt;0)，请编写程序统计每种不同的个位数字出现的次数。例如：给定 N=100311，则有 2 个 0，3 个 1，和 1 个 3。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>每个输入包含 1 个测试用例，即一个不超过 1000 位的正整数 N。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>对 N 中每一种不同的个位数字，以 <code>D:M</code> 的格式在一行中输出该位数字 <code>D</code> 及其在 N 中出现的次数 <code>M</code>。要求按 <code>D</code> 的升序输出。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">100311</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">0</span>:<span class="number">2</span></span><br><span class="line"><span class="number">1</span>:<span class="number">3</span></span><br><span class="line"><span class="number">3</span>:<span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">15</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> t[mxm];</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>, t);</span><br><span class="line">    <span class="keyword">int</span> len = <span class="built_in">strlen</span>(t);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        a[t[i] - <span class="string">'0'</span>]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">9</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i])</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d:%d\n"</span>, i, a[i]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1023 组个最小数</title>
    <url>/posts/ff261b7e.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="组个最小数-PATB-1023"><a href="#组个最小数-PATB-1023" class="headerlink" title="组个最小数 (PATB-1023)"></a>组个最小数 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805298269634560" target="_blank" rel="noopener">PATB-1023</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>给定数字 0-9 各若干个。你可以以任意顺序排列这些数字，但必须全部使用。目标是使得最后得到的数尽可能小（注意 0 不能做首位）。例如：给定两个 0，两个 1，三个 5，一个 8，我们得到的最小的数就是 10015558。</p><p>现给定数字，请编写程序输出能够组成的最小的数。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在一行中给出 10 个非负整数，顺序表示我们拥有数字 0、数字 1、……数字 9 的个数。整数间用一个空格分隔。10 个数字的总个数不超过 50，且至少拥有 1 个非 0 的数字。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">在一行中输出能够组成的最小的数。</span><br></pre></td></tr></table></figure></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">2</span> <span class="number">2</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">3</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">0</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">10015558</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> a[<span class="number">15</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i]) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d"</span>, i);</span><br><span class="line">            a[i]--;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span> (a[i])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d"</span>, i);</span><br><span class="line">            a[i]--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1024 科学计数法</title>
    <url>/posts/ad24cb21.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="科学计数法-PATB-1024"><a href="#科学计数法-PATB-1024" class="headerlink" title="科学计数法 (PATB-1024)"></a>科学计数法 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805297229447168" target="_blank" rel="noopener">PATB-1024</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>科学计数法是科学家用来表示很大或很小的数字的一种方便的方法，其满足正则表达式[+-][1-9]<code>.</code>[0-9]+E[+-][0-9]+，即数字的整数部分只有 1 位，小数部分至少有 1 位，该数字及其指数部分的正负号即使对正数也必定明确给出。</p><p>现以科学计数法的格式给出实数 A，请编写程序按普通数字表示法输出 A，并保证所有有效位都被保留。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>每个输入包含 1 个测试用例，即一个以科学计数法表示的实数 A。该数字的存储长度不超过 9999 字节，且其指数的绝对值不超过 9999。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>对每个测试用例，在一行中按普通数字表示法输出 A，并保证所有有效位都被保留，包括末尾的 0。</p></blockquote><h2 id="样例输入1"><a href="#样例输入1" class="headerlink" title="样例输入1"></a>样例输入1</h2><figure class="highlight subunit"><table><tr><td class="code"><pre><span class="line"><span class="string">+1</span>.23400E<span class="string">-03</span></span><br></pre></td></tr></table></figure><h2 id="样例输出1"><a href="#样例输出1" class="headerlink" title="样例输出1"></a>样例输出1</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">0.00123400</span></span><br></pre></td></tr></table></figure><h2 id="样例输入2"><a href="#样例输入2" class="headerlink" title="样例输入2"></a>样例输入2</h2><figure class="highlight subunit"><table><tr><td class="code"><pre><span class="line"><span class="string">-1</span>.2E<span class="string">+10</span></span><br></pre></td></tr></table></figure><h2 id="样例输出2"><a href="#样例输出2" class="headerlink" title="样例输出2"></a>样例输出2</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">-12000000000</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> s[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(~ <span class="built_in">scanf</span>(<span class="string">"%s"</span>, s) )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">char</span>* t = <span class="built_in">strchr</span>(s, <span class="string">'E'</span>);</span><br><span class="line">        <span class="keyword">int</span> len = t - s - <span class="number">3</span>, l, r;</span><br><span class="line">        <span class="built_in">sscanf</span>(t + <span class="number">1</span>, <span class="string">"%d"</span>, &amp;r);</span><br><span class="line">        *(t) = <span class="string">'\0'</span>;</span><br><span class="line">        t = <span class="built_in">strchr</span>(s, <span class="string">'.'</span>) + <span class="number">1</span>;</span><br><span class="line">        <span class="built_in">sscanf</span>(s+<span class="number">1</span>, <span class="string">"%d"</span>, &amp;l);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (s[<span class="number">0</span>] == <span class="string">'-'</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"-"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (r &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (r &gt; len)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%d%s"</span>, l, t);</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; r - len; i++)</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"0"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%d"</span>, l);</span><br><span class="line">                <span class="keyword">int</span> len2 = <span class="built_in">strlen</span>(t);</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len2; i++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> (i == r)</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">"."</span>);</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"%c"</span>, t[i]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"0."</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i + r + <span class="number">1</span> &lt; <span class="number">0</span>; i++)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"0"</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d%s"</span>, l, t);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1025 反转链表</title>
    <url>/posts/dc5dc1bc.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="反转链表-PATB-1025"><a href="#反转链表-PATB-1025" class="headerlink" title="反转链表 (PATB-1025)"></a>反转链表 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805296180871168" target="_blank" rel="noopener">PATB-1025</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>给定一个常数 K 以及一个单链表 L，请编写程序将 L 中每 K 个结点反转。例如：给定 L 为 1→2→3→4→5→6，K 为 3，则输出应该为 3→2→1→6→5→4；如果 K 为 4，则输出应该为 4→3→2→1→5→6，即最后不到 K 个元素不反转。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>每个输入包含 1 个测试用例。每个测试用例第 1 行给出第 1 个结点的地址、结点总个数正整数 N (≤10^5)、以及正整数 K (≤N)，即要求反转的子链结点的个数。结点的地址是 5 位非负整数，NULL 地址用 −1 表示。</p><p>接下来有 N 行，每行格式为：</p><figure class="highlight armasm"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Address </span><span class="meta">Data</span> Next</span><br></pre></td></tr></table></figure><p>其中 <code>Address</code> 是结点地址，<code>Data</code> 是该结点保存的整数数据，<code>Next</code> 是下一结点的地址。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>对每个测试用例，顺序输出反转后的链表，其上每个结点占一行，格式与输入相同。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">00100 </span><span class="number">6</span> <span class="number">4</span></span><br><span class="line"><span class="symbol">00000 </span><span class="number">4</span> <span class="number">99999</span></span><br><span class="line"><span class="symbol">00100 </span><span class="number">1</span> <span class="number">12309</span></span><br><span class="line"><span class="symbol">68237 </span><span class="number">6</span> -<span class="number">1</span></span><br><span class="line"><span class="symbol">33218 </span><span class="number">3</span> <span class="number">00000</span></span><br><span class="line"><span class="symbol">99999 </span><span class="number">5</span> <span class="number">68237</span></span><br><span class="line"><span class="symbol">12309 </span><span class="number">2</span> <span class="number">33218</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">00000 </span><span class="number">4</span> <span class="number">33218</span></span><br><span class="line"><span class="symbol">33218 </span><span class="number">3</span> <span class="number">12309</span></span><br><span class="line"><span class="symbol">12309 </span><span class="number">2</span> <span class="number">00100</span></span><br><span class="line"><span class="symbol">00100 </span><span class="number">1</span> <span class="number">99999</span></span><br><span class="line"><span class="symbol">99999 </span><span class="number">5</span> <span class="number">68237</span></span><br><span class="line"><span class="symbol">68237 </span><span class="number">6</span> -<span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> val[mxn], nxt[mxn], ans[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> s, n, k, x;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>, &amp;s, &amp;n, &amp;k);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;x);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;val[x], &amp;nxt[x]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> t=s; t!=<span class="number">-1</span>; t=nxt[t]) &#123;</span><br><span class="line">        ans[num++] = t;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;(num-num%k); i+=k)</span><br><span class="line">        reverse(begin(ans)+i, begin(ans)+i+k);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;num<span class="number">-1</span>; i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%05d %d %05d\n"</span>, ans[i], val[ans[i]], ans[i+<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%05d %d -1"</span>, ans[num<span class="number">-1</span>], val[ans[num<span class="number">-1</span>]]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1026 程序运行时间</title>
    <url>/posts/67b9bb2b.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="程序运行时间-PATB-1026"><a href="#程序运行时间-PATB-1026" class="headerlink" title="程序运行时间 (PATB-1026)"></a>程序运行时间 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805295203598336" target="_blank" rel="noopener">PATB-1026</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>要获得一个 C 语言程序的运行时间，常用的方法是调用头文件 time.h，其中提供了 clock() 函数，可以捕捉从程序开始运行到 clock() 被调用时所耗费的时间。这个时间单位是 clock tick，即“时钟打点”。同时还有一个常数 CLK_TCK，给出了机器时钟每秒所走的时钟打点数。于是为了获得一个函数 f 的运行时间，我们只要在调用 f 之前先调用 clock()，获得一个时钟打点数 C1；在 f 执行完成后再调用 clock()，获得另一个时钟打点数 C2；两次获得的时钟打点数之差 (C2-C1) 就是 f 运行所消耗的时钟打点数，再除以常数 CLK_TCK，就得到了以秒为单位的运行时间。</p><p>这里不妨简单假设常数 CLK_TCK 为 100。现给定被测函数前后两次获得的时钟打点数，请你给出被测函数运行的时间。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在一行中顺序给出 2 个整数 C1 和 C2。注意两次获得的时钟打点数肯定不相同，即 C1 &lt; C2，并且取值在 [0,10^7]。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>在一行中输出被测函数运行的时间。运行时间必须按照 <code>hh:mm:ss</code>（即2位的 <code>时:分:秒</code>）格式输出；不足 1 秒的时间四舍五入到秒。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">123 </span><span class="number">4577973</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">12</span>:<span class="number">42</span>:<span class="number">59</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> c1, c2;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;c1, &amp;c2);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> t = (c2-c1) / <span class="number">100</span>;</span><br><span class="line">    <span class="keyword">int</span> x = (c2-c1) % <span class="number">100</span>  &gt;= <span class="number">50</span> ? <span class="number">1</span> : <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%02d:%02d:%02d\n"</span>, t/<span class="number">3600</span>, t%<span class="number">3600</span>/<span class="number">60</span>, t%<span class="number">60</span>+x);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1027 打印沙漏</title>
    <url>/posts/2f6939f2.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="打印沙漏-PATB-1027"><a href="#打印沙漏-PATB-1027" class="headerlink" title="打印沙漏 (PATB-1027)"></a>打印沙漏 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805294251491328" target="_blank" rel="noopener">PATB-1027</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>本题要求你写个程序把给定的符号打印成沙漏的形状。例如给定17个“*”，要求按下列格式打印</p><figure class="highlight asciidoc"><table><tr><td class="code"><pre><span class="line">****<span class="strong">*</span></span><br><span class="line"><span class="strong"> *</span>*<span class="strong">*</span></span><br><span class="line"><span class="strong">  *</span></span><br><span class="line"><span class="code"> ***</span></span><br><span class="line">****<span class="strong">*</span></span><br></pre></td></tr></table></figure><p>所谓“沙漏形状”，是指每行输出奇数个符号；各行符号中心对齐；相邻两行符号数差2；符号数先从大到小顺序递减到1，再从小到大顺序递增；首尾符号数相等。</p><p>给定任意N个符号，不一定能正好组成一个沙漏。要求打印出的沙漏能用掉尽可能多的符号。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在一行给出1个正整数N（≤1000）和一个符号，中间以空格分隔。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>首先打印出由给定符号组成的最大的沙漏形状，最后在一行中输出剩下没用掉的符号数。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">19 </span>*</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight asciidoc"><table><tr><td class="code"><pre><span class="line">****<span class="strong">*</span></span><br><span class="line"><span class="strong"> *</span>*<span class="strong">*</span></span><br><span class="line"><span class="strong">  *</span></span><br><span class="line"><span class="code"> ***</span></span><br><span class="line">****<span class="strong">*</span></span><br><span class="line"><span class="strong">2</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n; <span class="keyword">char</span> c;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %c"</span>, &amp;n, &amp;c);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> x, num=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(x=<span class="number">1</span>; ; x++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(n &lt; <span class="number">2</span>*x*x<span class="number">-1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            x--;</span><br><span class="line">            num = <span class="number">2</span>*x*x<span class="number">-1</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> flag = <span class="number">1</span>, m = <span class="number">2</span>*x<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">int</span> a = <span class="number">0</span>, b = m;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;a; j++) <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;b; j++) <span class="built_in">printf</span>(<span class="string">"%c"</span>, c);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">        <span class="keyword">if</span>(i==x) flag = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(flag)</span><br><span class="line">            a++, b-=<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            a--, b+=<span class="number">2</span>;        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, n-num);</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1028 人口普查</title>
    <url>/posts/3deaf708.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="人口普查-PATB-1028"><a href="#人口普查-PATB-1028" class="headerlink" title="人口普查 (PATB-1028)"></a>人口普查 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805293282607104" target="_blank" rel="noopener">PATB-1028</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>某城镇进行人口普查，得到了全体居民的生日。现请你写个程序，找出镇上最年长和最年轻的人。</p><p>这里确保每个输入的日期都是合法的，但不一定是合理的——假设已知镇上没有超过 200 岁的老人，而今天是 2014 年 9 月 6 日，所以超过 200 岁的生日和未出生的生日都是不合理的，应该被过滤掉。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在第一行给出正整数 N，取值在(0,105]；随后 N 行，每行给出 1 个人的姓名（由不超过 5 个英文字母组成的字符串）、以及按 <code>yyyy/mm/dd</code>（即年/月/日）格式给出的生日。题目保证最年长和最年轻的人没有并列。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>在一行中顺序输出有效生日的个数、最年长人和最年轻人的姓名，其间以空格分隔。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">5</span></span><br><span class="line">John <span class="number">2001</span>/<span class="number">05</span>/<span class="number">12</span></span><br><span class="line">Tom <span class="number">1814</span>/<span class="number">09</span>/<span class="number">06</span></span><br><span class="line">Ann <span class="number">2121</span>/<span class="number">01</span>/<span class="number">30</span></span><br><span class="line">James <span class="number">1814</span>/<span class="number">09</span>/<span class="number">05</span></span><br><span class="line">Steve <span class="number">1967</span>/<span class="number">11</span>/<span class="number">20</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">3 </span>Tom John</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">P</span>&#123;</span></span><br><span class="line">    <span class="keyword">char</span> s[<span class="number">15</span>], t[<span class="number">15</span>];</span><br><span class="line">&#125;tmp, mx, mi;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s %s"</span>, tmp.s, tmp.t);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">strcmp</span>(tmp.t, <span class="string">"1814/09/06"</span>) &lt; <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">strcmp</span>(tmp.t, <span class="string">"2014/09/06"</span>) &gt; <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        num++;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(num==<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">strcpy</span>(mi.s, tmp.s); <span class="built_in">strcpy</span>(mi.t, tmp.t);</span><br><span class="line">            <span class="built_in">strcpy</span>(mx.s, tmp.s); <span class="built_in">strcpy</span>(mx.t, tmp.t);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">strcmp</span>(tmp.t, mi.t) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="built_in">strcpy</span>(mi.s, tmp.s); <span class="built_in">strcpy</span>(mi.t, tmp.t);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">strcmp</span>(tmp.t, mx.t) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="built_in">strcpy</span>(mx.s, tmp.s); <span class="built_in">strcpy</span>(mx.t, tmp.t);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(num)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d %s %s\n"</span>, num, mi.s, mx.s);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"0\n"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1029 旧键盘</title>
    <url>/posts/da1031ba.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="旧键盘-PATB-1029"><a href="#旧键盘-PATB-1029" class="headerlink" title="旧键盘 (PATB-1029)"></a>旧键盘 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805292322111488" target="_blank" rel="noopener">PATB-1029</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>旧键盘上坏了几个键，于是在敲一段文字的时候，对应的字符就不会出现。现在给出应该输入的一段文字、以及实际被输入的文字，请你列出肯定坏掉的那些键。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在 2 行中分别给出应该输入的文字、以及实际被输入的文字。每段文字是不超过 80 个字符的串，由字母 A-Z（包括大、小写）、数字 0-9、以及下划线 <code>_</code>（代表空格）组成。题目保证 2 个字符串均非空。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>按照发现顺序，在一行中输出坏掉的键。其中英文字母只输出大写，每个坏键只输出一次。题目保证至少有 1 个坏键。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight autohotkey"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span>_This_is_<span class="built_in">a_test</span></span><br><span class="line">_hs_s_<span class="built_in">a_es</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span>TI</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">char</span> s[mxn], t[mxn];</span><br><span class="line"><span class="keyword">int</span> a[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s %s"</span>, s, t);</span><br><span class="line">    <span class="keyword">int</span> sl = <span class="built_in">strlen</span>(s);</span><br><span class="line">    <span class="keyword">int</span> tl = <span class="built_in">strlen</span>(t);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;tl; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">isalpha</span>(t[i]))</span><br><span class="line">            a[<span class="built_in">toupper</span>(t[i])]++;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            a[t[i]]++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;sl; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">isalpha</span>(s[i]))</span><br><span class="line">            s[i] = <span class="built_in">toupper</span>(s[i]);</span><br><span class="line">        <span class="keyword">if</span>(a[s[i]] == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%c"</span>, s[i]);</span><br><span class="line">            a[s[i]]++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1030 完美数列</title>
    <url>/posts/24f0be54.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="完美数列-PATB-1030"><a href="#完美数列-PATB-1030" class="headerlink" title="完美数列 (PATB-1030)"></a>完美数列 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805291311284224" target="_blank" rel="noopener">PATB-1030</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>给定一个正整数数列，和正整数 p，设这个数列中的最大值是 M，最小值是 m，如果 M≤mp，则称这个数列是完美数列。</p><p>现在给定参数 p 和一些正整数，请你从中选择尽可能多的数构成一个完美数列</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入第一行给出两个正整数 N 和 p，其中 N（≤10^5）是输入的正整数的个数，p（≤10^9）是给定的参数。第二行给出 N 个正整数，每个数不超过 10^9。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>在一行中输出最多可以选择多少个数可以用它们组成一个完美数列。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">10 </span><span class="number">8</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">3</span> <span class="number">20</span> <span class="number">4</span> <span class="number">5</span> <span class="number">1</span> <span class="number">6</span> <span class="number">7</span> <span class="number">8</span> <span class="number">9</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">8</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line">LL a[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, p;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;n, &amp;p);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld"</span>, &amp;a[i]);</span><br><span class="line">    sort(a, a+n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> count = ans - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i+count; j&lt;n; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(a[j] &lt;= p*a[i])</span><br><span class="line">                count++;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        ans = max(ans, count);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(i+count &gt; n)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1031 查验身份证</title>
    <url>/posts/4fc37082.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="查验身份证-PATB-1031"><a href="#查验身份证-PATB-1031" class="headerlink" title="查验身份证 (PATB-1031)"></a>查验身份证 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805290334011392" target="_blank" rel="noopener">PATB-1031</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>一个合法的身份证号码由17位地区、日期编号和顺序编号加1位校验码组成。校验码的计算规则如下：</p><p>首先对前17位数字加权求和，权重分配为：{7，9，10，5，8，4，2，1，6，3，7，9，10，5，8，4，2}；然后将计算的和对11取模得到值<code>Z</code>；最后按照以下关系对应<code>Z</code>值与校验码<code>M</code>的值：</p><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">Z：<span class="number">0</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">7</span> <span class="number">8</span> <span class="number">9</span> <span class="number">10</span></span><br><span class="line">M：<span class="number">1</span> <span class="number">0</span> X <span class="number">9</span> <span class="number">8</span> <span class="number">7</span> <span class="number">6</span> <span class="number">5</span> <span class="number">4</span> <span class="number">3</span> <span class="number">2</span></span><br></pre></td></tr></table></figure><p>现在给定一些身份证号码，请你验证校验码的有效性，并输出有问题的号码。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入第一行给出正整数N（≤100）是输入的身份证号码的个数。随后N行，每行给出1个18位身份证号码。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>按照输入的顺序每行输出1个有问题的身份证号码。这里并不检验前17位是否合理，只检查前17位是否全为数字且最后1位校验码计算准确。如果所有号码都正常，则输出<code>All passed</code>。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">320124198808240056</span></span><br><span class="line"><span class="number">12010</span>X198901011234</span><br><span class="line"><span class="number">110108196711301866</span></span><br><span class="line"><span class="number">37070419881216001</span>X</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">12010</span>X198901011234</span><br><span class="line"><span class="number">110108196711301866</span></span><br><span class="line"><span class="number">37070419881216001</span>X</span><br></pre></td></tr></table></figure><h2 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">320124198808240056</span></span><br><span class="line"><span class="number">110108196711301862</span></span><br></pre></td></tr></table></figure><h2 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight ada"><table><tr><td class="code"><pre><span class="line"><span class="keyword">All</span> passed</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> p[] = &#123;<span class="number">7</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">8</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">6</span>,<span class="number">3</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">8</span>,<span class="number">4</span>,<span class="number">2</span>&#125;;</span><br><span class="line"><span class="keyword">char</span> m[] = <span class="string">"10X98765432"</span>, s[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> cs = <span class="number">0</span>; cs&lt;n; cs++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>, s);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> z = <span class="number">0</span>, err = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">17</span>; i++)</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">isdigit</span>(s[i]))</span><br><span class="line">                z += (s[i]-<span class="string">'0'</span>) * p[i];</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                err = <span class="number">1</span>; <span class="keyword">break</span>;</span><br><span class="line">            &#125;           </span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!err &amp;&amp; s[<span class="number">17</span>] == m[z%<span class="number">11</span>])</span><br><span class="line">            ans++;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%s\n"</span>, s);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(ans == n)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"All passed\n"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1032 挖掘机技术哪家强</title>
    <url>/posts/3e3231ea.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="挖掘机技术哪家强-PATB-1032"><a href="#挖掘机技术哪家强-PATB-1032" class="headerlink" title="挖掘机技术哪家强 (PATB-1032)"></a>挖掘机技术哪家强 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805289432236032" target="_blank" rel="noopener">PATB-1032</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>为了用事实说明挖掘机技术到底哪家强，PAT 组织了一场挖掘机技能大赛。现请你根据比赛结果统计出技术最强的那个学校。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在第 1 行给出不超过 10^5 的正整数 N，即参赛人数。随后 N 行，每行给出一位参赛者的信息和成绩，包括其所代表的学校的编号（从 1 开始连续编号）、及其比赛成绩（百分制），中间以空格分隔。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>在一行中给出总得分最高的学校的编号、及其总分，中间以空格分隔。题目保证答案唯一，没有并列。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="number">6</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">65</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">80</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">100</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">70</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">40</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">0</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">2 </span><span class="number">150</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> a[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> num = <span class="number">0</span>, x, y;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;x, &amp;y);</span><br><span class="line">        a[x] += y;</span><br><span class="line">        num = max(num, x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mx = <span class="number">0</span>, id = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=num; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i]&gt;mx) &#123;</span><br><span class="line">            mx = a[i];</span><br><span class="line">            id = i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>, id, a[id]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1033 旧键盘打字</title>
    <url>/posts/925e3c79.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="旧键盘打字-PATB-1033"><a href="#旧键盘打字-PATB-1033" class="headerlink" title="旧键盘打字 (PATB-1033)"></a>旧键盘打字 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805288530460672" target="_blank" rel="noopener">PATB-1033</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>旧键盘上坏了几个键，于是在敲一段文字的时候，对应的字符就不会出现。现在给出应该输入的一段文字、以及坏掉的那些键，打出的结果文字会是怎样？</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在 2 行中分别给出坏掉的那些键、以及应该输入的文字。其中对应英文字母的坏键以大写给出；每段文字是不超过 10^5 个字符的串。可用的字符包括字母 [<code>a</code>-<code>z</code>, <code>A</code>-<code>Z</code>]、数字 <code>0</code>-<code>9</code>、以及下划线 <code>_</code>（代表空格）、<code>,</code>、<code>.</code>、<code>-</code>、<code>+</code>（代表上档键）。题目保证第 2 行输入的文字串非空。</p><p>注意：如果上档键坏掉了，那么大写的英文字母无法被打出。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>在一行中输出能够被打出的结果文字。如果没有一个字符能被打出，则输出空行。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span>+IE.</span><br><span class="line"><span class="number">7</span>_This_is_a_test.</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight autohotkey"><table><tr><td class="code"><pre><span class="line">_hs_s_<span class="built_in">a_tst</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> a[mxn];</span><br><span class="line"><span class="keyword">char</span> s[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    fgets(s, mxn, <span class="built_in">stdin</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; s[i]; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">isalpha</span>(s[i]))&#123;</span><br><span class="line">            a[<span class="built_in">toupper</span>(s[i])]++;</span><br><span class="line">            a[<span class="built_in">tolower</span>(s[i])]++;</span><br><span class="line">        &#125;<span class="keyword">else</span></span><br><span class="line">            a[s[i]]++;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    fgets(s, mxn, <span class="built_in">stdin</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; s[i]; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[s[i]])</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">isupper</span>(s[i]) &amp;&amp; a[<span class="string">'+'</span>])</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%c"</span>, s[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1034 有理数四则运算</title>
    <url>/posts/1ba556b8.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="有理数四则运算-PATB-1034"><a href="#有理数四则运算-PATB-1034" class="headerlink" title="有理数四则运算 (PATB-1034)"></a>有理数四则运算 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805287624491008" target="_blank" rel="noopener">PATB-1034</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>本题要求编写程序，计算 2 个有理数的和、差、积、商。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在一行中按照 <code>a1/b1 a2/b2</code> 的格式给出两个分数形式的有理数，其中分子和分母全是整型范围内的整数，负号只可能出现在分子前，分母不为 0。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>分别在 4 行中按照 <code>有理数1 运算符 有理数2 = 结果</code> 的格式顺序输出 2 个有理数的和、差、积、商。注意输出的每个有理数必须是该有理数的最简形式 <code>k a/b</code>，其中 <code>k</code> 是整数部分，<code>a/b</code> 是最简分数部分；若为负数，则须加括号；若除法分母为 0，则输出 <code>Inf</code>。题目保证正确的输出中没有超过整型范围的整数。</p></blockquote><h2 id="样例输入1"><a href="#样例输入1" class="headerlink" title="样例输入1"></a>样例输入1</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">2</span>/<span class="number">3</span> <span class="number">-4</span>/<span class="number">2</span></span><br></pre></td></tr></table></figure><h2 id="样例输出1"><a href="#样例输出1" class="headerlink" title="样例输出1"></a>样例输出1</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">2</span>/<span class="number">3</span> + (<span class="number">-2</span>) = (<span class="number">-1</span> <span class="number">1</span>/<span class="number">3</span>)</span><br><span class="line"><span class="number">2</span>/<span class="number">3</span> - (<span class="number">-2</span>) = <span class="number">2</span> <span class="number">2</span>/<span class="number">3</span></span><br><span class="line"><span class="number">2</span>/<span class="number">3</span> * (<span class="number">-2</span>) = (<span class="number">-1</span> <span class="number">1</span>/<span class="number">3</span>)</span><br><span class="line"><span class="number">2</span>/<span class="number">3</span> / (<span class="number">-2</span>) = (<span class="number">-1</span>/<span class="number">3</span>)</span><br></pre></td></tr></table></figure><h2 id="样例输入2"><a href="#样例输入2" class="headerlink" title="样例输入2"></a>样例输入2</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">5</span>/<span class="number">3</span> <span class="number">0</span>/<span class="number">6</span></span><br></pre></td></tr></table></figure><h2 id="样例输出2"><a href="#样例输出2" class="headerlink" title="样例输出2"></a>样例输出2</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">1 </span><span class="number">2</span>/<span class="number">3</span> + <span class="number">0</span> = <span class="number">1</span> <span class="number">2</span>/<span class="number">3</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">2</span>/<span class="number">3</span> - <span class="number">0</span> = <span class="number">1</span> <span class="number">2</span>/<span class="number">3</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">2</span>/<span class="number">3</span> * <span class="number">0</span> = <span class="number">0</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">2</span>/<span class="number">3</span> / <span class="number">0</span> = Inf</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">double</span> DB;</span><br><span class="line"><span class="keyword">const</span> DB eps = <span class="number">1e-8</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Sg(u) ((u) &gt; eps ? 1 : ((u) &lt; -eps ? -1 : 0))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Abs(u) (Sg(u) &gt;= 0 ? (u) : -(u))</span></span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">gcd</span><span class="params">(LL a, LL b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> b ? gcd(b, a%b) : a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(LL x, LL y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!x || !y)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%s"</span>, x ? <span class="string">"Inf"</span> : <span class="string">"0"</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> flag = Sg(Sg(x)*Sg(y));</span><br><span class="line">    x = Abs(x) * flag;</span><br><span class="line">    y = Abs(y);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(flag&lt;<span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">"("</span>);</span><br><span class="line">    <span class="keyword">if</span>(x/y)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld"</span>, x/y);</span><br><span class="line">    <span class="keyword">if</span>(x%y) &#123;</span><br><span class="line">        LL t = Abs(gcd(x, y));</span><br><span class="line">        <span class="keyword">if</span>(x/y)&#123;</span><br><span class="line">            x = Abs(x%y);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">        &#125;        </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld/%lld"</span>, x/t, y/t);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(flag&lt;<span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">")"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LL x1, x2, y1, y2;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld/%lld %lld/%lld"</span>, &amp;x1, &amp;x2, &amp;y1, &amp;y2);</span><br><span class="line"></span><br><span class="line">    print(x1, x2); <span class="built_in">printf</span>(<span class="string">" + "</span>); print(y1, y2); <span class="built_in">printf</span>(<span class="string">" = "</span>);</span><br><span class="line">    print(x1*y2+x2*y1, x2*y2); <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"></span><br><span class="line">    print(x1, x2); <span class="built_in">printf</span>(<span class="string">" - "</span>); print(y1, y2); <span class="built_in">printf</span>(<span class="string">" = "</span>);</span><br><span class="line">    print(x1*y2-x2*y1, x2*y2); <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"></span><br><span class="line">    print(x1, x2); <span class="built_in">printf</span>(<span class="string">" * "</span>); print(y1, y2); <span class="built_in">printf</span>(<span class="string">" = "</span>);</span><br><span class="line">    print(x1*y1, x2*y2); <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"></span><br><span class="line">    print(x1, x2); <span class="built_in">printf</span>(<span class="string">" / "</span>); print(y1, y2); <span class="built_in">printf</span>(<span class="string">" = "</span>);</span><br><span class="line">    print(x1*y2, x2*y1); <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1035 插入与归并</title>
    <url>/posts/aa716668.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="插入与归并-PATB-1035"><a href="#插入与归并-PATB-1035" class="headerlink" title="插入与归并 (PATB-1035)"></a>插入与归并 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805286714327040" target="_blank" rel="noopener">PATB-1035</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>根据维基百科的定义：</p><p><strong>插入排序</strong>是迭代算法，逐一获得输入数据，逐步产生有序的输出序列。每步迭代中，算法从输入序列中取出一元素，将之插入有序序列中正确的位置。如此迭代直到全部元素有序。</p><p><strong>归并排序</strong>进行如下迭代操作：首先将原始序列看成 N 个只包含 1 个元素的有序子序列，然后每次迭代归并两个相邻的有序子序列，直到最后只剩下 1 个有序的序列。</p><p>现给定原始序列和由某排序算法产生的中间序列，请你判断该算法究竟是哪种排序算法？</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在第一行给出正整数 N (≤100)；随后一行给出原始序列的 N 个整数；最后一行给出由某排序算法产生的中间序列。这里假设排序的目标序列是升序。数字间以空格分隔。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>首先在第 1 行中输出<code>Insertion Sort</code>表示插入排序、或<code>Merge Sort</code>表示归并排序；然后在第 2 行中输出用该排序算法再迭代一轮的结果序列。题目保证每组测试的结果是唯一的。数字间以空格分隔，且行首尾不得有多余空格。</p></blockquote><h2 id="样例输入1"><a href="#样例输入1" class="headerlink" title="样例输入1"></a>样例输入1</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">10</span></span><br><span class="line"><span class="number">3</span> <span class="number">1</span> <span class="number">2</span> <span class="number">8</span> <span class="number">7</span> <span class="number">5</span> <span class="number">9</span> <span class="number">4</span> <span class="number">6</span> <span class="number">0</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">7</span> <span class="number">8</span> <span class="number">5</span> <span class="number">9</span> <span class="number">4</span> <span class="number">6</span> <span class="number">0</span></span><br></pre></td></tr></table></figure><h2 id="样例输出1"><a href="#样例输出1" class="headerlink" title="样例输出1"></a>样例输出1</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">Insertion Sort</span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">5</span> <span class="number">7</span> <span class="number">8</span> <span class="number">9</span> <span class="number">4</span> <span class="number">6</span> <span class="number">0</span></span><br></pre></td></tr></table></figure><h2 id="样例输入2"><a href="#样例输入2" class="headerlink" title="样例输入2"></a>样例输入2</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">10</span></span><br><span class="line"><span class="number">3</span> <span class="number">1</span> <span class="number">2</span> <span class="number">8</span> <span class="number">7</span> <span class="number">5</span> <span class="number">9</span> <span class="number">4</span> <span class="number">0</span> <span class="number">6</span></span><br><span class="line"><span class="number">1</span> <span class="number">3</span> <span class="number">2</span> <span class="number">8</span> <span class="number">5</span> <span class="number">7</span> <span class="number">4</span> <span class="number">9</span> <span class="number">0</span> <span class="number">6</span></span><br></pre></td></tr></table></figure><h2 id="样例输出2"><a href="#样例输出2" class="headerlink" title="样例输出2"></a>样例输出2</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">Merge Sort</span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">8</span> <span class="number">4</span> <span class="number">5</span> <span class="number">7</span> <span class="number">9</span> <span class="number">0</span> <span class="number">6</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> a[mxn], b[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;b[i]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> x = <span class="number">1</span>, flag = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(x&lt;n &amp; b[x<span class="number">-1</span>]&lt;=b[x]) x++;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=x; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i] != b[i])&#123;</span><br><span class="line">            flag = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(flag)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Insertion Sort\n"</span>);</span><br><span class="line">        sort(a, a+x+<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(i) <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d"</span>, a[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Merge Sort\n"</span>);</span><br><span class="line">    <span class="keyword">int</span> k = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        flag = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i]!=b[i])&#123;</span><br><span class="line">                flag = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        k *= <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n/k; i++)</span><br><span class="line">            sort(a+i*k, a+i*k+k);</span><br><span class="line">        sort(a+n/k*k, a+n);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(flag) <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(i) <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d"</span>, a[i]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1036 跟奥巴马一起编程</title>
    <url>/posts/46760c14.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="跟奥巴马一起编程-PATB-1036"><a href="#跟奥巴马一起编程-PATB-1036" class="headerlink" title="跟奥巴马一起编程 (PATB-1036)"></a>跟奥巴马一起编程 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805285812551680" target="_blank" rel="noopener">PATB-1036</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>美国总统奥巴马不仅呼吁所有人都学习编程，甚至以身作则编写代码，成为美国历史上首位编写计算机代码的总统。2014 年底，为庆祝“计算机科学教育周”正式启动，奥巴马编写了很简单的计算机代码：在屏幕上画一个正方形。现在你也跟他一起画吧！</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在一行中给出正方形边长 N（3≤N≤20）和组成正方形边的某种字符 C，间隔一个空格。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>输出由给定字符 C 画出的正方形。但是注意到行间距比列间距大，所以为了让结果看上去更像正方形，我们输出的行数实际上是列数的 50%（四舍五入取整）。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">10 </span>a</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line">aaaaaaaaaa</span><br><span class="line"><span class="keyword">a</span>        <span class="keyword">a</span></span><br><span class="line"><span class="keyword">a</span>        <span class="keyword">a</span></span><br><span class="line"><span class="keyword">a</span>        <span class="keyword">a</span></span><br><span class="line">aaaaaaaaaa</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n; <span class="keyword">char</span> c;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %c"</span>, &amp;n, &amp;c);</span><br><span class="line">    <span class="keyword">int</span> m = round(n*<span class="number">0.5</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;n; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(i==<span class="number">0</span> || i==m<span class="number">-1</span>)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%c"</span>, c);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(j==<span class="number">0</span> || j==n<span class="number">-1</span>)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%c"</span>, c);</span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1037 在霍格沃茨找零钱</title>
    <url>/posts/b8568996.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="在霍格沃茨找零钱-PATB-1037"><a href="#在霍格沃茨找零钱-PATB-1037" class="headerlink" title="在霍格沃茨找零钱 (PATB-1037)"></a>在霍格沃茨找零钱 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805284923359232" target="_blank" rel="noopener">PATB-1037</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>如果你是哈利·波特迷，你会知道魔法世界有它自己的货币系统 —— 就如海格告诉哈利的：“十七个银西可(Sickle)兑一个加隆(Galleon)，二十九个纳特(Knut)兑一个西可，很容易。”现在，给定哈利应付的价钱 P 和他实付的钱 A，你的任务是写一个程序来计算他应该被找的零钱。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在 1 行中分别给出 P 和 A，格式为 <code>Galleon.Sickle.Knut</code>，其间用 1 个空格分隔。这里 <code>Galleon</code> 是 [0, 107] 区间内的整数，<code>Sickle</code> 是 [0, 17) 区间内的整数，<code>Knut</code> 是 [0, 29) 区间内的整数。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>在一行中用与输入同样的格式输出哈利应该被找的零钱。如果他没带够钱，那么输出的应该是负数。</p></blockquote><h2 id="样例输入1"><a href="#样例输入1" class="headerlink" title="样例输入1"></a>样例输入1</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">10.16</span><span class="number">.27</span> <span class="number">14.1</span><span class="number">.28</span></span><br></pre></td></tr></table></figure><h2 id="样例输出1"><a href="#样例输出1" class="headerlink" title="样例输出1"></a>样例输出1</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">3.2</span><span class="number">.1</span></span><br></pre></td></tr></table></figure><h2 id="样例输入2"><a href="#样例输入2" class="headerlink" title="样例输入2"></a>样例输入2</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">14.1</span><span class="number">.28</span> <span class="number">10.16</span><span class="number">.27</span></span><br></pre></td></tr></table></figure><h2 id="样例输出2"><a href="#样例输出2" class="headerlink" title="样例输出2"></a>样例输出2</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">-3.2</span><span class="number">.1</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Sg(u) ((u) &gt; eps ? 1 : ((u) &lt; -eps ? -1 : 0))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Abs(u) (Sg(u) &gt;= 0 ? (u) : -(u))</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LL ag, as, ak, bg, bs, bk; </span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld.%lld.%lld"</span>, &amp;ag, &amp;as, &amp;ak);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld.%lld.%lld"</span>, &amp;bg, &amp;bs, &amp;bk);</span><br><span class="line">    </span><br><span class="line">    LL a = ag * <span class="number">493</span> + as * <span class="number">29</span> + ak;</span><br><span class="line">    LL b = bg * <span class="number">493</span> + bs * <span class="number">29</span> + bk;</span><br><span class="line">    LL c = Abs(b - a);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(Sg(b - a) &lt; <span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">"-"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld.%lld.%lld\n"</span>, c/<span class="number">493</span>, c/<span class="number">29</span>%<span class="number">17</span>, c%<span class="number">29</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1038 统计同成绩学生</title>
    <url>/posts/f0ffa12e.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="统计同成绩学生-PATB-1038"><a href="#统计同成绩学生-PATB-1038" class="headerlink" title="统计同成绩学生 (PATB-1038)"></a>统计同成绩学生 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805284092887040" target="_blank" rel="noopener">PATB-1038</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>本题要求读入 N 名学生的成绩，将获得某一给定分数的学生人数输出。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在第 1 行给出不超过 10^5 的正整数 N，即学生总人数。随后一行给出 N 名学生的百分制整数成绩，中间以空格分隔。最后一行给出要查询的分数个数 K（不超过 N 的正整数），随后是 K 个分数，中间以空格分隔。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>在一行中按查询顺序给出得分等于指定分数的学生人数，中间以空格分隔，但行末不得有多余空格。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="number">10</span></span><br><span class="line"><span class="symbol">60 </span><span class="number">75</span> <span class="number">90</span> <span class="number">55</span> <span class="number">75</span> <span class="number">99</span> <span class="number">82</span> <span class="number">90</span> <span class="number">75</span> <span class="number">50</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">75</span> <span class="number">90</span> <span class="number">88</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">3 </span><span class="number">2</span> <span class="number">0</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> a[mxn], b[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]);</span><br><span class="line">        b[a[i]]++;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> k, t; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;k);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;k; i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;t);</span><br><span class="line">        <span class="keyword">if</span>(i) <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d"</span>, b[t]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1039 到底买不买</title>
    <url>/posts/9c0b0753.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="到底买不买-PATB-1039"><a href="#到底买不买-PATB-1039" class="headerlink" title="到底买不买 (PATB-1039)"></a>到底买不买 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805283241443328" target="_blank" rel="noopener">PATB-1039</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>小红想买些珠子做一串自己喜欢的珠串。卖珠子的摊主有很多串五颜六色的珠串，但是不肯把任何一串拆散了卖。于是小红要你帮忙判断一下，某串珠子里是否包含了全部自己想要的珠子？如果是，那么告诉她有多少多余的珠子；如果不是，那么告诉她缺了多少珠子。</p><p>为方便起见，我们用[0-9]、[a-z]、[A-Z]范围内的字符来表示颜色。例如在图1中，第3串是小红想做的珠串；那么第1串可以买，因为包含了全部她想要的珠子，还多了8颗不需要的珠子；第2串不能买，因为没有黑色珠子，并且少了一颗红色的珠子。</p><p><img src="https://images.ptausercontent.com/b7e2ffa6-8819-436d-ad79-a41263abe914.jpg" alt="figbuy.jpg"></p><p>图 1</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>每个输入包含 1 个测试用例。每个测试用例分别在 2 行中先后给出摊主的珠串和小红想做的珠串，两串都不超过 1000 个珠子。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>如果可以买，则在一行中输出 <code>Yes</code> 以及有多少多余的珠子；如果不可以买，则在一行中输出 <code>No</code> 以及缺了多少珠子。其间以 1 个空格分隔。</p></blockquote><h2 id="样例输入1"><a href="#样例输入1" class="headerlink" title="样例输入1"></a>样例输入1</h2><figure class="highlight"><table><tr><td class="code"><pre><span class="line">ppRYYGrrYBR2258</span><br><span class="line">YrR8RrY</span><br></pre></td></tr></table></figure><h2 id="样例输出1"><a href="#样例输出1" class="headerlink" title="样例输出1"></a>样例输出1</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="literal">Yes</span> <span class="number">8</span></span><br></pre></td></tr></table></figure><h2 id="样例输入2"><a href="#样例输入2" class="headerlink" title="样例输入2"></a>样例输入2</h2><figure class="highlight"><table><tr><td class="code"><pre><span class="line">ppRYYGrrYB225</span><br><span class="line">YrR8RrY</span><br></pre></td></tr></table></figure><h2 id="样例输出2"><a href="#样例输出2" class="headerlink" title="样例输出2"></a>样例输出2</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="literal">No</span> <span class="number">2</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">char</span> s[mxn], t[mxn];</span><br><span class="line"><span class="keyword">int</span> a[mxn], b[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s %s"</span>, s, t);</span><br><span class="line">    <span class="keyword">int</span> sl = <span class="built_in">strlen</span>(s), tl = <span class="built_in">strlen</span>(t);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;sl; i++)</span><br><span class="line">        a[s[i]]++;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;tl; i++)</span><br><span class="line">        b[t[i]]++;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> sa = <span class="number">0</span>, sb = <span class="number">0</span>;    </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">256</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        sa += a[i]-b[i] &gt; <span class="number">0</span> ? a[i]-b[i] : <span class="number">0</span>;</span><br><span class="line">        sb += b[i]-a[i] &gt; <span class="number">0</span> ? b[i]-a[i] : <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(sb)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"No %d\n"</span>, sb);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Yes %d\n"</span>, sa);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1040 有几个PAT</title>
    <url>/posts/e54b4685.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="有几个PAT-PATB-1040"><a href="#有几个PAT-PATB-1040" class="headerlink" title="有几个PAT (PATB-1040)"></a>有几个PAT (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805282389999616" target="_blank" rel="noopener">PATB-1040</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>字符串 <code>APPAPT</code> 中包含了两个单词 <code>PAT</code>，其中第一个 <code>PAT</code> 是第 2 位(<code>P</code>)，第 4 位(<code>A</code>)，第 6 位(<code>T</code>)；第二个 <code>PAT</code> 是第 3 位(<code>P</code>)，第 4 位(<code>A</code>)，第 6 位(<code>T</code>)。</p><p>现给定字符串，问一共可以形成多少个 <code>PAT</code>？</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入只有一行，包含一个字符串，长度不超过105，只包含 <code>P</code>、<code>A</code>、<code>T</code> 三种字母。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>在一行中输出给定字符串中包含多少个 <code>PAT</code>。由于结果可能比较大，只输出对 1000000007 取余数的结果。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">APPAPT</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">char</span> s[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>, s);</span><br><span class="line">    <span class="keyword">int</span> sl = <span class="built_in">strlen</span>(s);</span><br><span class="line"></span><br><span class="line">    LL p=<span class="number">0</span>, a=<span class="number">0</span>, t=<span class="number">0</span>, mod=<span class="number">1000000007</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;sl; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(s[i]==<span class="string">'P'</span>)</span><br><span class="line">            p++;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(s[i]==<span class="string">'A'</span>)</span><br><span class="line">            a += p;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(s[i]==<span class="string">'T'</span>)</span><br><span class="line">            t += a;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, t%mod);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1041 考试座位号</title>
    <url>/posts/4a089664.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="考试座位号-PATB-1041"><a href="#考试座位号-PATB-1041" class="headerlink" title="考试座位号 (PATB-1041)"></a>考试座位号 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805281567916032" target="_blank" rel="noopener">PATB-1041</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>每个 PAT 考生在参加考试时都会被分配两个座位号，一个是试机座位，一个是考试座位。正常情况下，考生在入场时先得到试机座位号码，入座进入试机状态后，系统会显示该考生的考试座位号码，考试时考生需要换到考试座位就座。但有些考生迟到了，试机已经结束，他们只能拿着领到的试机座位号码求助于你，从后台查出他们的考试座位号码。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入第一行给出一个正整数 N（≤1000），随后 N 行，每行给出一个考生的信息：<code>准考证号 试机座位号 考试座位号</code>。其中<code>准考证号</code>由 16 位数字组成，座位从 1 到 N 编号。输入保证每个人的准考证号都不同，并且任何时候都不会把两个人分配到同一个座位上。</p><p>考生信息之后，给出一个正整数 M（≤N），随后一行中给出 M 个待查询的试机座位号码，以空格分隔。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>对应每个需要查询的试机座位号码，在一行中输出对应考生的准考证号和考试座位号码，中间用 1 个空格分隔。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="number">4</span></span><br><span class="line"><span class="symbol">3310120150912233 </span><span class="number">2</span> <span class="number">4</span></span><br><span class="line"><span class="symbol">3310120150912119 </span><span class="number">4</span> <span class="number">1</span></span><br><span class="line"><span class="symbol">3310120150912126 </span><span class="number">1</span> <span class="number">3</span></span><br><span class="line"><span class="symbol">3310120150912002 </span><span class="number">3</span> <span class="number">2</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">4</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">3310120150912002 </span><span class="number">2</span></span><br><span class="line"><span class="symbol">3310120150912119 </span><span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">P</span>&#123;</span></span><br><span class="line">    <span class="keyword">char</span> s[<span class="number">20</span>];</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, m;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">map</span>&lt;<span class="keyword">int</span>, P&gt; mmp;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x; P y;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s %d %d"</span>, y.s, &amp;x, &amp;y.t);</span><br><span class="line">        mmp[x] = y;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;x);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%s %d\n"</span>, mmp[x].s, mmp[x].t);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1042 字符统计</title>
    <url>/posts/93bf5016.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="字符统计-PATB-1042"><a href="#字符统计-PATB-1042" class="headerlink" title="字符统计 (PATB-1042)"></a>字符统计 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805280817135616" target="_blank" rel="noopener">PATB-1042</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>请编写程序，找出一段给定文字中出现最频繁的那个英文字母。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在一行中给出一个长度不超过 1000 的字符串。字符串由 ASCII 码表中任意可见字符及空格组成，至少包含 1 个英文字母，以回车结束（回车不算在内）。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>在一行中输出出现频率最高的那个英文字母及其出现次数，其间以空格分隔。如果有并列，则输出按字母序最小的那个字母。统计时不区分大小写，输出小写字母。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">This is a<span class="built_in"> simple </span>TEST.  There ARE numbers <span class="keyword">and</span> other symbols 1&amp;2&amp;3<span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span>.</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">e <span class="number">7</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">char</span> s[mxn];</span><br><span class="line"><span class="keyword">int</span> t[<span class="number">26</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    fgets(s, mxn, <span class="built_in">stdin</span>);</span><br><span class="line">    <span class="keyword">int</span> sl = <span class="built_in">strlen</span>(s);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;sl; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">isalpha</span>(s[i]))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">isupper</span>(s[i]))</span><br><span class="line">                s[i] = <span class="built_in">tolower</span>(s[i]);</span><br><span class="line">            t[s[i]-<span class="string">'a'</span>]++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mx = <span class="number">0</span>, id = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">26</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(mx &lt; t[i])</span><br><span class="line">        &#123;</span><br><span class="line">            mx = t[i];</span><br><span class="line">            id = i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%c %d\n"</span>, id+<span class="string">'a'</span>, mx);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1043 输出PATest</title>
    <url>/posts/bb105ee.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="输出PATest-PATB-1043"><a href="#输出PATest-PATB-1043" class="headerlink" title="输出PATest (PATB-1043)"></a>输出PATest (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805280074743808" target="_blank" rel="noopener">PATB-1043</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>给定一个长度不超过 10^4 的、仅由英文字母构成的字符串。请将字符重新调整顺序，按 <code>PATestPATest....</code> 这样的顺序输出，并忽略其它字符。当然，六种字符的个数不一定是一样多的，若某种字符已经输出完，则余下的字符仍按 PATest 的顺序打印，直到所有字符都被输出。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在一行中给出一个长度不超过 10^4 的、仅由英文字母构成的非空字符串。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>在一行中按题目要求输出排序后的字符串。题目保证输出非空。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">redlesPayBestPATTopTeePHPereatitAPPT</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">PATestPATestPTetPTePePee</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">char</span> s[mxn], t[]=<span class="string">"PATest"</span>;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">7</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>, s);</span><br><span class="line">    <span class="keyword">int</span> sl = <span class="built_in">strlen</span>(s);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;sl; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">strchr</span>(t, s[i]) != <span class="literal">NULL</span>)</span><br><span class="line">            a[<span class="built_in">strchr</span>(t, s[i])-t]++;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">6</span>; i++)</span><br><span class="line">        sum += a[i];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(sum)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">6</span>; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i])&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%c"</span>, t[i]);</span><br><span class="line">                a[i]--; sum--;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1044 火星数字</title>
    <url>/posts/f3bbfb7d.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="火星数字-PATB-1044"><a href="#火星数字-PATB-1044" class="headerlink" title="火星数字 (PATB-1044)"></a>火星数字 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805279328157696" target="_blank" rel="noopener">PATB-1044</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>火星人是以 13 进制计数的：</p><ul><li>地球人的 0 被火星人称为 tret。</li><li>地球人数字 1 到 12 的火星文分别为：jan, feb, mar, apr, may, jun, jly, aug, sep, oct, nov, dec。</li><li>火星人将进位以后的 12 个高位数字分别称为：tam, hel, maa, huh, tou, kes, hei, elo, syy, lok, mer, jou。</li></ul><p>例如地球人的数字 <code>29</code> 翻译成火星文就是 <code>hel mar</code>；而火星文 <code>elo nov</code> 对应地球数字 <code>115</code>。为了方便交流，请你编写程序实现地球和火星数字之间的互译。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入第一行给出一个正整数 N（&lt;100），随后 N 行，每行给出一个 [0, 169) 区间内的数字 —— 或者是地球文，或者是火星文。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>对应输入的每一行，在一行中输出翻译后的另一种语言的数字。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">29</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line">elo nov</span><br><span class="line">tam</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">hel mar</span><br><span class="line">may</span><br><span class="line"><span class="number">115</span></span><br><span class="line"><span class="number">13</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> a[][<span class="number">5</span>] = &#123;</span><br><span class="line">    <span class="string">"tret"</span>, <span class="string">"jan"</span>, <span class="string">"feb"</span>, <span class="string">"mar"</span>, <span class="string">"apr"</span>, <span class="string">"may"</span>, <span class="string">"jun"</span>,</span><br><span class="line">    <span class="string">"jly"</span>, <span class="string">"aug"</span>, <span class="string">"sep"</span>, <span class="string">"oct"</span>, <span class="string">"nov"</span>, <span class="string">"dec"</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">char</span> b[][<span class="number">5</span>] = &#123;</span><br><span class="line">    <span class="string">"    "</span>, <span class="string">"tam"</span>, <span class="string">"hel"</span>, <span class="string">"maa"</span>, <span class="string">"huh"</span>, <span class="string">"tou"</span>, <span class="string">"kes"</span>,</span><br><span class="line">    <span class="string">"hei"</span>, <span class="string">"elo"</span>, <span class="string">"syy"</span>, <span class="string">"lok"</span>, <span class="string">"mer"</span>, <span class="string">"jou"</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">char</span> s[<span class="number">100</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n; <span class="built_in">scanf</span>(<span class="string">"%d%*c"</span>, &amp;n);</span><br><span class="line">    <span class="keyword">while</span>(n--)</span><br><span class="line">    &#123;</span><br><span class="line">        fgets(s, <span class="number">100</span>, <span class="built_in">stdin</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">isdigit</span>(s[<span class="number">0</span>]))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> t = <span class="number">0</span>; <span class="built_in">sscanf</span>(s, <span class="string">"%d"</span>, &amp;t);</span><br><span class="line">            <span class="keyword">if</span>(t/<span class="number">13</span>) <span class="built_in">printf</span>(<span class="string">"%s"</span>, b[t/<span class="number">13</span>]);</span><br><span class="line">            <span class="keyword">if</span>(t/<span class="number">13</span> &amp;&amp; t%<span class="number">13</span>) <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">            <span class="keyword">if</span>(t%<span class="number">13</span> || t==<span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">"%s"</span>, a[t%<span class="number">13</span>]);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"\n"</span>); <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">char</span> t1[<span class="number">10</span>], t2[<span class="number">10</span>];</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">strlen</span>(s) &gt; <span class="number">5</span>)</span><br><span class="line">            <span class="built_in">sscanf</span>(s, <span class="string">"%s %s"</span>, t1, t2);</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">sscanf</span>(s, <span class="string">"%s"</span>, t1); <span class="built_in">strcpy</span>(t2, t1);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">13</span>; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">strcmp</span>(a[i], t2) == <span class="number">0</span>)</span><br><span class="line">                ans += i;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">strcmp</span>(b[i], t1) == <span class="number">0</span>)</span><br><span class="line">                ans += i * <span class="number">13</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1045 快速排序</title>
    <url>/posts/8390dc27.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="快速排序-PATB-1045"><a href="#快速排序-PATB-1045" class="headerlink" title="快速排序 (PATB-1045)"></a>快速排序 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805278589960192" target="_blank" rel="noopener">PATB-1045</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>著名的快速排序算法里有一个经典的划分过程：我们通常采用某种方法取一个元素作为主元，通过交换，把比主元小的元素放到它的左边，比主元大的元素放到它的右边。 给定划分后的 N 个互不相同的正整数的排列，请问有多少个元素可能是划分前选取的主元？</p><p>例如给定 $N = 5$, 排列是1、3、2、4、5。则：</p><ul><li>1 的左边没有元素，右边的元素都比它大，所以它可能是主元；</li><li>尽管 3 的左边元素都比它小，但其右边的 2 比它小，所以它不能是主元；</li><li>尽管 2 的右边元素都比它大，但其左边的 3 比它大，所以它不能是主元；</li><li>类似原因，4 和 5 都可能是主元。</li></ul><p>因此，有 3 个元素可能是主元。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在第 1 行中给出一个正整数 N（≤105）； 第 2 行是空格分隔的 N 个不同的正整数，每个数不超过 10^9。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>在第 1 行中输出有可能是主元的元素个数；在第 2 行中按递增顺序输出这些元素，其间以 1 个空格分隔，行首尾不得有多余空格。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="number">5</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">3</span> <span class="number">2</span> <span class="number">4</span> <span class="number">5</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="number">3</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">4</span> <span class="number">5</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> a[mxn], b[mxn];</span><br><span class="line"><span class="keyword">int</span> ans[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n; <span class="built_in">scanf</span>(<span class="string">"%d%"</span>, &amp;n);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]);</span><br><span class="line">        b[i] = a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    sort(b, b+n);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> mx = <span class="number">0</span>, num = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i]==b[i] &amp;&amp; b[i]&gt;mx)</span><br><span class="line">            ans[num++] = a[i];</span><br><span class="line">        mx = max(mx, a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, num);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;num; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(i) <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d"</span>, ans[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1046 划拳</title>
    <url>/posts/d4d6123.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="划拳-PATB-1046"><a href="#划拳-PATB-1046" class="headerlink" title="划拳 (PATB-1046)"></a>划拳 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805277847568384" target="_blank" rel="noopener">PATB-1046</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>划拳是古老中国酒文化的一个有趣的组成部分。酒桌上两人划拳的方法为：每人口中喊出一个数字，同时用手比划出一个数字。如果谁比划出的数字正好等于两人喊出的数字之和，谁就赢了，输家罚一杯酒。两人同赢或两人同输则继续下一轮，直到唯一的赢家出现。</p><p>下面给出甲、乙两人的划拳记录，请你统计他们最后分别喝了多少杯酒。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入第一行先给出一个正整数 N（≤100），随后 N 行，每行给出一轮划拳的记录，格式为：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">甲喊 甲划 乙喊 乙划</span><br></pre></td></tr></table></figure><p>其中<code>喊</code>是喊出的数字，<code>划</code>是划出的数字，均为不超过 100 的正整数（两只手一起划）。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>在一行中先后输出甲、乙两人喝酒的杯数，其间以一个空格分隔。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="number">5</span></span><br><span class="line"><span class="symbol">8 </span><span class="number">10</span> <span class="number">9</span> <span class="number">12</span></span><br><span class="line"><span class="symbol">5 </span><span class="number">10</span> <span class="number">5</span> <span class="number">10</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">8</span> <span class="number">5</span> <span class="number">12</span></span><br><span class="line"><span class="symbol">12 </span><span class="number">18</span> <span class="number">1</span> <span class="number">13</span></span><br><span class="line"><span class="symbol">4 </span><span class="number">16</span> <span class="number">12</span> <span class="number">15</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">1 </span><span class="number">2</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n; <span class="built_in">scanf</span>(<span class="string">"%d%"</span>, &amp;n);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> sa = <span class="number">0</span>, sb = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> a, b, c, d;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d %d %d"</span>, &amp;a, &amp;b, &amp;c, &amp;d);</span><br><span class="line">        <span class="keyword">if</span>(b == d) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">if</span>(b == a + c) sb++;</span><br><span class="line">        <span class="keyword">if</span>(d == a + c) sa++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>, sa, sb);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1047 编程团体赛</title>
    <url>/posts/3bfc5502.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="编程团体赛-PATB-1047"><a href="#编程团体赛-PATB-1047" class="headerlink" title="编程团体赛 (PATB-1047)"></a>编程团体赛 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805277163896832" target="_blank" rel="noopener">PATB-1047</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>编程团体赛的规则为：每个参赛队由若干队员组成；所有队员独立比赛；参赛队的成绩为所有队员的成绩和；成绩最高的队获胜。</p><p>现给定所有队员的比赛成绩，请你编写程序找出冠军队。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入第一行给出一个正整数 N（≤10^4），即所有参赛队员总数。随后 N 行，每行给出一位队员的成绩，格式为：<code>队伍编号-队员编号 成绩</code>，其中<code>队伍编号</code>为 1 到 1000 的正整数，<code>队员编号</code>为 1 到 10 的正整数，<code>成绩</code>为 0 到 100 的整数。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>在一行中输出冠军队的编号和总成绩，其间以一个空格分隔。注意：题目保证冠军队是唯一的。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">6</span></span><br><span class="line"><span class="number">3</span><span class="number">-10</span> <span class="number">99</span></span><br><span class="line"><span class="number">11</span><span class="number">-5</span> <span class="number">87</span></span><br><span class="line"><span class="number">102</span><span class="number">-1</span> <span class="number">0</span></span><br><span class="line"><span class="number">102</span><span class="number">-3</span> <span class="number">100</span></span><br><span class="line"><span class="number">11</span><span class="number">-9</span> <span class="number">89</span></span><br><span class="line"><span class="number">3</span><span class="number">-2</span> <span class="number">61</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">11 </span><span class="number">176</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> a[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n; <span class="built_in">scanf</span>(<span class="string">"%d%"</span>, &amp;n);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x, y, z;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d-%d %d"</span>, &amp;x, &amp;y, &amp;z);</span><br><span class="line">        a[x] += z;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mx = <span class="number">0</span>, id = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">1000</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(mx &lt; a[i])</span><br><span class="line">        &#123;</span><br><span class="line">            mx = a[i];</span><br><span class="line">            id = i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>, id, mx);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1048 数字加密</title>
    <url>/posts/287ea3c0.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="数字加密-PATB-1048"><a href="#数字加密-PATB-1048" class="headerlink" title="数字加密 (PATB-1048)"></a>数字加密 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805276438282240" target="_blank" rel="noopener">PATB-1048</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>本题要求实现一种数字加密方法。首先固定一个加密用正整数 A，对任一正整数 B，将其每 1 位数字与 A 的对应位置上的数字进行以下运算：对奇数位，对应位的数字相加后对 13 取余——这里用 J 代表 10、Q 代表 11、K 代表 12；对偶数位，用 B 的数字减去 A 的数字，若结果为负数，则再加 10。这里令个位为第 1 位。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在一行中依次给出 A 和 B，均为不超过 100 位的正整数，其间以空格分隔。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>在一行中输出加密后的结果。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">1234567 </span><span class="number">368782971</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">3695</span>Q8118</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">char</span> s[mxn], t[mxn], ans[mxn];</span><br><span class="line"><span class="keyword">char</span> p[] = <span class="string">"0123456789JQK"</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s %s"</span>, s+<span class="number">1</span>, t+<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    s[<span class="number">0</span>] = t[<span class="number">0</span>] = <span class="string">'0'</span>;</span><br><span class="line">    <span class="keyword">int</span> n = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="built_in">strlen</span>(s+<span class="number">1</span>), j = <span class="built_in">strlen</span>(t+<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(i&gt;<span class="number">0</span> || j&gt;<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(f)</span><br><span class="line">            ans[n++] = p[(t[j]-<span class="string">'0'</span>+s[i]-<span class="string">'0'</span>)%<span class="number">13</span>];</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">int</span> x = t[j] - s[i];</span><br><span class="line">            ans[n++] = p[x&lt;<span class="number">0</span> ? x+<span class="number">10</span> : x];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(i) i--;</span><br><span class="line">        <span class="keyword">if</span>(j) j--;</span><br><span class="line">        f = !f;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=n<span class="number">-1</span>; i&gt;=<span class="number">0</span>; i--)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%c"</span>, ans[i]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1049 数列的片段和</title>
    <url>/posts/98a65450.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="数列的片段和-PATB-1049"><a href="#数列的片段和-PATB-1049" class="headerlink" title="数列的片段和 (PATB-1049)"></a>数列的片段和 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805275792359424" target="_blank" rel="noopener">PATB-1049</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>给定一个正数数列，我们可以从中截取任意的连续的几个数，称为片段。例如，给定数列 { 0.1, 0.2, 0.3, 0.4 }，我们有 (0.1) (0.1, 0.2) (0.1, 0.2, 0.3) (0.1, 0.2, 0.3, 0.4) (0.2) (0.2, 0.3) (0.2, 0.3, 0.4) (0.3) (0.3, 0.4) (0.4) 这 10 个片段。</p><p>给定正整数数列，求出全部片段包含的所有的数之和。如本例中 10 个片段总和是 0.1 + 0.3 + 0.6 + 1.0 + 0.2 + 0.5 + 0.9 + 0.3 + 0.7 + 0.4 = 5.0。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入第一行给出一个不超过 10^5 的正整数 N，表示数列中数的个数，第二行给出 N 个不超过 1.0 的正数，是数列中的数，其间以空格分隔。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>在一行中输出该序列所有片段包含的数之和，精确到小数点后 2 位。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">0.1</span> <span class="number">0.2</span> <span class="number">0.3</span> <span class="number">0.4</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">5.00</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    </span><br><span class="line">    LL ans = <span class="number">0</span>; DB m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lf"</span>, &amp;m);</span><br><span class="line">        ans += (LL)(m * (i+<span class="number">1</span>) * (n-i) * <span class="number">1000.0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%.2lf\n"</span>, ans / <span class="number">1000.0</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1050 螺旋矩阵</title>
    <url>/posts/4c1de972.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="螺旋矩阵-PATB-1050"><a href="#螺旋矩阵-PATB-1050" class="headerlink" title="螺旋矩阵 (PATB-1050)"></a>螺旋矩阵 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805275146436608" target="_blank" rel="noopener">PATB-1050</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>本题要求将给定的 N 个正整数按非递增的顺序，填入“螺旋矩阵”。所谓“螺旋矩阵”，是指从左上角第 1 个格子开始，按顺时针螺旋方向填充。要求矩阵的规模为 m 行 n 列，满足条件：m×n 等于 N；m≥n；且 m−n 取所有可能值中的最小值。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在第 1 行中给出一个正整数 N，第 2 行给出 N 个待填充的正整数。所有数字不超过 10^4，相邻数字以空格分隔。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>输出螺旋矩阵。每行 n 个数字，共 m 行。相邻数字以 1 个空格分隔，行末不得有多余空格。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">12</span></span><br><span class="line"><span class="number">37</span> <span class="number">76</span> <span class="number">20</span> <span class="number">98</span> <span class="number">76</span> <span class="number">42</span> <span class="number">53</span> <span class="number">95</span> <span class="number">60</span> <span class="number">81</span> <span class="number">58</span> <span class="number">93</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">98 </span><span class="number">95</span> <span class="number">93</span></span><br><span class="line"><span class="symbol">42 </span><span class="number">37</span> <span class="number">81</span></span><br><span class="line"><span class="symbol">53 </span><span class="number">20</span> <span class="number">76</span></span><br><span class="line"><span class="symbol">58 </span><span class="number">60</span> <span class="number">76</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> a[mxn], ans[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;t);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> n, m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="built_in">sqrt</span>(t); i; i--)&#123;</span><br><span class="line">        <span class="keyword">if</span>(t%i == <span class="number">0</span>)&#123;</span><br><span class="line">            m = i;</span><br><span class="line">            n = t/m;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;t; i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]);</span><br><span class="line">    sort(a, a+t);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> x=<span class="number">0</span>, y=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(t--; t&gt;=<span class="number">0</span>;)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span>(y+<span class="number">1</span>&lt;m &amp;&amp; *(ans+x*m+y+<span class="number">1</span>) == <span class="number">0</span>)&#123;</span><br><span class="line">            ++y; *(ans+x*m+y) = a[t--];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(x+<span class="number">1</span>&lt;n &amp;&amp; *(ans+(x+<span class="number">1</span>)*m+y) == <span class="number">0</span>)&#123;</span><br><span class="line">            ++x; *(ans+x*m+y) = a[t--];</span><br><span class="line">        &#125;</span><br><span class="line">            </span><br><span class="line">        <span class="keyword">while</span>(y<span class="number">-1</span>&gt;=<span class="number">0</span> &amp;&amp; *(ans+x*m+y<span class="number">-1</span>) == <span class="number">0</span>)&#123;</span><br><span class="line">            --y; *(ans+x*m+y) = a[t--];</span><br><span class="line">        &#125;</span><br><span class="line">            </span><br><span class="line">        <span class="keyword">while</span>(x<span class="number">-1</span>&gt;=<span class="number">0</span> &amp;&amp; *(ans+(x<span class="number">-1</span>)*m+y) == <span class="number">0</span>)&#123;</span><br><span class="line">            --x; *(ans+x*m+y) = a[t--];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;m; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(j) <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d"</span>, *(ans+i*m+j));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1051 复数乘法</title>
    <url>/posts/21d6d8b4.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="复数乘法-PATB-1051"><a href="#复数乘法-PATB-1051" class="headerlink" title="复数乘法 (PATB-1051)"></a>复数乘法 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805274496319488" target="_blank" rel="noopener">PATB-1051</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>复数可以写成 (A+Bi) 的常规形式，其中 A 是实部，B 是虚部，i 是虚数单位，满足 i^2=−1；也可以写成极坐标下的指数形式 (R×e^(Pi))，其中 R 是复数模，P 是辐角，i 是虚数单位，其等价于三角形式 R(cos(P)+isin(P))。</p><p>现给定两个复数的 R 和 P，要求输出两数乘积的常规形式。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在一行中依次给出两个复数的 R1, P1, R2, P2，数字间以空格分隔。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>在一行中按照 <code>A+Bi</code> 的格式输出两数乘积的常规形式，实部和虚部均保留 2 位小数。注意：如果 <code>B</code> 是负数，则应该写成 <code>A-|B|i</code> 的形式。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">2.3</span> <span class="number">3.5</span> <span class="number">5.2</span> <span class="number">0.4</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">-8.68</span><span class="number">-8.23</span>i</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Sg(u) ((u) &gt; eps ? 1 : ((u) &lt; -eps ? -1 : 0))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Abs(u) (Sg(u) &gt;= 0 ? (u) : -(u))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Ze(u) (!Sg(u))</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">double</span> DB;</span><br><span class="line"><span class="keyword">const</span> DB eps = <span class="number">5e-3</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DB r1, p1, r2, p2;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lf %lf %lf %lf"</span>, &amp;r1, &amp;p1, &amp;r2, &amp;p2);</span><br><span class="line"></span><br><span class="line">    DB a = r1*<span class="built_in">cos</span>(p1) * r2*<span class="built_in">cos</span>(p2) - r1*<span class="built_in">sin</span>(p1) * r2*<span class="built_in">sin</span>(p2);</span><br><span class="line">    DB b = r1*<span class="built_in">cos</span>(p1) * r2*<span class="built_in">sin</span>(p2) + r2*<span class="built_in">cos</span>(p2) * r1*<span class="built_in">sin</span>(p1);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(Ze(a))</span><br><span class="line">        a = <span class="number">0.0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%.2lf"</span>, a);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(Ze(b))</span><br><span class="line">        b = <span class="number">0.0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(Sg(b) &gt;= <span class="number">0</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"+"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%.2lfi\n"</span>, b);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1052 卖个萌</title>
    <url>/posts/92f4ecb6.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="卖个萌-PATB-1052"><a href="#卖个萌-PATB-1052" class="headerlink" title="卖个萌 (PATB-1052)"></a>卖个萌 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805273883951104" target="_blank" rel="noopener">PATB-1052</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>萌萌哒表情符号通常由“手”、“眼”、“口”三个主要部分组成。简单起见，我们假设一个表情符号是按下列格式输出的：</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">[<span class="string">左手</span>](<span class="link">[左眼][口][右眼]</span>)[<span class="string">右手</span>]</span><br></pre></td></tr></table></figure><p>现给出可选用的符号集合，请你按用户的要求输出表情。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入首先在前三行顺序对应给出手、眼、口的可选符号集。每个符号括在一对方括号 <code>[]</code>内。题目保证每个集合都至少有一个符号，并不超过 10 个符号；每个符号包含 1 到 4 个非空字符。</p><p>之后一行给出一个正整数 K，为用户请求的个数。随后 K 行，每行给出一个用户的符号选择，顺序为左手、左眼、口、右眼、右手——这里只给出符号在相应集合中的序号（从 1 开始），数字间以空格分隔。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>对每个用户请求，在一行中输出生成的表情。若用户选择的序号不存在，则输出 <code>Are you kidding me? @\/@</code>。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">[<span class="string">╮</span>][<span class="symbol">╭</span>][<span class="string">o</span>][<span class="symbol">~\</span>][<span class="string">/~</span>]  [<span class="string">&lt;</span>][<span class="symbol">&gt;</span>]</span><br><span class="line"> [<span class="string">╯</span>][<span class="symbol">╰</span>][<span class="string">^</span>][<span class="symbol">-</span>][<span class="string">=</span>][<span class="symbol">&gt;</span>][<span class="string">&lt;</span>][<span class="symbol">@</span>][<span class="string">⊙</span>]</span><br><span class="line">[<span class="string">Д</span>][<span class="symbol">▽</span>][<span class="string">_</span>][<span class="symbol">ε</span>][<span class="string">^</span>]  ...</span><br><span class="line">4</span><br><span class="line">1 1 2 2 2</span><br><span class="line">6 8 1 5 5</span><br><span class="line">3 3 4 3 3</span><br><span class="line">2 10 3 9 3</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight gauss"><table><tr><td class="code"><pre><span class="line">╮(╯▽╰)╭</span><br><span class="line">&lt;(<span class="comment">@Д=)/~</span></span><br><span class="line"><span class="comment">o(^ε^)o</span></span><br><span class="line"><span class="comment">Are you kidding me? @</span>\/<span class="comment">@</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">10</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">char</span> a[mxn][<span class="number">20</span>], b[mxn][<span class="number">20</span>], c[mxn][<span class="number">20</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> an=<span class="number">0</span>, bn=<span class="number">0</span>, cn=<span class="number">0</span>, ch;</span><br><span class="line">    <span class="keyword">while</span>((ch = getchar()) != <span class="string">'\n'</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(ch == <span class="string">'['</span>)</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%[^]]"</span>, a[++an]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>((ch = getchar()) != <span class="string">'\n'</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(ch == <span class="string">'['</span>)</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%[^]]"</span>, b[++bn]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>((ch = getchar()) != <span class="string">'\n'</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(ch == <span class="string">'['</span>)</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%[^]]"</span>, c[++cn]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> k, t[<span class="number">5</span>];</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;k);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(k--)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">5</span>; i++)</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;t[i]);</span><br><span class="line">        <span class="keyword">int</span> f = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(t[<span class="number">0</span>]&lt;<span class="number">1</span> || t[<span class="number">0</span>]&gt;an) f = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(t[<span class="number">1</span>]&lt;<span class="number">1</span> || t[<span class="number">1</span>]&gt;bn) f = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(t[<span class="number">2</span>]&lt;<span class="number">1</span> || t[<span class="number">2</span>]&gt;cn) f = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(t[<span class="number">3</span>]&lt;<span class="number">1</span> || t[<span class="number">3</span>]&gt;bn) f = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(t[<span class="number">4</span>]&lt;<span class="number">1</span> || t[<span class="number">4</span>]&gt;an) f = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(f)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Are you kidding me? @\\/@\n"</span>);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%s(%s%s%s)%s\n"</span>, a[t[<span class="number">0</span>]], b[t[<span class="number">1</span>]], c[t[<span class="number">2</span>]], b[t[<span class="number">3</span>]], a[t[<span class="number">4</span>]]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1053 住房空置率</title>
    <url>/posts/7e720a5c.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="住房空置率-PATB-1053"><a href="#住房空置率-PATB-1053" class="headerlink" title="住房空置率 (PATB-1053)"></a>住房空置率 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805273284165632" target="_blank" rel="noopener">PATB-1053</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>在不打扰居民的前提下，统计住房空置率的一种方法是根据每户用电量的连续变化规律进行判断。判断方法如下：</p><ul><li>在观察期内，若存在超过一半的日子用电量低于某给定的阈值 e，则该住房为“可能空置”；</li><li>若观察期超过某给定阈值 D 天，且满足上一个条件，则该住房为“空置”。</li></ul><p>现给定某居民区的住户用电量数据，请你统计“可能空置”的比率和“空置”比率，即以上两种状态的住房占居民区住房总套数的百分比。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入第一行给出正整数 N（≤1000），为居民区住房总套数；正实数 e，即低电量阈值；正整数 D，即观察期阈值。随后 N 行，每行按以下格式给出一套住房的用电量数据：</p><p>K E1 E2 … EK</p><p>其中 K 为观察的天数，Ei 为第 i 天的用电量。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>在一行中输出“可能空置”的比率和“空置”比率的百分比值，其间以一个空格分隔，保留小数点后 1 位。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">5 </span><span class="number">0.5</span> <span class="number">10</span></span><br><span class="line"><span class="symbol">6 </span><span class="number">0.3</span> <span class="number">0.4</span> <span class="number">0.5</span> <span class="number">0.2</span> <span class="number">0.8</span> <span class="number">0.6</span></span><br><span class="line"><span class="symbol">10 </span><span class="number">0.0</span> <span class="number">0.1</span> <span class="number">0.2</span> <span class="number">0.3</span> <span class="number">0.0</span> <span class="number">0.8</span> <span class="number">0.6</span> <span class="number">0.7</span> <span class="number">0.0</span> <span class="number">0.5</span></span><br><span class="line"><span class="symbol">5 </span><span class="number">0.4</span> <span class="number">0.3</span> <span class="number">0.5</span> <span class="number">0.1</span> <span class="number">0.7</span></span><br><span class="line"><span class="symbol">11 </span><span class="number">0.1</span> <span class="number">0.1</span> <span class="number">0.1</span> <span class="number">0.1</span> <span class="number">0.1</span> <span class="number">0.1</span> <span class="number">0.1</span> <span class="number">0.1</span> <span class="number">0.1</span> <span class="number">0.1</span> <span class="number">0.1</span></span><br><span class="line"><span class="symbol">11 </span><span class="number">2</span> <span class="number">2</span> <span class="number">2</span> <span class="number">1</span> <span class="number">1</span> <span class="number">0.1</span> <span class="number">1</span> <span class="number">0.1</span> <span class="number">0.1</span> <span class="number">0.1</span> <span class="number">0.1</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">40.0</span>% <span class="number">20.0</span>%</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>样例解释：第2、3户为“可能空置”，第4户为“空置”，其他户不是空置。</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, d; DB e;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %lf %d"</span>, &amp;n, &amp;e, &amp;d);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> x=<span class="number">0</span>, y=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> m, num=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;m);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;m; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            DB t; <span class="built_in">scanf</span>(<span class="string">"%lf"</span>, &amp;t);</span><br><span class="line">            <span class="keyword">if</span>(t&lt;e) num++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(num*<span class="number">2</span>&gt;m)</span><br><span class="line">            <span class="keyword">if</span>(m&gt;d) y++;</span><br><span class="line">            <span class="keyword">else</span> x++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%.1lf%% %.1lf%%\n"</span>, <span class="number">100.0</span>*x/n, <span class="number">100.0</span>*y/n);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1054 求平均值</title>
    <url>/posts/190558c1.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="求平均值-PATB-1054"><a href="#求平均值-PATB-1054" class="headerlink" title="求平均值 (PATB-1054)"></a>求平均值 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805272659214336" target="_blank" rel="noopener">PATB-1054</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>本题的基本要求非常简单：给定 N 个实数，计算它们的平均值。但复杂的是有些输入数据可能是非法的。一个“合法”的输入是 [−1000,1000] 区间内的实数，并且最多精确到小数点后 2 位。当你计算平均值的时候，不能把那些非法的数据算在内。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入第一行给出正整数 N（≤100）。随后一行给出 N 个实数，数字间以一个空格分隔。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>对每个非法输入，在一行中输出 <code>ERROR: X is not a legal number</code>，其中 <code>X</code> 是输入。最后在一行中输出结果：<code>The average of K numbers is Y</code>，其中 <code>K</code> 是合法输入的个数，<code>Y</code> 是它们的平均值，精确到小数点后 2 位。如果平均值无法计算，则用 <code>Undefined</code> 替换 <code>Y</code>。如果 <code>K</code> 为 1，则输出 <code>The average of 1 number is Y</code>。</p></blockquote><h2 id="样例输入1"><a href="#样例输入1" class="headerlink" title="样例输入1"></a>样例输入1</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span></span><br><span class="line"><span class="symbol">5 </span>-<span class="number">3.2</span> aaa <span class="number">9999</span> <span class="number">2.3.4</span> <span class="number">7.123</span> <span class="number">2.35</span></span><br></pre></td></tr></table></figure><h2 id="样例输出1"><a href="#样例输出1" class="headerlink" title="样例输出1"></a>样例输出1</h2><figure class="highlight subunit"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ERROR: </span>aaa is not a legal number</span><br><span class="line"><span class="keyword">ERROR: </span>9999 is not a legal number</span><br><span class="line"><span class="keyword">ERROR: </span>2.3.4 is not a legal number</span><br><span class="line"><span class="keyword">ERROR: </span>7.123 is not a legal number</span><br><span class="line">The average of 3 numbers is 1.38</span><br></pre></td></tr></table></figure><h2 id="样例输入2"><a href="#样例输入2" class="headerlink" title="样例输入2"></a>样例输入2</h2><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">2</span><br><span class="line">aaa -9999</span><br></pre></td></tr></table></figure><h2 id="样例输出2"><a href="#样例输出2" class="headerlink" title="样例输出2"></a>样例输出2</h2><figure class="highlight subunit"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ERROR: </span>aaa is not a legal number</span><br><span class="line"><span class="keyword">ERROR: </span><span class="string">-9999</span> is not a legal number</span><br><span class="line">The average of 0 numbers is Undefined</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">double</span> DB;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">char</span> s[mxn], t[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> num=<span class="number">0</span>; DB sum=<span class="number">0</span>, x;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> f = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>, s);</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">sscanf</span>(s, <span class="string">"%lf"</span>, &amp;x) == <span class="number">0</span>)</span><br><span class="line">            f = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">sprintf</span>(t, <span class="string">"%.2lf"</span>, x);</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">strlen</span>(s)&gt;<span class="built_in">strlen</span>(t) || x&lt;<span class="number">-1000</span> || x&gt;<span class="number">1000</span>)</span><br><span class="line">                f = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                sum += x, num++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(f)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"ERROR: %s is not a legal number\n"</span>, s);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(num&gt;<span class="number">1</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"The average of %d numbers is %.2lf\n"</span>, num, sum/num);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(num==<span class="number">1</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"The average of 1 number is %.2lf\n"</span>, sum);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"The average of 0 numbers is Undefined\n"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1055 集体照</title>
    <url>/posts/5567ce71.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="集体照-PATB-1055"><a href="#集体照-PATB-1055" class="headerlink" title="集体照 (PATB-1055)"></a>集体照 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805272021680128" target="_blank" rel="noopener">PATB-1055</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>拍集体照时队形很重要，这里对给定的 N 个人 K 排的队形设计排队规则如下：</p><ul><li>每排人数为 N/K（向下取整），多出来的人全部站在最后一排；</li><li>后排所有人的个子都不比前排任何人矮；</li><li>每排中最高者站中间（中间位置为 m/2+1，其中 m 为该排人数，除法向下取整）；</li><li>每排其他人以中间人为轴，按身高非增序，先右后左交替入队站在中间人的两侧（例如5人身高为190、188、186、175、170，则队形为175、188、190、186、170。这里假设你面对拍照者，所以你的左边是中间人的右边）；</li><li>若多人身高相同，则按名字的字典序升序排列。这里保证无重名。</li></ul><p>现给定一组拍照人，请编写程序输出他们的队形。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>每个输入包含 1 个测试用例。每个测试用例第 1 行给出两个正整数 N（≤10^4，总人数）和 K（≤10，总排数）。随后 N 行，每行给出一个人的名字（不包含空格、长度不超过 8 个英文字母）和身高（[30, 300] 区间内的整数）。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>输出拍照的队形。即K排人名，其间以空格分隔，行末不得有多余空格。注意：假设你面对拍照者，后排的人输出在上方，前排输出在下方。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">10</span> <span class="number">3</span></span><br><span class="line">Tom <span class="number">188</span></span><br><span class="line">Mike <span class="number">170</span></span><br><span class="line">Eva <span class="number">168</span></span><br><span class="line">Tim <span class="number">160</span></span><br><span class="line">Joe <span class="number">190</span></span><br><span class="line">Ann <span class="number">168</span></span><br><span class="line">Bob <span class="number">175</span></span><br><span class="line">Nick <span class="number">186</span></span><br><span class="line">Amy <span class="number">160</span></span><br><span class="line">John <span class="number">159</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">Bob</span> <span class="string">Tom Joe Nick</span></span><br><span class="line"><span class="attr">Ann</span> <span class="string">Mike Eva</span></span><br><span class="line"><span class="attr">Tim</span> <span class="string">Amy John</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">P</span>&#123;</span></span><br><span class="line">    <span class="keyword">char</span> s[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">&#125;a[mxn];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> li[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(P a, P b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a.t == b.t)</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">strcmp</span>(a.s, b.s) &lt; <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> a.t &gt; b.t;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, k;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;n, &amp;k);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s %d"</span>, a[i].s, &amp;a[i].t);</span><br><span class="line">    sort(a, a+n, cmp);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> id = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;k; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> m = n / k, f = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(!i) m += n % k;</span><br><span class="line">        <span class="keyword">int</span> now = m/<span class="number">2</span> + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=m; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            li[now] = id++;</span><br><span class="line">            f = -f;</span><br><span class="line">            now += f*j;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=m; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(j&gt;<span class="number">1</span>) <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%s"</span>, a[li[j]].s);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1056 组合数的和</title>
    <url>/posts/c208f749.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:40 GMT+0800 (GMT+08:00) --><h1 id="组合数的和-PATB-1056"><a href="#组合数的和-PATB-1056" class="headerlink" title="组合数的和 (PATB-1056)"></a>组合数的和 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805271455449088" target="_blank" rel="noopener">PATB-1056</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>给定 N 个非 0 的个位数字，用其中任意 2 个数字都可以组合成 1 个 2 位的数字。要求所有可能组合出来的 2 位数字的和。例如给定 2、5、8，则可以组合出：25、28、52、58、82、85，它们的和为330。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在一行中先给出 N（1 &lt; N &lt; 10），随后给出 N 个不同的非 0 个位数字。数字间以空格分隔。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>输出所有可能组合出来的2位数字的和。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">3 </span><span class="number">2</span> <span class="number">8</span> <span class="number">5</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">330</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>, m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;m);</span><br><span class="line">        ans += m * (n<span class="number">-1</span>) * <span class="number">11</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1057 数零壹</title>
    <url>/posts/532dc664.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="数零壹-PATB-1057"><a href="#数零壹-PATB-1057" class="headerlink" title="数零壹 (PATB-1057)"></a>数零壹 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805270914383872" target="_blank" rel="noopener">PATB-1057</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>给定一串长度不超过 10^5 的字符串，本题要求你将其中所有英文字母的序号（字母 a-z 对应序号 1-26，不分大小写）相加，得到整数 N，然后再分析一下 N 的二进制表示中有多少 0、多少 1。例如给定字符串 <code>PAT (Basic)</code>，其字母序号之和为：16+1+20+2+1+19+9+3=71，而 71 的二进制是 1000111，即有 3 个 0、4 个 1。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在一行中给出长度不超过 10^5、以回车结束的字符串。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>在一行中先后输出 0 的个数和 1 的个数，其间以空格分隔。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight lisp"><table><tr><td class="code"><pre><span class="line">PAT (<span class="name">Basic</span>)</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">3 </span><span class="number">4</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">char</span> s[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    fgets(s, mxn, <span class="built_in">stdin</span>);</span><br><span class="line">    <span class="keyword">int</span> len = <span class="built_in">strlen</span>(s);</span><br><span class="line"></span><br><span class="line">    LL sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;len; i++)</span><br><span class="line">        sum += <span class="built_in">isalpha</span>(s[i]) ? (<span class="built_in">tolower</span>(s[i])-<span class="string">'a'</span>+<span class="number">1</span>) : <span class="number">0</span>;</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">int</span> a=<span class="number">0</span>, b=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(sum)&#123;</span><br><span class="line">        <span class="keyword">if</span>(sum &amp; <span class="number">1</span>)</span><br><span class="line">            b++;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            a++;</span><br><span class="line">        sum &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>, a, b);    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1058 选择题</title>
    <url>/posts/d3689858.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="选择题-PATB-1058"><a href="#选择题-PATB-1058" class="headerlink" title="选择题 (PATB-1058)"></a>选择题 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805270356541440" target="_blank" rel="noopener">PATB-1058</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>批改多选题是比较麻烦的事情，本题就请你写个程序帮助老师批改多选题，并且指出哪道题错的人最多。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在第一行给出两个正整数 N（≤ 1000）和 M（≤ 100），分别是学生人数和多选题的个数。随后 M 行，每行顺次给出一道题的满分值（不超过 5 的正整数）、选项个数（不少于 2 且不超过 5 的正整数）、正确选项个数（不超过选项个数的正整数）、所有正确选项。注意每题的选项从小写英文字母 a 开始顺次排列。各项间以 1 个空格分隔。最后 N 行，每行给出一个学生的答题情况，其每题答案格式为 <code>(选中的选项个数 选项1 ……)</code>，按题目顺序给出。注意：题目保证学生的答题情况是合法的，即不存在选中的选项数超过实际选项数的情况。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>按照输入的顺序给出每个学生的得分，每个分数占一行。注意判题时只有选择全部正确才能得到该题的分数。最后一行输出错得最多的题目的错误次数和编号（题目按照输入的顺序从 1 开始编号）。如果有并列，则按编号递增顺序输出。数字间用空格分隔，行首尾不得有多余空格。如果所有题目都没有人错，则在最后一行输出 <code>Too simple</code>。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">3</span> <span class="number">4</span> </span><br><span class="line"><span class="number">3</span> <span class="number">4</span> <span class="number">2</span> a c</span><br><span class="line"><span class="number">2</span> <span class="number">5</span> <span class="number">1</span> b</span><br><span class="line"><span class="number">5</span> <span class="number">3</span> <span class="number">2</span> b c</span><br><span class="line"><span class="number">1</span> <span class="number">5</span> <span class="number">4</span> a b d e</span><br><span class="line">(<span class="number">2</span> a c) (<span class="number">2</span> b d) (<span class="number">2</span> a c) (<span class="number">3</span> a b e)</span><br><span class="line">(<span class="number">2</span> a c) (<span class="number">1</span> b) (<span class="number">2</span> a b) (<span class="number">4</span> a b d e)</span><br><span class="line">(<span class="number">2</span> b d) (<span class="number">1</span> e) (<span class="number">2</span> b c) (<span class="number">4</span> a b c d)</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">6</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">2</span> <span class="number">3</span> <span class="number">4</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">P</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> s, t;</span><br><span class="line">&#125;a[mxn];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> p[] = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">8</span>, <span class="number">16</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> err[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, m;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;n, &amp;m);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> x; <span class="keyword">char</span> ch; </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %*d %d"</span>, &amp;a[i].s, &amp;x);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;x; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">" %c"</span>, &amp;ch);</span><br><span class="line">            a[i].t += p[ch-<span class="string">'a'</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>, ans = <span class="number">0</span>, num = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%c"</span>, &amp;ch) &amp;&amp; ch != <span class="string">'\n'</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(ch == <span class="string">')'</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(ans==a[++num].t)</span><br><span class="line">                    sum += a[num].s;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    err[num]++;</span><br><span class="line">                ans = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">isalpha</span>(ch)) ans += p[ch-<span class="string">'a'</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, sum);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> mx = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++)</span><br><span class="line">        <span class="keyword">if</span>(mx &lt; err[i]) mx = err[i];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(mx == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Too simple\n"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>, mx);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++)</span><br><span class="line">        <span class="keyword">if</span>(mx == err[i]) <span class="built_in">printf</span>(<span class="string">" %d"</span>, i);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1059 C语言竞赛</title>
    <url>/posts/d2e1e93f.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="C语言竞赛-PATB-1059"><a href="#C语言竞赛-PATB-1059" class="headerlink" title="C语言竞赛 (PATB-1059)"></a>C语言竞赛 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805269828059136" target="_blank" rel="noopener">PATB-1059</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>C 语言竞赛是浙江大学计算机学院主持的一个欢乐的竞赛。既然竞赛主旨是为了好玩，颁奖规则也就制定得很滑稽：</p><ul><li>0、冠军将赢得一份“神秘大奖”（比如很巨大的一本学生研究论文集……）。</li><li>1、排名为素数的学生将赢得最好的奖品 —— 小黄人玩偶！</li><li>2、其他人将得到巧克力。</li></ul><p>给定比赛的最终排名以及一系列参赛者的 ID，你要给出这些参赛者应该获得的奖品。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入第一行给出一个正整数 N（≤10^4），是参赛者人数。随后 N 行给出最终排名，每行按排名顺序给出一位参赛者的 ID（4 位数字组成）。接下来给出一个正整数 K 以及 K 个需要查询的 ID。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>对每个要查询的 ID，在一行中输出 <code>ID: 奖品</code>，其中奖品或者是 <code>Mystery Award</code>（神秘大奖）、或者是 <code>Minion</code>（小黄人）、或者是 <code>Chocolate</code>（巧克力）。如果所查 ID 根本不在排名里，打印 <code>Are you kidding?</code>（耍我呢？）。如果该 ID 已经查过了（即奖品已经领过了），打印 <code>ID: Checked</code>（不能多吃多占）。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">6</span></span><br><span class="line"><span class="number">1111</span></span><br><span class="line"><span class="number">6666</span></span><br><span class="line"><span class="number">8888</span></span><br><span class="line"><span class="number">1234</span></span><br><span class="line"><span class="number">5555</span></span><br><span class="line"><span class="number">0001</span></span><br><span class="line"><span class="number">6</span></span><br><span class="line"><span class="number">8888</span></span><br><span class="line"><span class="number">0001</span></span><br><span class="line"><span class="number">1111</span></span><br><span class="line"><span class="number">2222</span></span><br><span class="line"><span class="number">8888</span></span><br><span class="line"><span class="number">2222</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">8888</span>: Minion</span><br><span class="line"><span class="number">0001</span>: Chocolate</span><br><span class="line"><span class="number">1111</span>: Mystery Award</span><br><span class="line"><span class="number">2222</span>: Are you kidding?</span><br><span class="line"><span class="number">8888</span>: Checked</span><br><span class="line"><span class="number">2222</span>: Are you kidding?</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> a[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isPrime</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (n &lt; <span class="number">2</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">2</span> || n == <span class="number">3</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (n % <span class="number">6</span> != <span class="number">1</span> &amp;&amp; n % <span class="number">6</span> != <span class="number">5</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> m = <span class="built_in">sqrt</span>(n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">5</span>; i &lt;= m; i += <span class="number">6</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (n % i == <span class="number">0</span> || n % (i + <span class="number">2</span>) == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">memset</span>(a, <span class="number">-1</span>, <span class="keyword">sizeof</span> a);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;x);</span><br><span class="line">        a[x] = i;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> m; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;x);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%04d: "</span>, x);</span><br><span class="line">        <span class="keyword">if</span>(a[x] == <span class="number">-1</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Are you kidding?\n"</span>);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(a[x] == <span class="number">-2</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Checked\n"</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(a[x] == <span class="number">1</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Mystery Award\n"</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(isPrime(a[x]))</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Minion\n"</span>);</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Chocolate\n"</span>);</span><br><span class="line">        </span><br><span class="line">        a[x] = <span class="number">-2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>数论</category>
        <category>素数</category>
        <category>素数判断</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
        <tag>素数</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1060 爱丁顿数</title>
    <url>/posts/a4764c1c.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="爱丁顿数-PATB-1060"><a href="#爱丁顿数-PATB-1060" class="headerlink" title="爱丁顿数 (PATB-1060)"></a>爱丁顿数 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805269312159744" target="_blank" rel="noopener">PATB-1060</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>英国天文学家爱丁顿很喜欢骑车。据说他为了炫耀自己的骑车功力，还定义了一个“爱丁顿数” E ，即满足有 E 天骑车超过 E 英里的最大整数 E。据说爱丁顿自己的 E 等于87。</p><p>现给定某人 N 天的骑车距离，请你算出对应的爱丁顿数 E（≤N）。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入第一行给出一个正整数 N (≤10^5)，即连续骑车的天数；第二行给出 N 个非负整数，代表每天的骑车距离。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>在一行中给出 N 天的爱丁顿数。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">10</span></span><br><span class="line"><span class="number">6</span> <span class="number">7</span> <span class="number">6</span> <span class="number">9</span> <span class="number">3</span> <span class="number">10</span> <span class="number">8</span> <span class="number">2</span> <span class="number">7</span> <span class="number">8</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">6</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> a[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a&gt;b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]);</span><br><span class="line">    sort(a+<span class="number">1</span>, a+n+<span class="number">1</span>, cmp);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i] &gt; i)</span><br><span class="line">            ans = max(ans, i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1061 判断题</title>
    <url>/posts/531200b4.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="判断题-PATB-1061"><a href="#判断题-PATB-1061" class="headerlink" title="判断题 (PATB-1061)"></a>判断题 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805268817231872" target="_blank" rel="noopener">PATB-1061</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>判断题的评判很简单，本题就要求你写个简单的程序帮助老师判题并统计学生们判断题的得分。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在第一行给出两个不超过 100 的正整数 N 和 M，分别是学生人数和判断题数量。第二行给出 M 个不超过 5 的正整数，是每道题的满分值。第三行给出每道题对应的正确答案，0 代表“非”，1 代表“是”。随后 N 行，每行给出一个学生的解答。数字间均以空格分隔。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>按照输入的顺序输出每个学生的得分，每个分数占一行。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">3 </span><span class="number">6</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">1</span> <span class="number">3</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span></span><br><span class="line"><span class="symbol">0 </span><span class="number">0</span> <span class="number">1</span> <span class="number">0</span> <span class="number">1</span> <span class="number">1</span></span><br><span class="line"><span class="symbol">0 </span><span class="number">1</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">0</span> <span class="number">1</span> <span class="number">0</span> <span class="number">1</span> <span class="number">0</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">13</span></span><br><span class="line"><span class="number">11</span></span><br><span class="line"><span class="number">12</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> p[mxn], a[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, m;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;n, &amp;m);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;m; i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;p[i]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;m; i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(n--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>, sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;m; i++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;ans);</span><br><span class="line">            sum += (a[i]==ans) ? p[i] : <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, sum);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1062 最简分数</title>
    <url>/posts/54bdaf69.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="最简分数-PATB-1062"><a href="#最简分数-PATB-1062" class="headerlink" title="最简分数 (PATB-1062)"></a>最简分数 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805268334886912" target="_blank" rel="noopener">PATB-1062</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>一个分数一般写成两个整数相除的形式：N/M，其中 M 不为0。最简分数是指分子和分母没有公约数的分数表示形式。</p><p>现给定两个不相等的正分数 N1/M1 和 N2/M2，要求你按从小到大的顺序列出它们之间分母为 K 的最简分数。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在一行中按 N/M 的格式给出两个正分数，随后是一个正整数分母 K，其间以空格分隔。题目保证给出的所有整数都不超过 1000。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>在一行中按 N/M 的格式列出两个给定分数之间分母为 K 的所有最简分数，按从小到大的顺序，其间以 1 个空格分隔。行首尾不得有多余空格。题目保证至少有 1 个输出。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span>/<span class="number">18</span> <span class="number">13</span>/<span class="number">20</span> <span class="number">12</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">5</span>/<span class="number">12</span> <span class="number">7</span>/<span class="number">12</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> b ? gcd(b, a%b) : a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n1, m1, n2, m2, k;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d/%d %d/%d %d"</span>, &amp;n1, &amp;m1, &amp;n2, &amp;m2, &amp;k);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> g = gcd(k, gcd(m1, m2));</span><br><span class="line">    <span class="keyword">int</span> l = m1 / g * m2 / g * k;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> b=l/m1*n1, e=l/m2*n2, nf=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(b &gt; e) swap(b, e);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=b+<span class="number">1</span>; i&lt;e; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(i%(l/k)==<span class="number">0</span> &amp;&amp; gcd(i/(l/k), k)==<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(nf)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">                nf = <span class="number">1</span>;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d/%d"</span>, i/(l/k), k);</span><br><span class="line">            i += l/k<span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1063 计算谱半径</title>
    <url>/posts/1374491f.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="计算谱半径-PATB-1063"><a href="#计算谱半径-PATB-1063" class="headerlink" title="计算谱半径 (PATB-1063)"></a>计算谱半径 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805267860930560" target="_blank" rel="noopener">PATB-1063</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>在数学中，矩阵的“谱半径”是指其特征值的模集合的上确界。换言之，对于给定的 n 个复数空间的特征值 { a1+b1i,⋯,an+bni }，它们的模为实部与虚部的平方和的开方，而“谱半径”就是最大模。</p><p>现在给定一些复数空间的特征值，请你计算并输出这些特征值的谱半径。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入第一行给出正整数 N（≤ 10 000）是输入的特征值的个数。随后 N 行，每行给出 1 个特征值的实部和虚部，其间以空格分隔。注意：题目保证实部和虚部均为绝对值不超过 1000 的整数。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>在一行中输出谱半径，四舍五入保留小数点后 2 位。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">0</span> <span class="number">1</span></span><br><span class="line"><span class="number">2</span> <span class="number">0</span></span><br><span class="line"><span class="number">-1</span> <span class="number">0</span></span><br><span class="line"><span class="number">3</span> <span class="number">3</span></span><br><span class="line"><span class="number">0</span> <span class="number">-3</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">4.24</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Sq(u) ((u) * (u))</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">double</span> DB;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"></span><br><span class="line">    DB mx = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> a, b;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;a, &amp;b);</span><br><span class="line">        mx = max(mx, <span class="built_in">sqrt</span>(Sq(a)+Sq(b)));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%.2lf\n"</span>, mx);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1064 朋友数</title>
    <url>/posts/1a1fdedb.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="朋友数-PATB-1064"><a href="#朋友数-PATB-1064" class="headerlink" title="朋友数 (PATB-1064)"></a>朋友数 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805267416334336" target="_blank" rel="noopener">PATB-1064</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>如果两个整数各位数字的和是一样的，则被称为是“朋友数”，而那个公共的和就是它们的“朋友证号”。例如 123 和 51 就是朋友数，因为 1+2+3 = 5+1 = 6，而 6 就是它们的朋友证号。给定一些整数，要求你统计一下它们中有多少个不同的朋友证号。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入第一行给出正整数 N。随后一行给出 N 个正整数，数字间以空格分隔。题目保证所有数字小于 10^4。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>首先第一行输出给定数字中不同的朋友证号的个数；随后一行按递增顺序输出这些朋友证号，数字间隔一个空格，且行末不得有多余空格。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="number">8</span></span><br><span class="line"><span class="symbol">123 </span><span class="number">899</span> <span class="number">51</span> <span class="number">998</span> <span class="number">27</span> <span class="number">33</span> <span class="number">36</span> <span class="number">12</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="number">4</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">6</span> <span class="number">9</span> <span class="number">26</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> a[<span class="number">40</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x, sum = <span class="number">0</span>; </span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;x);</span><br><span class="line">        <span class="keyword">while</span>(x)&#123;</span><br><span class="line">            sum += x % <span class="number">10</span>;</span><br><span class="line">            x /= <span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(a[sum] == <span class="number">0</span>)&#123;</span><br><span class="line">            a[sum]++;    </span><br><span class="line">            num++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, num);</span><br><span class="line">    <span class="keyword">int</span> nf = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">40</span>; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(nf)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                nf = <span class="number">1</span>;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d"</span>, i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1065 单身狗</title>
    <url>/posts/6008806d.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="单身狗-PATB-1065"><a href="#单身狗-PATB-1065" class="headerlink" title="单身狗 (PATB-1065)"></a>单身狗 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805266942377984" target="_blank" rel="noopener">PATB-1065</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>“单身狗”是中文对于单身人士的一种爱称。本题请你从上万人的大型派对中找出落单的客人，以便给予特殊关爱。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入第一行给出一个正整数 N（≤ 50 000），是已知夫妻/伴侣的对数；随后 N 行，每行给出一对夫妻/伴侣——为方便起见，每人对应一个 ID 号，为 5 位数字（从 00000 到 99999），ID 间以空格分隔；之后给出一个正整数 M（≤ 10 000），为参加派对的总人数；随后一行给出这 M 位客人的 ID，以空格分隔。题目保证无人重婚或脚踩两条船。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>首先第一行输出落单客人的总人数；随后第二行按 ID 递增顺序列出落单的客人。ID 间用 1 个空格分隔，行的首尾不得有多余空格。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="number">3</span></span><br><span class="line"><span class="symbol">11111 </span><span class="number">22222</span></span><br><span class="line"><span class="symbol">33333 </span><span class="number">44444</span></span><br><span class="line"><span class="symbol">55555 </span><span class="number">66666</span></span><br><span class="line"><span class="number">7</span></span><br><span class="line"><span class="symbol">55555 </span><span class="number">44444</span> <span class="number">10000</span> <span class="number">88888</span> <span class="number">22222</span> <span class="number">11111</span> <span class="number">23333</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="number">5</span></span><br><span class="line"><span class="symbol">10000 </span><span class="number">23333</span> <span class="number">44444</span> <span class="number">55555</span> <span class="number">88888</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> a[mxn], b[mxn], ans[mxn], vis[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    <span class="built_in">memset</span>(a, <span class="number">-1</span>, <span class="keyword">sizeof</span> a);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x, y; </span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;x, &amp;y);</span><br><span class="line">        a[x] = y;</span><br><span class="line">        a[y] = x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> m, num = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;m);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;b[i]);</span><br><span class="line">        vis[b[i]] = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[b[i]]==<span class="number">-1</span> || vis[a[b[i]]] == <span class="number">0</span>)</span><br><span class="line">            ans[num++] = b[i];</span><br><span class="line">    &#125;</span><br><span class="line">    sort(ans, ans+num);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, num);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;num; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(i) <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%05d"</span>, ans[i]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1066 图像过滤</title>
    <url>/posts/d9bdb71e.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="图像过滤-PATB-1066"><a href="#图像过滤-PATB-1066" class="headerlink" title="图像过滤 (PATB-1066)"></a>图像过滤 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805266514558976" target="_blank" rel="noopener">PATB-1066</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>图像过滤是把图像中不重要的像素都染成背景色，使得重要部分被凸显出来。现给定一幅黑白图像，要求你将灰度值位于某指定区间内的所有像素颜色都用一种指定的颜色替换。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在第一行给出一幅图像的分辨率，即两个正整数 M 和 N（0&lt;M,N≤500），另外是待过滤的灰度值区间端点 A 和 B（0≤A&lt;B≤255）、以及指定的替换灰度值。随后 M 行，每行给出 N 个像素点的灰度值，其间以空格分隔。所有灰度值都在 [0, 255] 区间内。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>输出按要求过滤后的图像。即输出 M 行，每行 N 个像素灰度值，每个灰度值占 3 位（例如黑色要显示为 <code>000</code>），其间以一个空格分隔。行首尾不得有多余空格。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">3 </span><span class="number">5</span> <span class="number">100</span> <span class="number">150</span> <span class="number">0</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">189</span> <span class="number">254</span> <span class="number">101</span> <span class="number">119</span></span><br><span class="line"><span class="symbol">150 </span><span class="number">233</span> <span class="number">151</span> <span class="number">99</span> <span class="number">100</span></span><br><span class="line"><span class="symbol">88 </span><span class="number">123</span> <span class="number">149</span> <span class="number">0</span> <span class="number">255</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">003 </span><span class="number">189</span> <span class="number">254</span> <span class="number">000</span> <span class="number">000</span></span><br><span class="line"><span class="symbol">000 </span><span class="number">233</span> <span class="number">151</span> <span class="number">099</span> <span class="number">000</span></span><br><span class="line"><span class="symbol">088 </span><span class="number">000</span> <span class="number">000</span> <span class="number">000</span> <span class="number">255</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, m, l, r, x; </span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d %d %d %d"</span>, &amp;n, &amp;m, &amp;l, &amp;r, &amp;x);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;m; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> t; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;t);</span><br><span class="line">            <span class="keyword">if</span>(j) <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">            <span class="keyword">if</span>(l&lt;=t &amp;&amp; t&lt;=r)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%03d"</span>, x);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%03d"</span>, t);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1067 试密码</title>
    <url>/posts/b61a8f27.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="试密码-PATB-1067"><a href="#试密码-PATB-1067" class="headerlink" title="试密码 (PATB-1067)"></a>试密码 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805266007048192" target="_blank" rel="noopener">PATB-1067</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>当你试图登录某个系统却忘了密码时，系统一般只会允许你尝试有限多次，当超出允许次数时，账号就会被锁死。本题就请你实现这个小功能。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在第一行给出一个密码（长度不超过 20 的、不包含空格、Tab、回车的非空字符串）和一个正整数 N（≤ 10），分别是正确的密码和系统允许尝试的次数。随后每行给出一个以回车结束的非空字符串，是用户尝试输入的密码。输入保证至少有一次尝试。当读到一行只有单个 # 字符时，输入结束，并且这一行不是用户的输入。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>对用户的每个输入，如果是正确的密码且尝试次数不超过 N，则在一行中输出 <code>Welcome in</code>，并结束程序；如果是错误的，则在一行中按格式输出 <code>Wrong password: 用户输入的错误密码</code>；当错误尝试达到 N 次时，再输出一行 <code>Account locked</code>，并结束程序。</p></blockquote><h2 id="样例输入1"><a href="#样例输入1" class="headerlink" title="样例输入1"></a>样例输入1</h2><figure class="highlight perl"><table><tr><td class="code"><pre><span class="line">Correct%pw <span class="number">3</span></span><br><span class="line">correct%pw</span><br><span class="line">Correct@PW</span><br><span class="line">whatisthepassword!</span><br><span class="line">Correct%pw</span><br><span class="line"><span class="comment">#</span></span><br></pre></td></tr></table></figure><h2 id="样例输出1"><a href="#样例输出1" class="headerlink" title="样例输出1"></a>样例输出1</h2><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">Wrong <span class="string">password:</span> correct%pw</span><br><span class="line">Wrong <span class="string">password:</span> Correct<span class="meta">@PW</span></span><br><span class="line">Wrong <span class="string">password:</span> whatisthepassword!</span><br><span class="line">Account locked</span><br></pre></td></tr></table></figure><h2 id="样例输入2"><a href="#样例输入2" class="headerlink" title="样例输入2"></a>样例输入2</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="symbol">cool@</span>gplt <span class="number">3</span></span><br><span class="line"><span class="symbol">coolman@</span>gplt</span><br><span class="line"><span class="symbol">coollady@</span>gplt</span><br><span class="line"><span class="symbol">cool@</span>gplt</span><br><span class="line"><span class="keyword">try</span> again</span><br><span class="line">#</span><br></pre></td></tr></table></figure><h2 id="样例输出2"><a href="#样例输出2" class="headerlink" title="样例输出2"></a>样例输出2</h2><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">Wrong <span class="string">password:</span> coolman<span class="meta">@gplt</span></span><br><span class="line">Wrong <span class="string">password:</span> coollady<span class="meta">@gplt</span></span><br><span class="line">Welcome <span class="keyword">in</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">char</span> s[mxn], t[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, num = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s %d%*c"</span>, s, &amp;n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        fgets(t, mxn, <span class="built_in">stdin</span>);</span><br><span class="line">        t[<span class="built_in">strlen</span>(t)<span class="number">-1</span>] = <span class="string">'\0'</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">strcmp</span>(t, <span class="string">"#"</span>)==<span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">if</span>(++num &gt; n) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">strcmp</span>(s, t)==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Welcome in\n"</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Wrong password: %s\n"</span>, t);</span><br><span class="line">            <span class="keyword">if</span> (num == n)&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"Account locked\n"</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1068 万绿丛中一点红</title>
    <url>/posts/6a283790.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="万绿丛中一点红-PATB-1068"><a href="#万绿丛中一点红-PATB-1068" class="headerlink" title="万绿丛中一点红 (PATB-1068)"></a>万绿丛中一点红 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805265579229184" target="_blank" rel="noopener">PATB-1068</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>对于计算机而言，颜色不过是像素点对应的一个 24 位的数值。现给定一幅分辨率为 M×N 的画，要求你找出万绿丛中的一点红，即有独一无二颜色的那个像素点，并且该点的颜色与其周围 8 个相邻像素的颜色差充分大。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入第一行给出三个正整数，分别是 M 和 N（≤ 1000），即图像的分辨率；以及 TOL，是所求像素点与相邻点的颜色差阈值，色差超过 TOL 的点才被考虑。随后 N 行，每行给出 M 个像素的颜色值，范围在 [0,2^24) 内。所有同行数字间用空格或 TAB 分开。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>在一行中按照 <code>(x, y): color</code> 的格式输出所求像素点的位置以及颜色值，其中位置 <code>x</code> 和 <code>y</code> 分别是该像素在图像矩阵中的列、行编号（从 1 开始编号）。如果这样的点不唯一，则输出 <code>Not Unique</code>；如果这样的点不存在，则输出 <code>Not Exist</code>。</p></blockquote><h2 id="样例输入1"><a href="#样例输入1" class="headerlink" title="样例输入1"></a>样例输入1</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">8 </span><span class="number">6</span> <span class="number">200</span></span><br><span class="line"><span class="symbol">0 </span>	 <span class="number">0</span> 	  <span class="number">0</span> 	   <span class="number">0</span>	    <span class="number">0</span> 	     <span class="number">0</span> 	      <span class="number">0</span>        <span class="number">0</span></span><br><span class="line"><span class="symbol">65280 </span>	 <span class="number">65280</span>    <span class="number">65280</span>    <span class="number">16711479</span> <span class="number">65280</span>    <span class="number">65280</span>    <span class="number">65280</span>    <span class="number">65280</span></span><br><span class="line"><span class="symbol">16711479 </span><span class="number">65280</span>    <span class="number">65280</span>    <span class="number">65280</span>    <span class="number">16711680</span> <span class="number">65280</span>    <span class="number">65280</span>    <span class="number">65280</span></span><br><span class="line"><span class="symbol">65280 </span>	 <span class="number">65280</span>    <span class="number">65280</span>    <span class="number">65280</span>    <span class="number">65280</span>    <span class="number">65280</span>    <span class="number">165280</span>   <span class="number">165280</span></span><br><span class="line"><span class="symbol">65280 </span>	 <span class="number">65280</span> 	  <span class="number">16777015</span> <span class="number">65280</span>    <span class="number">65280</span>    <span class="number">165280</span>   <span class="number">65480</span>    <span class="number">165280</span></span><br><span class="line"><span class="symbol">16777215 </span><span class="number">16777215</span> <span class="number">16777215</span> <span class="number">16777215</span> <span class="number">16777215</span> <span class="number">16777215</span> <span class="number">16777215</span> <span class="number">16777215</span></span><br></pre></td></tr></table></figure><h2 id="样例输出1"><a href="#样例输出1" class="headerlink" title="样例输出1"></a>样例输出1</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">(<span class="number">5</span>, <span class="number">3</span>): <span class="number">16711680</span></span><br></pre></td></tr></table></figure><h2 id="样例输入2"><a href="#样例输入2" class="headerlink" title="样例输入2"></a>样例输入2</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">4 </span><span class="number">5</span> <span class="number">2</span></span><br><span class="line"><span class="symbol">0 </span><span class="number">0</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="symbol">0 </span><span class="number">0</span> <span class="number">3</span> <span class="number">0</span></span><br><span class="line"><span class="symbol">0 </span><span class="number">0</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="symbol">0 </span><span class="number">5</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="symbol">0 </span><span class="number">0</span> <span class="number">0</span> <span class="number">0</span></span><br></pre></td></tr></table></figure><h2 id="样例输出2"><a href="#样例输出2" class="headerlink" title="样例输出2"></a>样例输出2</h2><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">Not Unique</span></span><br></pre></td></tr></table></figure><h2 id="样例输入3"><a href="#样例输入3" class="headerlink" title="样例输入3"></a>样例输入3</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">3 </span><span class="number">3</span> <span class="number">5</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">2</span> <span class="number">3</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">4</span> <span class="number">5</span></span><br><span class="line"><span class="symbol">5 </span><span class="number">6</span> <span class="number">7</span></span><br></pre></td></tr></table></figure><h2 id="样例输出3"><a href="#样例输出3" class="headerlink" title="样例输出3"></a>样例输出3</h2><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Not</span> <span class="keyword">Exist</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e3</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> dir[][<span class="number">2</span>] = &#123;</span><br><span class="line">    &#123;<span class="number">-1</span>,<span class="number">-1</span>&#125;, &#123;<span class="number">-1</span>, <span class="number">0</span>&#125;, &#123;<span class="number">-1</span>, <span class="number">1</span>&#125;,</span><br><span class="line">    &#123; <span class="number">0</span>,<span class="number">-1</span>&#125;, &#123; <span class="number">0</span>, <span class="number">1</span>&#125;,</span><br><span class="line">    &#123; <span class="number">1</span>,<span class="number">-1</span>&#125;, &#123; <span class="number">1</span>, <span class="number">0</span>&#125;, &#123; <span class="number">1</span>, <span class="number">1</span>&#125;,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">int</span> n, m, tol, a[mxn][mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">ok</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">8</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> tx = x+dir[i][<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">int</span> ty = y+dir[i][<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">if</span>(tx &lt; <span class="number">0</span> || tx &gt;= n) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">if</span>(ty &lt; <span class="number">0</span> || ty &gt;= m) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">if</span>(Abs(a[x][y] - a[tx][ty]) &lt;= tol)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>, &amp;m, &amp;n, &amp;tol);</span><br><span class="line">    <span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; mmp;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;m; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i][j]);</span><br><span class="line">            mmp[a[i][j]]++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> di, dj, num = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;m; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(ok(i, j) &amp;&amp; mmp[a[i][j]]==<span class="number">1</span>)&#123;</span><br><span class="line">                num++;</span><br><span class="line">                <span class="keyword">if</span>(num &gt; <span class="number">1</span>) <span class="keyword">break</span>;</span><br><span class="line">                di = i, dj = j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(num &gt; <span class="number">1</span>) <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(num==<span class="number">0</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Not Exist\n"</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(num==<span class="number">1</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"(%d, %d): %d\n"</span>, dj+<span class="number">1</span>, di+<span class="number">1</span>, a[di][dj]);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Not Unique\n"</span>);   </span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1069 微博转发抽奖</title>
    <url>/posts/f9595e18.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="微博转发抽奖-PATB-1069"><a href="#微博转发抽奖-PATB-1069" class="headerlink" title="微博转发抽奖 (PATB-1069)"></a>微博转发抽奖 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805265159798784" target="_blank" rel="noopener">PATB-1069</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>小明 PAT 考了满分，高兴之余决定发起微博转发抽奖活动，从转发的网友中按顺序每隔 N 个人就发出一个红包。请你编写程序帮助他确定中奖名单。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入第一行给出三个正整数 M（≤ 1000）、N 和 S，分别是转发的总量、小明决定的中奖间隔、以及第一位中奖者的序号（编号从 1 开始）。随后 M 行，顺序给出转发微博的网友的昵称（不超过 20 个字符、不包含空格回车的非空字符串）。</p><p>注意：可能有人转发多次，但不能中奖多次。所以如果处于当前中奖位置的网友已经中过奖，则跳过他顺次取下一位。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>按照输入的顺序输出中奖名单，每个昵称占一行。如果没有人中奖，则输出 <code>Keep going...</code>。</p></blockquote><h2 id="样例输入1"><a href="#样例输入1" class="headerlink" title="样例输入1"></a>样例输入1</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">9</span> <span class="number">3</span> <span class="number">2</span></span><br><span class="line">Imgonnawin!</span><br><span class="line">PickMe</span><br><span class="line">PickMeMeMeee</span><br><span class="line">LookHere</span><br><span class="line">Imgonnawin!</span><br><span class="line">TryAgainAgain</span><br><span class="line">TryAgainAgain</span><br><span class="line">Imgonnawin!</span><br><span class="line">TryAgainAgain</span><br></pre></td></tr></table></figure><h2 id="样例输出1"><a href="#样例输出1" class="headerlink" title="样例输出1"></a>样例输出1</h2><figure class="highlight erlang-repl"><table><tr><td class="code"><pre><span class="line">PickMe</span><br><span class="line">Imgonnawin!</span><br><span class="line">TryAgainAgain</span><br></pre></td></tr></table></figure><h2 id="样例输入2"><a href="#样例输入2" class="headerlink" title="样例输入2"></a>样例输入2</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">2</span> <span class="number">3</span> <span class="number">5</span></span><br><span class="line">Imgonnawin!</span><br><span class="line">PickMe</span><br></pre></td></tr></table></figure><h2 id="样例输出2"><a href="#样例输出2" class="headerlink" title="样例输出2"></a>样例输出2</h2><figure class="highlight gams"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">Keep</span></span> going...</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function">ULL <span class="title">bkdr</span><span class="params">(<span class="keyword">char</span>* s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ULL seed = <span class="number">131</span>, h = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (*s)</span><br><span class="line">        h = h * seed + (*s++);</span><br><span class="line">    <span class="keyword">return</span> h;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> m, n, s;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>, &amp;m, &amp;n, &amp;s);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">map</span>&lt;ULL, <span class="keyword">int</span>&gt; mmp;</span><br><span class="line">    <span class="keyword">int</span> now=<span class="number">0</span>, num=<span class="number">0</span>; <span class="keyword">char</span> t[<span class="number">25</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>, t); now++;</span><br><span class="line">        <span class="keyword">if</span>(now&gt;=s &amp;&amp; (now-s)%n==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> x = bkdr(t);</span><br><span class="line">            <span class="keyword">if</span>(mmp.count(x) == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%s\n"</span>, t);</span><br><span class="line">                num++, mmp[x]++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                now--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(num == <span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">"Keep going...\n"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1070 结绳</title>
    <url>/posts/3fde0c9d.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="结绳-PATB-1070"><a href="#结绳-PATB-1070" class="headerlink" title="结绳 (PATB-1070)"></a>结绳 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805264706813952" target="_blank" rel="noopener">PATB-1070</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>给定一段一段的绳子，你需要把它们串成一条绳。每次串连的时候，是把两段绳子对折，再如下图所示套接在一起。这样得到的绳子又被当成是另一段绳子，可以再次对折去跟另一段绳子串连。每次串连后，原来两段绳子的长度就会减半。</p><p><img src="https://images.ptausercontent.com/46293e57-aa0e-414b-b5c3-7c4b2d5201e2.jpg" alt="rope.jpg"></p><p>给定 N 段绳子的长度，你需要找出它们能串成的绳子的最大长度。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>每个输入包含 1 个测试用例。每个测试用例第 1 行给出正整数 N (2≤N≤10^4)；第 2 行给出 N 个正整数，即原始绳段的长度，数字间以空格分隔。所有整数都不超过10^4。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>在一行中输出能够串成的绳子的最大长度。结果向下取整，即取为不超过最大长度的最近整数。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="number">8</span></span><br><span class="line"><span class="symbol">10 </span><span class="number">15</span> <span class="number">12</span> <span class="number">3</span> <span class="number">4</span> <span class="number">13</span> <span class="number">1</span> <span class="number">15</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">14</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e4</span> + <span class="number">5</span>;</span><br><span class="line">DB a[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lf"</span>, &amp;a[i]);</span><br><span class="line">    sort(a, a+n);</span><br><span class="line">    </span><br><span class="line">    DB sum = a[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;n; i++)</span><br><span class="line">        sum = sum/<span class="number">2</span> + a[i]/<span class="number">2</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, (<span class="keyword">int</span>)sum);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1071 小赌怡情</title>
    <url>/posts/63d692f3.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="小赌怡情-PATB-1071"><a href="#小赌怡情-PATB-1071" class="headerlink" title="小赌怡情 (PATB-1071)"></a>小赌怡情 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805264312549376" target="_blank" rel="noopener">PATB-1071</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>常言道“小赌怡情”。这是一个很简单的小游戏：首先由计算机给出第一个整数；然后玩家下注赌第二个整数将会比第一个数大还是小；玩家下注 t 个筹码后，计算机给出第二个数。若玩家猜对了，则系统奖励玩家 t 个筹码；否则扣除玩家 t 个筹码。</p><p>注意：玩家下注的筹码数不能超过自己帐户上拥有的筹码数。当玩家输光了全部筹码后，游戏就结束。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在第一行给出 2 个正整数 T 和 K（≤ 100），分别是系统在初始状态下赠送给玩家的筹码数、以及需要处理的游戏次数。随后 K 行，每行对应一次游戏，顺序给出 4 个数字：</p><figure class="highlight gcode"><table><tr><td class="code"><pre><span class="line"><span class="symbol">n1</span> b t <span class="symbol">n2</span></span><br></pre></td></tr></table></figure><p>其中 <code>n1</code> 和 <code>n2</code> 是计算机先后给出的两个[0, 9]内的整数，保证两个数字不相等。<code>b</code> 为 0 表示玩家赌<code>小</code>，为 1 表示玩家赌<code>大</code>。<code>t</code> 表示玩家下注的筹码数，保证在整型范围内。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>对每一次游戏，根据下列情况对应输出（其中 <code>t</code> 是玩家下注量，<code>x</code> 是玩家当前持有的筹码量）：</p><ul><li>玩家赢，输出 <code>Win t! Total = x.</code>；</li><li>玩家输，输出 <code>Lose t. Total = x.</code>；</li><li>玩家下注超过持有的筹码量，输出 <code>Not enough tokens. Total = x.</code>；</li><li>玩家输光后，输出 <code>Game Over.</code> 并结束程序。</li></ul></blockquote><h2 id="样例输入1"><a href="#样例输入1" class="headerlink" title="样例输入1"></a>样例输入1</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">100 </span><span class="number">4</span></span><br><span class="line"><span class="symbol">8 </span><span class="number">0</span> <span class="number">100</span> <span class="number">2</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">1</span> <span class="number">50</span> <span class="number">1</span></span><br><span class="line"><span class="symbol">5 </span><span class="number">1</span> <span class="number">200</span> <span class="number">6</span></span><br><span class="line"><span class="symbol">7 </span><span class="number">0</span> <span class="number">200</span> <span class="number">8</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">Win <span class="number">100</span>!  Total = <span class="number">200.</span></span><br><span class="line">Lose <span class="number">50.</span>  Total = <span class="number">150.</span></span><br><span class="line">Not enough tokens.  Total = <span class="number">150.</span></span><br><span class="line">Not enough tokens.  Total = <span class="number">150.</span></span><br></pre></td></tr></table></figure><h2 id="样例输入2"><a href="#样例输入2" class="headerlink" title="样例输入2"></a>样例输入2</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">100 </span><span class="number">4</span></span><br><span class="line"><span class="symbol">8 </span><span class="number">0</span> <span class="number">100</span> <span class="number">2</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">1</span> <span class="number">200</span> <span class="number">1</span></span><br><span class="line"><span class="symbol">5 </span><span class="number">1</span> <span class="number">200</span> <span class="number">6</span></span><br><span class="line"><span class="symbol">7 </span><span class="number">0</span> <span class="number">200</span> <span class="number">8</span></span><br></pre></td></tr></table></figure><h2 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">Win <span class="number">100</span>!  Total = <span class="number">200.</span></span><br><span class="line">Lose <span class="number">200.</span>  Total = <span class="number">0.</span></span><br><span class="line">Game Over.</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> sum, n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;sum, &amp;n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> n1, b, t, n2;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d %d %d"</span>, &amp;n1, &amp;b, &amp;t, &amp;n2);</span><br><span class="line">        <span class="keyword">if</span>(t &gt; sum)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Not enough tokens.  Total = %d.\n"</span>, sum);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(b == (n1&lt;n2))</span><br><span class="line">        &#123;</span><br><span class="line">            sum += t;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Win %d!  Total = %d.\n"</span>, t, sum);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            sum -= t;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Lose %d.  Total = %d.\n"</span>, t, sum);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(sum == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Game Over.\n"</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1072 开学寄语</title>
    <url>/posts/8589ae50.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="开学寄语-PATB-1072"><a href="#开学寄语-PATB-1072" class="headerlink" title="开学寄语 (PATB-1072)"></a>开学寄语 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805263964422144" target="_blank" rel="noopener">PATB-1072</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>下图是上海某校的新学期开学寄语：天将降大任于斯人也，必先删其微博，卸其 QQ，封其电脑，夺其手机，收其 ipad，断其 wifi，使其百无聊赖，然后，净面、理发、整衣，然后思过、读书、锻炼、明智、开悟、精进。而后必成大器也！</p><p><img src="https://images.ptausercontent.com/3b1d9f4a-778b-4942-a9e2-836262f363aa.JPG" alt="jiyu.JPG"></p><p>本题要求你写个程序帮助这所学校的老师检查所有学生的物品，以助其成大器。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入第一行给出两个正整数 N（≤ 1000）和 M（≤ 6），分别是学生人数和需要被查缴的物品种类数。第二行给出 M 个需要被查缴的物品编号，其中编号为 4 位数字。随后 N 行，每行给出一位学生的姓名缩写（由 1-4 个大写英文字母组成）、个人物品数量 K（0 ≤ K ≤ 10）、以及 K 个物品的编号。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>顺次检查每个学生携带的物品，如果有需要被查缴的物品存在，则按以下格式输出该生的信息和其需要被查缴的物品的信息（注意行末不得有多余空格）：</p><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">姓名缩写: 物品编号<span class="number">1</span> 物品编号<span class="number">2</span> ……</span><br></pre></td></tr></table></figure><p>最后一行输出存在问题的学生的总人数和被查缴物品的总数。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">4</span> <span class="number">2</span></span><br><span class="line"><span class="number">2333</span> <span class="number">6666</span></span><br><span class="line">CYLL <span class="number">3</span> <span class="number">1234</span> <span class="number">2345</span> <span class="number">3456</span></span><br><span class="line">U <span class="number">4</span> <span class="number">9966</span> <span class="number">6666</span> <span class="number">8888</span> <span class="number">6666</span></span><br><span class="line">GG <span class="number">2</span> <span class="number">2333</span> <span class="number">7777</span></span><br><span class="line">JJ <span class="number">3</span> <span class="number">0012</span> <span class="number">6666</span> <span class="number">2333</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">U:</span> <span class="number">6666</span> <span class="number">6666</span></span><br><span class="line"><span class="attr">GG:</span> <span class="number">2333</span></span><br><span class="line"><span class="attr">JJ:</span> <span class="number">6666</span> <span class="number">2333</span></span><br><span class="line"><span class="number">3</span> <span class="number">5</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e4</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> a[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, m;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;n, &amp;m);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;x);</span><br><span class="line">        a[x]++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> ans1=<span class="number">0</span>, ans2=<span class="number">0</span>; <span class="keyword">char</span> t[<span class="number">5</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> num, x, f = <span class="number">1</span>;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s %d"</span>, t, &amp;num);</span><br><span class="line">        <span class="keyword">while</span>(num--)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;x);</span><br><span class="line">            <span class="keyword">if</span>(a[x])</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(f)&#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"%s:"</span>, t);</span><br><span class="line">                    ans1++;</span><br><span class="line">                    f = <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">" %04d"</span>, x);</span><br><span class="line">                ans2++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(f == <span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>, ans1, ans2);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1073 多选题常见计分法</title>
    <url>/posts/40c1c91e.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="多选题常见计分法-PATB-1073"><a href="#多选题常见计分法-PATB-1073" class="headerlink" title="多选题常见计分法 (PATB-1073)"></a>多选题常见计分法 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805263624683520" target="_blank" rel="noopener">PATB-1073</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>批改多选题是比较麻烦的事情，有很多不同的计分方法。有一种最常见的计分方法是：如果考生选择了部分正确选项，并且没有选择任何错误选项，则得到 50% 分数；如果考生选择了任何一个错误的选项，则不能得分。本题就请你写个程序帮助老师批改多选题，并且指出哪道题的哪个选项错的人最多。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在第一行给出两个正整数 N（≤1000）和 M（≤100），分别是学生人数和多选题的个数。随后 M 行，每行顺次给出一道题的满分值（不超过 5 的正整数）、选项个数（不少于 2 且不超过 5 的正整数）、正确选项个数（不超过选项个数的正整数）、所有正确选项。注意每题的选项从小写英文字母 a 开始顺次排列。各项间以 1 个空格分隔。最后 N 行，每行给出一个学生的答题情况，其每题答案格式为 <code>(选中的选项个数 选项1 ……)</code>，按题目顺序给出。注意：题目保证学生的答题情况是合法的，即不存在选中的选项数超过实际选项数的情况。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>按照输入的顺序给出每个学生的得分，每个分数占一行，输出小数点后 1 位。最后输出错得最多的题目选项的信息，格式为：<code>错误次数 题目编号（题目按照输入的顺序从1开始编号）-选项号</code>。如果有并列，则每行一个选项，按题目编号递增顺序输出；再并列则按选项号递增顺序输出。行首尾不得有多余空格。如果所有题目都没有人错，则在最后一行输出 <code>Too simple</code>。</p></blockquote><h2 id="样例输入1"><a href="#样例输入1" class="headerlink" title="样例输入1"></a>样例输入1</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">3</span> <span class="number">4</span> </span><br><span class="line"><span class="number">3</span> <span class="number">4</span> <span class="number">2</span> a c</span><br><span class="line"><span class="number">2</span> <span class="number">5</span> <span class="number">1</span> b</span><br><span class="line"><span class="number">5</span> <span class="number">3</span> <span class="number">2</span> b c</span><br><span class="line"><span class="number">1</span> <span class="number">5</span> <span class="number">4</span> a b d e</span><br><span class="line">(<span class="number">2</span> a c) (<span class="number">3</span> b d e) (<span class="number">2</span> a c) (<span class="number">3</span> a b e)</span><br><span class="line">(<span class="number">2</span> a c) (<span class="number">1</span> b) (<span class="number">2</span> a b) (<span class="number">4</span> a b d e)</span><br><span class="line">(<span class="number">2</span> b d) (<span class="number">1</span> e) (<span class="number">1</span> c) (<span class="number">4</span> a b c d)</span><br></pre></td></tr></table></figure><h2 id="样例输出1"><a href="#样例输出1" class="headerlink" title="样例输出1"></a>样例输出1</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="number">3.5</span></span><br><span class="line"><span class="number">6.0</span></span><br><span class="line"><span class="number">2.5</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">2</span>-e</span><br><span class="line"><span class="symbol">2 </span><span class="number">3</span>-a</span><br><span class="line"><span class="symbol">2 </span><span class="number">3</span>-b</span><br></pre></td></tr></table></figure><h2 id="样例输入2"><a href="#样例输入2" class="headerlink" title="样例输入2"></a>样例输入2</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">2</span> <span class="number">2</span> </span><br><span class="line"><span class="number">3</span> <span class="number">4</span> <span class="number">2</span> a c</span><br><span class="line"><span class="number">2</span> <span class="number">5</span> <span class="number">1</span> b</span><br><span class="line">(<span class="number">2</span> a c) (<span class="number">1</span> b)</span><br><span class="line">(<span class="number">2</span> a c) (<span class="number">1</span> b)</span><br></pre></td></tr></table></figure><h2 id="样例输出2"><a href="#样例输出2" class="headerlink" title="样例输出2"></a>样例输出2</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">5.0</span></span><br><span class="line"><span class="number">5.0</span></span><br><span class="line">Too simple</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">P</span> &#123;</span></span><br><span class="line">    DB s;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">&#125;a[mxn];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> p[] = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">8</span>, <span class="number">16</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> err[mxn][<span class="number">5</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, m;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;n, &amp;m);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> x; <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lf %*d %d"</span>, &amp;a[i].s, &amp;x);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;x; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">" %c"</span>, &amp;ch);</span><br><span class="line">            a[i].t += p[ch-<span class="string">'a'</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        DB sum=<span class="number">0</span>; <span class="keyword">int</span> ans=<span class="number">0</span>, num=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%c"</span>, &amp;ch) &amp;&amp; ch != <span class="string">'\n'</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(ch == <span class="string">')'</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                num++;</span><br><span class="line">                <span class="keyword">if</span>(ans==a[num].t)</span><br><span class="line">                    sum += a[num].s;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>((ans | a[num].t)==a[num].t)</span><br><span class="line">                    sum += a[num].s * <span class="number">0.5</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;<span class="number">5</span>; j++)</span><br><span class="line">                    <span class="keyword">if</span>(((ans ^ a[num].t) &amp; p[j]) == p[j])</span><br><span class="line">                        err[num][j]++;</span><br><span class="line">    </span><br><span class="line">                ans = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">isalpha</span>(ch)) ans += p[ch-<span class="string">'a'</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%.1lf\n"</span>, sum);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> mx = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;<span class="number">5</span>; j++)</span><br><span class="line">            <span class="keyword">if</span>(mx &lt; err[i][j]) mx = err[i][j];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(mx == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Too simple\n"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;<span class="number">5</span>; j++)</span><br><span class="line">            <span class="keyword">if</span>(mx == err[i][j])</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%d %d-%c\n"</span>, mx, i, j+<span class="string">'a'</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1074 宇宙无敌加法器</title>
    <url>/posts/9f1773ce.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="宇宙无敌加法器-PATB-1074"><a href="#宇宙无敌加法器-PATB-1074" class="headerlink" title="宇宙无敌加法器 (PATB-1074)"></a>宇宙无敌加法器 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805263297527808" target="_blank" rel="noopener">PATB-1074</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>地球人习惯使用十进制数，并且默认一个数字的每一位都是十进制的。而在 PAT 星人开挂的世界里，每个数字的每一位都是不同进制的，这种神奇的数字称为“PAT数”。每个 PAT 星人都必须熟记各位数字的进制表，例如“……0527”就表示最低位是 7 进制数、第 2 位是 2 进制数、第 3 位是 5 进制数、第 4 位是 10 进制数，等等。每一位的进制 d 或者是 0（表示十进制）、或者是 [2，9] 区间内的整数。理论上这个进制表应该包含无穷多位数字，但从实际应用出发，PAT 星人通常只需要记住前 20 位就够用了，以后各位默认为 10 进制。</p><p>在这样的数字系统中，即使是简单的加法运算也变得不简单。例如对应进制表“0527”，该如何计算“6203 + 415”呢？我们得首先计算最低位：3 + 5 = 8；因为最低位是 7 进制的，所以我们得到 1 和 1 个进位。第 2 位是：0 + 1 + 1（进位）= 2；因为此位是 2 进制的，所以我们得到 0 和 1 个进位。第 3 位是：2 + 4 + 1（进位）= 7；因为此位是 5 进制的，所以我们得到 2 和 1 个进位。第 4 位是：6 + 1（进位）= 7；因为此位是 10 进制的，所以我们就得到 7。最后我们得到：6203 + 415 = 7201。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入首先在第一行给出一个 N 位的进制表（0 &lt; N ≤ 20），以回车结束。 随后两行，每行给出一个不超过 N 位的非负的 PAT 数。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>在一行中输出两个 PAT 数之和。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">30527</span></span><br><span class="line"><span class="number">06203</span></span><br><span class="line"><span class="number">415</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">7201</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">char</span> s[mxn], a[mxn], b[mxn], ans[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">(<span class="keyword">char</span> *s, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> m = <span class="built_in">strlen</span>(s);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i+i&lt;m; i++)</span><br><span class="line">        swap(s[i], s[m-i<span class="number">-1</span>]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=m; i&lt;n; i++)</span><br><span class="line">        s[i] = <span class="string">'0'</span>;</span><br><span class="line">    s[n] = <span class="string">'\0'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s %s %s"</span>, s, a ,b);</span><br><span class="line">    <span class="keyword">int</span> sl = <span class="built_in">strlen</span>(s);</span><br><span class="line">    init(s, sl); init(a, sl); init(b, sl);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>, p=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(; i&lt;sl; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        s[i] += s[i]-<span class="string">'0'</span> ? <span class="number">0</span> : <span class="number">10</span>;</span><br><span class="line">        ans[i] = (a[i]-<span class="string">'0'</span> + b[i]-<span class="string">'0'</span> + p) % (s[i]-<span class="string">'0'</span>) +<span class="string">'0'</span>;</span><br><span class="line">        p = (a[i]-<span class="string">'0'</span> + b[i]-<span class="string">'0'</span> + p) / (s[i]-<span class="string">'0'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(p) ans[i++] = <span class="string">'1'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> f = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(i--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(f &amp;&amp; ans[i] == <span class="string">'0'</span>)</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        f = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%c"</span>, ans[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(f) <span class="built_in">printf</span>(<span class="string">"0"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1075 链表元素分类</title>
    <url>/posts/f652ce0d.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="链表元素分类-PATB-1075"><a href="#链表元素分类-PATB-1075" class="headerlink" title="链表元素分类 (PATB-1075)"></a>链表元素分类 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805262953594880" target="_blank" rel="noopener">PATB-1075</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>给定一个单链表，请编写程序将链表元素进行分类排列，使得所有负值元素都排在非负值元素的前面，而 [0, K] 区间内的元素都排在大于 K 的元素前面。但每一类内部元素的顺序是不能改变的。例如：给定链表为 18→7→-4→0→5→-6→10→11→-2，K 为 10，则输出应该为 -4→-6→-2→7→0→5→10→18→11。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>每个输入包含一个测试用例。每个测试用例第 1 行给出：第 1 个结点的地址；结点总个数，即正整数N (≤10^5)；以及正整数K (≤10^3)。结点的地址是 5 位非负整数，NULL 地址用 −1 表示。</p><p>接下来有 N 行，每行格式为：</p><figure class="highlight armasm"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Address </span><span class="meta">Data</span> Next</span><br></pre></td></tr></table></figure><p>其中 <code>Address</code> 是结点地址；<code>Data</code> 是该结点保存的数据，为 [−10^5,10^5] 区间内的整数；<code>Next</code> 是下一结点的地址。题目保证给出的链表不为空。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>对每个测试用例，按链表从头到尾的顺序输出重排后的结果链表，其上每个结点占一行，格式与输入相同。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">00100 </span><span class="number">9</span> <span class="number">10</span></span><br><span class="line"><span class="symbol">23333 </span><span class="number">10</span> <span class="number">27777</span></span><br><span class="line"><span class="symbol">00000 </span><span class="number">0</span> <span class="number">99999</span></span><br><span class="line"><span class="symbol">00100 </span><span class="number">18</span> <span class="number">12309</span></span><br><span class="line"><span class="symbol">68237 </span>-<span class="number">6</span> <span class="number">23333</span></span><br><span class="line"><span class="symbol">33218 </span>-<span class="number">4</span> <span class="number">00000</span></span><br><span class="line"><span class="symbol">48652 </span>-<span class="number">2</span> -<span class="number">1</span></span><br><span class="line"><span class="symbol">99999 </span><span class="number">5</span> <span class="number">68237</span></span><br><span class="line"><span class="symbol">27777 </span><span class="number">11</span> <span class="number">48652</span></span><br><span class="line"><span class="symbol">12309 </span><span class="number">7</span> <span class="number">33218</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">33218 </span>-<span class="number">4</span> <span class="number">68237</span></span><br><span class="line"><span class="symbol">68237 </span>-<span class="number">6</span> <span class="number">48652</span></span><br><span class="line"><span class="symbol">48652 </span>-<span class="number">2</span> <span class="number">12309</span></span><br><span class="line"><span class="symbol">12309 </span><span class="number">7</span> <span class="number">00000</span></span><br><span class="line"><span class="symbol">00000 </span><span class="number">0</span> <span class="number">99999</span></span><br><span class="line"><span class="symbol">99999 </span><span class="number">5</span> <span class="number">23333</span></span><br><span class="line"><span class="symbol">23333 </span><span class="number">10</span> <span class="number">00100</span></span><br><span class="line"><span class="symbol">00100 </span><span class="number">18</span> <span class="number">27777</span></span><br><span class="line"><span class="symbol">27777 </span><span class="number">11</span> -<span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> val[mxn], nxt[mxn];</span><br><span class="line"><span class="keyword">int</span> tmp[mxn], ans[mxn], vis[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> s, n, k, x;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>, &amp;s, &amp;n, &amp;k);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;x);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;val[x], &amp;nxt[x]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> cnt=<span class="number">0</span>, num=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> t=s; t!=<span class="number">-1</span>; t=nxt[t]) &#123;</span><br><span class="line">        tmp[cnt++] = t;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;cnt; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(val[tmp[i]] &lt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            ans[num++] = tmp[i];</span><br><span class="line">            vis[tmp[i]]++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;cnt; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(vis[tmp[i]]==<span class="number">0</span> &amp;&amp; val[tmp[i]] &lt;= k)</span><br><span class="line">        &#123;</span><br><span class="line">            ans[num++] = tmp[i];    </span><br><span class="line">            vis[tmp[i]]++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;cnt; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(vis[tmp[i]]==<span class="number">0</span>)</span><br><span class="line">            ans[num++] = tmp[i];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;num<span class="number">-1</span>; i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%05d %d %05d\n"</span>, ans[i], val[ans[i]], ans[i+<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%05d %d -1"</span>, ans[num<span class="number">-1</span>], val[ans[num<span class="number">-1</span>]]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1076 Wifi密码</title>
    <url>/posts/398225d3.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="Wifi密码-PATB-1076"><a href="#Wifi密码-PATB-1076" class="headerlink" title="Wifi密码 (PATB-1076)"></a>Wifi密码 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805262622244864" target="_blank" rel="noopener">PATB-1076</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>下面是微博上流传的一张照片：“各位亲爱的同学们，鉴于大家有时需要使用 wifi，又怕耽误亲们的学习，现将 wifi 密码设置为下列数学题答案：A-1；B-2；C-3；D-4；请同学们自己作答，每两日一换。谢谢合作！！~”—— 老师们为了促进学生学习也是拼了…… 本题就要求你写程序把一系列题目的答案按照卷子上给出的对应关系翻译成 wifi 的密码。这里简单假设每道选择题都有 4 个选项，有且只有 1 个正确答案。</p><p><img src="https://images.ptausercontent.com/7e56be3f-caba-45f1-b9cb-38a96d44de76.jpg" alt="wifi.jpg"></p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入第一行给出一个正整数 N（≤ 100），随后 N 行，每行按照 <code>编号-答案</code> 的格式给出一道题的 4 个选项，<code>T</code> 表示正确选项，<code>F</code> 表示错误选项。选项间用空格分隔。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>在一行中输出 wifi 密码。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="number">8</span></span><br><span class="line">A-<span class="literal">T</span> B-<span class="literal">F</span> C-<span class="literal">F</span> D-<span class="literal">F</span></span><br><span class="line">C-<span class="literal">T</span> B-<span class="literal">F</span> A-<span class="literal">F</span> D-<span class="literal">F</span></span><br><span class="line">A-<span class="literal">F</span> D-<span class="literal">F</span> C-<span class="literal">F</span> B-<span class="literal">T</span></span><br><span class="line">B-<span class="literal">T</span> A-<span class="literal">F</span> C-<span class="literal">F</span> D-<span class="literal">F</span></span><br><span class="line">B-<span class="literal">F</span> D-<span class="literal">T</span> A-<span class="literal">F</span> C-<span class="literal">F</span></span><br><span class="line">A-<span class="literal">T</span> C-<span class="literal">F</span> B-<span class="literal">F</span> D-<span class="literal">F</span></span><br><span class="line">D-<span class="literal">T</span> B-<span class="literal">F</span> C-<span class="literal">F</span> A-<span class="literal">F</span></span><br><span class="line">C-<span class="literal">T</span> A-<span class="literal">F</span> B-<span class="literal">F</span> D-<span class="literal">F</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">13224143</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;<span class="number">4</span>; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">char</span> a, b;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">" %c-%c"</span>, &amp;a, &amp;b);</span><br><span class="line">            <span class="keyword">if</span>(b==<span class="string">'T'</span>)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%d"</span>, a-<span class="string">'A'</span>+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1077 互评成绩计算</title>
    <url>/posts/de330095.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="互评成绩计算-PATB-1077"><a href="#互评成绩计算-PATB-1077" class="headerlink" title="互评成绩计算 (PATB-1077)"></a>互评成绩计算 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805262303477760" target="_blank" rel="noopener">PATB-1077</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>在浙大的计算机专业课中，经常有互评分组报告这个环节。一个组上台介绍自己的工作，其他组在台下为其表现评分。最后这个组的互评成绩是这样计算的：所有其他组的评分中，去掉一个最高分和一个最低分，剩下的分数取平均分记为 G1；老师给这个组的评分记为 G2。该组得分为 (G1+G2)/2，最后结果四舍五入后保留整数分。本题就要求你写个程序帮助老师计算每个组的互评成绩。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入第一行给出两个正整数 N（&gt; 3）和 M，分别是分组数和满分，均不超过 100。随后 N 行，每行给出该组得到的 N 个分数（均保证为整型范围内的整数），其中第 1 个是老师给出的评分，后面 N−1 个是其他组给的评分。合法的输入应该是 [0,M] 区间内的整数，若不在合法区间内，则该分数须被忽略。题目保证老师的评分都是合法的，并且每个组至少会有 3 个来自同学的合法评分。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>为每个组输出其最终得分。每个得分占一行。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">6 </span><span class="number">50</span></span><br><span class="line"><span class="symbol">42 </span><span class="number">49</span> <span class="number">49</span> <span class="number">35</span> <span class="number">38</span> <span class="number">41</span></span><br><span class="line"><span class="symbol">36 </span><span class="number">51</span> <span class="number">50</span> <span class="number">28</span> -<span class="number">1</span> <span class="number">30</span></span><br><span class="line"><span class="symbol">40 </span><span class="number">36</span> <span class="number">41</span> <span class="number">33</span> <span class="number">47</span> <span class="number">49</span></span><br><span class="line"><span class="symbol">30 </span><span class="number">250</span> -<span class="number">25</span> <span class="number">27</span> <span class="number">45</span> <span class="number">31</span></span><br><span class="line"><span class="symbol">48 </span><span class="number">0</span> <span class="number">0</span> <span class="number">50</span> <span class="number">50</span> <span class="number">1234</span></span><br><span class="line"><span class="symbol">43 </span><span class="number">41</span> <span class="number">36</span> <span class="number">29</span> <span class="number">42</span> <span class="number">29</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">42</span></span><br><span class="line"><span class="number">33</span></span><br><span class="line"><span class="number">41</span></span><br><span class="line"><span class="number">31</span></span><br><span class="line"><span class="number">37</span></span><br><span class="line"><span class="number">39</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, m;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;n, &amp;m);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> mx=<span class="number">-1</span>, mi=m+<span class="number">1</span>, t, g1, g2=<span class="number">0</span>, num=<span class="number">-2</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;n; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;t);</span><br><span class="line">            <span class="keyword">if</span>(j)&#123;</span><br><span class="line">                <span class="keyword">if</span>(t&lt;<span class="number">0</span> || t&gt;m) <span class="keyword">continue</span>;</span><br><span class="line">                g2 += t;</span><br><span class="line">                mx = max(mx, t);</span><br><span class="line">                mi = min(mi, t);</span><br><span class="line">                num++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                g1 = t;</span><br><span class="line">        &#125;</span><br><span class="line">        g2 = g2-mx-mi;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, (<span class="keyword">int</span>)round((g1+<span class="number">1.0</span>*g2/num)*<span class="number">0.5</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1078 字符串压缩与解压</title>
    <url>/posts/11c2140b.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="字符串压缩与解压-PATB-1078"><a href="#字符串压缩与解压-PATB-1078" class="headerlink" title="字符串压缩与解压 (PATB-1078)"></a>字符串压缩与解压 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805262018265088" target="_blank" rel="noopener">PATB-1078</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>文本压缩有很多种方法，这里我们只考虑最简单的一种：把由相同字符组成的一个连续的片段用这个字符和片段中含有这个字符的个数来表示。例如 <code>ccccc</code> 就用 <code>5c</code> 来表示。如果字符没有重复，就原样输出。例如 <code>aba</code> 压缩后仍然是 <code>aba</code>。</p><p>解压方法就是反过来，把形如 <code>5c</code> 这样的表示恢复为 <code>ccccc</code>。</p><p>本题需要你根据压缩或解压的要求，对给定字符串进行处理。这里我们简单地假设原始字符串是完全由英文字母和空格组成的非空字符串。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入第一行给出一个字符，如果是 <code>C</code> 就表示下面的字符串需要被压缩；如果是 <code>D</code> 就表示下面的字符串需要被解压。第二行给出需要被压缩或解压的不超过 1000 个字符的字符串，以回车结尾。题目保证字符重复个数在整型范围内，且输出文件不超过 1MB。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>根据要求压缩或解压字符串，并在一行中输出结果。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line">C</span><br><span class="line">TTTTThhiiiis isssss <span class="keyword">a</span>   tesssst CAaaa <span class="keyword">as</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight actionscript"><table><tr><td class="code"><pre><span class="line"><span class="number">5</span>T2h4is i5s a3 te4st CA3a <span class="keyword">as</span></span><br></pre></td></tr></table></figure><h2 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">D</span><br><span class="line"><span class="number">5</span>T2h4is i5s a3 te4st CA3a as10Z</span><br></pre></td></tr></table></figure><h2 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">TTTTThhiiiis isssss a   tesssst CAaaa asZZZZZZZZZZ</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">char</span> s[mxn], c;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%c%*c"</span>, &amp;c);</span><br><span class="line">    fgets(s, mxn, <span class="built_in">stdin</span>);</span><br><span class="line">    <span class="keyword">int</span> len = <span class="built_in">strlen</span>(s);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(c == <span class="string">'C'</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> num=<span class="number">1</span>, i=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">char</span> t = s[i];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(i++; i&lt;len; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(s[i] == t)&#123;</span><br><span class="line">                num++;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(num&gt;<span class="number">1</span>) <span class="built_in">printf</span>(<span class="string">"%d"</span>, num);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%c"</span>, t);</span><br><span class="line">            t = s[i];</span><br><span class="line">            num = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(num&gt;<span class="number">1</span>) <span class="built_in">printf</span>(<span class="string">"%d"</span>, num);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%c"</span>, t);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> num=<span class="number">0</span>, i=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>; s[i]==<span class="string">' '</span>; i++)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%c"</span>, s[i]);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(; i&lt;len; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">isdigit</span>(s[i]))</span><br><span class="line">                num = num*<span class="number">10</span> + s[i]-<span class="string">'0'</span>;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">while</span>(num--) <span class="built_in">printf</span>(<span class="string">"%c"</span>, s[i]);</span><br><span class="line">                num = <span class="built_in">isdigit</span>(s[i+<span class="number">1</span>]) ? <span class="number">0</span> : <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1079 延迟的回文数</title>
    <url>/posts/160bb7f5.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="延迟的回文数-PATB-1079"><a href="#延迟的回文数-PATB-1079" class="headerlink" title="延迟的回文数 (PATB-1079)"></a>延迟的回文数 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805261754023936" target="_blank" rel="noopener">PATB-1079</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>给定一个 k+1 位的正整数 N，写成 ak⋯a1a0 的形式，其中对所有 i 有 0≤ai&lt;<em>10</em> 且 ak&gt;0。N 被称为一个<strong>回文数</strong>，当且仅当对所有 i 有 ai=ak−i。零也被定义为一个回文数。</p><p>非回文数也可以通过一系列操作变出回文数。首先将该数字逆转，再将逆转数与该数相加，如果和还不是一个回文数，就重复这个逆转再相加的操作，直到一个回文数出现。如果一个非回文数可以变出回文数，就称这个数为<strong>延迟的回文数</strong>。（定义翻译自 <a href="https://en.wikipedia.org/wiki/Palindromic_number" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/Palindromic_number</a> ）</p><p>给定任意一个正整数，本题要求你找到其变出的那个回文数。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在一行中给出一个不超过1000位的正整数。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>对给定的整数，一行一行输出其变出回文数的过程。每行格式如下</p><figure class="highlight armasm"><table><tr><td class="code"><pre><span class="line">A + <span class="keyword">B </span>= C</span><br></pre></td></tr></table></figure><p>其中 <code>A</code> 是原始的数字，<code>B</code> 是 <code>A</code> 的逆转数，<code>C</code> 是它们的和。<code>A</code> 从输入的整数开始。重复操作直到 <code>C</code> 在 10 步以内变成回文数，这时在一行中输出 <code>C is a palindromic number.</code>；或者如果 10 步都没能得到回文数，最后就在一行中输出 <code>Not found in 10 iterations.</code>。</p></blockquote><h2 id="样例输入1"><a href="#样例输入1" class="headerlink" title="样例输入1"></a>样例输入1</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">97152</span></span><br></pre></td></tr></table></figure><h2 id="样例输出1"><a href="#样例输出1" class="headerlink" title="样例输出1"></a>样例输出1</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">97152 </span>+ <span class="number">25179</span> = <span class="number">122331</span></span><br><span class="line"><span class="symbol">122331 </span>+ <span class="number">133221</span> = <span class="number">255552</span></span><br><span class="line"><span class="symbol">255552 </span>is a palindromic number.</span><br></pre></td></tr></table></figure><h2 id="样例输入2"><a href="#样例输入2" class="headerlink" title="样例输入2"></a>样例输入2</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">196</span></span><br></pre></td></tr></table></figure><h2 id="样例输出2"><a href="#样例输出2" class="headerlink" title="样例输出2"></a>样例输出2</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">196</span> + <span class="number">691</span> = <span class="number">887</span></span><br><span class="line"><span class="number">887</span> + <span class="number">788</span> = <span class="number">1675</span></span><br><span class="line"><span class="number">1675</span> + <span class="number">5761</span> = <span class="number">7436</span></span><br><span class="line"><span class="number">7436</span> + <span class="number">6347</span> = <span class="number">13783</span></span><br><span class="line"><span class="number">13783</span> + <span class="number">38731</span> = <span class="number">52514</span></span><br><span class="line"><span class="number">52514</span> + <span class="number">41525</span> = <span class="number">94039</span></span><br><span class="line"><span class="number">94039</span> + <span class="number">93049</span> = <span class="number">187088</span></span><br><span class="line"><span class="number">187088</span> + <span class="number">880781</span> = <span class="number">1067869</span></span><br><span class="line"><span class="number">1067869</span> + <span class="number">9687601</span> = <span class="number">10755470</span></span><br><span class="line"><span class="number">10755470</span> + <span class="number">07455701</span> = <span class="number">18211171</span></span><br><span class="line">Not found <span class="keyword">in</span> <span class="number">10</span> iterations.</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">char</span> s[mxn], t[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">char</span> *s, <span class="keyword">char</span> *t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> len=<span class="built_in">strlen</span>(s), p=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;len; i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> x = s[i]-<span class="string">'0'</span> + t[i]-<span class="string">'0'</span> + p;</span><br><span class="line">        p = x / <span class="number">10</span>;</span><br><span class="line">        s[i] = x % <span class="number">10</span> + <span class="string">'0'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(p)</span><br><span class="line">        s[len++]=<span class="string">'1'</span>;</span><br><span class="line">    s[len]=<span class="string">'\0'</span>;</span><br><span class="line">    reverse(s, s+len);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>, s);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        reverse_copy(s, s+<span class="built_in">strlen</span>(s), t);</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">strcmp</span>(s, t) == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%s is a palindromic number.\n"</span>, s);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%s + %s = "</span>, s, t);</span><br><span class="line">        add(s, t);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%s\n"</span>, s);</span><br><span class="line">        <span class="keyword">if</span>(++num &gt;= <span class="number">10</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Not found in 10 iterations.\n"</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1080 MOOC期终成绩</title>
    <url>/posts/e415434.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="MOOC期终成绩-PATB-1080"><a href="#MOOC期终成绩-PATB-1080" class="headerlink" title="MOOC期终成绩 (PATB-1080)"></a>MOOC期终成绩 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805261493977088" target="_blank" rel="noopener">PATB-1080</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>对于在中国大学MOOC（<a href="http://www.icourse163.org/" target="_blank" rel="noopener">http://www.icourse163.org/</a> ）学习“数据结构”课程的学生，想要获得一张合格证书，必须首先获得不少于200分的在线编程作业分，然后总评获得不少于60分（满分100）。总评成绩的计算公式为 G=(Gmid−term×40%+Gfinal×60%)，如果 Gmid−term&gt;Gfinal；否则总评 G 就是 Gfinal。这里 Gmid−term 和 Gfinal 分别为学生的期中和期末成绩。</p><p>现在的问题是，每次考试都产生一张独立的成绩单。本题就请你编写程序，把不同的成绩单合为一张。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在第一行给出3个整数，分别是 P（做了在线编程作业的学生数）、M（参加了期中考试的学生数）、N（参加了期末考试的学生数）。每个数都不超过10000。</p><p>接下来有三块输入。第一块包含 P 个在线编程成绩 Gp；第二块包含 M 个期中考试成绩 Gmid−term；第三块包含 N 个期末考试成绩 Gfinal。每个成绩占一行，格式为：<code>学生学号 分数</code>。其中<code>学生学号</code>为不超过20个字符的英文字母和数字；<code>分数</code>是非负整数（编程总分最高为900分，期中和期末的最高分为100分）。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>打印出获得合格证书的学生名单。每个学生占一行，格式为：</p><p><code>学生学号</code> Gp Gmid−term Gfinal G</p><p>如果有的成绩不存在（例如某人没参加期中考试），则在相应的位置输出“−1”。输出顺序为按照总评分数（四舍五入精确到整数）递减。若有并列，则按学号递增。题目保证学号没有重复，且至少存在1个合格的学生。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">6</span> <span class="number">6</span> <span class="number">7</span></span><br><span class="line"><span class="number">01234</span> <span class="number">880</span></span><br><span class="line">a1903 <span class="number">199</span></span><br><span class="line">ydjh2 <span class="number">200</span></span><br><span class="line">wehu8 <span class="number">300</span></span><br><span class="line">dx86w <span class="number">220</span></span><br><span class="line">missing <span class="number">400</span></span><br><span class="line">ydhfu77 <span class="number">99</span></span><br><span class="line">wehu8 <span class="number">55</span></span><br><span class="line">ydjh2 <span class="number">98</span></span><br><span class="line">dx86w <span class="number">88</span></span><br><span class="line">a1903 <span class="number">86</span></span><br><span class="line"><span class="number">01234</span> <span class="number">39</span></span><br><span class="line">ydhfu77 <span class="number">88</span></span><br><span class="line">a1903 <span class="number">66</span></span><br><span class="line"><span class="number">01234</span> <span class="number">58</span></span><br><span class="line">wehu8 <span class="number">84</span></span><br><span class="line">ydjh2 <span class="number">82</span></span><br><span class="line">missing <span class="number">99</span></span><br><span class="line">dx86w <span class="number">81</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">missing <span class="number">400</span> <span class="number">-1</span> <span class="number">99</span> <span class="number">99</span></span><br><span class="line">ydjh2 <span class="number">200</span> <span class="number">98</span> <span class="number">82</span> <span class="number">88</span></span><br><span class="line">dx86w <span class="number">220</span> <span class="number">88</span> <span class="number">81</span> <span class="number">84</span></span><br><span class="line">wehu8 <span class="number">300</span> <span class="number">55</span> <span class="number">84</span> <span class="number">84</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">P</span>&#123;</span></span><br><span class="line">    <span class="built_in">string</span> s;</span><br><span class="line">    <span class="keyword">int</span> gp, gm, gf, g;</span><br><span class="line">&#125;a[mxn], ans[mxn], t;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(P a, P b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a.g != b.g ? a.g &gt; b.g : a.s &lt; b.s;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;   </span><br><span class="line">    <span class="keyword">int</span> p, m, n; </span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>, &amp;p, &amp;m, &amp;n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">map</span>&lt;<span class="built_in">string</span>, <span class="keyword">int</span>&gt; mmp;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;p; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; t.s &gt;&gt; t.gp;</span><br><span class="line">        <span class="keyword">if</span>(t.gp &gt;= <span class="number">200</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            a[num] = P&#123;t.s, t.gp, <span class="number">-1</span>, <span class="number">-1</span>, <span class="number">0</span>&#125;;</span><br><span class="line">            mmp[t.s] = num++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; t.s &gt;&gt; t.gm;</span><br><span class="line">        <span class="keyword">if</span>(mmp.count(t.s) != <span class="number">0</span>)</span><br><span class="line">            a[mmp[t.s]].gm = t.gm;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; t.s &gt;&gt; t.gf;</span><br><span class="line">        <span class="keyword">if</span>(mmp.count(t.s) != <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> id = mmp[t.s];</span><br><span class="line">            a[id].g = a[id].gf = t.gf;</span><br><span class="line">            <span class="keyword">if</span>(a[id].gm &gt; a[id].gf)</span><br><span class="line">                a[id].g = (<span class="keyword">int</span>)(<span class="number">0.4</span>*a[id].gm + <span class="number">0.6</span>*a[id].gf + <span class="number">0.5</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;num; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i].g &gt;= <span class="number">60</span>)</span><br><span class="line">            ans[cnt++] = a[i];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    sort(ans, ans+cnt, cmp);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;cnt; i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%s %d %d %d %d\n"</span>, ans[i].s.c_str(), ans[i].gp, ans[i].gm, ans[i].gf, ans[i].g);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1081 检查密码</title>
    <url>/posts/3c682729.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="检查密码-PATB-1081"><a href="#检查密码-PATB-1081" class="headerlink" title="检查密码 (PATB-1081)"></a>检查密码 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805261217153024" target="_blank" rel="noopener">PATB-1081</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>本题要求你帮助某网站的用户注册模块写一个密码合法性检查的小功能。该网站要求用户设置的密码必须由不少于6个字符组成，并且只能有英文字母、数字和小数点 <code>.</code>，还必须既有字母也有数字。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入第一行给出一个正整数 N（≤ 100），随后 N 行，每行给出一个用户设置的密码，为不超过 80 个字符的非空字符串，以回车结束。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>对每个用户的密码，在一行中输出系统反馈信息，分以下5种：</p><ul><li>如果密码合法，输出<code>Your password is wan mei.</code>；</li><li>如果密码太短，不论合法与否，都输出<code>Your password is tai duan le.</code>；</li><li>如果密码长度合法，但存在不合法字符，则输出<code>Your password is tai luan le.</code>；</li><li>如果密码长度合法，但只有字母没有数字，则输出<code>Your password needs shu zi.</code>；</li><li>如果密码长度合法，但只有数字没有字母，则输出<code>Your password needs zi mu.</code>。</li></ul></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">123</span>s</span><br><span class="line">zheshi.wodepw</span><br><span class="line"><span class="number">1234.5678</span></span><br><span class="line">WanMei23333</span><br><span class="line">pass*word<span class="number">.6</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">Your password is tai duan le.</span><br><span class="line">Your password needs shu zi.</span><br><span class="line">Your password needs zi mu.</span><br><span class="line">Your password is<span class="built_in"> wan </span>mei.</span><br><span class="line">Your password is tai luan le.</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> s[<span class="number">100</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;   </span><br><span class="line">    <span class="keyword">int</span> n; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    getchar();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        fgets(s, <span class="number">100</span>, <span class="built_in">stdin</span>);</span><br><span class="line">        <span class="keyword">int</span> sl = <span class="built_in">strlen</span>(s) - <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(sl &lt; <span class="number">6</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Your password is tai duan le.\n"</span>);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> ok = <span class="number">1</span>, a = <span class="number">0</span>, b = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;sl; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">isdigit</span>(s[j]))</span><br><span class="line">                a++;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">isalpha</span>(s[j]))</span><br><span class="line">                b++;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(s[j]!=<span class="string">'.'</span>)</span><br><span class="line">                ok = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(ok == <span class="number">0</span> || (a==<span class="number">0</span> &amp;&amp; b==<span class="number">0</span>))</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Your password is tai luan le.\n"</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(a==<span class="number">0</span> &amp;&amp; b)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Your password needs shu zi.\n"</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(b==<span class="number">0</span> &amp;&amp; a)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Your password needs zi mu.\n"</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(a &amp;&amp; b)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Your password is wan mei.\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1082 射击比赛</title>
    <url>/posts/15559693.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="射击比赛-PATB-1082"><a href="#射击比赛-PATB-1082" class="headerlink" title="射击比赛 (PATB-1082)"></a>射击比赛 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805260990660608" target="_blank" rel="noopener">PATB-1082</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>本题目给出的射击比赛的规则非常简单，谁打的弹洞距离靶心最近，谁就是冠军；谁差得最远，谁就是菜鸟。本题给出一系列弹洞的平面坐标(x,y)，请你编写程序找出冠军和菜鸟。我们假设靶心在原点(0,0)。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在第一行中给出一个正整数 N（≤ 10 000）。随后 N 行，每行按下列格式给出：</p><figure class="highlight gml"><table><tr><td class="code"><pre><span class="line">ID <span class="symbol">x</span> <span class="symbol">y</span></span><br></pre></td></tr></table></figure><p>其中 <code>ID</code> 是运动员的编号（由 4 位数字组成）；<code>x</code> 和 <code>y</code> 是其打出的弹洞的平面坐标(<code>x</code>,<code>y</code>)，均为整数，且 0 ≤ |<code>x</code>|, |<code>y</code>| ≤ 100。题目保证每个运动员的编号不重复，且每人只打 1 枪。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>输出冠军和菜鸟的编号，中间空 1 格。题目保证他们是唯一的。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="number">3</span></span><br><span class="line"><span class="symbol">0001 </span><span class="number">5</span> <span class="number">7</span></span><br><span class="line"><span class="symbol">1020 </span>-<span class="number">1</span> <span class="number">3</span></span><br><span class="line"><span class="symbol">0233 </span><span class="number">0</span> -<span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">0233 </span><span class="number">0001</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">double</span> DB;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">PT</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    DB x, y;</span><br><span class="line">    PT() : x(<span class="number">0</span>), y(<span class="number">0</span>) &#123;&#125;;</span><br><span class="line">    PT(DB _x, DB _y) : x(_x), y(_y) &#123;&#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function">DB <span class="title">dist</span><span class="params">(PT p1, PT p2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sqrt</span>(Sq(p1.x - p2.x) + Sq(p1.y - p2.y));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">P</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> id;</span><br><span class="line">    DB ans;</span><br><span class="line">&#125;a[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(P a, P b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a.ans &lt; b.ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;   </span><br><span class="line">    <span class="keyword">int</span> n; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"></span><br><span class="line">    PT p;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %lf %lf"</span>, &amp;a[i].id, &amp;p.x, &amp;p.y);</span><br><span class="line">        a[i].ans = dist(p, PT&#123;<span class="number">0</span>, <span class="number">0</span>&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    sort(a, a+n, cmp);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%04d %04d\n"</span>, a[<span class="number">0</span>].id, a[n<span class="number">-1</span>].id);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1083 是否存在相等的差</title>
    <url>/posts/2adf8567.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="是否存在相等的差-PATB-1083"><a href="#是否存在相等的差-PATB-1083" class="headerlink" title="是否存在相等的差 (PATB-1083)"></a>是否存在相等的差 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805260780945408" target="_blank" rel="noopener">PATB-1083</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>给定 N 张卡片，正面分别写上 1、2、……、N，然后全部翻面，洗牌，在背面分别写上 1、2、……、N。将每张牌的正反两面数字相减（大减小），得到 N 个非负差值，其中是否存在相等的差？</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入第一行给出一个正整数 N（2 ≤ N ≤ 10 000），随后一行给出 1 到 N 的一个洗牌后的排列，第 i 个数表示正面写了 i 的那张卡片背面的数字。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>按照“差值 重复次数”的格式从大到小输出重复的差值及其重复的次数，每行输出一个结果。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="number">8</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">5</span> <span class="number">8</span> <span class="number">6</span> <span class="number">2</span> <span class="number">1</span> <span class="number">4</span> <span class="number">7</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">5 </span><span class="number">2</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">3</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">2</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[mxn], p[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;   </span><br><span class="line">    <span class="keyword">int</span> n; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]);</span><br><span class="line">        p[Abs(a[i]-i)]++;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">10000</span>; i&gt;=<span class="number">0</span>; i--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(p[i]&gt;<span class="number">1</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>, i, p[i]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1084 外观数列</title>
    <url>/posts/4a6651b1.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="外观数列-PATB-1084"><a href="#外观数列-PATB-1084" class="headerlink" title="外观数列 (PATB-1084)"></a>外观数列 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805260583813120" target="_blank" rel="noopener">PATB-1084</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>外观数列是指具有以下特点的整数序列：</p><figure class="highlight gams"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">d</span></span>, d1, d111, d113, d11231, d112213111, ...</span><br></pre></td></tr></table></figure><p>它从不等于 1 的数字 <code>d</code> 开始，序列的第 n+1 项是对第 n 项的描述。比如第 2 项表示第 1 项有 1 个 <code>d</code>，所以就是 <code>d1</code>；第 2 项是 1 个 <code>d</code>（对应 <code>d1</code>）和 1 个 1（对应 11），所以第 3 项就是 <code>d111</code>。又比如第 4 项是 <code>d113</code>，其描述就是 1 个 <code>d</code>，2 个 1，1 个 3，所以下一项就是 <code>d11231</code>。当然这个定义对 <code>d</code> = 1 也成立。本题要求你推算任意给定数字 <code>d</code> 的外观数列的第 N 项。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入第一行给出 [0,9] 范围内的一个整数 <code>d</code>、以及一个正整数 N（≤ 40），用空格分隔。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>在一行中给出数字 <code>d</code> 的外观数列的第 N 项。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">1 </span><span class="number">8</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">1123123111</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;   </span><br><span class="line">    <span class="built_in">string</span> s; <span class="keyword">int</span> n, j;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; s &gt;&gt; n;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> k=<span class="number">1</span>; k&lt;n; k++) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">string</span> t;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;s.length(); i=j)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (j=i; j&lt;s.length() &amp;&amp; s[j]==s[i]; j++);</span><br><span class="line">            t += s[i] + to_string(j - i);</span><br><span class="line">        &#125;</span><br><span class="line">        s = t;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%s\n"</span>, s.c_str());</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1085 PAT单位排行</title>
    <url>/posts/c4cda3a8.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="PAT单位排行-PATB-1085"><a href="#PAT单位排行-PATB-1085" class="headerlink" title="PAT单位排行 (PATB-1085)"></a>PAT单位排行 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805260353126400" target="_blank" rel="noopener">PATB-1085</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>每次 PAT 考试结束后，考试中心都会发布一个考生单位排行榜。本题就请你实现这个功能。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入第一行给出一个正整数 N（≤105），即考生人数。随后 N 行，每行按下列格式给出一个考生的信息：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">准考证号 得分 学校</span><br></pre></td></tr></table></figure><p>其中<code>准考证号</code>是由 6 个字符组成的字符串，其首字母表示考试的级别：<code>B</code>代表乙级，<code>A</code>代表甲级，<code>T</code>代表顶级；<code>得分</code>是 [0, 100] 区间内的整数；<code>学校</code>是由不超过 6 个英文字母组成的单位码（大小写无关）。注意：题目保证每个考生的准考证号是不同的。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>首先在一行中输出单位个数。随后按以下格式非降序输出单位的排行榜：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">排名 学校 加权总分 考生人数</span><br></pre></td></tr></table></figure><p>其中<code>排名</code>是该单位的排名（从 1 开始）；<code>学校</code>是全部按小写字母输出的单位码；<code>加权总分</code>定义为<code>乙级总分/1.5 + 甲级总分 + 顶级总分*1.5</code>的<strong>整数部分</strong>；<code>考生人数</code>是该属于单位的考生的总人数。</p><p>学校首先按加权总分排行。如有并列，则应对应相同的排名，并按考生人数升序输出。如果仍然并列，则按单位码的字典序输出。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight dns"><table><tr><td class="code"><pre><span class="line"><span class="number">10</span></span><br><span class="line"><span class="keyword">A</span><span class="number">57908 85</span> Au</span><br><span class="line">B<span class="number">57908 54</span> LanX</span><br><span class="line"><span class="keyword">A</span><span class="number">37487 60</span> au</span><br><span class="line">T<span class="number">28374 67</span> CMU</span><br><span class="line">T<span class="number">32486 24</span> hypu</span><br><span class="line"><span class="keyword">A</span><span class="number">66734 92</span> cmu</span><br><span class="line">B<span class="number">76378 71</span> AU</span><br><span class="line"><span class="keyword">A</span><span class="number">47780 45</span> lanx</span><br><span class="line"><span class="keyword">A</span><span class="number">72809 100</span> pku</span><br><span class="line"><span class="keyword">A</span><span class="number">03274 45</span> hypu</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="number">5</span></span><br><span class="line"><span class="symbol">1 </span>cmu <span class="number">192</span> <span class="number">2</span></span><br><span class="line"><span class="symbol">1 </span>au <span class="number">192</span> <span class="number">3</span></span><br><span class="line"><span class="symbol">3 </span>pku <span class="number">100</span> <span class="number">1</span></span><br><span class="line"><span class="symbol">4 </span>hypu <span class="number">81</span> <span class="number">2</span></span><br><span class="line"><span class="symbol">4 </span>lanx <span class="number">81</span> <span class="number">2</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">double</span> DB;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">P</span>&#123;</span></span><br><span class="line">    <span class="built_in">string</span> s;</span><br><span class="line">    DB sum;</span><br><span class="line">    <span class="keyword">int</span> num;</span><br><span class="line">&#125;a[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(P a, P b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a.sum != b.sum)</span><br><span class="line">        <span class="keyword">return</span> a.sum &gt; b.sum;</span><br><span class="line">    <span class="keyword">if</span>(a.num != b.num)</span><br><span class="line">        <span class="keyword">return</span> a.num &lt; b.num;</span><br><span class="line">    <span class="keyword">return</span> a.s &lt; b.s;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;   </span><br><span class="line">    <span class="keyword">int</span> n; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">map</span>&lt;<span class="built_in">string</span>, <span class="keyword">int</span>&gt; mmp;</span><br><span class="line">    <span class="built_in">string</span> x, y;</span><br><span class="line">    <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">    DB t;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; x &gt;&gt; t &gt;&gt; y;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;y.length(); j++)</span><br><span class="line">            y[j] = <span class="built_in">tolower</span>(y[j]);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(mmp.count(y)==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            mmp[y] = cnt++;</span><br><span class="line">            a[mmp[y]].s = y;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(x.at(<span class="number">0</span>) == <span class="string">'B'</span>)</span><br><span class="line">            t /= <span class="number">1.5</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(x.at(<span class="number">0</span>) == <span class="string">'T'</span>)</span><br><span class="line">            t *= <span class="number">1.5</span>;</span><br><span class="line"></span><br><span class="line">        a[mmp[y]].sum += t;</span><br><span class="line">        a[mmp[y]].num++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;cnt; i++)</span><br><span class="line">        a[i].sum = <span class="built_in">floor</span>(a[i].sum);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, cnt);</span><br><span class="line">    sort(a, a+cnt, cmp);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> rank = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;cnt; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(i &amp;&amp; a[i<span class="number">-1</span>].sum != a[i].sum)</span><br><span class="line">            rank = i+<span class="number">1</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d %s %.0lf %d\n"</span>, rank, a[i].s.c_str(), a[i].sum, a[i].num);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1086 就不告诉你</title>
    <url>/posts/77b7ae3f.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="就不告诉你-PATB-1086"><a href="#就不告诉你-PATB-1086" class="headerlink" title="就不告诉你 (PATB-1086)"></a>就不告诉你 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/1038429065476579328" target="_blank" rel="noopener">PATB-1086</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>做作业的时候，邻座的小盆友问你：“五乘以七等于多少？”你应该不失礼貌地围笑着告诉他：“五十三。”本题就要求你，对任何一对给定的正整数，倒着输出它们的乘积。</p><p><img src="https://images.ptausercontent.com/0c3a4497-27c3-45ea-9c8e-5a1ab2df48af.jpg" alt="53.jpg"></p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在第一行给出两个不超过 1000 的正整数 A 和 B，其间以空格分隔。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>在一行中倒着输出 A 和 B 的乘积。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">5 </span><span class="number">7</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">53</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;   </span><br><span class="line">    <span class="keyword">int</span> a, b, c, d=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;a, &amp;b);</span><br><span class="line">    c = a * b;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(c)</span><br><span class="line">    &#123;</span><br><span class="line">        d = d * <span class="number">10</span> + c%<span class="number">10</span>;</span><br><span class="line">        c /= <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, d);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1087 有多少不同的值</title>
    <url>/posts/68ca25b8.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="有多少不同的值-PATB-1087"><a href="#有多少不同的值-PATB-1087" class="headerlink" title="有多少不同的值 (PATB-1087)"></a>有多少不同的值 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/1038429191091781632" target="_blank" rel="noopener">PATB-1087</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>当自然数 n 依次取 1、2、3、……、N 时，算式 ⌊n/2⌋+⌊n/3⌋+⌊n/5⌋ 有多少个不同的值？（注：⌊x⌋ 为取整函数，表示不超过 x 的最大自然数，即 x 的整数部分。）</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入给出一个正整数 N（2≤N≤104）。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>在一行中输出题面中算式取到的不同值的个数。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">2017</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">1480</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;   </span><br><span class="line">    <span class="keyword">int</span> n; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    <span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt; sst;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        sst.insert(i/<span class="number">2</span> + i/<span class="number">3</span> + i/<span class="number">5</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, sst.size());</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1088 三人行</title>
    <url>/posts/49b013ec.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="三人行-PATB-1088"><a href="#三人行-PATB-1088" class="headerlink" title="三人行 (PATB-1088)"></a>三人行 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/1038429286185074688" target="_blank" rel="noopener">PATB-1088</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>子曰：“三人行，必有我师焉。择其善者而从之，其不善者而改之。”</p><p>本题给定甲、乙、丙三个人的能力值关系为：甲的能力值确定是 2 位正整数；把甲的能力值的 2 个数字调换位置就是乙的能力值；甲乙两人能力差是丙的能力值的 X 倍；乙的能力值是丙的 Y 倍。请你指出谁比你强应“从之”，谁比你弱应“改之”。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在一行中给出三个数，依次为：M（你自己的能力值）、X 和 Y。三个数字均为不超过 1000 的正整数。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>在一行中首先输出甲的能力值，随后依次输出甲、乙、丙三人与你的关系：如果其比你强，输出 <code>Cong</code>；平等则输出 <code>Ping</code>；比你弱则输出 <code>Gai</code>。其间以 1 个空格分隔，行首尾不得有多余空格。</p><p>注意：如果解不唯一，则以甲的最大解为准进行判断；如果解不存在，则输出 <code>No Solution</code>。</p></blockquote><h2 id="样例输入1"><a href="#样例输入1" class="headerlink" title="样例输入1"></a>样例输入1</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">48 </span><span class="number">3</span> <span class="number">7</span></span><br></pre></td></tr></table></figure><h2 id="样例输出1"><a href="#样例输出1" class="headerlink" title="样例输出1"></a>样例输出1</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">48 </span>Ping Cong Gai</span><br></pre></td></tr></table></figure><h2 id="样例输入2"><a href="#样例输入2" class="headerlink" title="样例输入2"></a>样例输入2</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">48 </span><span class="number">11</span> <span class="number">6</span></span><br></pre></td></tr></table></figure><h2 id="样例输出2"><a href="#样例输出2" class="headerlink" title="样例输出2"></a>样例输出2</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="literal">No</span> <span class="string">Solution</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Sg(u) ((u) &gt; eps ? 1 : ((u) &lt; -eps ? -1 : 0))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Abs(u) (Sg(u) &gt;= 0 ? (u) : -(u))</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">double</span> DB;</span><br><span class="line"><span class="keyword">const</span> DB eps = <span class="number">1e-8</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> s[][<span class="number">5</span>] = &#123;<span class="string">"Cong"</span>, <span class="string">"Ping"</span>, <span class="string">"Gai"</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;   </span><br><span class="line">    <span class="keyword">int</span> m, x, y;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>, &amp;m, &amp;x, &amp;y);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> a, b, f = <span class="number">0</span>; DB c;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">99</span>; i&gt;=<span class="number">10</span>; i--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> j = i%<span class="number">10</span> * <span class="number">10</span> + i/<span class="number">10</span>;</span><br><span class="line">        <span class="keyword">if</span>(Abs(i-j)*y == j*x)</span><br><span class="line">        &#123;</span><br><span class="line">            a = i, b = j, c = <span class="number">1.0</span>*Abs(i-j)/x;</span><br><span class="line">            f = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(f)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d %s %s %s\n"</span>, a, s[Sg(m-a)+<span class="number">1</span>], s[Sg(m-b)+<span class="number">1</span>], s[Sg(m-c)+<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"No Solution\n"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1089 狼人杀-简单版</title>
    <url>/posts/26dbf90b.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="狼人杀-简单版-PATB-1089"><a href="#狼人杀-简单版-PATB-1089" class="headerlink" title="狼人杀-简单版 (PATB-1089)"></a>狼人杀-简单版 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/1038429385296453632" target="_blank" rel="noopener">PATB-1089</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>以下文字摘自《灵机一动·好玩的数学》：“狼人杀”游戏分为狼人、好人两大阵营。在一局“狼人杀”游戏中，1 号玩家说：“2 号是狼人”，2 号玩家说：“3 号是好人”，3 号玩家说：“4 号是狼人”，4 号玩家说：“5 号是好人”，5 号玩家说：“4 号是好人”。已知这 5 名玩家中有 2 人扮演狼人角色，有 2 人说的不是实话，有狼人撒谎但并不是所有狼人都在撒谎。扮演狼人角色的是哪两号玩家？</p><p>本题是这个问题的升级版：已知 N 名玩家中有 2 人扮演狼人角色，有 2 人说的不是实话，有狼人撒谎但并不是所有狼人都在撒谎。要求你找出扮演狼人角色的是哪几号玩家？</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在第一行中给出一个正整数 N（5≤N≤100）。随后 N 行，第 i 行给出第 i 号玩家说的话（1≤i≤N），即一个玩家编号，用正号表示好人，负号表示狼人。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>如果有解，在一行中按递增顺序输出 2 个狼人的编号，其间以空格分隔，行首尾不得有多余空格。如果解不唯一，则输出最小序列解 —— 即对于两个序列 A=a[1],…,a[M] 和 B=b[1],…,b[M]，若存在 0≤k&lt;M 使得 a[i]=b[i] （i≤k），且 a[k+1]&lt;b[k+1]，则称序列 A 小于序列 B。若无解则输出 <code>No Solution</code>。</p></blockquote><h2 id="样例输入1"><a href="#样例输入1" class="headerlink" title="样例输入1"></a>样例输入1</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">-2</span></span><br><span class="line">+<span class="number">3</span></span><br><span class="line"><span class="number">-4</span></span><br><span class="line">+<span class="number">5</span></span><br><span class="line">+<span class="number">4</span></span><br></pre></td></tr></table></figure><h2 id="样例输出1"><a href="#样例输出1" class="headerlink" title="样例输出1"></a>样例输出1</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">1 </span><span class="number">4</span></span><br></pre></td></tr></table></figure><h2 id="样例输入2"><a href="#样例输入2" class="headerlink" title="样例输入2"></a>样例输入2</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">6</span></span><br><span class="line">+<span class="number">6</span></span><br><span class="line">+<span class="number">3</span></span><br><span class="line">+<span class="number">1</span></span><br><span class="line"><span class="number">-5</span></span><br><span class="line"><span class="number">-2</span></span><br><span class="line">+<span class="number">4</span></span><br></pre></td></tr></table></figure><h2 id="样例输出2"><a href="#样例输出2" class="headerlink" title="样例输出2"></a>样例输出2</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">1 </span><span class="number">5</span></span><br></pre></td></tr></table></figure><h2 id="样例输入3"><a href="#样例输入3" class="headerlink" title="样例输入3"></a>样例输入3</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">-2</span></span><br><span class="line"><span class="number">-3</span></span><br><span class="line"><span class="number">-4</span></span><br><span class="line"><span class="number">-5</span></span><br><span class="line"><span class="number">-1</span></span><br></pre></td></tr></table></figure><h2 id="样例输出3"><a href="#样例输出3" class="headerlink" title="样例输出3"></a>样例输出3</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="literal">No</span> <span class="string">Solution</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>样例2解不唯一</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Sg(u) ((u) &gt; eps ? 1 : ((u) &lt; -eps ? -1 : 0))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Abs(u) (Sg(u) &gt;= 0 ? (u) : -(u))</span></span><br><span class="line"><span class="keyword">const</span> DB eps = <span class="number">1e-8</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[mxn], ok[mxn], lie[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++) </span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>; j&lt;=n; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>; k&lt;=n; k++)</span><br><span class="line">                ok[k] = <span class="number">1</span>;</span><br><span class="line">            ok[i] = ok[j] = <span class="number">-1</span>;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>; k&lt;=n; k++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(a[k] * ok[Abs(a[k])] &lt; <span class="number">0</span>)</span><br><span class="line">                    lie[num++] = k;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span>(num == <span class="number">2</span> &amp;&amp; ok[lie[<span class="number">0</span>]] + ok[lie[<span class="number">1</span>]] == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>, i, j);</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"No Solution\n"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1090 危险品装箱</title>
    <url>/posts/7aebb76d.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="危险品装箱-PATB-1090"><a href="#危险品装箱-PATB-1090" class="headerlink" title="危险品装箱 (PATB-1090)"></a>危险品装箱 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/1038429484026175488" target="_blank" rel="noopener">PATB-1090</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>集装箱运输货物时，我们必须特别小心，不能把不相容的货物装在一只箱子里。比如氧化剂绝对不能跟易燃液体同箱，否则很容易造成爆炸。</p><p>本题给定一张不相容物品的清单，需要你检查每一张集装箱货品清单，判断它们是否能装在同一只箱子里。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入第一行给出两个正整数：N (≤104) 是成对的不相容物品的对数；M (≤100) 是集装箱货品清单的单数。</p><p>随后数据分两大块给出。第一块有 N 行，每行给出一对不相容的物品。第二块有 M 行，每行给出一箱货物的清单，格式如下：</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">K</span> <span class="selector-tag">G</span><span class="selector-attr">[1]</span> <span class="selector-tag">G</span><span class="selector-attr">[2]</span> ... <span class="selector-tag">G</span><span class="selector-attr">[K]</span></span><br></pre></td></tr></table></figure><p>其中 <code>K</code> (≤1000) 是物品件数，<code>G[i]</code> 是物品的编号。简单起见，每件物品用一个 5 位数的编号代表。两个数字之间用空格分隔。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>对每箱货物清单，判断是否可以安全运输。如果没有不相容物品，则在一行中输出 <code>Yes</code>，否则输出 <code>No</code>。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">6 </span><span class="number">3</span></span><br><span class="line"><span class="symbol">20001 </span><span class="number">20002</span></span><br><span class="line"><span class="symbol">20003 </span><span class="number">20004</span></span><br><span class="line"><span class="symbol">20005 </span><span class="number">20006</span></span><br><span class="line"><span class="symbol">20003 </span><span class="number">20001</span></span><br><span class="line"><span class="symbol">20005 </span><span class="number">20004</span></span><br><span class="line"><span class="symbol">20004 </span><span class="number">20006</span></span><br><span class="line"><span class="symbol">4 </span><span class="number">00001</span> <span class="number">20004</span> <span class="number">00002</span> <span class="number">20003</span></span><br><span class="line"><span class="symbol">5 </span><span class="number">98823</span> <span class="number">20002</span> <span class="number">20003</span> <span class="number">20006</span> <span class="number">10010</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">12345</span> <span class="number">67890</span> <span class="number">23333</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="literal">No</span></span><br><span class="line"><span class="literal">Yes</span></span><br><span class="line"><span class="literal">Yes</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, m;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;n, &amp;m);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &gt; mmp;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x, y;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;x, &amp;y);</span><br><span class="line">        mmp[x].push_back(y);</span><br><span class="line">        mmp[y].push_back(x);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span> (m--) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">memset</span>(a, <span class="number">0</span>, <span class="keyword">sizeof</span> a);</span><br><span class="line">        <span class="keyword">int</span> k; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;k);</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; <span class="title">v</span><span class="params">(k)</span></span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;k; i++) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;v[i]);</span><br><span class="line">            a[v[i]] = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> f = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;v.size(); i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;mmp[v[i]].size(); j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (a[mmp[v[i]][j]])</span><br><span class="line">                &#123;</span><br><span class="line">                    f = <span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(f) <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%s\n"</span>, f ? <span class="string">"No"</span> :<span class="string">"Yes"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1092 最好吃的月饼</title>
    <url>/posts/28e4f644.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="最好吃的月饼-PATB-1092"><a href="#最好吃的月饼-PATB-1092" class="headerlink" title="最好吃的月饼 (PATB-1092)"></a>最好吃的月饼 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/1071785779399028736" target="_blank" rel="noopener">PATB-1092</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>月饼是久负盛名的中国传统糕点之一，自唐朝以来，已经发展出几百品种。</p><p><img src="https://images.ptausercontent.com/fcb325a0-7090-4bf4-acb0-d4d7ea832f27.jpg" alt="mk.jpg"></p><p>若想评比出一种“最好吃”的月饼，那势必在吃货界引发一场腥风血雨…… 在这里我们用数字说话，给出全国各地各种月饼的销量，要求你从中找出销量冠军，认定为最好吃的月饼。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入首先给出两个正整数 N（≤1000）和 M（≤100），分别为月饼的种类数（于是默认月饼种类从 1 到 N 编号）和参与统计的城市数量。</p><p>接下来 M 行，每行给出 N 个非负整数（均不超过 1 百万），其中第 i 个整数为第 i 种月饼的销量（块）。数字间以空格分隔。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>在第一行中输出最大销量，第二行输出销量最大的月饼的种类编号。如果冠军不唯一，则按编号递增顺序输出并列冠军。数字间以 1 个空格分隔，行首尾不得有多余空格。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">5 </span><span class="number">3</span></span><br><span class="line"><span class="symbol">1001 </span><span class="number">992</span> <span class="number">0</span> <span class="number">233</span> <span class="number">6</span></span><br><span class="line"><span class="symbol">8 </span><span class="number">0</span> <span class="number">2018</span> <span class="number">0</span> <span class="number">2008</span></span><br><span class="line"><span class="symbol">36 </span><span class="number">18</span> <span class="number">0</span> <span class="number">1024</span> <span class="number">4</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="number">2018</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">5</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> a[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, m;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;n, &amp;m);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(m--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> t; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;t);</span><br><span class="line">            a[i] += t;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> mx = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        mx = max(mx, a[i]);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, mx);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> nf = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i] == mx)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(nf)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">                nf = <span class="number">1</span>;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d"</span>, i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1091 N-自守数</title>
    <url>/posts/1e8236a5.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="N-自守数-PATB-1091"><a href="#N-自守数-PATB-1091" class="headerlink" title="N-自守数 (PATB-1091)"></a>N-自守数 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/1071785664454127616" target="_blank" rel="noopener">PATB-1091</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>如果某个数 K 的平方乘以 N 以后，结果的末尾几位数等于 K，那么就称这个数为“N-自守数”。例如 3×922=25392，而 25392 的末尾两位正好是 92，所以 92 是一个 3-自守数。</p><p>本题就请你编写程序判断一个给定的数字是否关于某个 N 是 N-自守数。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在第一行中给出正整数 M（≤20），随后一行给出 M 个待检测的、不超过 1000 的正整数。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>对每个需要检测的数字，如果它是 N-自守数就在一行中输出最小的 N 和 NK2 的值，以一个空格隔开；否则输出 <code>No</code>。注意题目保证 N&lt;10。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="number">3</span></span><br><span class="line"><span class="symbol">92 </span><span class="number">5</span> <span class="number">233</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="number">3</span> <span class="number">25392</span></span><br><span class="line"><span class="number">1</span> <span class="number">25</span></span><br><span class="line"><span class="literal">No</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(n--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> m, f=<span class="number">1</span>; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;m);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">9</span>; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> x = i * m * m;</span><br><span class="line">            <span class="keyword">char</span> s[<span class="number">20</span>], t[<span class="number">20</span>];</span><br><span class="line">            <span class="built_in">sprintf</span>(s, <span class="string">"%d"</span>, x);</span><br><span class="line">            <span class="built_in">sprintf</span>(t, <span class="string">"%d"</span>, m);</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">strcmp</span>(s+<span class="built_in">strlen</span>(s)-<span class="built_in">strlen</span>(t), t) == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>, i, x);</span><br><span class="line">                f = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(f) <span class="built_in">printf</span>(<span class="string">"No\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1093 字符串A+B</title>
    <url>/posts/c88c05d2.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="字符串A-B-PATB-1093"><a href="#字符串A-B-PATB-1093" class="headerlink" title="字符串A+B (PATB-1093)"></a>字符串A+B (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/1071785884776722432" target="_blank" rel="noopener">PATB-1093</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>给定两个字符串 A 和 B，本题要求你输出 A+B，即两个字符串的并集。要求先输出 A，再输出 B，但<strong>重复的字符必须被剔除</strong>。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在两行中分别给出 A 和 B，均为长度不超过 10^6的、由可见 ASCII 字符 (即码值为32~126)和空格组成的、由回车标识结束的非空字符串。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>在一行中输出题面要求的 A 和 B 的和。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">This <span class="keyword">is</span> a sample test</span><br><span class="line"><span class="keyword">to</span> show you_How <span class="keyword">it</span> works</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">This ampletowyu_Hrk</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> a[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">2</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">char</span> c;</span><br><span class="line">        <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%c"</span>, &amp;c) &amp;&amp; c!=<span class="string">'\n'</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(a[c] == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%c"</span>, c);</span><br><span class="line">                a[c] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1094 谷歌的招聘</title>
    <url>/posts/4979b8c8.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="谷歌的招聘-PATB-1094"><a href="#谷歌的招聘-PATB-1094" class="headerlink" title="谷歌的招聘 (PATB-1094)"></a>谷歌的招聘 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/1071785997033074688" target="_blank" rel="noopener">PATB-1094</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>2004 年 7 月，谷歌在硅谷的 101 号公路边竖立了一块巨大的广告牌（如下图）用于招聘。内容超级简单，就是一个以 .com 结尾的网址，而前面的网址是一个 10 位素数，这个素数是自然常数 e 中最早出现的 10 位连续数字。能找出这个素数的人，就可以通过访问谷歌的这个网站进入招聘流程的下一步。</p><p><img src="https://images.ptausercontent.com/57148679-d574-4f49-b048-775c6c07791c.jpg" alt="prime.jpg"></p><p>自然常数 e 是一个著名的超越数，前面若干位写出来是这样的：e = 2.71828182845904523536028747135266249775</p><p>724709369995957496696762772407663035354759457138217852516642<strong>7427466391</strong>932003059921…</p><p>其中粗体标出的 10 位数就是答案。</p><p>本题要求你编程解决一个更通用的问题：从任一给定的长度为 L 的数字中，找出最早出现的 K 位连续数字所组成的素数。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入在第一行给出 2 个正整数，分别是 L（不超过 1000 的正整数，为数字长度）和 K（小于 10 的正整数）。接下来一行给出一个长度为 L 的正整数 N。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>在一行中输出 N 中最早出现的 K 位连续数字所组成的素数。如果这样的素数不存在，则输出 <code>404</code>。注意，原始数字中的前导零也计算在位数之内。例如在 200236 中找 4 位素数，0023 算是解；但第一位 2 不能被当成 0002 输出，因为在原始数字中不存在这个 2 的前导零。</p></blockquote><h2 id="样例输入1"><a href="#样例输入1" class="headerlink" title="样例输入1"></a>样例输入1</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">20 </span><span class="number">5</span></span><br><span class="line"><span class="number">23654987725541023819</span></span><br></pre></td></tr></table></figure><h2 id="样例输出1"><a href="#样例输出1" class="headerlink" title="样例输出1"></a>样例输出1</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">49877</span></span><br></pre></td></tr></table></figure><h2 id="样例输入2"><a href="#样例输入2" class="headerlink" title="样例输入2"></a>样例输入2</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">10 </span><span class="number">3</span></span><br><span class="line"><span class="number">2468024680</span></span><br></pre></td></tr></table></figure><h2 id="样例输出2"><a href="#样例输出2" class="headerlink" title="样例输出2"></a>样例输出2</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">404</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">char</span> s[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isPrime</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">0</span> || n == <span class="number">1</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">2</span> || n == <span class="number">3</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (n % <span class="number">6</span> != <span class="number">1</span> &amp;&amp; n % <span class="number">6</span> != <span class="number">5</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> m = <span class="built_in">sqrt</span>(n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">5</span>; i &lt;= m; i += <span class="number">6</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (n % i == <span class="number">0</span> || n % (i + <span class="number">2</span>) == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> L, K;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d %s"</span>, &amp;L, &amp;K, s);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> f = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;=L-K; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> t; <span class="keyword">char</span> a[<span class="number">15</span>];</span><br><span class="line">        <span class="built_in">memset</span>(a, <span class="number">0</span>, <span class="keyword">sizeof</span> a);</span><br><span class="line">        <span class="built_in">strncpy</span>(a, s+i, K);</span><br><span class="line">        <span class="built_in">sscanf</span>(a, <span class="string">"%d"</span>, &amp;t);</span><br><span class="line">        <span class="keyword">if</span>(isPrime(t))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%s\n"</span>, a);</span><br><span class="line">            f = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(f)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"404\n"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】PATB-1095 解码PAT准考证</title>
    <url>/posts/f93c7bd0.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="解码PAT准考证-PATB-1095"><a href="#解码PAT准考证-PATB-1095" class="headerlink" title="解码PAT准考证 (PATB-1095)"></a>解码PAT准考证 (<a href="https://pintia.cn/problem-sets/994805260223102976/problems/1071786104348536832" target="_blank" rel="noopener">PATB-1095</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>PAT 准考证号由 4 部分组成：</p><ul><li>第 1 位是级别，即 <code>T</code> 代表顶级；<code>A</code> 代表甲级；<code>B</code> 代表乙级；</li><li>第 2~4 位是考场编号，范围从 101 到 999；</li><li>第 5~10 位是考试日期，格式为年、月、日顺次各占 2 位；</li><li>最后 11~13 位是考生编号，范围从 000 到 999。</li></ul><p>现给定一系列考生的准考证号和他们的成绩，请你按照要求输出各种统计信息。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入首先在一行中给出两个正整数 N（≤104）和 M（≤100），分别为考生人数和统计要求的个数。</p><p>接下来 N 行，每行给出一个考生的准考证号和其分数（在区间 [0,100] 内的整数），其间以空格分隔。</p><p>考生信息之后，再给出 M 行，每行给出一个统计要求，格式为：<code>类型 指令</code>，其中</p><ul><li><code>类型</code> 为 1 表示要求按分数非升序输出某个指定级别的考生的成绩，对应的 <code>指令</code> 则给出代表指定级别的字母；</li><li><code>类型</code> 为 2 表示要求将某指定考场的考生人数和总分统计输出，对应的 <code>指令</code> 则给出指定考场的编号；</li><li><code>类型</code> 为 3 表示要求将某指定日期的考生人数分考场统计输出，对应的 <code>指令</code> 则给出指定日期，格式与准考证上日期相同。</li></ul></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>对每项统计要求，首先在一行中输出 <code>Case #: 要求</code>，其中 <code>#</code> 是该项要求的编号，从 1 开始；<code>要求</code> 即复制输入给出的要求。随后输出相应的统计结果：</p><ul><li><code>类型</code> 为 1 的指令，输出格式与输入的考生信息格式相同，即 <code>准考证号 成绩</code>。对于分数并列的考生，按其准考证号的字典序递增输出（题目保证无重复准考证号）；</li><li><code>类型</code> 为 2 的指令，按 <code>人数 总分</code> 的格式输出；</li><li><code>类型</code> 为 3 的指令，输出按人数非递增顺序，格式为 <code>考场编号 总人数</code>。若人数并列则按考场编号递增顺序输出。</li></ul><p>如果查询结果为空，则输出 <code>NA</code>。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">8</span> <span class="number">4</span></span><br><span class="line">B123180908127 <span class="number">99</span></span><br><span class="line">B102180908003 <span class="number">86</span></span><br><span class="line">A112180318002 <span class="number">98</span></span><br><span class="line">T107150310127 <span class="number">62</span></span><br><span class="line">A107180908108 <span class="number">100</span></span><br><span class="line">T123180908010 <span class="number">78</span></span><br><span class="line">B112160918035 <span class="number">88</span></span><br><span class="line">A107180908021 <span class="number">98</span></span><br><span class="line"><span class="number">1</span> A</span><br><span class="line"><span class="number">2</span> <span class="number">107</span></span><br><span class="line"><span class="number">3</span> <span class="number">180908</span></span><br><span class="line"><span class="number">2</span> <span class="number">999</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">Case <span class="number">1</span>: <span class="number">1</span> A</span><br><span class="line">A107180908108 <span class="number">100</span></span><br><span class="line">A107180908021 <span class="number">98</span></span><br><span class="line">A112180318002 <span class="number">98</span></span><br><span class="line">Case <span class="number">2</span>: <span class="number">2</span> <span class="number">107</span></span><br><span class="line"><span class="number">3</span> <span class="number">260</span></span><br><span class="line">Case <span class="number">3</span>: <span class="number">3</span> <span class="number">180908</span></span><br><span class="line"><span class="number">107</span> <span class="number">2</span></span><br><span class="line"><span class="number">123</span> <span class="number">2</span></span><br><span class="line"><span class="number">102</span> <span class="number">1</span></span><br><span class="line">Case <span class="number">4</span>: <span class="number">2</span> <span class="number">999</span></span><br><span class="line">NA</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e4</span> + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">P</span>&#123;</span></span><br><span class="line">    <span class="keyword">char</span> s[<span class="number">20</span>];</span><br><span class="line">    <span class="keyword">int</span> x, t;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> P &amp;x) <span class="keyword">const</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(t != x.t)</span><br><span class="line">            <span class="keyword">return</span> t &gt; x.t;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">strcmp</span>(s, x.s) &lt; <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;a[mxn], ans[mxn];</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">P2</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> s, cnt;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> P2 &amp;x) <span class="keyword">const</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(cnt != x.cnt)</span><br><span class="line">            <span class="keyword">return</span> cnt &gt; x.cnt;</span><br><span class="line">        <span class="keyword">return</span> s &lt; x.s;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;b[mxn];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> idx[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, m;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;n, &amp;m);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s %d"</span>, a[i].s, &amp;a[i].t);</span><br><span class="line">        <span class="built_in">sscanf</span>(a[i].s+<span class="number">1</span>, <span class="string">"%3d"</span>, &amp;a[i].x);</span><br><span class="line">    &#125;</span><br><span class="line">    sort(a, a+n);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> cs=<span class="number">1</span>; cs&lt;=m; cs++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> c; <span class="keyword">char</span> g[<span class="number">10</span>];</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %s"</span>, &amp;c, g);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Case %d: %d %s\n"</span>, cs, c, g);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">int</span> num=<span class="number">0</span>, sum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(c == <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(a[i].s[<span class="number">0</span>] == g[<span class="number">0</span>])&#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"%s %d\n"</span>, a[i].s, a[i].t);</span><br><span class="line">                    num++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(num == <span class="number">0</span>)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"NA\n"</span>);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(c == <span class="number">2</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(<span class="built_in">strncmp</span>(a[i].s+<span class="number">1</span>, g, <span class="number">3</span>) == <span class="number">0</span>)</span><br><span class="line">                    sum += a[i].t, num++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(num)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>, num, sum); </span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"NA\n"</span>);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(c == <span class="number">3</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(<span class="built_in">strncmp</span>(a[i].s+<span class="number">4</span>, g, <span class="number">6</span>) == <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">int</span> x = a[i].x; </span><br><span class="line">                    <span class="keyword">if</span>(idx[x] == <span class="number">0</span>)&#123;</span><br><span class="line">                        idx[x] = ++num;</span><br><span class="line">                        b[idx[x]].s = x;</span><br><span class="line">                    &#125;</span><br><span class="line">                    b[idx[x]].cnt++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(num)</span><br><span class="line">            &#123;</span><br><span class="line">                sort(b+<span class="number">1</span>, b+num+<span class="number">1</span>);</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=num; i++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"%03d %d\n"</span>, b[i].s, b[i].cnt);</span><br><span class="line">                    b[i].cnt = idx[b[i].s] = <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"NA\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>PATB</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】POJ-1050 To the Max</title>
    <url>/posts/de10b18b.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="To-the-Max-POJ-1050"><a href="#To-the-Max-POJ-1050" class="headerlink" title="To the Max (POJ - 1050)"></a>To the Max (<a href="https://vjudge.net/problem/POJ-1050" target="_blank" rel="noopener">POJ - 1050</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>Given a two-dimensional array of positive and negative integers, a sub-rectangle is any contiguous sub-array of size 1*1 or greater located within the whole array. The sum of a rectangle is the sum of all the elements in that rectangle. In this problem the sub-rectangle with the largest sum is referred to as the maximal sub-rectangle.<br>As an example, the maximal sub-rectangle of the array:</p><p>0 -2 -7 0<br>9 2 -6 2<br>-4 1 -4 1<br>-1 8 0 -2<br>is in the lower left corner:</p><p>9 2<br>-4 1<br>-1 8<br>and has a sum of 15.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>The input consists of an N * N array of integers. The input begins with a single positive integer N on a line by itself, indicating the size of the square two-dimensional array. This is followed by N^2 integers separated by whitespace (spaces and newlines). These are the N^2 integers of the array, presented in row-major order. That is, all numbers in the first row, left to right, then all numbers in the second row, left to right, etc. N may be as large as 100. The numbers in the array will be in the range [-127,127].</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>Output the sum of the maximal sub-rectangle.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">0</span> <span class="number">-2</span> <span class="number">-7</span> <span class="number">0</span> <span class="number">9</span> <span class="number">2</span> <span class="number">-6</span> <span class="number">2</span></span><br><span class="line"><span class="number">-4</span> <span class="number">1</span> <span class="number">-4</span>  <span class="number">1</span> <span class="number">-1</span></span><br><span class="line"></span><br><span class="line"><span class="number">8</span>  <span class="number">0</span> <span class="number">-2</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">15</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e2</span> + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[N][N] = &#123;&#123;<span class="number">0</span>&#125;&#125;;</span><br><span class="line"><span class="keyword">int</span> f[N][N][N] = &#123;&#123;&#123;<span class="number">0</span>&#125;&#125;&#125;;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;n; j++)</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i][j]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mx = -inf;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;n; j++) &#123;</span><br><span class="line">            <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=j; k&lt;n; k++) &#123;</span><br><span class="line">                sum += a[i][k];</span><br><span class="line">                f[i][j][k] = max(f[i<span class="number">-1</span>][j][k]+sum, sum);</span><br><span class="line">                mx = max(mx, f[i][j][k]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, mx);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>动态规划</category>
        <category>基础DP</category>
      </categories>
      <tags>
        <tag>DP</tag>
        <tag>POJ</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】POJ-1251 Jungle Roads</title>
    <url>/posts/de664e2a.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="Jungle-Roads-POJ-1251"><a href="#Jungle-Roads-POJ-1251" class="headerlink" title="Jungle Roads (POJ - 1251)"></a>Jungle Roads (<a href="https://vjudge.net/problem/POJ-1251" target="_blank" rel="noopener">POJ - 1251</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p><img src="/posts/de664e2a/POJ1251.png" alt="img"><br>The Head Elder of the tropical island of Lagrishan has a problem. A burst of foreign aid money was spent on extra roads between villages some years ago. But the jungle overtakes roads relentlessly, so the large road network is too expensive to maintain. The Council of Elders must choose to stop maintaining some roads. The map above on the left shows all the roads in use now and the cost in aacms per month to maintain them. Of course there needs to be some way to get between all the villages on maintained roads, even if the route is not as short as before. The Chief Elder would like to tell the Council of Elders what would be the smallest amount they could spend in aacms per month to maintain roads that would connect all the villages. The villages are labeled A through I in the maps above. The map on the right shows the roads that could be maintained most cheaply, for 216 aacms per month. Your task is to write a program that will solve such problems.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>The input consists of one to 100 data sets, followed by a final line containing only 0. Each data set starts with a line containing only a number n, which is the number of villages, 1 &lt; n &lt; 27, and the villages are labeled with the first n letters of the alphabet, capitalized. Each data set is completed with n-1 lines that start with village labels in alphabetical order. There is no line for the last village. Each line for a village starts with the village label followed by a number, k, of roads from this village to villages with labels later in the alphabet. If k is greater than 0, the line continues with data for each of the k roads. The data for each road is the village label for the other end of the road followed by the monthly maintenance cost in aacms for the road. Maintenance costs will be positive integers less than 100. All data fields in the row are separated by single blanks. The road network will always allow travel between all the villages. The network will never have more than 75 roads. No village will have more than 15 roads going to other villages (before or after in the alphabet). In the sample input below, the first data set goes with the map above.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>The output is one integer per line for each data set: the minimum cost in aacms per month to maintain a road system that connect all the villages. Caution: A brute force solution that examines every possible set of roads will not finish within the one minute time limit.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">9</span></span><br><span class="line">A <span class="number">2</span> B <span class="number">12</span> I <span class="number">25</span></span><br><span class="line">B <span class="number">3</span> C <span class="number">10</span> H <span class="number">40</span> I <span class="number">8</span></span><br><span class="line">C <span class="number">2</span> D <span class="number">18</span> G <span class="number">55</span></span><br><span class="line">D <span class="number">1</span> E <span class="number">44</span></span><br><span class="line">E <span class="number">2</span> F <span class="number">60</span> G <span class="number">38</span></span><br><span class="line">F <span class="number">0</span></span><br><span class="line">G <span class="number">1</span> H <span class="number">35</span></span><br><span class="line">H <span class="number">1</span> I <span class="number">35</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line">A <span class="number">2</span> B <span class="number">10</span> C <span class="number">40</span></span><br><span class="line">B <span class="number">1</span> C <span class="number">20</span></span><br><span class="line"><span class="number">0</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">216</span></span><br><span class="line"><span class="number">30</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e2</span>+<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> f[N] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">        f[i] = i;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Find</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> f[x]==x ? x : f[x]=Find(f[x]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">same</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> Find(x)==Find(y);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">join</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    x=Find(x), y=Find(y);</span><br><span class="line">    f[x] = y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> u, v, w;</span><br><span class="line">&#125; e[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(edge a, edge b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a.w &lt; b.w;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">kruskal</span><span class="params">(<span class="keyword">int</span> m)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;m; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(!same(e[i].u, e[i].v)) &#123;</span><br><span class="line">            join(e[i].u, e[i].v);</span><br><span class="line">            ans += e[i].w;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n)==<span class="number">1</span> &amp;&amp; n) &#123;</span><br><span class="line">        <span class="keyword">int</span> k, w, num=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">char</span> f, t;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n<span class="number">-1</span>; i++) &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">" %c%d"</span>, &amp;f, &amp;k);</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;k; j++) &#123;</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">" %c%d"</span>, &amp;t, &amp;w);</span><br><span class="line">                e[num] = &#123;f-<span class="string">'A'</span>, t-<span class="string">'A'</span>, w&#125;;</span><br><span class="line">                num++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        sort(e, e+num, cmp);</span><br><span class="line">        init(n);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, kruskal(num));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>图论</category>
        <category>支撑树</category>
        <category>最小生成树</category>
        <category>Kruskal</category>
      </categories>
      <tags>
        <tag>POJ</tag>
        <tag>并查集</tag>
        <tag>Kruskal</tag>
        <tag>MST</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】POJ-1067 取石子游戏</title>
    <url>/posts/f9c0b570.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="取石子游戏-POJ-1067"><a href="#取石子游戏-POJ-1067" class="headerlink" title="取石子游戏(POJ-1067)"></a>取石子游戏(<a href="https://vjudge.net/problem/POJ-1067" target="_blank" rel="noopener">POJ-1067</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>有两堆石子，数量任意，可以不同。游戏开始由两个人轮流取石子。游戏规定，每次有两种不同的取法，一是可以在任意的一堆中取走任意多的石子；二是可以在两堆中同时取走相同数量的石子。最后把石子全部取完者为胜者。现在给出初始的两堆石子的数目，如果轮到你先取，假设双方都采取最好的策略，问最后你是胜者还是败者。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入包含若干行，表示若干种石子的初始情况，其中每一行包含两个非负整数a和b，表示两堆石子的数目，a和b都不大于1,000,000,000。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>输出对应也有若干行，每行包含一个数字1或0，如果最后你是胜者，则为1，反之，则为0。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">2 </span><span class="number">1</span></span><br><span class="line"><span class="symbol">8 </span><span class="number">4</span></span><br><span class="line"><span class="symbol">4 </span><span class="number">7</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">0</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">0</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>Wythoff博弈</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a, b;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;a, &amp;b))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(a &gt; b) swap(a, b);</span><br><span class="line">        <span class="keyword">if</span>(a == (<span class="keyword">int</span>)((<span class="built_in">sqrt</span>(<span class="number">5</span>)+<span class="number">1</span>)/<span class="number">2</span> * (b-a)))&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"0\n"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"1\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>博弈论</category>
      </categories>
      <tags>
        <tag>博弈论</tag>
        <tag>Wythoff博弈</tag>
        <tag>POJ</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】POJ-1321 棋盘问题</title>
    <url>/posts/aa3d2b44.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="棋盘问题-POJ-1321"><a href="#棋盘问题-POJ-1321" class="headerlink" title="棋盘问题 (POJ - 1321)"></a>棋盘问题 (<a href="https://vjudge.net/problem/POJ-1321" target="_blank" rel="noopener">POJ - 1321</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>在一个给定形状的棋盘（形状可能是不规则的）上面摆放棋子，棋子没有区别。要求摆放时任意的两个棋子不能放在棋盘中的同一行或者同一列，请编程求解对于给定形状和大小的棋盘，摆放k个棋子的所有可行的摆放方案C。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>输入含有多组测试数据。<br>每组数据的第一行是两个正整数，n k，用一个空格隔开，表示了将在一个n*n的矩阵内描述棋盘，以及摆放棋子的数目。 n &lt;= 8 , k &lt;= n<br>当为-1 -1时表示输入结束。<br>随后的n行描述了棋盘的形状：每行有n个字符，其中 # 表示棋盘区域， . 表示空白区域（数据保证不出现多余的空白行或者空白列）。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>对于每一组数据，给出一行输出，输出摆放的方案数目C （数据保证C&lt;2^31）。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line">2 1</span><br><span class="line"><span class="comment">#.</span></span><br><span class="line">.<span class="comment">#</span></span><br><span class="line">4 4</span><br><span class="line"><span class="string">...</span><span class="comment">#</span></span><br><span class="line"><span class="string">..</span><span class="comment">#.</span></span><br><span class="line">.<span class="comment">#..</span></span><br><span class="line"><span class="comment">#...</span></span><br><span class="line">-1 -1</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>按行讨论，保存列的访问状态</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">8</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> b[N][N] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">bool</span> vis[N] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> n, k, ans = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> cnt)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(cnt&gt;=k) &#123;</span><br><span class="line">        ans++;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=x; i&lt;n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;n; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(b[i][j]==<span class="string">'#'</span> &amp;&amp; !vis[j]) &#123;</span><br><span class="line">                vis[j] = <span class="literal">true</span>;</span><br><span class="line">                dfs(i+<span class="number">1</span>, cnt+<span class="number">1</span>);</span><br><span class="line">                vis[j] = <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;k)==<span class="number">2</span> &amp;&amp; n!=<span class="number">-1</span> &amp;&amp; k!=<span class="number">-1</span>) &#123;</span><br><span class="line">        ans = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">memset</span>(vis, <span class="number">0</span>, <span class="keyword">sizeof</span>(vis));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;n; j++)</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">" %c"</span>, &amp;b[i][j]);</span><br><span class="line"></span><br><span class="line">        dfs(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>搜索</category>
        <category>DFS</category>
      </categories>
      <tags>
        <tag>kuangbin 专题一</tag>
        <tag>DFS</tag>
        <tag>POJ</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】POJ-1426 Find The Multiple</title>
    <url>/posts/a89bb0f6.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="Find-The-Multiple-POJ-1426"><a href="#Find-The-Multiple-POJ-1426" class="headerlink" title="Find The Multiple (POJ - 1426)"></a>Find The Multiple (<a href="https://vjudge.net/problem/POJ-1426" target="_blank" rel="noopener">POJ - 1426</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>Given a positive integer n, write a program to find out a nonzero multiple m of n whose decimal representation contains only the digits 0 and 1. You may assume that n is not greater than 200 and there is a corresponding m containing no more than 100 decimal digits.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>The input file may contain multiple test cases. Each line contains a value of n (1 &lt;= n &lt;= 200). A line containing a zero terminates the input.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For each value of n in the input print a line containing the corresponding value of m. The decimal representation of m must not contain more than 100 digits. If there are multiple solutions for a given value of n, any one of them is acceptable.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">6</span></span><br><span class="line"><span class="number">19</span></span><br><span class="line"><span class="number">0</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">10</span></span><br><span class="line"><span class="number">100100100100100100</span></span><br><span class="line"><span class="number">111111111111111111</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>一维bfs</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">15</span>+<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bfs</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">queue</span>&lt;ll&gt; q;</span><br><span class="line">    q.push(<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">while</span>(!q.empty()) &#123;</span><br><span class="line">        ll t = q.front();</span><br><span class="line">        q.pop();</span><br><span class="line">        <span class="keyword">if</span>(t%n==<span class="number">0</span>) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, t);</span><br><span class="line">            <span class="keyword">return</span> ;</span><br><span class="line">        &#125;</span><br><span class="line">        q.push(t*<span class="number">10</span>);</span><br><span class="line">        q.push(t*<span class="number">10</span>+<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n)==<span class="number">1</span> &amp;&amp; n) &#123;</span><br><span class="line">        bfs();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>搜索</category>
        <category>BFS</category>
      </categories>
      <tags>
        <tag>BFS</tag>
        <tag>kuangbin 专题一</tag>
        <tag>POJ</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】POJ-1458 Common Subsequence</title>
    <url>/posts/9d3af58e.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="Common-Subsequence-POJ-1458、HDU-1159"><a href="#Common-Subsequence-POJ-1458、HDU-1159" class="headerlink" title="Common Subsequence (POJ-1458、HDU - 1159)"></a>Common Subsequence (<a href="https://vjudge.net/problem/POJ-1458" target="_blank" rel="noopener">POJ-1458</a>、<a href="https://vjudge.net/problem/HDU-1159" target="_blank" rel="noopener">HDU - 1159</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>A subsequence of a given sequence is the given sequence with some elements (possible none) left out. Given a sequence X = &lt; x1, x2, …, xm &gt; another sequence Z = &lt; z1, z2, …, zk &gt; is a subsequence of X if there exists a strictly increasing sequence &lt; i1, i2, …, ik &gt; of indices of X such that for all j = 1,2,…,k, x ij = zj. For example, Z = &lt; a, b, f, c &gt; is a subsequence of X = &lt; a, b, c, f, b, c &gt; with index sequence &lt; 1, 2, 4, 6 &gt;. Given two sequences X and Y the problem is to find the length of the maximum-length common subsequence of X and Y.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>The program input is from the std input. Each data set in the input contains two strings representing the given sequences. The sequences are separated by any number of white spaces. The input data are correct.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For each set of data the program prints on the standard output the length of the maximum-length common subsequence from the beginning of a separate line.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">abcfbc</span>         <span class="string">abfcab</span></span><br><span class="line"><span class="attr">programming</span>    <span class="string">contest </span></span><br><span class="line"><span class="attr">abcd</span>           <span class="string">mnp</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">0</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e3</span>+<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> a[N], b[N];</span><br><span class="line"><span class="keyword">int</span> dp[N][N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%s%s"</span>, a, b)==<span class="number">2</span>) &#123;</span><br><span class="line">        <span class="keyword">int</span> la = <span class="built_in">strlen</span>(a);</span><br><span class="line">        <span class="keyword">int</span> lb = <span class="built_in">strlen</span>(b);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=la; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=lb; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(a[i<span class="number">-1</span>]==b[j<span class="number">-1</span>])</span><br><span class="line">                    dp[i][j] = dp[i<span class="number">-1</span>][j<span class="number">-1</span>]+<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    dp[i][j] = max(dp[i<span class="number">-1</span>][j], dp[i][j<span class="number">-1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, dp[la][lb]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>动态规划</category>
        <category>LCS</category>
      </categories>
      <tags>
        <tag>DP</tag>
        <tag>kuangbin 专题十二</tag>
        <tag>POJ</tag>
        <tag>LCS</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】POJ-1704 Georgia and Bob</title>
    <url>/posts/a96810d1.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="Georgia-and-Bob-POJ-1704"><a href="#Georgia-and-Bob-POJ-1704" class="headerlink" title="Georgia and Bob(POJ-1704)"></a>Georgia and Bob(<a href="https://vjudge.net/problem/POJ-1704" target="_blank" rel="noopener">POJ-1704</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>Georgia and Bob decide to play a self-invented game. They draw a row of grids on paper, number the grids from left to right by 1, 2, 3, …, and place N chessmen on different grids, as shown in the following figure for example:<br><img src="https://vj.z180.cn/c76b52797bb489f0387716c46010da41?v=1594466739" alt="img"><br>Georgia and Bob move the chessmen in turn. Every time a player will choose a chessman, and move it to the left without going over any other chessmen or across the left edge. The player can freely choose number of steps the chessman moves, with the constraint that the chessman must be moved at least ONE step and one grid can at most contains ONE single chessman. The player who cannot make a move loses the game.</p><p>Georgia always plays first since “Lady first”. Suppose that Georgia and Bob both do their best in the game, i.e., if one of them knows a way to win the game, he or she will be able to carry it out.</p><p>Given the initial positions of the n chessmen, can you predict who will finally win the game?</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>The first line of the input contains a single integer T (1 &lt;= T &lt;= 20), the number of test cases. Then T cases follow. Each test case contains two lines. The first line consists of one integer N (1 &lt;= N &lt;= 1000), indicating the number of chessmen. The second line contains N different integers P1, P2 … Pn (1 &lt;= Pi &lt;= 10000), which are the initial positions of the n chessmen.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For each test case, prints a single line, “Georgia will win”, if Georgia will win the game; “Bob will win”, if Bob will win the game; otherwise ‘Not sure’.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">2</span> <span class="number">3</span></span><br><span class="line"><span class="number">8</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">5</span> <span class="number">6</span> <span class="number">7</span> <span class="number">9</span> <span class="number">12</span> <span class="number">14</span> <span class="number">17</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">Bob</span> <span class="string">will win</span></span><br><span class="line"><span class="attr">Georgia</span> <span class="string">will win</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>当棋子两两一组位于同一格时，后手可以模仿先手操作获得胜利，此时为必败态。于是可以将棋子划分为两两一组（n为奇数时可以加上一个位置为0的棋子），每组内的距离当作石子数做一个Nim博弈。先手是最后移动完棋子使得局面为必败态的，和最后结果一样。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> a[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> n; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(n&amp;<span class="number">1</span>)&#123;</span><br><span class="line">            a[n++] = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        sort(a, a+n);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> nim=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i+=<span class="number">2</span>)&#123;</span><br><span class="line">            nim ^= a[i+<span class="number">1</span>]-a[i]<span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(nim)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Georgia will win\n"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Bob will win\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>博弈论</category>
      </categories>
      <tags>
        <tag>博弈论</tag>
        <tag>Nim博弈</tag>
        <tag>POJ</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】POJ-1740 A New Stone Game</title>
    <url>/posts/493e375b.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="A-New-Stone-Game-POJ-1740"><a href="#A-New-Stone-Game-POJ-1740" class="headerlink" title="A New Stone Game(POJ-1740)"></a>A New Stone Game(<a href="https://vjudge.net/problem/POJ-1740" target="_blank" rel="noopener">POJ-1740</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>Alice and Bob decide to play a new stone game.At the beginning of the game they pick n(1&lt;=n&lt;=10) piles of stones in a line. Alice and Bob move the stones in turn.<br>At each step of the game,the player choose a pile,remove at least one stones,then freely move stones from this pile to any other pile that still has stones.<br>For example:n=4 and the piles have (3,1,4,2) stones.If the player chose the first pile and remove one.Then it can reach the follow states.<br>2 1 4 2<br>1 2 4 2（move one stone to Pile 2）<br>1 1 5 2（move one stone to Pile 3）<br>1 1 4 3（move one stone to Pile 4）<br>0 2 5 2（move one stone to Pile 2 and another one to Pile 3）<br>0 2 4 3（move one stone to Pile 2 and another one to Pile 4）<br>0 1 5 3（move one stone to Pile 3 and another one to Pile 4）<br>0 3 4 2（move two stones to Pile 2）<br>0 1 6 2（move two stones to Pile 3）<br>0 1 4 4（move two stones to Pile 4）<br>Alice always moves first. Suppose that both Alice and Bob do their best in the game.<br>You are to write a program to determine who will finally win the game.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>The input contains several test cases. The first line of each test case contains an integer number n, denoting the number of piles. The following n integers describe the number of stones in each pile at the beginning of the game, you may assume the number of stones in each pile will not exceed 100.<br>The last test case is followed by one zero.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For each test case, if Alice win the game,output 1,otherwise output 0.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="number">3</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">1</span> <span class="number">3</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">1</span></span><br><span class="line"><span class="number">0</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">0</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>当石子堆数为偶数，且石子数相等的堆也是偶数个时，后手可以模仿先手操作获得胜利，此时为必败态。其它情况时，先手都可以把最大堆的石子取走一个，并将剩下的石子分配给别的堆使得局面为必败态。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> a[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n) &amp;&amp; n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(n&amp;<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"1\n"</span>);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        sort(a, a+n);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> f = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i+=<span class="number">2</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i+<span class="number">1</span>] != a[i])&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"1\n"</span>);</span><br><span class="line">                f = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(f)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"0\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>博弈论</category>
      </categories>
      <tags>
        <tag>博弈论</tag>
        <tag>POJ</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】POJ-1836 Alignment</title>
    <url>/posts/2a16c3d1.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="Alignment-POJ-1836"><a href="#Alignment-POJ-1836" class="headerlink" title="Alignment (POJ - 1836)"></a>Alignment (<a href="https://vjudge.net/problem/POJ-1836" target="_blank" rel="noopener">POJ - 1836</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>In the army, a platoon is composed by n soldiers. During the morning inspection, the soldiers are aligned in a straight line in front of the captain. The captain is not satisfied with the way his soldiers are aligned; it is true that the soldiers are aligned in order by their code number: 1 , 2 , 3 , . . . , n , but they are not aligned by their height. The captain asks some soldiers to get out of the line, as the soldiers that remain in the line, without changing their places, but getting closer, to form a new line, where each soldier can see by looking lengthwise the line at least one of the line’s extremity (left or right). A soldier see an extremity if there isn’t any soldiers with a higher or equal height than his height between him and that extremity.</p><p>Write a program that, knowing the height of each soldier, determines the minimum number of soldiers which have to get out of line.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>On the first line of the input is written the number of the soldiers n. On the second line is written a series of n floating numbers with at most 5 digits precision and separated by a space character. The k-th number from this line represents the height of the soldier who has the code k (1 &lt;= k &lt;= n).</p><p>There are some restrictions:<br>• 2 &lt;= n &lt;= 1000<br>• the height are floating numbers from the interval [0.5, 2.5]</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>The only line of output will contain the number of the soldiers who have to get out of the line.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">8</span></span><br><span class="line"><span class="number">1.86</span> <span class="number">1.86</span> <span class="number">1.30621</span> <span class="number">2</span> <span class="number">1.4</span> <span class="number">1</span> <span class="number">1.97</span> <span class="number">2.2</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">4</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e3</span>+<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">double</span> a[N];</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> dp1[N], dp2[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lf"</span>, &amp;a[i]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">        dp1[i] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;i; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(a[j]&lt;a[i])</span><br><span class="line">                dp1[i] = max(dp1[i], dp1[j]+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=n<span class="number">-1</span>; i&gt;=<span class="number">0</span>; i--) &#123;</span><br><span class="line">        dp2[i] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=n<span class="number">-1</span>; j&gt;i; j--) &#123;</span><br><span class="line">            <span class="keyword">if</span>(a[j]&lt;a[i])</span><br><span class="line">                dp2[i] = max(dp2[i], dp2[j]+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mx = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>; j&lt;n; j++)</span><br><span class="line">            mx = max(mx, dp1[i]+dp2[j]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, n-mx);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>动态规划</category>
        <category>LIS</category>
      </categories>
      <tags>
        <tag>DP</tag>
        <tag>LIS</tag>
        <tag>POJ</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】POJ-1837 Balance</title>
    <url>/posts/b81ba92a.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="Balance-POJ-1837"><a href="#Balance-POJ-1837" class="headerlink" title="Balance (POJ - 1837)"></a>Balance (<a href="https://vjudge.net/problem/POJ-1837" target="_blank" rel="noopener">POJ - 1837</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>Gigel has a strange “balance” and he wants to poise it. Actually, the device is different from any other ordinary balance.<br>It orders two arms of negligible weight and each arm’s length is 15. Some hooks are attached to these arms and Gigel wants to hang up some weights from his collection of G weights (1 &lt;= G &lt;= 20) knowing that these weights have distinct values in the range 1..25. Gigel may droop any weight of any hook but he is forced to use all the weights.<br>Finally, Gigel managed to balance the device using the experience he gained at the National Olympiad in Informatics. Now he would like to know in how many ways the device can be balanced.</p><p>Knowing the repartition of the hooks and the set of the weights write a program that calculates the number of possibilities to balance the device.<br>It is guaranteed that will exist at least one solution for each test case at the evaluation.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>The input has the following structure:<br>• the first line contains the number C (2 &lt;= C &lt;= 20) and the number G (2 &lt;= G &lt;= 20);<br>• the next line contains C integer numbers (these numbers are also distinct and sorted in ascending order) in the range -15..15 representing the repartition of the hooks; each number represents the position relative to the center of the balance on the X axis (when no weights are attached the device is balanced and lined up to the X axis; the absolute value of the distances represents the distance between the hook and the balance center and the sign of the numbers determines the arm of the balance to which the hook is attached: ‘-‘ for the left arm and ‘+’ for the right arm);<br>• on the next line there are G natural, distinct and sorted in ascending order numbers in the range 1..25 representing the weights’ values.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>The output contains the number M representing the number of possibilities to poise the balance.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">2</span> <span class="number">4</span>	</span><br><span class="line"><span class="number">-2</span> <span class="number">3</span> </span><br><span class="line"><span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">8</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">2e4</span> + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> dp[<span class="number">25</span>][N]= &#123;&#123;<span class="number">0</span>&#125;&#125;;</span><br><span class="line"><span class="keyword">int</span> c[<span class="number">25</span>], g[<span class="number">25</span>];</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;n, &amp;m) == <span class="number">2</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;c[i]);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++)</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;g[i]);</span><br><span class="line">        dp[<span class="number">0</span>][<span class="number">7500</span>] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;=<span class="number">15000</span>; j++)</span><br><span class="line">                <span class="keyword">if</span>(dp[i<span class="number">-1</span>][j])</span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>; k&lt;=n; k++)</span><br><span class="line">                        dp[i][j+c[k]*g[i]] += dp[i<span class="number">-1</span>][j];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, dp[m][<span class="number">7500</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>动态规划</category>
        <category>背包</category>
        <category>01背包</category>
      </categories>
      <tags>
        <tag>DP</tag>
        <tag>背包</tag>
        <tag>POJ</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】POJ-2068 Nim</title>
    <url>/posts/7e7560c3.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="Nim-POJ-2068"><a href="#Nim-POJ-2068" class="headerlink" title="Nim(POJ-2068)"></a>Nim(<a href="https://vjudge.net/problem/POJ-2068" target="_blank" rel="noopener">POJ-2068</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>Let’s play a traditional game Nim. You and I are seated across a table and we have a hundred stones on the table (we know the number of stones exactly). We play in turn and at each turn, you or I can remove on to four stones from the heap. You play first and the one who removed the last stone loses.<br>In this game, you have a winning strategy. To see this, you first remove four stones and leave 96 stones. No matter how I play, I will end up with leaving 92 - 95 stones. Then you will in turn leave 91 stones for me (verify this is always possible). This way, you can always leave 5k+1 stones for me and finally I get the last stone, sigh. If we initially had 101 stones, on the other hand, I have a winning strategy and you are doomed to lose.</p><p>Let’s generalize the game a little bit. First, let’s make it a team game. Each team has n players and the 2n players are seated around the table, with each player having opponents at both sides. Turn around the table so the two teams play alternately. Second, let’s vary the maximum number of stones each player can take. That is, each player has his/her own maximum number of stones he/she can take at each turn (The minimum is always one). So the game is asymmetric and may even be unfair.</p><p>In general, when played between two teams of experts, the outcome of a game is completely determined by the initial number of stones and the maximum number of stones each player can take at each turn. In other words, either team has a winning strategy.</p><p>You are the head-coach of a team. In each game, the umpire shows both teams the initial number of stones and the maximum number of stones each player can take at each turn. Your team plays first. Your job is, given those numbers, to instantaneously judge whether your team has a winning strategy.</p><p>Incidentally, there is a rumor that Captain Future and her officers of Hakodate-maru love this game, and they are killing their time playing it during their missions. You wonder where the stones are? Well, they do not have stones but do have plenty of balls in the fuel containers!</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>The input is a sequence of lines, followed by the last line containing a zero. Each line except the last is a sequence of integers and has the following format.</p><p>n S M1 M2 . . . M2n</p><p>where n is the number of players in a team, S the initial number of stones, and Mi the maximum number of stones ith player can take. 1st, 3rd, 5th, … players are your team’s players and 2nd, 4th, 6th, … the opponents. Numbers are separated by a single space character. You may assume 1 &lt;= n &lt;= 10, 1 &lt;= Mi &lt;= 16, and 1 &lt;= S &lt; 2^13.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>The output should consist of lines each containing either a one, meaning your team has a winning strategy, or a zero otherwise.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">1 </span><span class="number">101</span> <span class="number">4</span> <span class="number">4</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">100</span> <span class="number">4</span> <span class="number">4</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">97</span> <span class="number">8</span> <span class="number">7</span> <span class="number">6</span> <span class="number">5</span> <span class="number">4</span> <span class="number">3</span></span><br><span class="line"><span class="number">0</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">0</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>类似DFS，SG函数暴力打表。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> SG[<span class="number">20</span>][<span class="number">10005</span>], f[<span class="number">20</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getSg</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> s, <span class="keyword">int</span> m)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(s==<span class="number">0</span>) <span class="keyword">return</span> SG[x][s]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(SG[x][s]!=<span class="number">-1</span>) <span class="keyword">return</span> SG[x][s];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=f[x]; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(s&lt;i) <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">if</span>(getSg((x+<span class="number">1</span>)%m, s-i, m)==<span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> SG[x][s]=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> SG[x][s]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n) &amp;&amp; n)</span><br><span class="line">    &#123; </span><br><span class="line">        <span class="built_in">memset</span>(SG, <span class="number">-1</span>, <span class="keyword">sizeof</span>(SG));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> s; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;s);</span><br><span class="line">        <span class="keyword">int</span> m = <span class="number">2</span>*n;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;m; i++)</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;f[i]);</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, getSg(<span class="number">0</span>, s, m));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>博弈论</category>
      </categories>
      <tags>
        <tag>博弈论</tag>
        <tag>SG函数</tag>
        <tag>DFS</tag>
        <tag>POJ</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】POJ-2234 Matches Game</title>
    <url>/posts/e1a0ff1f.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="Matches-Game-POJ-2234"><a href="#Matches-Game-POJ-2234" class="headerlink" title="Matches Game(POJ-2234)"></a>Matches Game(<a href="https://vjudge.net/problem/POJ-2234" target="_blank" rel="noopener">POJ-2234</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>Here is a simple game. In this game, there are several piles of matches and two players. The two player play in turn. In each turn, one can choose a pile and take away arbitrary number of matches from the pile (Of course the number of matches, which is taken away, cannot be zero and cannot be larger than the number of matches in the chosen pile). If after a player’s turn, there is no match left, the player is the winner. Suppose that the two players are all very clear. Your job is to tell whether the player who plays first can win the game or not.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>The input consists of several lines, and in each line there is a test case. At the beginning of a line, there is an integer M (1 &lt;= M &lt;=20), which is the number of piles. Then comes M positive integers, which are not larger than 10000000. These M integers represent the number of matches in each pile.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For each test case, output “Yes” in a single line, if the player who play first will win, otherwise output “No”.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">2 </span><span class="number">45</span> <span class="number">45</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">3</span> <span class="number">6</span> <span class="number">9</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="literal">No</span></span><br><span class="line"><span class="literal">Yes</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>Nim博弈</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n; </span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> nim = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> x; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;x);</span><br><span class="line">            nim ^= x;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(nim == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"No\n"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Yes\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>博弈论</category>
      </categories>
      <tags>
        <tag>博弈论</tag>
        <tag>Nim博弈</tag>
        <tag>POJ</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】POJ-2250 Compromise</title>
    <url>/posts/8933d6b.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="Compromise-POJ-2250"><a href="#Compromise-POJ-2250" class="headerlink" title="Compromise (POJ - 2250)"></a>Compromise (<a href="https://vjudge.net/problem/POJ-2250" target="_blank" rel="noopener">POJ - 2250</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>In a few months the European Currency Union will become a reality. However, to join the club, the Maastricht criteria must be fulfilled, and this is not a trivial task for the countries (maybe except for Luxembourg). To enforce that Germany will fulfill the criteria, our government has so many wonderful options (raise taxes, sell stocks, revalue the gold reserves,…) that it is really hard to choose what to do.</p><p>Therefore the German government requires a program for the following task:<br>Two politicians each enter their proposal of what to do. The computer then outputs the longest common subsequence of words that occurs in both proposals. As you can see, this is a totally fair compromise (after all, a common sequence of words is something what both people have in mind).</p><p>Your country needs this program, so your job is to write it for us.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>The input will contain several test cases.<br>Each test case consists of two texts. Each text is given as a sequence of lower-case words, separated by whitespace, but with no punctuation. Words will be less than 30 characters long. Both texts will contain less than 100 words and will be terminated by a line containing a single ‘#’.<br>Input is terminated by end of file.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For each test case, print the longest common subsequence of words occuring in the two texts. If there is more than one such sequence, any one is acceptable. Separate the words by one blank. After the last word, output a newline character.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">die</span> <span class="string">einkommen der landwirte</span></span><br><span class="line"><span class="attr">sind</span> <span class="string">fuer die abgeordneten ein buch mit sieben siegeln</span></span><br><span class="line"><span class="attr">um</span> <span class="string">dem abzuhelfen</span></span><br><span class="line"><span class="attr">muessen</span> <span class="string">dringend alle subventionsgesetze verbessert werden</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="attr">die</span> <span class="string">steuern auf vermoegen und einkommen</span></span><br><span class="line"><span class="attr">sollten</span> <span class="string">nach meinung der abgeordneten</span></span><br><span class="line"><span class="attr">nachdruecklich</span> <span class="string">erhoben werden</span></span><br><span class="line"><span class="attr">dazu</span> <span class="string">muessen die kontrollbefugnisse der finanzbehoerden</span></span><br><span class="line"><span class="attr">dringend</span> <span class="string">verbessert werden</span></span><br><span class="line"><span class="comment">#</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight mipsasm"><table><tr><td class="code"><pre><span class="line"><span class="keyword">die </span><span class="keyword">einkommen </span>der abgeordneten muessen dringend verbessert werden</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e2</span>+<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">string</span> a[N], b[N], s;</span><br><span class="line"><span class="keyword">int</span> dp[N][N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> j)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">stack</span>&lt;<span class="built_in">string</span>&gt;st;</span><br><span class="line">    <span class="keyword">while</span>(i&amp;&amp;j) &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i<span class="number">-1</span>]==b[j<span class="number">-1</span>]) &#123;</span><br><span class="line">            st.push(a[i<span class="number">-1</span>]);</span><br><span class="line">            i--, j--;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(dp[i<span class="number">-1</span>][j]&gt;dp[i][j<span class="number">-1</span>])</span><br><span class="line">                i--;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                j--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(st.size()) &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;st.top()&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">        st.pop();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;s) &#123;</span><br><span class="line">        <span class="keyword">int</span> n = <span class="number">0</span>, m = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(s!=<span class="string">"#"</span>) &#123;</span><br><span class="line">            a[n++] = s;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;s;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;s;</span><br><span class="line">        <span class="keyword">while</span>(s!=<span class="string">"#"</span>) &#123;</span><br><span class="line">            b[m++] = s;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;s;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">memset</span>(dp, <span class="number">0</span>, <span class="keyword">sizeof</span>(dp));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=m; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(a[i<span class="number">-1</span>]==b[j<span class="number">-1</span>])</span><br><span class="line">                    dp[i][j] = dp[i<span class="number">-1</span>][j<span class="number">-1</span>]+<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    dp[i][j] = max(dp[i<span class="number">-1</span>][j], dp[i][j<span class="number">-1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        print(n, m);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>动态规划</category>
        <category>LCS</category>
      </categories>
      <tags>
        <tag>DP</tag>
        <tag>POJ</tag>
        <tag>LCS</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】POJ-2251 Dungeon Master</title>
    <url>/posts/dda45dea.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="Dungeon-Master-POJ-2251"><a href="#Dungeon-Master-POJ-2251" class="headerlink" title="Dungeon Master (POJ - 2251)"></a>Dungeon Master (<a href="https://vjudge.net/problem/POJ-2251" target="_blank" rel="noopener">POJ - 2251</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>You are trapped in a 3D dungeon and need to find the quickest way out! The dungeon is composed of unit cubes which may or may not be filled with rock. It takes one minute to move one unit north, south, east, west, up or down. You cannot move diagonally and the maze is surrounded by solid rock on all sides.</p><p>Is an escape possible? If yes, how long will it take?</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>The input consists of a number of dungeons. Each dungeon description starts with a line containing three integers L, R and C (all limited to 30 in size).<br>L is the number of levels making up the dungeon.<br>R and C are the number of rows and columns making up the plan of each level.<br>Then there will follow L blocks of R lines each containing C characters. Each character describes one cell of the dungeon. A cell full of rock is indicated by a ‘#’ and empty cells are represented by a ‘.’. Your starting position is indicated by ‘S’ and the exit by the letter ‘E’. There’s a single blank line after each level. Input is terminated by three zeroes for L, R and C.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>Each maze generates one line of output. If it is possible to reach the exit, print a line of the form</p><pre><code>    Escaped in x minute(s).        
</code></pre><p>where x is replaced by the shortest time it takes to escape.<br>If it is not possible to escape, print the line</p><pre><code>    Trapped!            
</code></pre></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight clean"><table><tr><td class="code"><pre><span class="line"><span class="number">3</span> <span class="number">4</span> <span class="number">5</span></span><br><span class="line">S....</span><br><span class="line">.###.</span><br><span class="line">.##..</span><br><span class="line">###.#</span><br><span class="line"></span><br><span class="line">#####</span><br><span class="line">#####</span><br><span class="line">##.##</span><br><span class="line">##...</span><br><span class="line"></span><br><span class="line">#####</span><br><span class="line">#####</span><br><span class="line">#.###</span><br><span class="line">####E</span><br><span class="line"></span><br><span class="line"><span class="number">1</span> <span class="number">3</span> <span class="number">3</span></span><br><span class="line">S##</span><br><span class="line">#E#</span><br><span class="line">###</span><br><span class="line"></span><br><span class="line"><span class="number">0</span> <span class="number">0</span> <span class="number">0</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">Escaped <span class="keyword">in</span> <span class="number">11</span> minute(s).</span><br><span class="line">Trapped!</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>六个方向，bfs即可</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">30</span>+<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> b[N][N][N] = &#123;&#123;&#123;<span class="number">0</span>&#125;&#125;&#125;;</span><br><span class="line"><span class="keyword">bool</span> vis[N][N][N] = &#123;&#123;&#123;<span class="number">0</span>&#125;&#125;&#125;;</span><br><span class="line"><span class="keyword">int</span> l, r, c, ans = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> dx[] = &#123; <span class="number">1</span>, <span class="number">-1</span>,  <span class="number">0</span>,  <span class="number">0</span>,  <span class="number">0</span>,  <span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> dy[] = &#123; <span class="number">0</span>,  <span class="number">0</span>,  <span class="number">1</span>, <span class="number">-1</span>,  <span class="number">0</span>,  <span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> dz[] = &#123; <span class="number">0</span>,  <span class="number">0</span>,  <span class="number">0</span>,  <span class="number">0</span>,  <span class="number">1</span>, <span class="number">-1</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">P</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> z, x, y;</span><br><span class="line">    <span class="keyword">int</span> step;</span><br><span class="line">&#125;;</span><br><span class="line">P sp;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(vis, <span class="number">0</span>, <span class="keyword">sizeof</span>(vis));</span><br><span class="line"></span><br><span class="line">    sp.step = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">queue</span>&lt;P&gt; q;</span><br><span class="line">    q.push(sp);</span><br><span class="line">    vis[sp.z][sp.x][sp.y] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(!q.empty()) &#123;</span><br><span class="line">        P tp = q.front();</span><br><span class="line">        q.pop();</span><br><span class="line"></span><br><span class="line">        P np = tp;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">6</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> z = np.z = tp.z+dz[i];</span><br><span class="line">            <span class="keyword">int</span> x = np.x = tp.x+dx[i];</span><br><span class="line">            <span class="keyword">int</span> y = np.y = tp.y+dy[i];</span><br><span class="line">            np.step = tp.step+<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(z&lt;<span class="number">0</span> || z&gt;=l || x&lt;<span class="number">0</span> || x&gt;=r || y&lt;<span class="number">0</span> || y&gt;=c) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(b[z][x][y]==<span class="string">'#'</span>) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(b[z][x][y]==<span class="string">'E'</span>) &#123;</span><br><span class="line">                ans = np.step;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(b[z][x][y]==<span class="string">'.'</span> &amp;&amp; vis[z][x][y]==<span class="literal">false</span>) &#123;</span><br><span class="line">                vis[z][x][y] = <span class="literal">true</span>;</span><br><span class="line">                q.push(np);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>, &amp;l, &amp;r, &amp;c)==<span class="number">3</span> &amp;&amp; l &amp;&amp; r &amp;&amp; c) &#123;</span><br><span class="line">        ans = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;l; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;r; j++) &#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>; k&lt;c; k++) &#123;</span><br><span class="line">                    <span class="built_in">scanf</span>(<span class="string">" %c"</span>, &amp;b[i][j][k]);</span><br><span class="line">                    <span class="keyword">if</span>(b[i][j][k]==<span class="string">'S'</span>) &#123;</span><br><span class="line">                        sp.z = i;</span><br><span class="line">                        sp.x = j;</span><br><span class="line">                        sp.y = k;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(bfs())</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Escaped in %d minute(s).\n"</span>, ans);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Trapped!\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>搜索</category>
        <category>BFS</category>
      </categories>
      <tags>
        <tag>BFS</tag>
        <tag>kuangbin 专题一</tag>
        <tag>POJ</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】POJ-2264 Advanced Fruits</title>
    <url>/posts/b0ecdf84.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="Advanced-Fruits-POJ-2264"><a href="#Advanced-Fruits-POJ-2264" class="headerlink" title="Advanced Fruits (POJ - 2264)"></a>Advanced Fruits (<a href="https://vjudge.net/problem/POJ-2264" target="_blank" rel="noopener">POJ - 2264</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>The company “21st Century Fruits” has specialized in creating new sorts of fruits by transferring genes from one fruit into the genome of another one. Most times this method doesn’t work, but sometimes, in very rare cases, a new fruit emerges that tastes like a mixture between both of them.</p><p>A big topic of discussion inside the company is “How should the new creations be called?” A mixture between an apple and a pear could be called an apple-pear, of course, but this doesn’t sound very interesting. The boss finally decides to use the shortest string that contains both names of the original fruits as sub-strings as the new name. For instance, “applear” contains “apple” and “pear” (APPLEar and apPlEAR), and there is no shorter string that has the same property.<br>A combination of a cranberry and a boysenberry would therefore be called a “boysecranberry” or a “craboysenberry”, for example.</p><p>Your job is to write a program that computes such a shortest name for a combination of two given fruits. Your algorithm should be efficient, otherwise it is unlikely that it will execute in the alloted time for long fruit names.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>Each line of the input contains two strings that represent the names of the fruits that should be combined. All names have a maximum length of 100 and only consist of alphabetic characters.<br>Input is terminated by end of file.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For each test case, output the shortest name of the resulting fruit on one line. If more than one shortest name is possible, any one is acceptable.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">apple</span> <span class="string">peach</span></span><br><span class="line"><span class="attr">ananas</span> <span class="string">banana</span></span><br><span class="line"><span class="attr">pear</span> <span class="string">peach</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight armasm"><table><tr><td class="code"><pre><span class="line"><span class="symbol">appleach</span></span><br><span class="line"><span class="keyword">bananas</span></span><br><span class="line"><span class="keyword">pearch</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e2</span>+<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">string</span> s, t;</span><br><span class="line"><span class="keyword">int</span> dp[N][N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> j)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">stack</span>&lt;<span class="keyword">char</span>&gt;st;</span><br><span class="line">    <span class="keyword">while</span>(i||j) &#123;</span><br><span class="line">        <span class="keyword">if</span>(i==<span class="number">0</span>) &#123;</span><br><span class="line">            st.push(t[j<span class="number">-1</span>]), j--;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(j==<span class="number">0</span>) &#123;</span><br><span class="line">            st.push(s[i<span class="number">-1</span>]), i--;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(s[i<span class="number">-1</span>]==t[j<span class="number">-1</span>]) &#123;</span><br><span class="line">            st.push(s[i<span class="number">-1</span>]);</span><br><span class="line">            i--, j--;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(dp[i<span class="number">-1</span>][j]&gt;dp[i][j<span class="number">-1</span>])</span><br><span class="line">                st.push(s[i<span class="number">-1</span>]), i--;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                st.push(t[j<span class="number">-1</span>]), j--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(st.size()) &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;st.top();</span><br><span class="line">        st.pop();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;s&gt;&gt;t) &#123;</span><br><span class="line">        <span class="keyword">int</span> n = s.size();</span><br><span class="line">        <span class="keyword">int</span> m = t.size();</span><br><span class="line">        <span class="built_in">memset</span>(dp, <span class="number">0</span>, <span class="keyword">sizeof</span>(dp));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=m; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(s[i<span class="number">-1</span>]==t[j<span class="number">-1</span>])</span><br><span class="line">                    dp[i][j] = dp[i<span class="number">-1</span>][j<span class="number">-1</span>]+<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    dp[i][j] = max(dp[i<span class="number">-1</span>][j], dp[i][j<span class="number">-1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        print(n, m);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>动态规划</category>
        <category>LCS</category>
      </categories>
      <tags>
        <tag>DP</tag>
        <tag>POJ</tag>
        <tag>LCS</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】POJ-2311 Cutting Game</title>
    <url>/posts/ab8ee74.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="Cutting-Game-POJ-2311"><a href="#Cutting-Game-POJ-2311" class="headerlink" title="Cutting Game(POJ-2311)"></a>Cutting Game(<a href="https://vjudge.net/problem/POJ-2311" target="_blank" rel="noopener">POJ-2311</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>Urej loves to play various types of dull games. He usually asks other people to play with him. He says that playing those games can show his extraordinary wit. Recently Urej takes a great interest in a new game, and Erif Nezorf becomes the victim. To get away from suffering playing such a dull game, Erif Nezorf requests your help. The game uses a rectangular paper that consists of W*H grids. Two players cut the paper into two pieces of rectangular sections in turn. In each turn the player can cut either horizontally or vertically, keeping every grids unbroken. After N turns the paper will be broken into N+1 pieces, and in the later turn the players can choose any piece to cut. If one player cuts out a piece of paper with a single grid, he wins the game. If these two people are both quite clear, you should write a problem to tell whether the one who cut first can win or not.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>The input contains multiple test cases. Each test case contains only two integers W and H (2 &lt;= W, H &lt;= 200) in one line, which are the width and height of the original paper.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For each test case, only one line should be printed. If the one who cut first can win the game, print “WIN”, otherwise, print “LOSE”.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">2 </span><span class="number">2</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">2</span></span><br><span class="line"><span class="symbol">4 </span><span class="number">2</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">LOSE</span></span><br><span class="line"><span class="attribute">LOSE</span></span><br><span class="line"><span class="attribute">WIN</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>SG函数打表，剪到2就结束了。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> SG[<span class="number">205</span>][<span class="number">205</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getSg</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> m)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(SG[n][m]!=<span class="number">-1</span>) <span class="keyword">return</span> SG[n][m];</span><br><span class="line">    <span class="keyword">bool</span> S[<span class="number">1005</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>; i&lt;=n-i; i++)</span><br><span class="line">        S[getSg(i, m) ^ getSg(n-i, m)] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>; i&lt;=m-i; i++)</span><br><span class="line">        S[getSg(n, i) ^ getSg(n, m-i)] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> mex = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(S[mex]) mex++;</span><br><span class="line">    <span class="keyword">return</span> SG[n][m]=mex;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(SG, <span class="number">-1</span>, <span class="keyword">sizeof</span>(SG));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> n, m;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;n, &amp;m) &amp;&amp; n &amp;&amp; m)</span><br><span class="line">    &#123; </span><br><span class="line">        <span class="keyword">if</span>(getSg(n, m))&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"WIN\n"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"LOSE\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>博弈论</category>
      </categories>
      <tags>
        <tag>博弈论</tag>
        <tag>SG函数</tag>
        <tag>POJ</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】POJ-2348 Euclid&#39;s Game</title>
    <url>/posts/979b495a.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="Euclid’s-Game-POJ-2348"><a href="#Euclid’s-Game-POJ-2348" class="headerlink" title="Euclid’s Game(POJ-2348)"></a>Euclid’s Game(<a href="https://vjudge.net/problem/POJ-2348" target="_blank" rel="noopener">POJ-2348</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>Two players, Stan and Ollie, play, starting with two natural numbers. Stan, the first player, subtracts any positive multiple of the lesser of the two numbers from the greater of the two numbers, provided that the resulting number must be nonnegative. Then Ollie, the second player, does the same with the two resulting numbers, then Stan, etc., alternately, until one player is able to subtract a multiple of the lesser number from the greater to reach 0, and thereby wins. For example, the players may start with (25,7):</p><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">25</span> <span class="number">7</span></span><br><span class="line"><span class="number">11</span> <span class="number">7</span></span><br><span class="line"> <span class="number">4</span> <span class="number">7</span></span><br><span class="line"> <span class="number">4</span> <span class="number">3</span></span><br><span class="line"> <span class="number">1</span> <span class="number">3</span></span><br><span class="line"> <span class="number">1</span> <span class="number">0</span></span><br></pre></td></tr></table></figure><p>an Stan wins.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>The input consists of a number of lines. Each line contains two positive integers giving the starting two numbers of the game. Stan always starts.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For each line of input, output one line saying either Stan wins or Ollie wins assuming that both of them play perfectly. The last line of input contains two zeroes and should not be processed.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">34 </span><span class="number">12</span></span><br><span class="line"><span class="symbol">15 </span><span class="number">24</span></span><br><span class="line"><span class="symbol">0 </span><span class="number">0</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">Stan</span> <span class="string">wins</span></span><br><span class="line"><span class="attr">Ollie</span> <span class="string">wins</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>当局面为(a, b) a&lt;=b，b%a==0的时候，先手必胜；当b&gt;2*a的时候，先手可以将必败态转化为必胜态，即若b=a*x+y，取走a*x会导致必败态（将必胜态留给对手，此时必败）的时候，由于x&gt;2，先手可以选择取走a*(x-1)而将必败态留给对手；当2*a&gt;b&gt;a时，先手只能将局面取b-a，状态互换。</p><p>例如：</p><p>(0, 1) 先手必败</p><p>(1, 2) 先手必胜</p><p>当局面为(2, 3)时，先手只能取成(1, 2)，将必胜态留给对手，此时先手必败</p><p>当局面为(2, 5)时，先手可以取成(1, 2)和(2, 3)，毫无疑问，取成(2, 3)可以将必败态留给对手，此时先手必胜。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a, b;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;a, &amp;b) &amp;&amp; a &amp;&amp; b)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> win = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(a &gt; b) swap(a, b);</span><br><span class="line">            <span class="keyword">if</span>(b%a==<span class="number">0</span> || b-a&gt;a) <span class="keyword">break</span>;</span><br><span class="line">            b -= a;</span><br><span class="line">            win = !win;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(win)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Stan wins\n"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Ollie wins\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>博弈论</category>
      </categories>
      <tags>
        <tag>博弈论</tag>
        <tag>POJ</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】POJ-2406 Power Strings</title>
    <url>/posts/a24f674f.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="Power-Strings-POJ-2406"><a href="#Power-Strings-POJ-2406" class="headerlink" title="Power Strings (POJ-2406)"></a>Power Strings (<a href="https://vjudge.net/problem/POJ-2406" target="_blank" rel="noopener">POJ-2406</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>Given two strings a and b we define a<em>b to be their concatenation. For example, if a = “abc” and b = “def” then a</em>b = “abcdef”. If we think of concatenation as multiplication, exponentiation by a non-negative integer is defined in the normal way: a^0 = “” (the empty string) and a^(n+1) = a*(a^n).</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>Each test case is a line of input representing s, a string of printable characters. The length of s will be at least 1 and will not exceed 1 million characters. A line containing a period follows the last test case.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For each s you should print the largest n such that s = a^n for some string a.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight erlang"><table><tr><td class="code"><pre><span class="line">abcd</span><br><span class="line">aaaa</span><br><span class="line">ababab</span><br><span class="line">.</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>This problem has huge input, use scanf instead of cin to avoid time limit exceed.</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>KMP求最小循环节。输出最小循环周期。POJ提交时注意C++和G++的区别。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> t[mxn];</span><br><span class="line"><span class="keyword">int</span> nxt[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getnxt</span><span class="params">(<span class="keyword">char</span>* t, <span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">-1</span>; nxt[<span class="number">0</span>] = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; m) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (j == <span class="number">-1</span> || t[i] == t[j]) &#123;</span><br><span class="line">            i++, j++;</span><br><span class="line">            <span class="comment">// if (t[i] == t[j])</span></span><br><span class="line">            <span class="comment">//     nxt[i] = nxt[j]; // next数组优化</span></span><br><span class="line">            <span class="comment">// else</span></span><br><span class="line">                nxt[i] = j;</span><br><span class="line">        &#125; <span class="keyword">else</span></span><br><span class="line">            j = nxt[j];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%s"</span>, t) &amp;&amp; <span class="built_in">strcmp</span>(t, <span class="string">"."</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> m = <span class="built_in">strlen</span>(t);</span><br><span class="line">        getnxt(t, m);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> L = m-nxt[m];   <span class="comment">// 最小循环节=原串长度-末位失配，L=len-next[len]</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, m%L ? <span class="number">1</span> : m/L);  <span class="comment">// 循环周期T=len/L</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>字符串</category>
        <category>模式匹配</category>
        <category>KMP</category>
      </categories>
      <tags>
        <tag>KMP</tag>
        <tag>最小循环节</tag>
        <tag>kuangbin 专题十六</tag>
        <tag>POJ</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】POJ-2425 A Chess Game</title>
    <url>/posts/13789c72.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="A-Chess-Game-POJ-2425"><a href="#A-Chess-Game-POJ-2425" class="headerlink" title="A Chess Game(POJ-2425)"></a>A Chess Game(<a href="https://vjudge.net/problem/POJ-2425" target="_blank" rel="noopener">POJ-2425</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>Let’s design a new chess game. There are N positions to hold M chesses in this game. Multiple chesses can be located in the same position. The positions are constituted as a topological graph, i.e. there are directed edges connecting some positions, and no cycle exists. Two players you and I move chesses alternately. In each turn the player should move only one chess from the current position to one of its out-positions along an edge. The game does not end, until one of the players cannot move chess any more. If you cannot move any chess in your turn, you lose. Otherwise, if the misfortune falls on me… I will disturb the chesses and play it again.</p><p>Do you want to challenge me? Just write your program to show your qualification!</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>Input contains multiple test cases. Each test case starts with a number N (1 &lt;= N &lt;= 1000) in one line. Then the following N lines describe the out-positions of each position. Each line starts with an integer Xi that is the number of out-positions for the position i. Then Xi integers following specify the out-positions. Positions are indexed from 0 to N-1. Then multiple queries follow. Each query occupies only one line. The line starts with a number M (1 &lt;= M &lt;= 10), and then come M integers, which are the initial positions of chesses. A line with number 0 ends the test case.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>There is one line for each query, which contains a string “WIN” or “LOSE”. “WIN” means that the player taking the first turn can win the game according to a clever strategy; otherwise “LOSE” should be printed.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="number">4</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">1</span> <span class="number">2</span></span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">3</span></span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">0</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">0</span> <span class="number">2</span></span><br><span class="line"><span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">1</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">2</span></span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">0</span> <span class="number">1</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">1</span> <span class="number">1</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">0</span> <span class="number">1</span> <span class="number">3</span></span><br><span class="line"><span class="number">0</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight stata"><table><tr><td class="code"><pre><span class="line"><span class="keyword">WIN</span></span><br><span class="line"><span class="keyword">WIN</span></span><br><span class="line"><span class="keyword">WIN</span></span><br><span class="line">LOSE</span><br><span class="line"><span class="keyword">WIN</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>Huge input,scanf is recommended.</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>给定一个 n 个节点的有向无环图，再给出 m 个棋子，每一个棋子位于一个点上且互相不影响(即一个点上可以有多个棋子)，每回合可以选择一个棋子按照给出的图把它移向下一个点，即当前点与下一个点间有一条有向边，由当前点指向下一个点，无法进行操作则判输，问先手是否必胜。</p><p>一个棋子不能再移动当且仅当这个点的出度为0，因为每个棋子互不影响，所以分别求出每个棋子的SG函数，求一下异或和就好了。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">1e3</span> + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; E[mxn];</span><br><span class="line"><span class="keyword">int</span> SG[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getSg</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(SG[x]!=<span class="number">-1</span>) <span class="keyword">return</span> SG[x];</span><br><span class="line">    <span class="keyword">bool</span> S[mxn] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;E[x].size(); i++)&#123;</span><br><span class="line">        S[getSg(E[x][i])] = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> mex = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(S[mex]) mex++;</span><br><span class="line">    <span class="keyword">return</span> SG[x]=mex;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n) &amp;&amp; n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">memset</span>(SG, <span class="number">-1</span>, <span class="keyword">sizeof</span>(SG));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)&#123;</span><br><span class="line">            E[i].clear();</span><br><span class="line">            <span class="keyword">int</span> m; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;m);</span><br><span class="line">            <span class="keyword">while</span>(m--)&#123;</span><br><span class="line">                <span class="keyword">int</span> x; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;x);</span><br><span class="line">                E[i].push_back(x);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> q;</span><br><span class="line">        <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;q) &amp;&amp; q)&#123;</span><br><span class="line">            <span class="keyword">int</span> nim = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span>(q--)&#123;</span><br><span class="line">                <span class="keyword">int</span> x; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;x);</span><br><span class="line">                nim ^= getSg(x);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(nim)&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"WIN\n"</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"LOSE\n"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>博弈论</category>
      </categories>
      <tags>
        <tag>博弈论</tag>
        <tag>SG函数</tag>
        <tag>POJ</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】POJ-2484 A Funny Game</title>
    <url>/posts/a826ac4e.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="A-Funny-Game-POJ-2484"><a href="#A-Funny-Game-POJ-2484" class="headerlink" title="A Funny Game(POJ-2484)"></a>A Funny Game(<a href="https://vjudge.net/problem/POJ-2484" target="_blank" rel="noopener">POJ-2484</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>Alice and Bob decide to play a funny game. At the beginning of the game they pick n(1 &lt;= n &lt;= 106) coins in a circle, as Figure 1 shows. A move consists in removing one or two adjacent coins, leaving all other coins untouched. At least one coin must be removed. Players alternate moves with Alice starting. The player that removes the last coin wins. (The last player to move wins. If you can’t move, you lose.)<br><img src="https://vj.z180.cn/1b9c20b33d7865ca00f61de4bf4fb1d1?v=1593928809" alt="Figure 1"><br><strong>Note</strong>: For n &gt; 3, we use c1, c2, …, cn to denote the coins clockwise and if Alice remove c2, then c1 and c3 are NOT adjacent! (Because there is an empty place between c1 and c3.)</p><p>Suppose that both Alice and Bob do their best in the game.<br>You are to write a program to determine who will finally win the game.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>There are several test cases. Each test case has only one line, which contains a positive integer n (1 &lt;= n &lt;= 10^6). There are no blank lines between cases. A line with a single 0 terminates the input.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For each test case, if Alice win the game,output “Alice”, otherwise output “Bob”.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">0</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">Alice</span></span><br><span class="line"><span class="attribute">Alice</span></span><br><span class="line"><span class="attribute">Bob</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>当n &lt; 3时，先手可以直接取完；n = 3时，无论先手如何取，后手都能取走剩下的；n &gt; 3时，无论先手如何取，后手都能取走对应的，使得局面变为相等的两部分，随之后手模仿先手操作即可获得胜利。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n) &amp;&amp; n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(n&lt;<span class="number">3</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Alice\n"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Bob\n"</span>);                     </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>博弈论</category>
      </categories>
      <tags>
        <tag>博弈论</tag>
        <tag>POJ</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】POJ-2505 A multiplication game</title>
    <url>/posts/76bdf909.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="A-multiplication-game-POJ-2505"><a href="#A-multiplication-game-POJ-2505" class="headerlink" title="A multiplication game(POJ-2505)"></a>A multiplication game(<a href="https://vjudge.net/problem/POJ-2505" target="_blank" rel="noopener">POJ-2505</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>Stan and Ollie play the game of multiplication by multiplying an integer p by one of the numbers 2 to 9. Stan always starts with p = 1, does his multiplication, then Ollie multiplies the number, then Stan and so on. Before a game starts, they draw an integer 1 &lt; n &lt; 4294967295 and the winner is who first reaches p &gt;= n.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>Each line of input contains one integer number n.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For each line of input output one line either<br>Stan wins.<br>or<br>Ollie wins.<br>assuming that both of them play perfectly.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">162</span></span><br><span class="line"><span class="number">17</span></span><br><span class="line"><span class="number">34012226</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight erlang"><table><tr><td class="code"><pre><span class="line">Stan wins.</span><br><span class="line">Ollie wins.</span><br><span class="line">Stan wins.</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>找出先手必败区间(9, 18]，(162, 324]，$ \ldots $</p><p>规律：<br>9 = 9<br>18 = 2 * 9<br>162 = 9 * 2 * 9<br>324 = 2 * 9 * 2 * 9<br>$ \ldots $</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LL n;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%lld"</span>, &amp;n) &amp;&amp; n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(n&lt;=<span class="number">9</span>)&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"Stan wins.\n"</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(n&lt;=<span class="number">18</span>)&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"Ollie wins.\n"</span>);    </span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            n = (LL)<span class="built_in">ceil</span>(n/<span class="number">18.0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>博弈论</category>
      </categories>
      <tags>
        <tag>博弈论</tag>
        <tag>POJ</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】POJ-2533 Longest Ordered Subsequence</title>
    <url>/posts/2ad4d116.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="Longest-Ordered-Subsequence-POJ-2533"><a href="#Longest-Ordered-Subsequence-POJ-2533" class="headerlink" title="Longest Ordered Subsequence (POJ - 2533)"></a>Longest Ordered Subsequence (<a href="https://vjudge.net/problem/POJ-2533" target="_blank" rel="noopener">POJ - 2533</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>A numeric sequence of <em>ai</em> is ordered if <em>a1</em> &lt; <em>a2</em> &lt; … &lt; <em>aN</em>. Let the subsequence of the given numeric sequence ( <em>a1</em>, <em>a2</em>, …, <em>aN</em>) be any sequence ( <em>ai1</em>, <em>ai2</em>, …, <em>aiK</em>), where 1 &lt;= <em>i1</em> &lt; <em>i2</em> &lt; … &lt; <em>iK</em> &lt;= <em>N</em>. For example, sequence (1, 7, 3, 5, 9, 4, 8) has ordered subsequences, e. g., (1, 7), (3, 4, 8) and many others. All longest ordered subsequences are of length 4, e. g., (1, 3, 5, 8).</p><p>Your program, when given the numeric sequence, must find the length of its longest ordered subsequence.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>The first line of input file contains the length of sequence N. The second line contains the elements of sequence - N integers in the range from 0 to 10000 each, separated by spaces. 1 &lt;= N &lt;= 1000</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>Output file must contain a single integer - the length of the longest ordered subsequence of the given sequence.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">7</span> <span class="number">3</span> <span class="number">5</span> <span class="number">9</span> <span class="number">4</span> <span class="number">8</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">4</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>n^2也能过</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e3</span>+<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[N];</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> dp[N], ans[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]);</span><br><span class="line"></span><br><span class="line">    ans[<span class="number">0</span>] = a[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">int</span> len = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i]&gt;ans[len]) &#123;</span><br><span class="line">            ans[++len] = a[i];</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">int</span> pos = lower_bound(ans, ans+len, a[i])-dp;</span><br><span class="line">            dp[pos] = a[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, len+<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>动态规划</category>
        <category>LIS</category>
      </categories>
      <tags>
        <tag>DP</tag>
        <tag>kuangbin 专题十二</tag>
        <tag>LIS</tag>
        <tag>POJ</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】POJ-2752 Seek the Name, Seek the Fame</title>
    <url>/posts/2888cc32.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="Seek-the-Name-Seek-the-Fame-POJ-2752"><a href="#Seek-the-Name-Seek-the-Fame-POJ-2752" class="headerlink" title="Seek the Name, Seek the Fame (POJ-2752)"></a>Seek the Name, Seek the Fame (<a href="https://vjudge.net/problem/POJ-2752" target="_blank" rel="noopener">POJ-2752</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>The little cat is so famous, that many couples tramp over hill and dale to Byteland, and asked the little cat to give names to their newly-born babies. They seek the name, and at the same time seek the fame. In order to escape from such boring job, the innovative little cat works out an easy but fantastic algorithm:</p><p>Step1. Connect the father’s name and the mother’s name, to a new string S.<br>Step2. Find a proper prefix-suffix string of S (which is not only the prefix, but also the suffix of S).</p><p>Example: Father=’ala’, Mother=’la’, we have S = ‘ala’+’la’ = ‘alala’. Potential prefix-suffix strings of S are {‘a’, ‘ala’, ‘alala’}. Given the string S, could you help the little cat to write a program to calculate the length of possible prefix-suffix strings of S? (He might thank you by giving your baby a name:)</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>The input contains a number of test cases. Each test case occupies a single line that contains the string S described above.</p><p>Restrictions: Only lowercase letters may appear in the input. 1 &lt;= Length of S &lt;= 400000.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For each test case, output a single line with integer numbers in increasing order, denoting the possible length of the new baby’s name.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">ababcababababcabab</span></span><br><span class="line"><span class="attribute">aaaaa</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">2 </span><span class="number">4</span> <span class="number">9</span> <span class="number">18</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>求所有公共前缀后缀长度</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> s[mxn], t[mxn];</span><br><span class="line"><span class="keyword">int</span> nxt[mxn], a[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getnxt</span><span class="params">(<span class="keyword">char</span>* t, <span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">-1</span>; nxt[<span class="number">0</span>] = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; m) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (j == <span class="number">-1</span> || t[i] == t[j]) &#123;</span><br><span class="line">            i++, j++;</span><br><span class="line">            <span class="comment">// if (t[i] == t[j])</span></span><br><span class="line">            <span class="comment">//     nxt[i] = nxt[j]; // next数组优化</span></span><br><span class="line">            <span class="comment">// else</span></span><br><span class="line">                nxt[i] = j;</span><br><span class="line">        &#125; <span class="keyword">else</span></span><br><span class="line">            j = nxt[j];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">KMP</span><span class="params">(<span class="keyword">char</span>* s, <span class="keyword">char</span>* t, <span class="keyword">int</span> n, <span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>, ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; n) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (j == <span class="number">-1</span> || s[i] == t[j]) &#123;</span><br><span class="line">            i++, j++;</span><br><span class="line">            <span class="keyword">if</span> (j &gt;= m) &#123;   <span class="comment">// 匹配</span></span><br><span class="line">                <span class="comment">// ans++;</span></span><br><span class="line">                <span class="comment">// j = nxt[j];</span></span><br><span class="line">                <span class="keyword">return</span> i-j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span></span><br><span class="line">            j = nxt[j];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// return ans;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%s"</span>, s) == <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> n = <span class="built_in">strlen</span>(s), j=<span class="number">0</span>;</span><br><span class="line">        getnxt(s, n);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=n; i&gt;<span class="number">0</span>; i=nxt[i])&#123;</span><br><span class="line">            a[j++] = i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=j<span class="number">-1</span>; i&gt;=<span class="number">0</span>; i--)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d "</span>, a[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>字符串</category>
        <category>模式匹配</category>
        <category>KMP</category>
      </categories>
      <tags>
        <tag>KMP</tag>
        <tag>kuangbin 专题十六</tag>
        <tag>POJ</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】POJ-2960 S-Nim</title>
    <url>/posts/42c1d888.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="S-Nim-POJ-2960"><a href="#S-Nim-POJ-2960" class="headerlink" title="S-Nim(POJ-2960)"></a>S-Nim(<a href="https://vjudge.net/problem/POJ-2960" target="_blank" rel="noopener">POJ-2960</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>Arthur and his sister Caroll have been playing a game called Nim for some time now. Nim is played as follows:</p><ul><li>The starting position has a number of heaps, all containing some, not necessarily equal, number of beads.</li><li>The players take turns chosing a heap and removing a positive number of beads from it.</li><li>The first player not able to make a move, loses.</li></ul><p>Arthur and Caroll really enjoyed playing this simple game until they<br>recently learned an easy way to always be able to find the best move:</p><ul><li>Xor the number of beads in the heaps in the current position (i.e. if we have 2, 4 and 7 the xor-sum will be 1 as 2 xor 4 xor 7 = 1).</li><li>If the xor-sum is 0, too bad, you will lose.</li><li>Otherwise, move such that the xor-sum becomes 0. This is always possible.</li></ul><p>It is quite easy to convince oneself that this works. Consider these facts:</p><ul><li>The player that takes the last bead wins.</li><li>After the winning player’s last move the xor-sum will be 0.</li><li>The xor-sum will change after every move.</li></ul><p>Which means that if you make sure that the xor-sum always is 0 when you have made your move, your opponent will never be able to win, and, thus, you will win.</p><p>Understandibly it is no fun to play a game when both players know how to play perfectly (ignorance is bliss). Fourtunately, Arthur and Caroll soon came up with a similar game, S-Nim, that seemed to solve this problem. Each player is now only allowed to remove a number of beads in some predefined set S, e.g. if we have S = {2, 5} each player is only allowed to remove 2 or 5 beads. Now it is not always possible to make the xor-sum 0 and, thus, the strategy above is useless. Or is it?</p><p>your job is to write a program that determines if a position of S-Nim is a losing or a winning position. A position is a winning position if there is at least one move to a losing position. A position is a losing position if there are no moves to a losing position. This means, as expected, that a position with no legal moves is a losing position.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>Input consists of a number of test cases.<br>For each test case: The first line contains a number k (0 &lt; k ≤ 100) describing the size of S, followed by k numbers si (0 &lt; si ≤ 10000) describing S. The second line contains a number m (0 &lt; m ≤ 100) describing the number of positions to evaluate. The next m lines each contain a number l (0 &lt; l ≤ 100) describing the number of heaps and l numbers hi (0 ≤ hi ≤ 10000) describing the number of beads in the heaps.<br>The last test case is followed by a 0 on a line of its own.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For each position: If the described position is a winning position print a ‘W’.If the described position is a losing position print an ‘L’.<br>Print a newline after each test case.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">2 </span><span class="number">2</span> <span class="number">5</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">5</span> <span class="number">12</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">2</span> <span class="number">4</span> <span class="number">7</span></span><br><span class="line"><span class="symbol">4 </span><span class="number">2</span> <span class="number">3</span> <span class="number">7</span> <span class="number">12</span></span><br><span class="line"><span class="symbol">5 </span><span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">5</span> <span class="number">12</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">2</span> <span class="number">4</span> <span class="number">7</span></span><br><span class="line"><span class="symbol">4 </span><span class="number">2</span> <span class="number">3</span> <span class="number">7</span> <span class="number">12</span></span><br><span class="line"><span class="number">0</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">LWW</span></span><br><span class="line"><span class="attribute">WWL</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>SG函数打表，最后运用SG定理每堆石子异或一下即可。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> SG[<span class="number">10000</span>], f[<span class="number">10000</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getSg</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> m)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">        <span class="keyword">bool</span> S[<span class="number">10000</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;m &amp;&amp; f[j]&lt;=i; j++)&#123;</span><br><span class="line">            S[SG[i-f[j]]] = <span class="number">1</span>;</span><br><span class="line">        &#125;    </span><br><span class="line">        <span class="keyword">int</span> mex=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(S[mex]) mex++;</span><br><span class="line">        SG[i]=mex;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> k;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;k) &amp;&amp; k)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;k; i++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;f[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        sort(f, f+k);</span><br><span class="line">        getSg(<span class="number">10000</span>, k);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> m; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;m);</span><br><span class="line">        <span class="keyword">while</span>(m--)&#123;</span><br><span class="line">            <span class="keyword">int</span> l; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;l);</span><br><span class="line">            <span class="keyword">int</span> nim = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span>(l--)&#123;</span><br><span class="line">                <span class="keyword">int</span> h; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;h);</span><br><span class="line">                nim ^= SG[h];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(nim)&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"W"</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"L"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>博弈论</category>
      </categories>
      <tags>
        <tag>博弈论</tag>
        <tag>SG函数</tag>
        <tag>POJ</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】POJ-2975 Nim</title>
    <url>/posts/d8213204.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="Nim-POJ-2975"><a href="#Nim-POJ-2975" class="headerlink" title="Nim(POJ-2975)"></a>Nim(<a href="https://vjudge.net/problem/POJ-2975" target="_blank" rel="noopener">POJ-2975</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>Nim is a 2-player game featuring several piles of stones. Players alternate turns, and on his/her turn, a player’s move consists of removing <em>one or more stones</em> from any single pile. Play ends when all the stones have been removed, at which point the last player to have moved is declared the winner. Given a position in Nim, your task is to determine how many winning moves there are in that position.A position in Nim is called “losing” if the first player to move from that position would lose if both sides played perfectly. A “winning move,” then, is a move that leaves the game in a losing position. There is a famous theorem that classifies all losing positions. Suppose a Nim position contains <em>n</em> piles having <em>k</em>1, <em>k</em>2, …, <em>kn</em> stones respectively; in such a position, there are <em>k</em>1 + <em>k</em>2 + … + <em>kn</em> possible moves. We write each <em>ki</em> in binary (base 2). Then, the Nim position is losing if and only if, among all the <em>ki</em>’s, there are an even number of 1’s in each digit position. In other words, the Nim position is losing if and only if the <em>xor</em> of the <em>ki</em>’s is 0.Consider the position with three piles given by <em>k</em>1 = 7, <em>k</em>2 = 11, and <em>k</em>3 = 13. In binary, these values are as follows:</p><p>0111</p><p>1011</p><p>1101</p><p>There are an odd number of 1’s among the rightmost digits, so this position is not losing. However, suppose <em>k</em>3 were changed to be 12. Then, there would be exactly two 1’s in each digit position, and thus, the Nim position would become losing. Since a winning move is any move that leaves the game in a losing position, it follows that removing one stone from the third pile is a winning move when <em>k</em>1 = 7, <em>k</em>2 = 11, and <em>k</em>3 = 13. In fact, there are exactly three winning moves from this position: namely removing one stone from any of the three piles.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>The input test file will contain multiple test cases, each of which begins with a line indicating the number of piles, 1 ≤ <em>n</em> ≤ 1000. On the next line, there are n positive integers, 1 ≤ <em>ki</em> ≤ 1, 000, 000, 000, indicating the number of stones in each pile. The end-of-file is marked by a test case with <em>n</em> = 0 and should not be processed.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For each test case, write a single line with an integer indicating the number of winning moves from the given Nim position.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="number">3</span></span><br><span class="line"><span class="symbol">7 </span><span class="number">11</span> <span class="number">13</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="symbol">1000000000 </span><span class="number">1000000000</span></span><br><span class="line"><span class="number">0</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">0</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>Nim博弈。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> f[<span class="number">1005</span>];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n) &amp;&amp; n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> nim=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;f[i]);</span><br><span class="line">            nim ^= f[i];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>((nim^f[i]) &lt; f[i])</span><br><span class="line">                num++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, num);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>博弈论</category>
      </categories>
      <tags>
        <tag>博弈论</tag>
        <tag>Nim博弈</tag>
        <tag>POJ</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】POJ-3087 Shuffle&#39;m Up</title>
    <url>/posts/5b2a26c6.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="Shuffle’m-Up-POJ-3087"><a href="#Shuffle’m-Up-POJ-3087" class="headerlink" title="Shuffle’m Up (POJ - 3087)"></a>Shuffle’m Up (<a href="https://vjudge.net/problem/POJ-3087" target="_blank" rel="noopener">POJ - 3087</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>A common pastime for poker players at a poker table is to shuffle stacks of chips. Shuffling chips is performed by starting with two stacks of poker chips, <strong>S1</strong> and <strong>S2</strong>, each stack containing <strong><em>C</em></strong> chips. Each stack may contain chips of several different colors.</p><p>The actual shuffle operation is performed by interleaving a chip from <strong>S1</strong> with a chip from <strong>S2</strong> as shown below for <strong><em>C</em></strong> = 5:</p><p>​ <img src="/posts/5b2a26c6/POJ3087.png" alt="img"></p><p>The single resultant stack, <strong>S12</strong>, contains 2 × <strong><em>C</em></strong> chips. The bottommost chip of <strong>S12</strong> is the bottommost chip from <strong>S2</strong>. On top of that chip, is the bottommost chip from <strong>S1</strong>. The interleaving process continues taking the 2nd chip from the bottom of <strong>S2</strong> and placing that on <strong>S12</strong>, followed by the 2nd chip from the bottom of <strong>S1</strong> and so on until the topmost chip from <strong>S1</strong> is placed on top of <strong>S12</strong>.</p><p>After the shuffle operation, <strong>S12</strong> is split into 2 new stacks by taking the bottommost <strong><em>C</em></strong> chips from <strong>S12</strong> to form a new <strong>S1</strong> and the topmost <strong><em>C</em></strong> chips from <strong>S12</strong> to form a new <strong>S2</strong>. The shuffle operation may then be repeated to form a new <strong>S12</strong>.</p><p>For this problem, you will write a program to determine if a particular resultant stack <strong>S12</strong> can be formed by shuffling two stacks some number of times.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>The first line of input contains a single integer <strong><em>N</em></strong>, (1 ≤ <strong><em>N</em></strong> ≤ 1000) which is the number of datasets that follow.Each dataset consists of four lines of input. The first line of a dataset specifies an integer <strong><em>C</em></strong>, (1 ≤ <strong><em>C</em></strong> ≤ 100) which is the number of chips in each initial stack (<strong>S1</strong> and <strong>S2</strong>). The second line of each dataset specifies the colors of each of the <strong><em>C</em></strong> chips in stack <strong>S1</strong>, starting with the bottommost chip. The third line of each dataset specifies the colors of each of the <strong><em>C</em></strong> chips in stack <strong>S2</strong> starting with the bottommost chip. Colors are expressed as a single uppercase letter (<strong>A</strong> through <strong>H</strong>). There are no blanks or separators between the chip colors. The fourth line of each dataset contains 2 × <strong><em>C</em></strong> uppercase letters (<strong>A</strong> through <strong>H</strong>), representing the colors of the desired result of the shuffling of <strong>S1</strong> and <strong>S2</strong> zero or more times. The bottommost chip’s color is specified first.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>Output for each dataset consists of a single line that displays the dataset number (1 though <strong><em>N</em></strong>), a space, and an integer value which is the minimum number of shuffle operations required to get the desired resultant stack. If the desired result can not be reached using the input for the dataset, display the value negative 1 (<strong>−1</strong>) for the number of shuffle operations.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line">AHAH</span><br><span class="line">HAHA</span><br><span class="line">HHAAAAHH</span><br><span class="line"><span class="number">3</span></span><br><span class="line">CDE</span><br><span class="line">CDE</span><br><span class="line">EEDDCC</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">1 </span><span class="number">2</span></span><br><span class="line"><span class="symbol">2 </span>-<span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>模拟即可，如果序列重复则表明进入循环</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e3</span>+<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, c, step;</span><br><span class="line"><span class="keyword">char</span> s1[N] = <span class="string">""</span>, s2[N] = <span class="string">""</span>, t[N] = <span class="string">""</span>, r[N] = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> cs=<span class="number">1</span>; cs&lt;=n; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %s %s %s"</span>, &amp;c, s1, s2, r);</span><br><span class="line">        <span class="built_in">map</span>&lt;<span class="built_in">string</span>,<span class="keyword">bool</span>&gt; m;</span><br><span class="line">        step = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(<span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;c; i++) &#123;</span><br><span class="line">                t[i*<span class="number">2</span>] = s2[i];</span><br><span class="line">                t[i*<span class="number">2</span>+<span class="number">1</span>] = s1[i];</span><br><span class="line">            &#125;</span><br><span class="line">            t[c*<span class="number">2</span>] = <span class="string">'\0'</span>;</span><br><span class="line">            step++;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">strcmp</span>(t, r)==<span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(m[t]==<span class="literal">true</span>) &#123;</span><br><span class="line">                step = <span class="number">-1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            m[t] = <span class="literal">true</span>;</span><br><span class="line">            <span class="built_in">strncpy</span>(s1, t, c);</span><br><span class="line">            <span class="built_in">strncpy</span>(s2, t+c, c);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>, cs, step);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>模拟</category>
      </categories>
      <tags>
        <tag>kuangbin 专题一</tag>
        <tag>POJ</tag>
        <tag>模拟</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】POJ-3080 Blue Jeans</title>
    <url>/posts/d3a525ce.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="Blue-Jeans-POJ-3080"><a href="#Blue-Jeans-POJ-3080" class="headerlink" title="Blue Jeans (POJ-3080)"></a>Blue Jeans (<a href="https://vjudge.net/problem/POJ-3080" target="_blank" rel="noopener">POJ-3080</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>The Genographic Project is a research partnership between IBM and The National Geographic Society that is analyzing DNA from hundreds of thousands of contributors to map how the Earth was populated.</p><p>As an IBM researcher, you have been tasked with writing a program that will find commonalities amongst given snippets of DNA that can be correlated with individual survey information to identify new genetic markers.</p><p>A DNA base sequence is noted by listing the nitrogen bases in the order in which they are found in the molecule. There are four bases: adenine (A), thymine (T), guanine (G), and cytosine (C). A 6-base DNA sequence could be represented as TAGACC.</p><p>Given a set of DNA base sequences, determine the longest series of bases that occurs in all of the sequences.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>Input to this problem will begin with a line containing a single integer n indicating the number of datasets. Each dataset consists of the following components:</p><ul><li>A single positive integer m (2 &lt;= m &lt;= 10) indicating the number of base sequences in this dataset.</li><li>m lines each containing a single base sequence consisting of 60 bases.</li></ul></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For each dataset in the input, output the longest base subsequence common to all of the given base sequences. If the longest common subsequence is less than three bases in length, display the string “no significant commonalities” instead. If multiple subsequences of the same longest length exist, output only the subsequence that comes first in alphabetical order.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line">GATACCAGATACCAGATACCAGATACCAGATACCAGATACCAGATACCAGATACCAGATA</span><br><span class="line">AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</span><br><span class="line"><span class="number">3</span></span><br><span class="line">GATACCAGATACCAGATACCAGATACCAGATACCAGATACCAGATACCAGATACCAGATA</span><br><span class="line">GATACTAGATACTAGATACTAGATACTAAAGGAAAGGGAAAAGGGGAAAAAGGGGGAAAA</span><br><span class="line">GATACCAGATACCAGATACCAGATACCAAAGGAAAGGGAAAAGGGGAAAAAGGGGGAAAA</span><br><span class="line"><span class="number">3</span></span><br><span class="line">CATCATCATCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC</span><br><span class="line">ACATCATCATAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</span><br><span class="line">AACATCATCATTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="literal">no</span> <span class="string">significant</span> <span class="string">commonalities</span></span><br><span class="line"><span class="string">AGATAC</span></span><br><span class="line"><span class="string">CATCATCAT</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>最多10个串，每个串最长60，n^3暴力即可。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> s[<span class="number">15</span>][mxn], t[mxn], ans[mxn];</span><br><span class="line"><span class="keyword">int</span> nxt[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getnxt</span><span class="params">(<span class="keyword">char</span>* t, <span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">-1</span>; nxt[<span class="number">0</span>] = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; m) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (j == <span class="number">-1</span> || t[i] == t[j]) &#123;</span><br><span class="line">            i++, j++;</span><br><span class="line">            <span class="comment">// if (t[i] == t[j])</span></span><br><span class="line">            <span class="comment">//     nxt[i] = nxt[j]; // next数组优化</span></span><br><span class="line">            <span class="comment">// else</span></span><br><span class="line">                nxt[i] = j;</span><br><span class="line">        &#125; <span class="keyword">else</span></span><br><span class="line">            j = nxt[j];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">KMP</span><span class="params">(<span class="keyword">char</span>* s, <span class="keyword">char</span>* t, <span class="keyword">int</span> n, <span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>, ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; n) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (j == <span class="number">-1</span> || s[i] == t[j]) &#123;</span><br><span class="line">            i++, j++;</span><br><span class="line">            <span class="keyword">if</span> (j &gt;= m) &#123;   <span class="comment">// 匹配</span></span><br><span class="line">                <span class="comment">// ans++;</span></span><br><span class="line">                <span class="comment">// j = nxt[j];</span></span><br><span class="line">                <span class="keyword">return</span> i-j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span></span><br><span class="line">            j = nxt[j];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// return ans;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> n; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) <span class="built_in">scanf</span>(<span class="string">"%s"</span>, s[i]);</span><br><span class="line">        <span class="keyword">int</span> sl = <span class="built_in">strlen</span>(s[<span class="number">0</span>]), f=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;sl; i++) <span class="comment">// 枚举模式串起点</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> tl = <span class="number">0</span>, k;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=i; j&lt;sl; j++) <span class="comment">// 枚举模式串长度</span></span><br><span class="line">            &#123;</span><br><span class="line">                t[tl++] = s[<span class="number">0</span>][j];</span><br><span class="line">                t[tl] = <span class="string">'\0'</span>;</span><br><span class="line">                getnxt(t, tl);</span><br><span class="line">                <span class="keyword">for</span>(k=<span class="number">0</span>; k&lt;n; k++)  <span class="comment">// 枚举所有文本串</span></span><br><span class="line">                    <span class="keyword">if</span>(KMP(s[k], t, sl, tl) == <span class="number">-1</span>)</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">if</span>(k&gt;=n)    <span class="comment">// 所有串公共子串</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span>(!f || tl&gt;<span class="built_in">strlen</span>(ans))&#123;   <span class="comment">// 长度最长</span></span><br><span class="line">                        <span class="built_in">strcpy</span>(ans, t); f=<span class="number">1</span>;</span><br><span class="line">                    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(tl==<span class="built_in">strlen</span>(ans) &amp;&amp; <span class="built_in">strcmp</span>(t, ans)&lt;<span class="number">0</span>)&#123;  <span class="comment">// 字典序最小</span></span><br><span class="line">                        <span class="built_in">strcpy</span>(ans, t);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!f || <span class="built_in">strlen</span>(ans)&lt;<span class="number">3</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"no significant commonalities\n"</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%s\n"</span>, ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>字符串</category>
        <category>模式匹配</category>
        <category>KMP</category>
      </categories>
      <tags>
        <tag>KMP</tag>
        <tag>kuangbin 专题十六</tag>
        <tag>POJ</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】POJ-3126 Prime Path</title>
    <url>/posts/b5c06adc.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="Prime-Path-POJ-3126"><a href="#Prime-Path-POJ-3126" class="headerlink" title="Prime Path (POJ - 3126)"></a>Prime Path (<a href="https://vjudge.net/problem/POJ-3126" target="_blank" rel="noopener">POJ - 3126</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>The ministers of the cabinet were quite upset by the message from the Chief of Security stating that they would all have to change the four-digit room numbers on their offices.<br>— It is a matter of security to change such things every now and then, to keep the enemy in the dark.<br>— But look, I have chosen my number 1033 for good reasons. I am the Prime minister, you know!<br>— I know, so therefore your new number 8179 is also a prime. You will just have to paste four new digits over the four old ones on your office door.<br>— No, it’s not that simple. Suppose that I change the first digit to an 8, then the number will read 8033 which is not a prime!<br>— I see, being the prime minister you cannot stand having a non-prime number on your door even for a few seconds.<br>— Correct! So I must invent a scheme for going from 1033 to 8179 by a path of prime numbers where only one digit is changed from one prime to the next prime.</p><p>Now, the minister of finance, who had been eavesdropping, intervened.<br>— No unnecessary expenditure, please! I happen to know that the price of a digit is one pound.<br>— Hmm, in that case I need a computer program to minimize the cost. You don’t know some very cheap software gurus, do you?<br>— In fact, I do. You see, there is this programming contest going on… Help the prime minister to find the cheapest prime path between any two given four-digit primes! The first digit must be nonzero, of course. Here is a solution in the case above.</p><p>​ 1033<br>​ 1733<br>​ 3733<br>​ 3739<br>​ 3779<br>​ 8779<br>​ 8179</p><p>The cost of this solution is 6 pounds. Note that the digit 1 which got pasted over in step 2 can not be reused in the last step – a new 1 must be purchased.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>One line with a positive number: the number of test cases (at most 100). Then for each test case, one line with two numbers separated by a blank. Both numbers are four-digit primes (without leading zeros).</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>One line for each case, either with a number stating the minimal cost or containing the word Impossible.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="number">3</span></span><br><span class="line"><span class="symbol">1033 </span><span class="number">8179</span></span><br><span class="line"><span class="symbol">1373 </span><span class="number">8017</span></span><br><span class="line"><span class="symbol">1033 </span><span class="number">1033</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">6</span></span><br><span class="line"><span class="number">7</span></span><br><span class="line"><span class="number">0</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>欧拉筛打表，枚举每一位的变化，注意大于2的偶数不是质数</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span>+<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> isp[N] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">bool</span> vis[N] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> n, s, e;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">P</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> x;</span><br><span class="line">    <span class="keyword">int</span> step;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">euler</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> p[N], m=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>; i&lt;=N; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(!isp[i])</span><br><span class="line">            p[m++] = i;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;m; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(p[j]*i&gt;N)</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            isp[p[j]*i] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(i%p[j]==<span class="number">0</span>)</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">bfs</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(vis, <span class="number">0</span>, <span class="keyword">sizeof</span>(vis));</span><br><span class="line"></span><br><span class="line">    P sp;</span><br><span class="line">    sp.x = s;</span><br><span class="line">    sp.step = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">queue</span>&lt;P&gt; q;</span><br><span class="line">    q.push(sp);</span><br><span class="line">    vis[sp.x] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(!q.empty()) &#123;</span><br><span class="line">        P tp = q.front();</span><br><span class="line">        q.pop();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(tp.x==e) &#123;</span><br><span class="line">            <span class="keyword">return</span> tp.step;</span><br><span class="line">        &#125;</span><br><span class="line">        P np = tp;</span><br><span class="line">        np.step = tp.step+<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">9</span>; i+=<span class="number">2</span>) &#123;</span><br><span class="line">            np.x = tp.x/<span class="number">10</span>*<span class="number">10</span> + i;</span><br><span class="line">            <span class="keyword">if</span>(np.x!=tp.x &amp;&amp; !vis[np.x] &amp;&amp; !isp[np.x]) &#123;</span><br><span class="line">                q.push(np);</span><br><span class="line">                vis[np.x] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;=<span class="number">9</span>; i++) &#123;</span><br><span class="line">            np.x = tp.x/<span class="number">100</span>*<span class="number">100</span> + i*<span class="number">10</span> + tp.x%<span class="number">10</span>;</span><br><span class="line">            <span class="keyword">if</span>(np.x!=tp.x &amp;&amp; !vis[np.x] &amp;&amp; !isp[np.x]) &#123;</span><br><span class="line">                q.push(np);</span><br><span class="line">                vis[np.x] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;=<span class="number">9</span>; i++) &#123;</span><br><span class="line">            np.x = tp.x/<span class="number">1000</span>*<span class="number">1000</span> + i*<span class="number">100</span> + tp.x%<span class="number">100</span>;</span><br><span class="line">            <span class="keyword">if</span>(np.x!=tp.x &amp;&amp; !vis[np.x] &amp;&amp; !isp[np.x]) &#123;</span><br><span class="line">                q.push(np);</span><br><span class="line">                vis[np.x] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">9</span>; i++) &#123;</span><br><span class="line">            np.x = i*<span class="number">1000</span> + tp.x%<span class="number">1000</span>;</span><br><span class="line">            <span class="keyword">if</span>(np.x!=tp.x &amp;&amp; !vis[np.x] &amp;&amp; !isp[np.x]) &#123;</span><br><span class="line">                q.push(np);</span><br><span class="line">                vis[np.x] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    euler();</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;s, &amp;e);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, bfs());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>搜索</category>
        <category>BFS</category>
      </categories>
      <tags>
        <tag>BFS</tag>
        <tag>kuangbin 专题一</tag>
        <tag>POJ</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】POJ-3273 Monthly Expense</title>
    <url>/posts/e7598bf5.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="Monthly-Expense-POJ-3273"><a href="#Monthly-Expense-POJ-3273" class="headerlink" title="Monthly Expense (POJ - 3273)"></a>Monthly Expense (<a href="https://vjudge.net/problem/POJ-3273" target="_blank" rel="noopener">POJ - 3273</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>Farmer John is an astounding accounting wizard and has realized he might run out of money to run the farm. He has already calculated and recorded the exact amount of money (1 ≤ <em>moneyi</em> ≤ 10,000) that he will need to spend each day over the next <em>N</em> (1 ≤ <em>N</em> ≤ 100,000) days.</p><p>FJ wants to create a budget for a sequential set of exactly <em>M</em> (1 ≤ <em>M</em> ≤ <em>N</em>) fiscal periods called “fajomonths”. Each of these fajomonths contains a set of 1 or more consecutive days. Every day is contained in exactly one fajomonth.</p><p>FJ’s goal is to arrange the fajomonths so as to minimize the expenses of the fajomonth with the highest spending and thus determine his monthly spending limit.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>Line 1: Two space-separated integers: <em>N</em> and <em>M</em><br>Lines 2.. <em>N</em>+1: Line <em>i</em>+1 contains the number of dollars Farmer John spends on the <em>i</em>th day</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>Line 1: The smallest possible monthly limit Farmer John can afford to live with.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">7 </span><span class="number">5</span></span><br><span class="line"><span class="number">100</span></span><br><span class="line"><span class="number">400</span></span><br><span class="line"><span class="number">300</span></span><br><span class="line"><span class="number">100</span></span><br><span class="line"><span class="number">500</span></span><br><span class="line"><span class="number">101</span></span><br><span class="line"><span class="number">400</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">500</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>If Farmer John schedules the months so that the first two days are a month, the third and fourth are a month, and the last three are their own months, he spends at most $500 in any month. Any other method of scheduling gives a larger minimum monthly limit.</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">2e5</span>+<span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[N] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;m)) &#123;</span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>, mx = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]);</span><br><span class="line">            sum += a[i];</span><br><span class="line">            mx = max(mx, a[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> l=mx, r=sum, mid=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(l&lt;=r) &#123;</span><br><span class="line">            mid = l+(r-l)/<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">int</span> ans = <span class="number">1</span>, k = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">                k += a[i];</span><br><span class="line">                <span class="keyword">if</span>(k&gt;mid) &#123;</span><br><span class="line">                    k = a[i];</span><br><span class="line">                    ans ++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(ans&gt;m)</span><br><span class="line">                l = mid+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                r = mid<span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, mid);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>搜索</category>
        <category>二分</category>
      </categories>
      <tags>
        <tag>二分</tag>
        <tag>POJ</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】POJ-3122 Pie</title>
    <url>/posts/ddea3716.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="Pie-POJ-3122"><a href="#Pie-POJ-3122" class="headerlink" title="Pie (POJ - 3122)"></a>Pie (<a href="https://vjudge.net/problem/POJ-3122" target="_blank" rel="noopener">POJ - 3122</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>My birthday is coming up and traditionally I’m serving pie. Not just one pie, no, I have a number N of them, of various tastes and of various sizes. F of my friends are coming to my party and each of them gets a piece of pie. This should be one piece of one pie, not several small pieces since that looks messy. This piece can be one whole pie though.</p><p>My friends are very annoying and if one of them gets a bigger piece than the others, they start complaining. Therefore all of them should get equally sized (but not necessarily equally shaped) pieces, even if this leads to some pie getting spoiled (which is better than spoiling the party). Of course, I want a piece of pie for myself too, and that piece should also be of the same size.</p><p>What is the largest possible piece size all of us can get? All the pies are cylindrical in shape and they all have the same height 1, but the radii of the pies can be different.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>One line with a positive integer: the number of test cases. Then for each test case:</p><ul><li>One line with two integers N and F with 1 ≤ N, F ≤ 10 000: the number of pies and the number of friends.</li><li>One line with N integers ri with 1 ≤ ri ≤ 10 000: the radii of the pies.</li></ul></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For each test case, output one line with the largest possible volume V such that me and my friends can all get a pie piece of size V. The answer should be given as a floating point number with an absolute error of at most 10^−3.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="number">3</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">3</span></span><br><span class="line"><span class="symbol">4 </span><span class="number">3</span> <span class="number">3</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">24</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="symbol">10 </span><span class="number">5</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">4</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">5</span> <span class="number">4</span> <span class="number">2</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">25.1327</span></span><br><span class="line"><span class="number">3.1416</span></span><br><span class="line"><span class="number">50.2655</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> pi = <span class="built_in">acos</span>(<span class="number">-1.0</span>);</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-6</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">2e5</span> + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">double</span> a[N] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> T, n, f;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;n, &amp;f);</span><br><span class="line">        <span class="keyword">double</span> mx=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%lf"</span>, &amp;a[i]);</span><br><span class="line">            a[i] = a[i]*a[i]*pi;</span><br><span class="line">            mx = max(mx, a[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">double</span> l=<span class="number">0</span>, r=mx, mid=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(r-l &gt; eps) &#123;</span><br><span class="line">            mid = l+(r-l)/<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">                num += (<span class="keyword">int</span>)(a[i]/mid);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(num &gt;= f+<span class="number">1</span>)</span><br><span class="line">                l = mid;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                r = mid;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%.4lf\n"</span>, mid);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>搜索</category>
        <category>二分</category>
      </categories>
      <tags>
        <tag>二分</tag>
        <tag>POJ</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】POJ-3278 Catch That Cow</title>
    <url>/posts/79cff216.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="Catch-That-Cow-POJ-3278"><a href="#Catch-That-Cow-POJ-3278" class="headerlink" title="Catch That Cow (POJ - 3278)"></a>Catch That Cow (<a href="https://vjudge.net/problem/POJ-3278" target="_blank" rel="noopener">POJ - 3278</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>Farmer John has been informed of the location of a fugitive cow and wants to catch her immediately. He starts at a point <em>N</em> (0 ≤ <em>N</em> ≤ 100,000) on a number line and the cow is at a point <em>K</em> (0 ≤ <em>K</em> ≤ 100,000) on the same number line. Farmer John has two modes of transportation: walking and teleporting.</p><p>* Walking: FJ can move from any point <em>X</em> to the points <em>X</em> - 1 or <em>X</em> + 1 in a single minute<br>* Teleporting: FJ can move from any point <em>X</em> to the point 2 × <em>X</em> in a single minute.</p><p>If the cow, unaware of its pursuit, does not move at all, how long does it take for Farmer John to retrieve it?</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>Line 1: Two space-separated integers: <em>N</em> and <em>K</em></p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>Line 1: The least amount of time, in minutes, it takes for Farmer John to catch the fugitive cow.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">5 </span><span class="number">17</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">4</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>The fastest way for Farmer John to reach the fugitive cow is to move along the following path: 5-10-9-18-17, which takes 4 minutes.</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>一维bfs，注意剪枝</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span>+<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> vis[N] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> n, k, ans = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">P</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> x;</span><br><span class="line">    <span class="keyword">int</span> step;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">bfs</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(vis, <span class="number">0</span>, <span class="keyword">sizeof</span>(vis));</span><br><span class="line"></span><br><span class="line">    P sp;</span><br><span class="line">    sp.x = n;</span><br><span class="line">    sp.step = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">queue</span>&lt;P&gt; q;</span><br><span class="line">    q.push(sp);</span><br><span class="line">    vis[sp.x] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(!q.empty()) &#123;</span><br><span class="line">        P tp = q.front();</span><br><span class="line">        q.pop();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(tp.x==k) &#123;</span><br><span class="line">            <span class="keyword">return</span> tp.step;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        P np = tp;</span><br><span class="line"></span><br><span class="line">        np.x = tp.x - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(np.x&gt;=<span class="number">0</span> &amp;&amp; !vis[np.x]) &#123;</span><br><span class="line">            np.step = tp.step+<span class="number">1</span>;</span><br><span class="line">            q.push(np);</span><br><span class="line">            vis[np.x] = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        np.x = tp.x + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(np.x&lt;=N &amp;&amp; !vis[np.x]) &#123;</span><br><span class="line">            np.step = tp.step+<span class="number">1</span>;</span><br><span class="line">            q.push(np);</span><br><span class="line">            vis[np.x] = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        np.x = tp.x * <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(np.x&lt;=N &amp;&amp; !vis[np.x]) &#123;</span><br><span class="line">            np.step = tp.step+<span class="number">1</span>;</span><br><span class="line">            q.push(np);</span><br><span class="line">            vis[np.x] = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;k);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(n&gt;k)</span><br><span class="line">        ans = n-k;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        ans = bfs();</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>搜索</category>
        <category>BFS</category>
      </categories>
      <tags>
        <tag>BFS</tag>
        <tag>kuangbin 专题一</tag>
        <tag>POJ</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】POJ-3279 Fliptile</title>
    <url>/posts/1b837fe1.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="Fliptile-POJ-3279"><a href="#Fliptile-POJ-3279" class="headerlink" title="Fliptile (POJ - 3279)"></a>Fliptile (<a href="https://vjudge.net/problem/POJ-3279" target="_blank" rel="noopener">POJ - 3279</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>Farmer John knows that an intellectually satisfied cow is a happy cow who will give more milk. He has arranged a brainy activity for cows in which they manipulate an <em>M</em> × <em>N</em> grid (1 ≤ <em>M</em> ≤ 15; 1 ≤ <em>N</em> ≤ 15) of square tiles, each of which is colored black on one side and white on the other side.</p><p>As one would guess, when a single white tile is flipped, it changes to black; when a single black tile is flipped, it changes to white. The cows are rewarded when they flip the tiles so that each tile has the white side face up. However, the cows have rather large hooves and when they try to flip a certain tile, they also flip all the adjacent tiles (tiles that share a full edge with the flipped tile). Since the flips are tiring, the cows want to minimize the number of flips they have to make.</p><p>Help the cows determine the minimum number of flips required, and the locations to flip to achieve that minimum. If there are multiple ways to achieve the task with the minimum amount of flips, return the one with the least lexicographical ordering in the output when considered as a string. If the task is impossible, print one line with the word “IMPOSSIBLE”.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>Line 1: Two space-separated integers: <em>M</em> and <em>N</em><br>Lines 2.. <em>M</em>+1: Line <em>i</em>+1 describes the colors (left to right) of row i of the grid with <em>N</em> space-separated integers which are 1 for black and 0 for white</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>Lines 1.. <em>M</em>: Each line contains <em>N</em> space-separated integers, each specifying how many times to flip that particular location.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">4 </span><span class="number">4</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">0</span> <span class="number">0</span> <span class="number">1</span></span><br><span class="line"><span class="symbol">0 </span><span class="number">1</span> <span class="number">1</span> <span class="number">0</span></span><br><span class="line"><span class="symbol">0 </span><span class="number">1</span> <span class="number">1</span> <span class="number">0</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">0</span> <span class="number">0</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">0 </span><span class="number">0</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">0</span> <span class="number">0</span> <span class="number">1</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">0</span> <span class="number">0</span> <span class="number">1</span></span><br><span class="line"><span class="symbol">0 </span><span class="number">0</span> <span class="number">0</span> <span class="number">0</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>开关问题，二进制枚举第一行开关情况</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">15</span>+<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> b[N][N] = &#123;&#123;<span class="number">0</span>&#125;&#125;, c[N][N] = &#123;&#123;<span class="number">0</span>&#125;&#125;, a[N][N] = &#123;&#123;<span class="number">0</span>&#125;&#125;;</span><br><span class="line"><span class="keyword">int</span> n, m, ans = inf;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> dx[]= &#123; <span class="number">1</span>, <span class="number">-1</span>,  <span class="number">0</span>,  <span class="number">0</span>,  <span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> dy[]= &#123; <span class="number">0</span>,  <span class="number">0</span>,  <span class="number">1</span>, <span class="number">-1</span>,  <span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">isb</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t = b[x][y];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">5</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">int</span> xi = x+dx[i];</span><br><span class="line">        <span class="keyword">int</span> yi = y+dy[i];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(xi&lt;<span class="number">0</span> || xi&gt;=n || yi&lt;<span class="number">0</span> || yi&gt;=m) &#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        t += c[xi][yi];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> t%<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;n; i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;m; j++)</span><br><span class="line">            <span class="keyword">if</span>(isb(i<span class="number">-1</span>,j))</span><br><span class="line">                c[i][j] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;m; i++)</span><br><span class="line">        <span class="keyword">if</span>(isb(n<span class="number">-1</span>,i))</span><br><span class="line">            <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> res=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;m; j++)</span><br><span class="line">            res += c[i][j];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;m)==<span class="number">2</span>) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;m; j++) &#123;</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;b[i][j]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;(<span class="number">1</span>&lt;&lt;m); i++) &#123;</span><br><span class="line">            <span class="built_in">memset</span>(c, <span class="number">0</span>, <span class="keyword">sizeof</span>(c));</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;m; j++) &#123;</span><br><span class="line">                c[<span class="number">0</span>][m-j<span class="number">-1</span>] = i&gt;&gt;j&amp;<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">int</span> res = dfs();</span><br><span class="line">            <span class="keyword">if</span>(res&gt;=<span class="number">0</span> &amp;&amp; res&lt;ans) &#123;</span><br><span class="line">                ans = res;</span><br><span class="line">                <span class="built_in">memcpy</span>(a, c, <span class="keyword">sizeof</span>(c));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(ans==inf) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"IMPOSSIBLE\n"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;m; j++) &#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"%d "</span>, a[i][j]);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>枚举</category>
      </categories>
      <tags>
        <tag>kuangbin 专题一</tag>
        <tag>POJ</tag>
        <tag>枚举</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】POJ-3376 Finding Palindromes</title>
    <url>/posts/4d9d82b5.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="Finding-Palindromes-POJ-3376"><a href="#Finding-Palindromes-POJ-3376" class="headerlink" title="Finding Palindromes(POJ-3376)"></a>Finding Palindromes(<a href="https://vjudge.net/problem/POJ-3376" target="_blank" rel="noopener">POJ-3376</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>A word is called a palindrome if we read from right to left is as same as we read from left to right. For example, “dad”, “eye” and “racecar” are all palindromes, but “odd”, “see” and “orange” are not palindromes.</p><p>Given <em>n</em> strings, you can generate <em>n</em> × <em>n</em> pairs of them and concatenate the pairs into single words. The task is to count how many of the so generated words are palindromes.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>The first line of input file contains the number of strings <em>n</em>. The following <em>n</em> lines describe each string:</p><p>The <em>i</em>+1-th line contains the length of the <em>i</em>-th string <em>li</em>, then a single space and a string of <em>li</em> small letters of English alphabet.</p><p>You can assume that the total length of all strings will not exceed 2,000,000. Two strings in different line may be the same.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>Print out only one integer, the number of palindromes.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="number">3</span></span><br><span class="line"><span class="symbol">1 </span>a</span><br><span class="line"><span class="symbol">2 </span>ab</span><br><span class="line"><span class="symbol">2 </span>ba</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">5</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>The 5 palindromes are:<br>a<strong>a</strong> a<strong>ba</strong> ab<strong>a</strong> ab<strong>ba</strong> ba<strong>ab</strong></p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>把所有正串都加进一棵Trie，然后用每个串的逆串去跑Trie，此时会出现以下情况：</p><ol><li>匹配完成，那么就说明存在一个正串的前缀是这个逆串。如果剩余的逆串回文，那么能形成回文。</li><li>匹配失败，Trie未结束，说明不能构成回文。</li><li>Trie已经跑到叶子节点，匹配未结束，那么如果正串剩余部分回文，那么能形成回文。</li></ol><p>用扩展KMP处理出一个串的每个后缀是不是回文串，方法是用该串和其逆串仅用扩展KMP匹配，如果ex[i]=（从i到末尾的长度），那么说明从i到末尾的后缀是回文的。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> s[mxn], t[mxn], rev[mxn];</span><br><span class="line"><span class="keyword">int</span> nxt[mxn], extend[mxn];</span><br><span class="line"><span class="keyword">int</span> tree[mxn][<span class="number">26</span>], exist[mxn], cnt = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> len[mxn], val[mxn];</span><br><span class="line">LL ans = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getnxt</span><span class="params">(<span class="keyword">char</span>* t, <span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a, p; nxt[<span class="number">0</span>] = m;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>, j=<span class="number">-1</span>; i&lt;m; i++, j--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (j&lt;<span class="number">0</span> || i+nxt[i-a] &gt;= p)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (j&lt;<span class="number">0</span>) p = i, j = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span> (p&lt;m &amp;&amp; t[p]==t[j]) p++, j++;</span><br><span class="line">            nxt[i] = j, a = i;</span><br><span class="line">        &#125; <span class="keyword">else</span></span><br><span class="line">            nxt[i] = nxt[i-a];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">exKMP</span><span class="params">(<span class="keyword">char</span>* s, <span class="keyword">char</span>* t, <span class="keyword">int</span> n, <span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a, p;            </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>, j=<span class="number">-1</span>; i&lt;n; i++, j--)  <span class="comment">//j即等于p与i的距离，其作用是判断i是否大于p（如果j&lt;0，则i大于p）</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (j&lt;<span class="number">0</span> || i+nxt[i-a] &gt;= p)  </span><br><span class="line">        &#123; </span><br><span class="line">            <span class="keyword">if</span> (j&lt;<span class="number">0</span>) p = i, j = <span class="number">0</span>;      <span class="comment">//如果i大于p</span></span><br><span class="line">            <span class="keyword">while</span> (p&lt;n &amp;&amp; j&lt;m &amp;&amp; s[p]==t[j]) p++, j++;</span><br><span class="line">            extend[i] = j, a = i;</span><br><span class="line">        &#125; <span class="keyword">else</span></span><br><span class="line">            extend[i] = nxt[i-a];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">char</span> *s, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> p = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> c = s[i] - <span class="string">'a'</span>;</span><br><span class="line">        <span class="keyword">if</span> (!tree[p][c]) tree[p][c] = ++cnt;</span><br><span class="line">        p = tree[p][c];</span><br><span class="line">        val[p] += (i+<span class="number">1</span>&lt;n &amp;&amp; extend[i+<span class="number">1</span>]==n-i<span class="number">-1</span>) ? <span class="number">1</span> : <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    exist[p]++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">search</span><span class="params">(<span class="keyword">char</span> *s, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> p = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> c = s[i] - <span class="string">'a'</span>;</span><br><span class="line">        <span class="keyword">if</span> (!tree[p][c]) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        p = tree[p][c];</span><br><span class="line">        ans += (exist[p] &amp;&amp; (i+<span class="number">1</span>&gt;=n || extend[i+<span class="number">1</span>]==n-i<span class="number">-1</span>)) ? exist[p] : <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ans += val[p];</span><br><span class="line">    <span class="keyword">return</span> exist[p];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    <span class="keyword">int</span> st = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %s"</span>, &amp;len[i], s+st);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;len[i]; j++)</span><br><span class="line">            rev[j] = s[st+len[i]-j<span class="number">-1</span>];</span><br><span class="line">        getnxt(rev, len[i]);</span><br><span class="line">        exKMP(s+st, rev, len[i], len[i]);</span><br><span class="line">        insert(s+st, len[i]);</span><br><span class="line">        st += len[i];</span><br><span class="line">    &#125;</span><br><span class="line">    ans = st = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;len[i]; j++)</span><br><span class="line">            rev[j] = s[st+len[i]-j<span class="number">-1</span>];</span><br><span class="line">        getnxt(s+st, len[i]);</span><br><span class="line">        exKMP(rev, s+st, len[i], len[i]);</span><br><span class="line">        search(rev, len[i]);</span><br><span class="line">        st += len[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>字符串</category>
        <category>扩展KMP</category>
      </categories>
      <tags>
        <tag>扩展KMP</tag>
        <tag>kuangbin 专题十六</tag>
        <tag>POJ</tag>
        <tag>Trie</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】POJ-3414 Pots</title>
    <url>/posts/1702382b.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="Pots-POJ-3414"><a href="#Pots-POJ-3414" class="headerlink" title="Pots (POJ - 3414)"></a>Pots (<a href="https://vjudge.net/problem/POJ-3414" target="_blank" rel="noopener">POJ - 3414</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>You are given two pots, having the volume of <strong>A</strong> and <strong>B</strong> liters respectively. The following operations can be performed:</p><ol><li>FILL(i) fill the pot <strong>i</strong> (1 ≤ <strong>i</strong> ≤ 2) from the tap;</li><li>DROP(i) empty the pot <strong>i</strong> to the drain;</li><li>POUR(i,j) pour from pot <strong>i</strong> to pot <strong>j</strong>; after this operation either the pot <strong>j</strong> is full (and there may be some water left in the pot <strong>i</strong>), or the pot <strong>i</strong> is empty (and all its contents have been moved to the pot <strong>j</strong>).</li></ol><p>Write a program to find the shortest possible sequence of these operations that will yield exactly <strong>C</strong> liters of water in one of the pots.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>On the first and only line are the numbers <strong>A</strong>, <strong>B</strong>, and <strong>C</strong>. These are all integers in the range from 1 to 100 and <strong>C</strong>≤max(<strong>A</strong>,<strong>B</strong>).</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>The first line of the output must contain the length of the sequence of operations <strong>K</strong>. The following <strong>K</strong> lines must each describe one operation. If there are several sequences of minimal length, output any one of them. If the desired result can’t be achieved, the first and only line of the file must contain the word ‘<strong>impossible</strong>’.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">3 </span><span class="number">5</span> <span class="number">4</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="number">6</span></span><br><span class="line"><span class="function"><span class="title">FILL</span><span class="params">(<span class="number">2</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">POUR</span><span class="params">(<span class="number">2</span>,<span class="number">1</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">DROP</span><span class="params">(<span class="number">1</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">POUR</span><span class="params">(<span class="number">2</span>,<span class="number">1</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">FILL</span><span class="params">(<span class="number">2</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">POUR</span><span class="params">(<span class="number">2</span>,<span class="number">1</span>)</span></span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>倒水问题，bfs+路径输出</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e2</span>+<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> vis[N][N] = &#123;&#123;<span class="number">0</span>&#125;&#125;;</span><br><span class="line"><span class="keyword">int</span> A, B, C;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span>* path[] = &#123;</span><br><span class="line">    <span class="string">"FILL(1)"</span>,</span><br><span class="line">    <span class="string">"FILL(2)"</span>,</span><br><span class="line">    <span class="string">"DROP(1)"</span>,</span><br><span class="line">    <span class="string">"DROP(2)"</span>,</span><br><span class="line">    <span class="string">"POUR(1,2)"</span>,</span><br><span class="line">    <span class="string">"POUR(2,1)"</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">P</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> a, b;</span><br><span class="line">    <span class="keyword">int</span> p[N];</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function">P <span class="title">bfs</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(vis, <span class="number">0</span>, <span class="keyword">sizeof</span>(vis));</span><br><span class="line"></span><br><span class="line">    P sp;</span><br><span class="line">    sp.a = <span class="number">0</span>;</span><br><span class="line">    sp.b = <span class="number">0</span>;</span><br><span class="line">    sp.n = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">memset</span>(sp.p, <span class="number">0</span>, <span class="keyword">sizeof</span>(sp.p));</span><br><span class="line"></span><br><span class="line">    <span class="built_in">queue</span>&lt;P&gt; q;</span><br><span class="line">    q.push(sp);</span><br><span class="line">    vis[sp.a][sp.b] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(!q.empty()) &#123;</span><br><span class="line">        P tp = q.front();</span><br><span class="line">        q.pop();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(tp.a==C || tp.b==C) &#123;</span><br><span class="line">            <span class="keyword">return</span> tp;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        P np = tp;</span><br><span class="line">        np.n = tp.n+<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(tp.a&lt;A) &#123;</span><br><span class="line">            np.a = A;</span><br><span class="line">            np.b = tp.b;</span><br><span class="line">            <span class="keyword">if</span>(!vis[np.a][np.b]) &#123;</span><br><span class="line">                np.p[tp.n] = <span class="number">0</span>;</span><br><span class="line">                q.push(np);</span><br><span class="line">                vis[np.a][np.b] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(tp.b&lt;B) &#123;</span><br><span class="line">            np.a = tp.a;</span><br><span class="line">            np.b = B;</span><br><span class="line">            <span class="keyword">if</span>(!vis[np.a][np.b]) &#123;</span><br><span class="line">                np.p[tp.n] = <span class="number">1</span>;</span><br><span class="line">                q.push(np);</span><br><span class="line">                vis[np.a][np.b] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(tp.a) &#123;</span><br><span class="line">            np.a = <span class="number">0</span>;</span><br><span class="line">            np.b = tp.b;</span><br><span class="line">            <span class="keyword">if</span>(!vis[np.a][np.b]) &#123;</span><br><span class="line">                np.p[tp.n] = <span class="number">2</span>;</span><br><span class="line">                q.push(np);</span><br><span class="line">                vis[np.a][np.b] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(tp.b) &#123;</span><br><span class="line">            np.a = tp.a;</span><br><span class="line">            np.b = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span>(!vis[np.a][np.b]) &#123;</span><br><span class="line">                np.p[tp.n] = <span class="number">3</span>;</span><br><span class="line">                q.push(np);</span><br><span class="line">                vis[np.a][np.b] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(tp.a &amp;&amp; tp.b&lt;B) &#123;</span><br><span class="line">            <span class="keyword">if</span>(tp.a &gt; B-tp.b) &#123;</span><br><span class="line">                np.a = tp.a-B+tp.b;</span><br><span class="line">                np.b = B;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                np.a = <span class="number">0</span>;</span><br><span class="line">                np.b = tp.a+tp.b;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(!vis[np.a][np.b]) &#123;</span><br><span class="line">                np.p[tp.n] = <span class="number">4</span>;</span><br><span class="line">                q.push(np);</span><br><span class="line">                vis[np.a][np.b] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(tp.b &amp;&amp; tp.a&lt;A) &#123;</span><br><span class="line">            <span class="keyword">if</span>(tp.b &gt; A-tp.a) &#123;</span><br><span class="line">                np.a = A;</span><br><span class="line">                np.b = tp.b-A+tp.a;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                np.a = tp.a+tp.b;</span><br><span class="line">                np.b = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(!vis[np.a][np.b]) &#123;</span><br><span class="line">                np.p[tp.n] = <span class="number">5</span>;</span><br><span class="line">                q.push(np);</span><br><span class="line">                vis[np.a][np.b] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>, &amp;A, &amp;B, &amp;C);</span><br><span class="line">    P ans = bfs();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(ans.n) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans.n);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;ans.n; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> j = ans.p[i];</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%s\n"</span>, path[j]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"impossible\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>搜索</category>
        <category>BFS</category>
      </categories>
      <tags>
        <tag>BFS</tag>
        <tag>kuangbin 专题一</tag>
        <tag>POJ</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】POJ-3480 John</title>
    <url>/posts/a3deb991.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="John-POJ-3480"><a href="#John-POJ-3480" class="headerlink" title="John(POJ-3480)"></a>John(<a href="https://vjudge.net/problem/POJ-3480" target="_blank" rel="noopener">POJ-3480</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>Little John is playing very funny game with his younger brother. There is one big box filled with M&amp;Ms of different colors. At first John has to eat several M&amp;Ms of the same color. Then his opponent has to make a turn. And so on. Please note that each player has to eat at least one M&amp;M during his turn. If John (or his brother) will eat the last M&amp;M from the box he will be considered as a looser and he will have to buy a new candy box.</p><p>Both of players are using optimal game strategy. John starts first always. You will be given information about M&amp;Ms and your task is to determine a winner of such a beautiful game.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>The first line of input will contain a single integer <strong>T</strong> – the number of test cases. Next <strong>T</strong> pairs of lines will describe tests in a following format. The first line of each test will contain an integer <strong>N</strong> – the amount of different M&amp;M colors in a box. Next line will contain <strong>N</strong> integers <strong>Ai</strong>, separated by spaces – amount of M&amp;Ms of <strong>i</strong>-th color.</p><p><strong>Constraints:<br>1 &lt;= T &lt;= 474,<br>1 &lt;= N &lt;= 47,<br>1 &lt;= Ai &lt;= 4747</strong></p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>Output <strong>T</strong> lines each of them containing information about game winner. Print “<strong>John</strong>” if John will win the game or “<strong>Brother</strong>” in other case.For each test case, write a single line with an integer indicating the number of winning moves from the given Nim position.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">5</span> <span class="number">1</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">John</span></span><br><span class="line"><span class="attribute">Brother</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>Anti-Nim博弈，属于Anti-SG游戏的一种。</p><p>Anti-SG游戏定义：</p><blockquote><ol><li><p>决策集合为空的操作者胜。</p></li><li><p>其余规则与SG游戏一致。</p></li></ol></blockquote><p>SJ定理：</p><blockquote><p>对于任意一个Anti-SG游戏，如果定义所有子游戏的SG值为0时游戏结束，先手必胜的条件：</p><ol><li>游戏的SG值为0且所有子游戏SG值均不超过1。</li><li>游戏的SG值不为0且至少一个子游戏SG值超过1。</li></ol></blockquote><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> n; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> nim=<span class="number">0</span>, anti=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> x; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;x);</span><br><span class="line">            <span class="keyword">if</span>(x&gt;<span class="number">1</span>) anti = <span class="number">1</span>;</span><br><span class="line">            nim ^=x;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>((!nim&amp;&amp;!anti) || (nim&amp;&amp;anti))&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"John\n"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Brother\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>博弈论</category>
      </categories>
      <tags>
        <tag>博弈论</tag>
        <tag>Anti-Nim博弈</tag>
        <tag>POJ</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】POJ-3533 Light Switching Game</title>
    <url>/posts/1087687f.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="Light-Switching-Game-POJ-3533"><a href="#Light-Switching-Game-POJ-3533" class="headerlink" title="Light Switching Game(POJ-3533)"></a>Light Switching Game(<a href="https://vjudge.net/problem/POJ-3533" target="_blank" rel="noopener">POJ-3533</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>The Light Switching Game is played on a 1000 × 1000 × 1000 cube of cells with a light in each cell, as Figure.1 shows. Initially, most of the lights are off while exactly <em>N</em> lights are on. Two players take moves alternately. A move consists of switching the lights at the corners of a cuboid, i.e. (<em>x</em>1,<em>y</em>1,<em>z</em>1), (<em>x</em>1,<em>y</em>1,<em>z</em>2), (<em>x</em>1,<em>y</em>2,<em>z</em>1), (<em>x</em>1,<em>y</em>2,<em>z</em>2), (<em>x</em>2,<em>y</em>1,<em>z</em>1), (<em>x</em>2,<em>y</em>1,<em>z</em>2), (<em>x</em>2,<em>y</em>2,<em>z</em>1), (<em>x</em>2,<em>y</em>2,<em>z</em>2) where 1 ≤ <em>x</em>1 ≤ <em>x</em>2 ≤ 1000, 1 ≤<em>y</em>1 ≤ <em>y</em>2 ≤ 1000, 1 ≤<em>z</em>1 ≤ <em>z</em>2 ≤ 1000 and the light at the corner (<em>x</em>2,<em>y</em>2,<em>z</em>2) must be on (and turned off after the move). Notice the cuboid is possibly degenerated to a rectangle, a line or even a single cell so that the player may also switching four, two or one besides eight lights in a move. The player loses the game when he can not take a move.</p><p><img src="https://vj.z180.cn/8f32686621aad732920aa976cfafe3cc?v=1594697219" alt="Figure.1"></p><p>You will find out whether the second player can win if both players play optimally.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>There are multiple test cases.<br>Every test case starts with one line containing a single number <em>N</em> indicating the number of lights which is initially on. (<em>N</em> ≤ 100)<br>Each of the next <em>N</em> lines contains the coordinates (<em>x</em>, <em>y</em>, <em>z</em>) (1 ≤ <em>x</em>, <em>y</em>, <em>z</em> ≤ 1000) showing that the light at this position is on initially.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>One line for each test case which contains “Yes” or “No” indicating whether the second player can win the game.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="number">4</span></span><br><span class="line"><span class="symbol">5 </span><span class="number">11</span> <span class="number">30</span></span><br><span class="line"><span class="symbol">5 </span><span class="number">19</span> <span class="number">19</span></span><br><span class="line"><span class="symbol">23 </span><span class="number">15</span> <span class="number">6</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">26</span> <span class="number">16</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="symbol">9 </span><span class="number">20</span> <span class="number">9</span></span><br><span class="line"><span class="symbol">8 </span><span class="number">1</span> <span class="number">28</span></span><br><span class="line"><span class="symbol">30 </span><span class="number">22</span> <span class="number">26</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="literal">Yes</span></span><br><span class="line"><span class="literal">No</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>Nim积，见<a href="https://blog.lordash.cf/posts/55e38792.html">【题解】HDU-3404 Switch lights</a></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    Nim积 x @ y = mex&#123;(a @ y) ^ (x @ b) ^ (a @ b)&#125;, 0 &lt;= a &lt; x, 0 &lt;= b &lt; y</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    1. X x 2^(2^a) = X * 2^(2^a)</span></span><br><span class="line"><span class="comment">    2. X x Y &lt; 2^(2^a)</span></span><br><span class="line"><span class="comment">    3. 2^(2^a) x 2^(2^a) = (3/2) * 2^(2^a)</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    调用 ans ^= f(x, y)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> SG[<span class="number">20</span>][<span class="number">20</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">f</span><span class="params">(<span class="keyword">int</span>, <span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">g</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span>                         <span class="comment">// 计算2^x与2^y的nim积</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(SG[x][y] != <span class="number">-1</span>) <span class="keyword">return</span> SG[x][y];</span><br><span class="line">    <span class="keyword">if</span>(!x) <span class="keyword">return</span> SG[x][y] = <span class="number">1</span>&lt;&lt;y;          <span class="comment">// x==0也就是1与2^y的nim积，等于2^y</span></span><br><span class="line">    <span class="keyword">if</span>(!y) <span class="keyword">return</span> SG[x][y] = <span class="number">1</span>&lt;&lt;x;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">1</span>, t;</span><br><span class="line">    <span class="keyword">int</span> xx=x, yy=y, k=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(x || y)                           <span class="comment">// 再将x和y分为二进制，这里计算那些普通乘积的（即对应二进制位不同的）</span></span><br><span class="line">    &#123;</span><br><span class="line">        t = <span class="number">1</span>&lt;&lt;k;                           <span class="comment">// 从此位得到的最终的数2^k</span></span><br><span class="line">        <span class="keyword">if</span>((x^y)&amp;<span class="number">1</span>)  ans *= t;              <span class="comment">// 该位不同</span></span><br><span class="line">        x&gt;&gt;=<span class="number">1</span>; y&gt;&gt;=<span class="number">1</span>; k&lt;&lt;=<span class="number">1</span>;                <span class="comment">// 从此位得到的指数(本身也是2的幂)</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    x=xx; y=yy; k=<span class="number">1</span>;    </span><br><span class="line">    <span class="keyword">while</span>(x || y)                           <span class="comment">// 计算那些相同的fermat 2-power 数，与已得出的数的nim积</span></span><br><span class="line">    &#123;</span><br><span class="line">        t = <span class="number">1</span>&lt;&lt;k;</span><br><span class="line">        <span class="keyword">if</span> ((x&amp;y)&amp;<span class="number">1</span>) ans = f(ans, t/<span class="number">2</span>*<span class="number">3</span>);   <span class="comment">// 该位相同</span></span><br><span class="line">        x&gt;&gt;=<span class="number">1</span>; y&gt;&gt;=<span class="number">1</span>; k&lt;&lt;=<span class="number">1</span>;                <span class="comment">// 从此位得到的指数(本身也是2的幂)</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> SG[xx][yy] = ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">f</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span>                         <span class="comment">//计算二位Nim积</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!x || !y) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(x == <span class="number">1</span>) <span class="keyword">return</span> y;</span><br><span class="line">    <span class="keyword">if</span>(y == <span class="number">1</span>) <span class="keyword">return</span> x;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=x, a=<span class="number">0</span>; i; i&gt;&gt;=<span class="number">1</span>, a++)       <span class="comment">//将x和二进制分解</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> ((i&amp;<span class="number">1</span>)==<span class="number">0</span>) <span class="keyword">continue</span>;             <span class="comment">//该位是1才计算</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=y, b=<span class="number">0</span>; j; j&gt;&gt;=<span class="number">1</span>, b++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> ((j&amp;<span class="number">1</span>)==<span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">            ans ^= g(a, b);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(SG, <span class="number">-1</span>, <span class="keyword">sizeof</span>(SG));</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n) &amp;&amp; n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> nim=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> x, y, z; </span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>, &amp;x, &amp;y, &amp;z);</span><br><span class="line">            nim ^= f(x, f(y, z));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(nim)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"No\n"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Yes\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>博弈论</category>
      </categories>
      <tags>
        <tag>博弈论</tag>
        <tag>Nim积</tag>
        <tag>POJ</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】POJ-3746 Teacher YYF</title>
    <url>/posts/938ff8e2.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="Teacher-YYF-POJ-3746"><a href="#Teacher-YYF-POJ-3746" class="headerlink" title="Teacher YYF(POJ-3746)"></a>Teacher YYF(<a href="https://vjudge.net/problem/POJ-3746" target="_blank" rel="noopener">POJ-3746</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>As we all know, grammar is very important when learning English. Now, YYF become a teacher of a primary school. The students are good at memory so they can tell the meaning and the function (noun, verb …) of the words in the textbook. But, they cannot use these words properly.</p><p>In YYF’s mind, writing sentences is a good way to learn grammar. So he tells the student to write 20 sentences a day, using the word learned in the class. As YYF has a lot of student, he will receive many sentences from his student. What a horrible work to check all the sentences. You are one of YYF’s friends, so he asks you for help. You task is to write a program to check the sentences.</p><p>To make the work simple, YYF chooses a part of the grammar: All the words can be grouped into seven divisions (noun, pronoun, adjective, adverb, preposition, article, and verb). A verb can be transitive or intransitive. So we use “n.”, “pron.”, “adj.”, “adv.”, “prep.”, “art.”, “vt.” and “vi.” to be short of noun, pronoun, adjective, adverb, preposition, article, transitive verb and intransitive verb. If a word is marked as “v.”, it can be used as either transitive verb or intransitive verb.</p><p>Here comes the sentence structure:</p><ol><li>Subject + Intransitive Verb</li><li>Subject + Transitive Verb + Object</li></ol><p>Noun and pronoun can be used as Subject or Object. When using a noun, an article should be placed ahead of it. A noun can be modified by an adjective and a verb can be modified by an adverb. When an adjective is used to modify a noun, it should be put between article and noun. When an adverb is used to modify a verb, it should be put ahead of the verb. A prepositional phrase can be put ahead of Subject, between Subject and Verb, behind Intransitive Verb, between Verb and Object, or behind Object. A prepositional phrase is made up of a preposition and a noun/pronoun. In one sentence, at most one prepositional phrase is allowed. Any two parts of the sentence cannot intersect. For example, “He is a good student” is OK, but “He a good is student” is not. Every word in the dictionary will have only one function. The words are not case sensitive and Subject-Verb Agreement does not matter. That’s all the rules. Now, it’s your time to show.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>The input contains only one case.<br>The first line specifies two number <em>N</em> and <em>M</em> (1 ≤ <em>N</em>, <em>M</em> ≤ 5000). The next <em>N</em> lines will be the words and the functions. Every line contains a word and its function, separated by a space. The next <em>M</em> lines will be the sentences — one sentence per line. Each sentences contains at most 20 words. Every word in the sentences will appear in the dictionary.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>The output contains <em>M</em> lines. For each line, output “YES” if the sentence is OK, and output “NO” if not.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">10</span> <span class="string">6</span></span><br><span class="line"><span class="attr">he</span> <span class="string">pron.</span></span><br><span class="line"><span class="attr">see</span> <span class="string">vt.</span></span><br><span class="line"><span class="attr">a</span> <span class="string">art.</span></span><br><span class="line"><span class="attr">baby</span> <span class="string">n.</span></span><br><span class="line"><span class="attr">at</span> <span class="string">prep.</span></span><br><span class="line"><span class="attr">the</span> <span class="string">art.</span></span><br><span class="line"><span class="attr">airport</span> <span class="string">n.</span></span><br><span class="line"><span class="attr">happy</span> <span class="string">adj.</span></span><br><span class="line"><span class="attr">guess</span> <span class="string">v.</span></span><br><span class="line"><span class="attr">immediately</span> <span class="string">adv.</span></span><br><span class="line"><span class="attr">He</span> <span class="string">guess.</span></span><br><span class="line"><span class="attr">He</span> <span class="string">see baby.</span></span><br><span class="line"><span class="attr">Happy</span> <span class="string">he see a baby.</span></span><br><span class="line"><span class="attr">He</span> <span class="string">immediately see a baby.</span></span><br><span class="line"><span class="attr">He</span> <span class="string">see a baby immediately.</span></span><br><span class="line"><span class="attr">At</span> <span class="string">the airport, he see a happy baby.</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="literal">YES</span></span><br><span class="line"><span class="literal">NO</span></span><br><span class="line"><span class="literal">NO</span></span><br><span class="line"><span class="literal">YES</span></span><br><span class="line"><span class="literal">NO</span></span><br><span class="line"><span class="literal">YES</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>Please read the Problem Description carefully. Do not use your own English knowledge to construct rules.</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>不太符合专题内容，估计是题目拉错没删，<a href="https://blog.lordash.cf/posts/5c75aa0.html">【题解】HDU-3746 Cyclic Nacklace</a>。网上找的用stl的实现，很灵活。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">map</span>&lt;<span class="built_in">string</span>,<span class="built_in">string</span>&gt; mp;</span><br><span class="line"><span class="built_in">map</span>&lt;<span class="built_in">string</span>,<span class="keyword">bool</span>&gt; ste;</span><br><span class="line"><span class="built_in">map</span>&lt;<span class="built_in">string</span>,<span class="keyword">char</span>&gt; str, fun;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    fun[<span class="string">"n."</span>]=<span class="string">'0'</span>;</span><br><span class="line">    fun[<span class="string">"pron."</span>]=<span class="string">'1'</span>;</span><br><span class="line">    fun[<span class="string">"adj."</span>]=<span class="string">'2'</span>;</span><br><span class="line">    fun[<span class="string">"adv."</span>]=<span class="string">'3'</span>;</span><br><span class="line">    fun[<span class="string">"prep."</span>]=<span class="string">'4'</span>;</span><br><span class="line">    fun[<span class="string">"art."</span>]=<span class="string">'5'</span>;</span><br><span class="line">    fun[<span class="string">"vt."</span>]=<span class="string">'6'</span>;</span><br><span class="line">    fun[<span class="string">"vi."</span>]=<span class="string">'7'</span>;</span><br><span class="line">    fun[<span class="string">"v."</span>]=<span class="string">'8'</span>;</span><br><span class="line"> </span><br><span class="line">    str[<span class="string">"450"</span>]=<span class="string">'A'</span>; <span class="comment">// 介词短语</span></span><br><span class="line">    str[<span class="string">"4520"</span>]=<span class="string">'A'</span>;</span><br><span class="line">    str[<span class="string">"41"</span>]=<span class="string">'A'</span>;</span><br><span class="line">    str[<span class="string">"1"</span>]=<span class="string">'S'</span>;   <span class="comment">// 主/宾语</span></span><br><span class="line">    str[<span class="string">"50"</span>]=<span class="string">'S'</span>;</span><br><span class="line">    str[<span class="string">"520"</span>]=<span class="string">'S'</span>;</span><br><span class="line">    str[<span class="string">"7"</span>]=<span class="string">'I'</span>;   <span class="comment">// 不及物谓语</span></span><br><span class="line">    str[<span class="string">"37"</span>]=<span class="string">'I'</span>;</span><br><span class="line">    str[<span class="string">"6"</span>]=<span class="string">'T'</span>;   <span class="comment">// 及物谓语</span></span><br><span class="line">    str[<span class="string">"36"</span>]=<span class="string">'T'</span>;</span><br><span class="line">    str[<span class="string">"8"</span>]=<span class="string">'V'</span>;   <span class="comment">// 通用谓语</span></span><br><span class="line">    str[<span class="string">"38"</span>]=<span class="string">'V'</span>;</span><br><span class="line">    <span class="comment">// 句子可能的总体结构</span></span><br><span class="line">    ste[<span class="string">"SI"</span>]=<span class="number">1</span>;</span><br><span class="line">    ste[<span class="string">"STS"</span>]=<span class="number">1</span>;</span><br><span class="line">    ste[<span class="string">"SV"</span>]=<span class="number">1</span>;</span><br><span class="line">    ste[<span class="string">"SVS"</span>]=<span class="number">1</span>;</span><br><span class="line">    ste[<span class="string">"ASI"</span>]=<span class="number">1</span>;</span><br><span class="line">    ste[<span class="string">"ASTS"</span>]=<span class="number">1</span>;</span><br><span class="line">    ste[<span class="string">"ASV"</span>]=<span class="number">1</span>;</span><br><span class="line">    ste[<span class="string">"ASVS"</span>]=<span class="number">1</span>;</span><br><span class="line">    ste[<span class="string">"SAI"</span>]=<span class="number">1</span>;</span><br><span class="line">    ste[<span class="string">"SATS"</span>]=<span class="number">1</span>;</span><br><span class="line">    ste[<span class="string">"SAV"</span>]=<span class="number">1</span>;</span><br><span class="line">    ste[<span class="string">"SAVS"</span>]=<span class="number">1</span>;</span><br><span class="line">    ste[<span class="string">"SIA"</span>]=<span class="number">1</span>;</span><br><span class="line">    ste[<span class="string">"STAS"</span>]=<span class="number">1</span>;</span><br><span class="line">    ste[<span class="string">"SVA"</span>]=<span class="number">1</span>;</span><br><span class="line">    ste[<span class="string">"SVAS"</span>]=<span class="number">1</span>;</span><br><span class="line">    ste[<span class="string">"STSA"</span>]=<span class="number">1</span>;</span><br><span class="line">    ste[<span class="string">"SVSA"</span>]=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="built_in">string</span> s)</span></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> res=<span class="string">""</span>, c=<span class="string">""</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;s.size(); i++)&#123;</span><br><span class="line">        c += s[i];</span><br><span class="line">        <span class="keyword">if</span>(str[c] &gt; <span class="number">0</span>)&#123;</span><br><span class="line">            res += str[c];</span><br><span class="line">            c = <span class="string">""</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    res += c;</span><br><span class="line">    <span class="keyword">return</span> ste[res];</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">work</span><span class="params">(<span class="built_in">string</span> s)</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="built_in">stringstream</span> <span class="title">ss</span><span class="params">(s)</span></span>;</span><br><span class="line">    <span class="built_in">string</span> st, ans;</span><br><span class="line">    <span class="keyword">while</span>(ss &gt;&gt; st)&#123;</span><br><span class="line">        <span class="keyword">int</span> len=st.size(), flag=<span class="number">0</span>;</span><br><span class="line">        st[<span class="number">0</span>] = <span class="built_in">tolower</span>(st[<span class="number">0</span>]);</span><br><span class="line">        <span class="keyword">if</span>(st[len<span class="number">-1</span>] == <span class="string">'.'</span>)&#123;</span><br><span class="line">            flag = <span class="number">1</span>;</span><br><span class="line">            st.erase(--st.end());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(st[len<span class="number">-1</span>] == <span class="string">','</span>)</span><br><span class="line">            st.erase(--st.end());</span><br><span class="line">        ans += fun[mp[st]];</span><br><span class="line">        <span class="keyword">if</span>(flag &amp;&amp; !check(ans))</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"NO"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"YES"</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    init(); <span class="keyword">int</span> n, m;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m)</span><br><span class="line">    &#123;</span><br><span class="line">        mp.clear();</span><br><span class="line">        <span class="built_in">string</span> s, s1, s2;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)&#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; s1 &gt;&gt; s2;</span><br><span class="line">            mp[s1] = s2;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cin</span>.get();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;m; i++)&#123;</span><br><span class="line">            getline(<span class="built_in">cin</span>, s);</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; work(s) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>枚举</category>
      </categories>
      <tags>
        <tag>kuangbin 专题十六</tag>
        <tag>POJ</tag>
        <tag>枚举</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】POJ-3974 Palindrome</title>
    <url>/posts/7ccf9cf5.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="Palindrome-POJ-3974"><a href="#Palindrome-POJ-3974" class="headerlink" title="Palindrome(POJ-3974)"></a>Palindrome(<a href="https://vjudge.net/problem/POJ-3974" target="_blank" rel="noopener">POJ-3974</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>Andy the smart computer science student was attending an algorithms class when the professor asked the students a simple question, “Can you propose an efficient algorithm to find the length of the largest palindrome in a string?”</p><p>A string is said to be a palindrome if it reads the same both forwards and backwards, for example “madam” is a palindrome while “acm” is not.</p><p>The students recognized that this is a classical problem but couldn’t come up with a solution better than iterating over all substrings and checking whether they are palindrome or not, obviously this algorithm is not efficient at all, after a while Andy raised his hand and said “Okay, I’ve a better algorithm” and before he starts to explain his idea he stopped for a moment and then said “Well, I’ve an even better algorithm!”.</p><p>If you think you know Andy’s final solution then prove it! Given a string of at most 1000000 characters find and print the length of the largest palindrome inside this string.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>Your program will be tested on at most 30 test cases, each test case is given as a string of at most 1000000 lowercase characters on a line by itself. The input is terminated by a line that starts with the string “END” (quotes for clarity).</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For each test case in the input print the test case number and the length of the largest palindrome.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">abcbabcbabcba</span><br><span class="line">abacacbaaaab</span><br><span class="line"><span class="keyword">END</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">Case <span class="number">1</span>: <span class="number">13</span></span><br><span class="line">Case <span class="number">2</span>: <span class="number">6</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>Manacher模板题。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> s[mxn], t[mxn];</span><br><span class="line"><span class="keyword">int</span> p[mxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">manacher_init</span><span class="params">(<span class="keyword">char</span> *s, <span class="keyword">char</span> *t, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> j = <span class="number">2</span>; t[<span class="number">0</span>] = <span class="string">'$'</span>, t[<span class="number">1</span>] = <span class="string">'#'</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        t[j++] = s[i];</span><br><span class="line">        t[j++] = <span class="string">'#'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    t[j] = <span class="string">'\0'</span>;</span><br><span class="line">    <span class="keyword">return</span> j;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">manacher</span><span class="params">(<span class="keyword">char</span> *t, <span class="keyword">int</span> *p, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> id = <span class="number">0</span>, mx = <span class="number">0</span>, ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        p[i] = i&lt;mx ? min(p[<span class="number">2</span>*id-i], mx-i) : <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (t[i+p[i]] == t[i-p[i]]) p[i]++;    <span class="comment">// 中心扩展</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (mx &lt; i+p[i])</span><br><span class="line">            mx = i+p[i], id = i;</span><br><span class="line"></span><br><span class="line">        ans = max(ans, p[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> cs = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%s"</span>, s)==<span class="number">1</span> &amp;&amp; <span class="built_in">strcmp</span>(s, <span class="string">"END"</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> n = manacher_init(s, t, <span class="built_in">strlen</span>(s));</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Case %d: %d\n"</span>, cs++, manacher(t, p, n));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>字符串</category>
        <category>Manacher</category>
      </categories>
      <tags>
        <tag>Manacher</tag>
        <tag>kuangbin 专题十六</tag>
        <tag>POJ</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】POJ-3922 A simple stone game</title>
    <url>/posts/e0a94229.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="A-simple-stone-game-POJ-3922"><a href="#A-simple-stone-game-POJ-3922" class="headerlink" title="A simple stone game(POJ-3922)"></a>A simple stone game(<a href="https://vjudge.net/problem/POJ-3922" target="_blank" rel="noopener">POJ-3922</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>After he has learned how to play Nim game, Mike begins to try another stone game which seems much easier.</p><p>The game goes like this: Two players start the game with a pile of n stones. They take stones from the pile in turn and every time they take at least one stone. The one who goes first can take at most n-1 stones for his first move. From then on a player can take at most k times as many stones as his opponent has taken last time. For example, if one player take m stones in his turn, then the other player can take at most k * m stones next time. The player who takes the last stone wins the game. Suppose that those two players always take the best moves and never make mistakes, your job is to find out who will definitely win the game.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>The first line contains a integer t, indicating that there are t test cases following.(t&lt;=20).<br>Each test case is a line consisting of two integer n and k.(2&lt;=n&lt;=10^8,1&lt;=k&lt;=10^5).</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For each test case, output one line starting with “Case N: ”, N is the case number. And then, if the first player can ensure a winning, print the minimum number of stones he should take in his first turn. Otherwise, print “lose”. Please note that there is a blank following the colon.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">5 </span></span><br><span class="line"><span class="symbol">16 </span><span class="number">1</span> </span><br><span class="line"><span class="symbol">11 </span><span class="number">1</span> </span><br><span class="line"><span class="symbol">32 </span><span class="number">2</span> </span><br><span class="line"><span class="symbol">34 </span><span class="number">2</span> </span><br><span class="line"><span class="symbol">19 </span><span class="number">3</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">Case <span class="number">1</span>: lose</span><br><span class="line">Case <span class="number">2</span>: <span class="number">1</span></span><br><span class="line">Case <span class="number">3</span>: <span class="number">3</span></span><br><span class="line">Case <span class="number">4</span>: lose</span><br><span class="line">Case <span class="number">5</span>: <span class="number">4</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>When k = 1, the first player will definitely lose if the initial amount of stones is in the set {2, 4, 8, 16, 32, …}. Let’s call this kind of set “first-player-lose set”.</p><p>When k = 2, the first-player-lose set is {2, 3, 5, 8, 13, 21, 34, 57 …} , which happens to be the Fibonacci sequence starting from 2.</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>K倍动态减法博弈，参照<a href="https://blog.lordash.cf/posts/466426a4.html#Fibonacci博弈">斐波那契博弈</a>和<a href="https://blog.lordash.cf/posts/466426a4.html#Zeckendorf定理">齐肯多夫定理</a>的证明过程，将 $ f_{i} = f_{i-1} + f_{i-2} $ 替换为 $ f_{i} = f_{i-1} + f_{k} \mid _{ K \times f_{k-1} \lt f_{i-1} \le K \times f_{k}} $ ，也就是将齐肯多夫定理表述中的 <code>若干不连续的项</code> 替换为 <code>若干两两之比大于K项</code>。预处理出类似斐波那契博弈中的斐波那契序列，面对局势为序列项的，先手必败。</p><p>注意时间复杂度为 $ O(Tlog_{\frac{k+1}{k}}N) \approx 2 \times 10^{8} $，卡常。</p><p>详细参考<a href="http://www.doc88.com/p-5098170314707.html" target="_blank" rel="noopener">《从“k倍动态减法游戏”出发探究一类组合游戏问题》</a>、<a href="https://blog.csdn.net/ta201314/article/details/44892055" target="_blank" rel="noopener">[POJ3922]Now解题报告</a>。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> f[<span class="number">1000005</span>] = &#123;<span class="number">1</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> cs=<span class="number">1</span>; cs&lt;=T; cs++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> n, k;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;n, &amp;k);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> i=<span class="number">1</span>, j=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(; f[i] &lt;= n; i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(; <span class="number">1L</span>L * k * f[j] &lt; f[i]; j++);</span><br><span class="line">            f[i+<span class="number">1</span>] = f[i] + f[j];</span><br><span class="line">        &#125;</span><br><span class="line">        i--;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Case %d: "</span>, cs);</span><br><span class="line">        <span class="keyword">if</span>(f[i] == n)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"lose\n"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">while</span>(n != f[i])&#123;</span><br><span class="line">                <span class="keyword">for</span>(n-=f[i]; n&lt;f[i]; i--);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, n);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>博弈论</category>
      </categories>
      <tags>
        <tag>博弈论</tag>
        <tag>K倍动态减法博弈</tag>
        <tag>POJ</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】POJ-3984 迷宫问题</title>
    <url>/posts/2c5c3f20.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="迷宫问题-POJ-3984"><a href="#迷宫问题-POJ-3984" class="headerlink" title="迷宫问题 (POJ - 3984)"></a>迷宫问题 (<a href="https://vjudge.net/problem/POJ-3984" target="_blank" rel="noopener">POJ - 3984</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>定义一个二维数组：</p><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">int</span> maze[<span class="number">5</span>][<span class="number">5</span>] = &#123;</span><br><span class="line">	<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>,</span><br><span class="line">	<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>,</span><br><span class="line">	<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>,</span><br><span class="line">	<span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>,</span><br><span class="line">	<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>它表示一个迷宫，其中的1表示墙壁，0表示可以走的路，只能横着走或竖着走，不能斜着走，要求编程序找出从左上角到右下角的最短路线。</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>一个5 × 5的二维数组，表示一个迷宫。数据保证有唯一解。</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>左上角到右下角的最短路径，格式如样例所示。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">0 </span><span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="symbol">0 </span><span class="number">1</span> <span class="number">0</span> <span class="number">1</span> <span class="number">0</span></span><br><span class="line"><span class="symbol">0 </span><span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="symbol">0 </span><span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">0</span></span><br><span class="line"><span class="symbol">0 </span><span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">0</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">(<span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">(<span class="number">1</span>, <span class="number">0</span>)</span><br><span class="line">(<span class="number">2</span>, <span class="number">0</span>)</span><br><span class="line">(<span class="number">2</span>, <span class="number">1</span>)</span><br><span class="line">(<span class="number">2</span>, <span class="number">2</span>)</span><br><span class="line">(<span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line">(<span class="number">2</span>, <span class="number">4</span>)</span><br><span class="line">(<span class="number">3</span>, <span class="number">4</span>)</span><br><span class="line">(<span class="number">4</span>, <span class="number">4</span>)</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>bfs+路径输出，记录路径有多种方式。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e1</span>+<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> b[N][N] = &#123;&#123;<span class="number">0</span>&#125;&#125;;</span><br><span class="line"><span class="keyword">bool</span> vis[N][N] = &#123;&#123;<span class="number">0</span>&#125;&#125;;</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> dx[] = &#123; <span class="number">0</span>,  <span class="number">1</span>, <span class="number">-1</span>,  <span class="number">0</span>,  <span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> dy[] = &#123; <span class="number">0</span>,  <span class="number">0</span>,  <span class="number">0</span>,  <span class="number">1</span>, <span class="number">-1</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">P</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> x, y;</span><br><span class="line">    <span class="keyword">int</span> p[N];</span><br><span class="line">    <span class="keyword">int</span> step;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function">P <span class="title">bfs</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(vis, <span class="number">0</span>, <span class="keyword">sizeof</span>(vis));</span><br><span class="line"></span><br><span class="line">    P sp;</span><br><span class="line">    sp.x = <span class="number">0</span>;</span><br><span class="line">    sp.y = <span class="number">0</span>;</span><br><span class="line">    sp.step = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">memset</span>(sp.p, <span class="number">0</span>, <span class="keyword">sizeof</span>(sp.p));</span><br><span class="line"></span><br><span class="line">    <span class="built_in">queue</span>&lt;P&gt; q;</span><br><span class="line">    q.push(sp);</span><br><span class="line">    vis[sp.x][sp.y] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(!q.empty()) &#123;</span><br><span class="line">        P tp = q.front();</span><br><span class="line">        q.pop();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(tp.x==n<span class="number">-1</span> &amp;&amp; tp.y==m<span class="number">-1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> tp;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        P np = tp;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">4</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> x = np.x = tp.x+dx[i];</span><br><span class="line">            <span class="keyword">int</span> y = np.y = tp.y+dy[i];</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(!vis[x][y] &amp;&amp; b[x][y]==<span class="number">0</span>) &#123;</span><br><span class="line">                np.step = tp.step+<span class="number">1</span>;</span><br><span class="line">                np.p[np.step] = i;</span><br><span class="line">                q.push(np);</span><br><span class="line">                vis[x][y] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    n = m = <span class="number">5</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;m; j++) &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;b[i][j]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    P ans = bfs();</span><br><span class="line">    <span class="keyword">if</span>(ans.step) &#123;</span><br><span class="line">        <span class="keyword">int</span> x=<span class="number">0</span>, y=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;=ans.step; i++) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"(%d, %d)\n"</span>, x+=dx[ans.p[i]], y+=dy[ans.p[i]]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>搜索</category>
        <category>BFS</category>
      </categories>
      <tags>
        <tag>BFS</tag>
        <tag>kuangbin 专题一</tag>
        <tag>POJ</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】UVA-11624 Fire!</title>
    <url>/posts/bc7a0665.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="Fire-UVA-11624"><a href="#Fire-UVA-11624" class="headerlink" title="Fire! (UVA - 11624)"></a>Fire! (<a href="https://vjudge.net/problem/UVA-11624" target="_blank" rel="noopener">UVA - 11624</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p><img src="/posts/bc7a0665/UVA11624.png" alt="img"></p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>先跑一次bfs求出火蔓延到每一格的时间，再以此为限制对人跑bfs求解，注意有多个起火点</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e3</span>+<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> b[N][N] = &#123;&#123;<span class="number">0</span>&#125;&#125;;</span><br><span class="line"><span class="keyword">bool</span> vis[N][N] = &#123;&#123;<span class="number">0</span>&#125;&#125;;</span><br><span class="line"><span class="keyword">int</span> t[N][N] = &#123;&#123;<span class="number">0</span>&#125;&#125;;</span><br><span class="line"><span class="keyword">int</span> T, n, m, ans = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> dx[] = &#123; <span class="number">1</span>, <span class="number">-1</span>,  <span class="number">0</span>,  <span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> dy[] = &#123; <span class="number">0</span>,  <span class="number">0</span>,  <span class="number">1</span>, <span class="number">-1</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">F</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> x, y;</span><br><span class="line">    <span class="keyword">int</span> step;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">P</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> x, y;</span><br><span class="line">    <span class="keyword">int</span> step;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">queue</span>&lt;F&gt; f;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pre</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(vis, <span class="number">0</span>, <span class="keyword">sizeof</span>(vis));</span><br><span class="line">    <span class="keyword">while</span>(!f.empty()) &#123;</span><br><span class="line">        F tf = f.front();</span><br><span class="line">        f.pop();</span><br><span class="line"></span><br><span class="line">        F nf = tf;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">4</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> x = nf.x = tf.x+dx[i];</span><br><span class="line">            <span class="keyword">int</span> y = nf.y = tf.y+dy[i];</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(x&lt;<span class="number">0</span> || x&gt;=n || y&lt;<span class="number">0</span> || y&gt;=m) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(!vis[x][y] &amp;&amp; b[x][y]==<span class="string">'.'</span>) &#123;</span><br><span class="line">                nf.step = tf.step+<span class="number">1</span>;</span><br><span class="line">                f.push(nf);</span><br><span class="line">                vis[x][y] = <span class="number">1</span>;</span><br><span class="line">                t[x][y] = nf.step;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(vis, <span class="number">0</span>, <span class="keyword">sizeof</span>(vis));</span><br><span class="line"></span><br><span class="line">    P sp;</span><br><span class="line">    sp.x = x;</span><br><span class="line">    sp.y = y;</span><br><span class="line">    sp.step = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">queue</span>&lt;P&gt; q;</span><br><span class="line">    q.push(sp);</span><br><span class="line">    vis[x][y] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(!q.empty()) &#123;</span><br><span class="line">        P tp = q.front();</span><br><span class="line">        q.pop();</span><br><span class="line"></span><br><span class="line">        P np = tp;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">4</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> x = np.x = tp.x+dx[i];</span><br><span class="line">            <span class="keyword">int</span> y = np.y = tp.y+dy[i];</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(x&lt;<span class="number">0</span> || x&gt;=n || y&lt;<span class="number">0</span> || y&gt;=m) &#123;</span><br><span class="line">                ans = tp.step+<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(!vis[x][y] &amp;&amp; b[x][y]==<span class="string">'.'</span> &amp;&amp; tp.step+<span class="number">1</span>&lt;t[x][y]) &#123;</span><br><span class="line">                np.step = tp.step+<span class="number">1</span>;</span><br><span class="line">                q.push(np);</span><br><span class="line">                vis[x][y] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> cs=<span class="number">1</span>; cs&lt;=T; cs++) &#123;</span><br><span class="line">        <span class="built_in">memset</span>(t, inf, <span class="keyword">sizeof</span>(t));</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;m);</span><br><span class="line">        <span class="keyword">int</span> x, y;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;m; j++) &#123;</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">" %c"</span>, &amp;b[i][j]);</span><br><span class="line">                <span class="keyword">if</span>(b[i][j]==<span class="string">'F'</span>) &#123;</span><br><span class="line">                    F sf;</span><br><span class="line">                    sf.x = i;</span><br><span class="line">                    sf.y = j;</span><br><span class="line">                    sf.step = <span class="number">0</span>;</span><br><span class="line">                    t[i][j] = <span class="number">0</span>;</span><br><span class="line">                    f.push(sf);</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span>(b[i][j]==<span class="string">'J'</span>) &#123;</span><br><span class="line">                    x = i;</span><br><span class="line">                    y = j;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        pre();</span><br><span class="line">        <span class="keyword">if</span>(bfs(x, y))</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"IMPOSSIBLE\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>搜索</category>
        <category>BFS</category>
      </categories>
      <tags>
        <tag>BFS</tag>
        <tag>kuangbin 专题一</tag>
        <tag>UVA</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】ZOJ-1164 Software CRC</title>
    <url>/posts/28963c9d.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="Software-CRC-ZOJ-1164"><a href="#Software-CRC-ZOJ-1164" class="headerlink" title="Software CRC (ZOJ - 1164)"></a>Software CRC (<a href="https://vjudge.net/problem/ZOJ-1164" target="_blank" rel="noopener">ZOJ - 1164</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>You work for a company which uses lots of personal computers. Your boss, Dr Penny Pincher, has wanted to link the computers together for some time but has been unwilling to spend any money on the Ethernet boards you have recommended. You, unwittingly, have pointed out that each of the PCs has come from the vendor with an asynchronous serial port at no extra cost. Dr Pincher, of course, recognizes her opportunity and assigns you the task of writing the software necessary to allow communication between PCs.</p><p>You’ve read a bit about communications and know that every transmission is subject to error and that the typical solution to this problem is to append some error checking information to the end of each message. This information allows the receiving program to detect when a transmission error has occurred (in most cases). So, off you go to the library, borrow the biggest book on communications you can find and spend your weekend (unpaid overtime) reading about error checking.</p><p>Finally you decide that CRC (cyclic redundancy check) is the best error checking for your situation and write a note to Dr Pincher detailing the proposed error checking mechanism noted below.</p><p>The message to be transmitted is viewed as a long positive binary number. The first byte of the message is treated as the most significant byte of the binary number. The second byte is the next most significant, etc. This binary number will be called “m” (for message). Instead of transmitting “m” you will transmit a message, “m2”, consisting of “m” followed by a two-byte CRC value.</p><p>The CRC value is chosen so that “m2” when divided by a certain 16-bit value “g” leaves a remainder of 0. This makes it easy for the receiving program to determine whether the message has been corrupted by transmission errors. It simply divides any message received by “g”. If the remainder of the division is zero, it is assumed that no error has occurred.</p><p>You notice that most of the suggested values of “g” in the book are odd, but don’t see any other similarities, so you select the value 34943 for “g” (the generator value).</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>You are to devise an algorithm for calculating the CRC value corresponding to any message that might be sent. To test this algorithm you will write a program which reads lines (each line being all characters up to, but not including the end of line character) as input, and for each line calculates the CRC value for the message contained in the line, and writes the numeric value of the CRC bytes (in hexadecimal notation) on an output line. Each input line will contain no more than 1024 ASCII characters. The input is terminated by a line that contains a # in column 1.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>CRC in hex format, one on each line. Note that each CRC printed should be in the range 0 to 34942 (decimal).</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight coffeescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">this</span> <span class="keyword">is</span> a test</span><br><span class="line"></span><br><span class="line">A</span><br><span class="line"><span class="comment">#</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">77 </span>FD</span><br><span class="line"><span class="symbol">00 </span><span class="number">00</span></span><br><span class="line"><span class="number">0</span>C <span class="number">86</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="keyword">union</span> &#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> L;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">        <span class="keyword">unsigned</span> <span class="keyword">char</span> b1, b2, b3, b4;</span><br><span class="line">    &#125; crc;</span><br><span class="line">&#125; data;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> c, flag;</span><br><span class="line">    <span class="keyword">int</span> num, g=<span class="number">34943</span>;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>) &#123;</span><br><span class="line">        num = data.L = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%c"</span>, &amp;c) &amp;&amp; c!=<span class="string">'\n'</span>) &#123;</span><br><span class="line">            num++;</span><br><span class="line">            flag = c;</span><br><span class="line">            data.L = ((data.L&lt;&lt;<span class="number">8</span>) + c)%g;</span><br><span class="line">        &#125;</span><br><span class="line">        data.L = (data.L&lt;&lt;<span class="number">16</span>)%g;</span><br><span class="line">        <span class="keyword">if</span> (data.L)</span><br><span class="line">            data.L = g-data.L;</span><br><span class="line">        <span class="keyword">if</span> (num==<span class="number">1</span> &amp;&amp; flag==<span class="string">'#'</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%02X %02X\n"</span>, (<span class="keyword">int</span>)data.crc.b2, (<span class="keyword">int</span>)data.crc.b1);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>ZOJ</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】ZOJ-1168 Function Run Fun</title>
    <url>/posts/5b18c849.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="Function-Run-Fun-ZOJ-1168"><a href="#Function-Run-Fun-ZOJ-1168" class="headerlink" title="Function Run Fun (ZOJ - 1168)"></a>Function Run Fun (<a href="https://vjudge.net/problem/ZOJ-1168" target="_blank" rel="noopener">ZOJ - 1168</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>We all love recursion! Don’t we?</p><p>Consider a three-parameter recursive function w(a, b, c):</p><p>if a &lt;= 0 or b &lt;= 0 or c &lt;= 0, then w(a, b, c) returns:<br>1</p><p>if a &gt; 20 or b &gt; 20 or c &gt; 20, then w(a, b, c) returns:<br>w(20, 20, 20)</p><p>if a &lt; b and b &lt; c, then w(a, b, c) returns:<br>w(a, b, c-1) + w(a, b-1, c-1) - w(a, b-1, c)</p><p>otherwise it returns:<br>w(a-1, b, c) + w(a-1, b-1, c) + w(a-1, b, c-1) - w(a-1, b-1, c-1)</p><p>This is an easy function to implement. The problem is, if implemented directly, for moderate values of a, b and c (for example, a = 15, b = 15, c = 15), the program takes hours to run because of the massive recursion.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>The input for your program will be a series of integer triples, one per line, until the end-of-file flag of -1 -1 -1. Using the above technique, you are to calculate w(a, b, c) efficiently and print the result.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>Print the value for w(a,b,c) for each triple.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span> <span class="number">1</span> <span class="number">1</span></span><br><span class="line"><span class="number">2</span> <span class="number">2</span> <span class="number">2</span></span><br><span class="line"><span class="number">10</span> <span class="number">4</span> <span class="number">6</span></span><br><span class="line"><span class="number">50</span> <span class="number">50</span> <span class="number">50</span></span><br><span class="line"><span class="number">-1</span> <span class="number">7</span> <span class="number">18</span></span><br><span class="line"><span class="number">-1</span> <span class="number">-1</span> <span class="number">-1</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">w(<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>) = <span class="number">2</span></span><br><span class="line">w(<span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>) = <span class="number">4</span></span><br><span class="line">w(<span class="number">10</span>, <span class="number">4</span>, <span class="number">6</span>) = <span class="number">523</span></span><br><span class="line">w(<span class="number">50</span>, <span class="number">50</span>, <span class="number">50</span>) = <span class="number">1048576</span></span><br><span class="line">w(<span class="number">-1</span>, <span class="number">7</span>, <span class="number">18</span>) = <span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> ans[<span class="number">21</span>][<span class="number">21</span>][<span class="number">21</span>];</span><br><span class="line"><span class="keyword">int</span> a, b, c;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">w</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (a&lt;=<span class="number">0</span> || b&lt;=<span class="number">0</span> || c&lt;=<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (a&gt;<span class="number">20</span> || b&gt;<span class="number">20</span> || c&gt;<span class="number">20</span>)</span><br><span class="line">        <span class="keyword">return</span> ans[<span class="number">20</span>][<span class="number">20</span>][<span class="number">20</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (ans[a][b][c]&gt;<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> ans[a][b][c];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (a&lt;b &amp;&amp; b&lt;c)</span><br><span class="line">        <span class="keyword">return</span> w(a, b, c<span class="number">-1</span>) + w(a, b<span class="number">-1</span>, c<span class="number">-1</span>) - w(a, b<span class="number">-1</span>, c);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> w(a<span class="number">-1</span>, b, c) + w(a<span class="number">-1</span>, b<span class="number">-1</span>, c) + w(a<span class="number">-1</span>, b, c<span class="number">-1</span>) - w(a<span class="number">-1</span>, b<span class="number">-1</span>, c<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">21</span>; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;<span class="number">21</span>; j++)</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k=<span class="number">0</span>; k&lt;<span class="number">21</span>; k++)</span><br><span class="line">                ans[i][j][k] = w(i, j, k);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>, &amp;a, &amp;b, &amp;c)==<span class="number">3</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (a==<span class="number">-1</span> &amp;&amp; b==<span class="number">-1</span> &amp;&amp; c==<span class="number">-1</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"w(%d, %d, %d) = %d\n"</span>, a, b, c, w(a, b, c));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>ZOJ</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】ZOJ-1195 Blowing Fuses</title>
    <url>/posts/c2ce0baf.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="Blowing-Fuses-ZOJ-1195"><a href="#Blowing-Fuses-ZOJ-1195" class="headerlink" title="Blowing Fuses (ZOJ - 1195)"></a>Blowing Fuses (<a href="https://vjudge.net/problem/ZOJ-1195" target="_blank" rel="noopener">ZOJ - 1195</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>Maybe you are familiar with the following situation. You have plugged in a lot of electrical devices, such as toasters, refrigerators, microwave ovens, computers, stereos, etc, and have them all running. But at the moment when you turn on the TV, the fuse blows, since the power drawn from all the machines is greater than the capacity of the fuse. Of course this is a great safety feature, avoiding that houses burn down too often due to fires ignited by overheating wires. But it is also annoying to walk down to the basement (or some other inconvenient place) to replace to fuse or switch it back on.</p><p>What one would like to have is a program that checks before turning on an electrical device whether the combined power drawn by all running devices exceeds the fuses capacity (and it blows), or whether it is safe to turn it on.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>The input consists of several test cases. Each test case describes a set of electrical devices and gives a sequence of turn on/off operations for these devices.</p><p>The first line of each test case contains three integers n, m and c, where n is the number of devices (n &lt;= 20), m the number of operations performed on these devices and c is the capacity of the fuse (in Amperes). The following n lines contain one positive integer ci each, the consumption (in Amperes) of the i-th device.</p><p>This is followed by m lines also containing one integer each, between 1 and n inclusive. They describe a sequence of turn on/turn off operations performed on the devices. For every number, the state of that particular devices is toggled, i.e. if it is currently running, it is turned off, and if it is currently turned off, it will by switched on. At the beginning all devices are turned off.</p><p>The input will be terminated by a test case starting with n = m = c = 0. This test case should not be processed.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For each test case, first output the number of the test case. Then output whether the fuse was blown during the operation sequence. The fuse will be blown if the sum of the power consumptions ci of turned on devices at some point exceeds the capacity of the fuse c.</p><p>If the fuse is not blown, output the maximal power consumption by turned on devices that occurred during the sequence.</p><p>Output a blank line after each test case.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">2 </span><span class="number">2</span> <span class="number">10</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">7</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">6</span> <span class="number">10</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">7</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="symbol">0 </span><span class="number">0</span> <span class="number">0</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">Sequence</span> <span class="string">1</span></span><br><span class="line"><span class="attr">Fuse</span> <span class="string">was blown.</span></span><br><span class="line"></span><br><span class="line"><span class="attr">Sequence</span> <span class="string">2</span></span><br><span class="line"><span class="attr">Fuse</span> <span class="string">was not blown.</span></span><br><span class="line"><span class="attr">Maximal</span> <span class="string">power consumption was 9 amperes.</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[<span class="number">30</span>][<span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> n, m, c, num = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (~<span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>, &amp;n, &amp;m, &amp;c) &amp;&amp; n &amp;&amp; m &amp;&amp; c) &#123;</span><br><span class="line">        <span class="built_in">memset</span>(a, <span class="number">0</span>, <span class="keyword">sizeof</span>(a));</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++) &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i][<span class="number">0</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> mx = <span class="number">0</span>, sum = <span class="number">0</span>, t;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++) &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;t);</span><br><span class="line">            <span class="keyword">if</span>(a[t][<span class="number">1</span>]==<span class="number">0</span>) &#123;</span><br><span class="line">                a[t][<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">                sum += a[t][<span class="number">0</span>];</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                a[t][<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">                sum -= a[t][<span class="number">0</span>];</span><br><span class="line">            &#125;</span><br><span class="line">            mx = max(sum, mx);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Sequence %d\n"</span>, num++);</span><br><span class="line">        <span class="keyword">if</span>(mx&gt;c) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Fuse was blown.\n"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Fuse was not blown.\n"</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Maximal power consumption was %d amperes.\n"</span>, mx);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>ZOJ</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】ZOJ-3057 Beans Game</title>
    <url>/posts/470bfea9.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="Beans-Game-ZOJ-3057"><a href="#Beans-Game-ZOJ-3057" class="headerlink" title="Beans Game(ZOJ-3057)"></a>Beans Game(<a href="https://vjudge.net/problem/ZOJ-3057" target="_blank" rel="noopener">ZOJ-3057</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>There are three piles of beans. TT and DD pick any number of beans from any pile or the same number from any two piles by turns. Who get the last bean will win. TT and DD are very clever.</p></blockquote><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><blockquote><p>Each test case contains of a single line containing 3 integers <em>a</em> <em>b</em> <em>c</em>, indicating the numbers of beans of these piles. It is assumed that 0 &lt;= <em>a</em>,<em>b</em>,<em>c</em> &lt;= 300 and <em>a</em> + <em>b</em> + <em>c</em> &gt; 0.</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><blockquote><p>For each test case, output 1 if TT will win, ouput 0 if DD will win.</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">1 </span><span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">1</span> <span class="number">1</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">3</span> <span class="number">6</span></span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="number">0</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>对于先手来说，如果数量分别为(a, a, b)或(a, b, a)，或(b, a, a)的形式，那么先手必赢，因为先手可以使其成为(a, a, a)的形式，那么不论后手怎么拿，都是先手最后使其成为(a, a, a)的形式直至(0, 0, 0)；如果(a, b, c)是必败态，那么将其中某个数加k，或将其中某两个数同时加k，就是必胜态。</p><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">bool</span> SG[<span class="number">305</span>][<span class="number">305</span>][<span class="number">305</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getSg</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;=<span class="number">300</span>; i++)</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;=<span class="number">300</span>; j++)</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>; k&lt;=<span class="number">300</span>; k++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(SG[i][j][k] == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> x=i+<span class="number">1</span>; x&lt;=<span class="number">300</span>; x++) SG[x][j][k] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> x=j+<span class="number">1</span>; x&lt;=<span class="number">300</span>; x++) SG[i][x][k] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> x=k+<span class="number">1</span>; x&lt;=<span class="number">300</span>; x++) SG[i][j][x] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> x=<span class="number">1</span>; x+i&lt;=<span class="number">300</span> &amp;&amp; x+j&lt;=<span class="number">300</span>; x++) SG[x+i][x+j][k] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> x=<span class="number">1</span>; x+j&lt;=<span class="number">300</span> &amp;&amp; x+k&lt;=<span class="number">300</span>; x++) SG[i][x+j][x+k] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> x=<span class="number">1</span>; x+i&lt;=<span class="number">300</span> &amp;&amp; x+k&lt;=<span class="number">300</span>; x++) SG[x+i][j][x+k] = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    getSg();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> a, b, c;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>, &amp;a, &amp;b, &amp;c))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, SG[a][b][c]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>博弈论</category>
      </categories>
      <tags>
        <tag>博弈论</tag>
        <tag>Wythoff博弈</tag>
        <tag>ZOJ</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】剑指Offer-03 数组中重复的数字</title>
    <url>/posts/d0e4523d.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="数组中重复的数字-剑指Offer-03"><a href="#数组中重复的数字-剑指Offer-03" class="headerlink" title="数组中重复的数字(剑指Offer-03)"></a>数组中重复的数字(<a href="https://leetcode-cn.com/problems/shu-zu-zhong-zhong-fu-de-shu-zi-lcof/" target="_blank" rel="noopener">剑指Offer-03</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>找出数组中重复的数字。</p><p>在一个长度为 n 的数组 nums 里的所有数字都在 0～n-1 的范围内。数组中某些数字是重复的，但不知道有几个数字重复了，也不知道每个数字重复了几次。请找出数组中任意一个重复的数字。</p></blockquote><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><blockquote><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">输入：[<span class="number">2</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">3</span>]</span><br><span class="line">输出：<span class="number">2</span> 或 <span class="number">3</span> </span><br></pre></td></tr></table></figure></blockquote><h2 id="限制"><a href="#限制" class="headerlink" title="限制"></a>限制</h2><blockquote><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">2 </span>&lt;= n &lt;= <span class="number">100000</span></span><br></pre></td></tr></table></figure></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>哈希表</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">int</span> a[<span class="number">100010</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">findRepeatNumber</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = nums.size();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(a[nums[i]]++)</span><br><span class="line">                <span class="keyword">return</span>(nums[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>剑指Offer</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】剑指Offer-04 二维数组中的查找</title>
    <url>/posts/85ab321c.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="二维数组中的查找-剑指Offer-04"><a href="#二维数组中的查找-剑指Offer-04" class="headerlink" title="二维数组中的查找(剑指Offer-04)"></a>二维数组中的查找(<a href="https://leetcode-cn.com/problems/er-wei-shu-zu-zhong-de-cha-zhao-lcof/" target="_blank" rel="noopener">剑指Offer-04</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>在一个 n * m 的二维数组中，每一行都按照从左到右递增的顺序排序，每一列都按照从上到下递增的顺序排序。请完成一个高效的函数，输入这样的一个二维数组和一个整数，判断数组中是否含有该整数。</p></blockquote><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><blockquote><p>现有矩阵 matrix 如下：</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">[</span><br><span class="line">  	[<span class="number">1</span>,   <span class="number">4</span>,  <span class="number">7</span>, <span class="number">11</span>, <span class="number">15</span>],</span><br><span class="line">  	[<span class="number">2</span>,   <span class="number">5</span>,  <span class="number">8</span>, <span class="number">12</span>, <span class="number">19</span>],</span><br><span class="line">  	[<span class="number">3</span>,   <span class="number">6</span>,  <span class="number">9</span>, <span class="number">16</span>, <span class="number">22</span>],</span><br><span class="line">  	[<span class="number">10</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">17</span>, <span class="number">24</span>],</span><br><span class="line">  	[<span class="number">18</span>, <span class="number">21</span>, <span class="number">23</span>, <span class="number">26</span>, <span class="number">30</span>]</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>给定 target = 5，返回 true。</p><p>给定 target = 20，返回 false。</p></blockquote><h2 id="限制"><a href="#限制" class="headerlink" title="限制"></a>限制</h2><blockquote><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">0 </span>&lt;= n &lt;= <span class="number">1000</span></span><br><span class="line"><span class="symbol">0 </span>&lt;= m &lt;= <span class="number">1000</span></span><br></pre></td></tr></table></figure></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>从右上至左下找（或左下至右上），每次都能使查找范围减少一行或一列。时间复杂度O(n+m)。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">findNumberIn2DArray</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt;&amp; matrix, <span class="keyword">int</span> target)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = matrix.size();</span><br><span class="line">        <span class="keyword">if</span>(n&lt;=<span class="number">0</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">int</span> m = matrix[<span class="number">0</span>].size();</span><br><span class="line">        <span class="keyword">if</span>(m&lt;=<span class="number">0</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> i=<span class="number">0</span>, j=m<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">while</span>(i&lt;n &amp;&amp; j&gt;=<span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span>(matrix[i][j] &lt; target)</span><br><span class="line">                i++;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(matrix[i][j] &gt; target)</span><br><span class="line">                j--;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>思维</category>
      </categories>
      <tags>
        <tag>剑指Offer</tag>
        <tag>思维</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】剑指Offer-05 替换空格</title>
    <url>/posts/628859e7.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="替换空格-剑指Offer-05"><a href="#替换空格-剑指Offer-05" class="headerlink" title="替换空格(剑指Offer-05)"></a>替换空格(<a href="https://leetcode-cn.com/problems/ti-huan-kong-ge-lcof/" target="_blank" rel="noopener">剑指Offer-05</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>请实现一个函数，把字符串 <code>s</code> 中的每个空格替换成”%20”。</p></blockquote><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><blockquote><figure class="highlight perl"><table><tr><td class="code"><pre><span class="line">&gt;输入：<span class="keyword">s</span> = <span class="string">"We are happy."</span></span><br><span class="line">输出：<span class="string">"We%20are%20happy."</span></span><br></pre></td></tr></table></figure></blockquote><h2 id="限制"><a href="#限制" class="headerlink" title="限制"></a>限制</h2><blockquote><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">0 </span>&lt;= s 的长度 &lt;= <span class="number">10000</span></span><br></pre></td></tr></table></figure></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>resize一下，然后双指针逆序遍历。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="built_in">string</span> <span class="title">replaceSpace</span><span class="params">(<span class="built_in">string</span> s)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>, len = s.size();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">char</span> c : s)</span><br><span class="line">            count += (c == <span class="string">' '</span>);</span><br><span class="line"></span><br><span class="line">        s.resize(len + <span class="number">2</span> * count);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=len<span class="number">-1</span>, j=s.size()<span class="number">-1</span>; i&lt;j; i--, j--) &#123;</span><br><span class="line">            <span class="keyword">if</span> (s[i] != <span class="string">' '</span>)</span><br><span class="line">                s[j] = s[i];</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                s[j<span class="number">-2</span>]=<span class="string">'%'</span>, s[j<span class="number">-1</span>]=<span class="string">'2'</span>, s[j]=<span class="string">'0'</span>;</span><br><span class="line">                j -= <span class="number">2</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> s;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>剑指Offer</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】剑指Offer-06 从尾到头打印链表</title>
    <url>/posts/993978f9.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="从尾到头打印链表-剑指Offer-06"><a href="#从尾到头打印链表-剑指Offer-06" class="headerlink" title="从尾到头打印链表(剑指Offer-06)"></a>从尾到头打印链表(<a href="https://leetcode-cn.com/problems/cong-wei-dao-tou-da-yin-lian-biao-lcof/" target="_blank" rel="noopener">剑指Offer-06</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>输入一个链表的头节点，从尾到头反过来返回每个节点的值（用数组返回）。</p></blockquote><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><blockquote><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">&gt;输入：head = [<span class="number">1</span>,<span class="number">3</span>,<span class="number">2</span>]</span><br><span class="line">输出：[<span class="number">2</span>,<span class="number">3</span>,<span class="number">1</span>]</span><br></pre></td></tr></table></figure></blockquote><h2 id="限制"><a href="#限制" class="headerlink" title="限制"></a>限制</h2><blockquote><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">0 </span>&lt;= 链表长度 &lt;= <span class="number">10000</span></span><br></pre></td></tr></table></figure></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>简单遍历链表，然后reverse一下就好。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * struct ListNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     ListNode *next;</span></span><br><span class="line"><span class="comment"> *     ListNode(int x) : val(x), next(NULL) &#123;&#125;</span></span><br><span class="line"><span class="comment"> * &#125;;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; <span class="title">reversePrint</span><span class="params">(ListNode* head)</span> </span>&#123;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; v;</span><br><span class="line">        ListNode *p = head;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(p != <span class="literal">NULL</span>)&#123;</span><br><span class="line">            v.push_back(p-&gt;val);</span><br><span class="line">            p = p-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        reverse(v.begin(), v.end());</span><br><span class="line">        <span class="keyword">return</span> v;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>数据结构</category>
        <category>链表</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>剑指Offer</tag>
        <tag>链表</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】剑指Offer-09 用两个栈实现队列</title>
    <url>/posts/e72ef196.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="用两个栈实现队列-剑指Offer-09"><a href="#用两个栈实现队列-剑指Offer-09" class="headerlink" title="用两个栈实现队列(剑指Offer-09)"></a>用两个栈实现队列(<a href="https://leetcode-cn.com/problems/yong-liang-ge-zhan-shi-xian-dui-lie-lcof/" target="_blank" rel="noopener">剑指Offer-09</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>用两个栈实现一个队列。队列的声明如下，请实现它的两个函数 appendTail 和 deleteHead ，分别完成在队列尾部插入整数和在队列头部删除整数的功能。(若队列中没有元素，deleteHead 操作返回 -1 )</p></blockquote><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><blockquote><p>示例 1：</p><figure class="highlight prolog"><table><tr><td class="code"><pre><span class="line">输入：</span><br><span class="line">[<span class="string">"CQueue"</span>,<span class="string">"appendTail"</span>,<span class="string">"deleteHead"</span>,<span class="string">"deleteHead"</span>]</span><br><span class="line">[[],[<span class="number">3</span>],[],[]]</span><br><span class="line">输出：[null,null,<span class="number">3</span>,<span class="number">-1</span>]</span><br></pre></td></tr></table></figure><p>示例 2：</p><figure class="highlight prolog"><table><tr><td class="code"><pre><span class="line">输入：</span><br><span class="line">[<span class="string">"CQueue"</span>,<span class="string">"deleteHead"</span>,<span class="string">"appendTail"</span>,<span class="string">"appendTail"</span>,<span class="string">"deleteHead"</span>,<span class="string">"deleteHead"</span>]</span><br><span class="line">[[],[],[<span class="number">5</span>],[<span class="number">2</span>],[],[]]</span><br><span class="line">输出：[null,<span class="number">-1</span>,null,null,<span class="number">5</span>,<span class="number">2</span>]</span><br></pre></td></tr></table></figure></blockquote><h2 id="限制"><a href="#限制" class="headerlink" title="限制"></a>限制</h2><blockquote><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span> &lt;= values &lt;= <span class="number">10000</span></span><br><span class="line">最多会对 appendTail、deleteHead 进行 <span class="number">10000</span> 次调用</span><br></pre></td></tr></table></figure></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>使用两个栈模拟队列，st1只负责维护插入，当需要删除时，为了维护队列的先入先出，需要先将st1里的数据倒入空的st2，此时st2的栈顶相当于队列头。注意st2未空时，不可倒入st1的数据，会打乱顺序，应当直接弹出。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CQueue</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">stack</span>&lt;<span class="keyword">int</span>&gt; st1, st2;</span><br><span class="line">    CQueue() &#123;</span><br><span class="line">        <span class="keyword">while</span>(!st1.empty()) st1.pop();</span><br><span class="line">        <span class="keyword">while</span>(!st2.empty()) st2.pop();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">appendTail</span><span class="params">(<span class="keyword">int</span> value)</span> </span>&#123;</span><br><span class="line">        st1.push(value);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">deleteHead</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(st2.empty())&#123;</span><br><span class="line">            <span class="keyword">while</span>(!st1.empty())&#123;</span><br><span class="line">                st2.push(st1.top());</span><br><span class="line">                st1.pop();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(!st2.empty())&#123;</span><br><span class="line">            <span class="keyword">int</span> ans = st2.top();</span><br><span class="line">            st2.pop();</span><br><span class="line">            <span class="keyword">return</span> ans;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Your CQueue object will be instantiated and called as such:</span></span><br><span class="line"><span class="comment"> * CQueue* obj = new CQueue();</span></span><br><span class="line"><span class="comment"> * obj-&gt;appendTail(value);</span></span><br><span class="line"><span class="comment"> * int param_2 = obj-&gt;deleteHead();</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>数据结构</category>
        <category>栈</category>
      </categories>
      <tags>
        <tag>剑指Offer</tag>
        <tag>栈</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】剑指Offer-07 重建二叉树</title>
    <url>/posts/75822d32.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="重建二叉树-剑指Offer-07"><a href="#重建二叉树-剑指Offer-07" class="headerlink" title="重建二叉树(剑指Offer-07)"></a>重建二叉树(<a href="https://leetcode-cn.com/problems/zhong-jian-er-cha-shu-lcof/" target="_blank" rel="noopener">剑指Offer-07</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>输入某二叉树的前序遍历和中序遍历的结果，请重建该二叉树。假设输入的前序遍历和中序遍历的结果中都不含重复的数字。</p></blockquote><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><blockquote><p>例如，给出</p><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">前序遍历 preorder = [<span class="number">3</span>,<span class="number">9</span>,<span class="number">20</span>,<span class="number">15</span>,<span class="number">7</span>]</span><br><span class="line">中序遍历 inorder = [<span class="number">9</span>,<span class="number">3</span>,<span class="number">15</span>,<span class="number">20</span>,<span class="number">7</span>]</span><br></pre></td></tr></table></figure><p>返回如下的二叉树：</p><pre><code>    3
   / \
  9  20
    /  \
   15   7
</code></pre></blockquote><h2 id="限制"><a href="#限制" class="headerlink" title="限制"></a>限制</h2><blockquote><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">0 </span>&lt;= 节点个数 &lt;= <span class="number">5000</span></span><br></pre></td></tr></table></figure></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>经典题，给出先序中序建树。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * struct TreeNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     TreeNode *left;</span></span><br><span class="line"><span class="comment"> *     TreeNode *right;</span></span><br><span class="line"><span class="comment"> *     TreeNode(int x) : val(x), left(NULL), right(NULL) &#123;&#125;</span></span><br><span class="line"><span class="comment"> * &#125;;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">TreeNode* <span class="title">solve</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> rt, <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; preorder, <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; inorder)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(l &gt; r) <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">        <span class="keyword">int</span> i=l;</span><br><span class="line">        <span class="keyword">while</span>(inorder[i]!=preorder[rt]) i++;</span><br><span class="line">        TreeNode *p = <span class="keyword">new</span> TreeNode(preorder[rt]);</span><br><span class="line">        p-&gt;left = solve(l, i<span class="number">-1</span>, rt+<span class="number">1</span>, preorder, inorder);</span><br><span class="line">        p-&gt;right = solve(i+<span class="number">1</span>, r, rt+<span class="number">1</span>+i-l, preorder, inorder);</span><br><span class="line">        <span class="keyword">return</span> p;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">TreeNode* <span class="title">buildTree</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; preorder, <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; inorder)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(preorder.size() == <span class="number">0</span>) <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">        <span class="keyword">return</span> solve(<span class="number">0</span>, preorder.size()<span class="number">-1</span>, <span class="number">0</span>, preorder, inorder);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>数据结构</category>
        <category>二叉树</category>
      </categories>
      <tags>
        <tag>剑指Offer</tag>
        <tag>二叉树</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】剑指Offer-10.1 斐波那契数列</title>
    <url>/posts/af45d13f.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="斐波那契数列-剑指Offer-10-1"><a href="#斐波那契数列-剑指Offer-10-1" class="headerlink" title="斐波那契数列(剑指Offer-10.1)"></a>斐波那契数列(<a href="https://leetcode-cn.com/problems/fei-bo-na-qi-shu-lie-lcof/" target="_blank" rel="noopener">剑指Offer-10.1</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>写一个函数，输入 n ，求斐波那契（Fibonacci）数列的第 n 项（即 F(N)）。斐波那契数列的定义如下：</p><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">F(<span class="number">0</span>) = <span class="number">0</span>,   F(<span class="number">1</span>) = <span class="number">1</span></span><br><span class="line">F(N) = F(N - <span class="number">1</span>) + F(N - <span class="number">2</span>), 其中 N &gt; <span class="number">1.</span></span><br></pre></td></tr></table></figure><p>斐波那契数列由 0 和 1 开始，之后的斐波那契数就是由之前的两数相加而得出。</p><p>答案需要取模 1e9+7（1000000007），如计算初始结果为：1000000008，请返回 1。</p></blockquote><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><blockquote><p><strong>示例 1：</strong></p><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">输入：n = <span class="number">2</span></span><br><span class="line">输出：<span class="number">1</span></span><br></pre></td></tr></table></figure><p><strong>示例 2：</strong></p><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">&gt;输入：n = <span class="number">5</span></span><br><span class="line">输出：<span class="number">5</span></span><br></pre></td></tr></table></figure></blockquote><h2 id="限制"><a href="#限制" class="headerlink" title="限制"></a>限制</h2><blockquote><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">0 </span>&lt;= n &lt;= <span class="number">100</span></span><br></pre></td></tr></table></figure></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>简单Fibonacci递推。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">fib</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> a[<span class="number">105</span>] = &#123;<span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>&#125;;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">3</span>; i&lt;=<span class="number">100</span>; i++)</span><br><span class="line">            a[i] = (a[i<span class="number">-1</span>] + a[i<span class="number">-2</span>]) % <span class="number">1000000007</span>;</span><br><span class="line">        <span class="keyword">return</span> a[n];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>剑指Offer</tag>
        <tag>Fibonacci</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】剑指Offer-10.2 青蛙跳台阶问题</title>
    <url>/posts/55464e25.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="青蛙跳台阶问题-剑指Offer-10-2"><a href="#青蛙跳台阶问题-剑指Offer-10-2" class="headerlink" title="青蛙跳台阶问题(剑指Offer-10.2)"></a>青蛙跳台阶问题(<a href="https://leetcode-cn.com/problems/qing-wa-tiao-tai-jie-wen-ti-lcof/" target="_blank" rel="noopener">剑指Offer-10.2</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>一只青蛙一次可以跳上1级台阶，也可以跳上2级台阶。求该青蛙跳上一个 n 级的台阶总共有多少种跳法。</p><p>答案需要取模 1e9+7（1000000007），如计算初始结果为：1000000008，请返回 1。</p></blockquote><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><blockquote><p>示例 1：</p><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">输入：n = <span class="number">2</span></span><br><span class="line">输出：<span class="number">2</span></span><br></pre></td></tr></table></figure><p>示例 2：</p><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">输入：n = <span class="number">7</span></span><br><span class="line">输出：<span class="number">21</span></span><br></pre></td></tr></table></figure><p>示例 3：</p><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">输入：n = <span class="number">0</span></span><br><span class="line">输出：<span class="number">1</span></span><br></pre></td></tr></table></figure></blockquote><h2 id="限制"><a href="#限制" class="headerlink" title="限制"></a>限制</h2><blockquote><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">0 </span>&lt;= n &lt;= <span class="number">100</span></span><br></pre></td></tr></table></figure></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>同<a href="https://blog.lordash.cf/posts/af45d13f.html">【题解】剑指Offer-10.1 斐波那契数列</a>，初始值不同，简单Fibonacci递推。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">numWays</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> a[<span class="number">105</span>] = &#123;<span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>&#125;;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">3</span>; i&lt;=<span class="number">100</span>; i++)</span><br><span class="line">            a[i] = (a[i<span class="number">-1</span>] + a[i<span class="number">-2</span>]) % <span class="number">1000000007</span>;</span><br><span class="line">        <span class="keyword">return</span> a[n];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>水题</category>
      </categories>
      <tags>
        <tag>水题</tag>
        <tag>剑指Offer</tag>
        <tag>Fibonacci</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】剑指Offer-11 旋转数组的最小数字</title>
    <url>/posts/ca03c7e1.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="旋转数组的最小数字-剑指Offer-11"><a href="#旋转数组的最小数字-剑指Offer-11" class="headerlink" title="旋转数组的最小数字(剑指Offer-11)"></a>旋转数组的最小数字(<a href="https://leetcode-cn.com/problems/xuan-zhuan-shu-zu-de-zui-xiao-shu-zi-lcof/" target="_blank" rel="noopener">剑指Offer-11</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>把一个数组最开始的若干个元素搬到数组的末尾，我们称之为数组的旋转。输入一个递增排序的数组的一个旋转，输出旋转数组的最小元素。例如，数组<code>[3,4,5,1,2]</code> 为<code>[1,2,3,4,5]</code> 的一个旋转，该数组的最小值为1。</p></blockquote><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><blockquote><p><strong>示例 1：</strong></p><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">输入：[<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">1</span>,<span class="number">2</span>]</span><br><span class="line">输出：<span class="number">1</span></span><br></pre></td></tr></table></figure><p><strong>示例 2：</strong></p><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">输入：[<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">0</span>,<span class="number">1</span>]</span><br><span class="line">输出：<span class="number">0</span></span><br></pre></td></tr></table></figure></blockquote><h2 id="限制"><a href="#限制" class="headerlink" title="限制"></a>限制</h2><blockquote><p>无</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>二分，<code>numbers[mid]</code>与<code>numbers[r]</code>比较。</p><p>无法与左端点比较进行二分，当<code>i=0, j=4, mid=2</code>时，以下情况都有 <code>numbers[mid] &gt; numbers[l]</code>，而结果不同。<br><code>[1,2,3,4,5]</code>， 答案<code>x=0</code>在mid左侧。<br><code>[3,4,5,1,2]</code> ，答案<code>x=1</code>在mid右侧。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">minArray</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; numbers)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> l = <span class="number">0</span>, r = numbers.size()<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">while</span>(l &lt; r)&#123;</span><br><span class="line">            <span class="keyword">int</span> mid = (l + r) / <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span>(numbers[mid] &lt; numbers[r])&#123;</span><br><span class="line">                r = mid;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(numbers[mid] &gt; numbers[r])&#123;</span><br><span class="line">                l = mid + <span class="number">1</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                r = r - <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> numbers[l];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>搜索</category>
        <category>二分</category>
      </categories>
      <tags>
        <tag>二分</tag>
        <tag>剑指Offer</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】剑指Offer-12 矩阵中的路径</title>
    <url>/posts/f38d05ab.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="矩阵中的路径-剑指Offer-12"><a href="#矩阵中的路径-剑指Offer-12" class="headerlink" title="矩阵中的路径(剑指Offer-12)"></a>矩阵中的路径(<a href="https://leetcode-cn.com/problems/ju-zhen-zhong-de-lu-jing-lcof/" target="_blank" rel="noopener">剑指Offer-12</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>请设计一个函数，用来判断在一个矩阵中是否存在一条包含某字符串所有字符的路径。路径可以从矩阵中的任意一格开始，每一步可以在矩阵中向左、右、上、下移动一格。如果一条路径经过了矩阵的某一格，那么该路径不能再次进入该格子。例如，在下面的3×4的矩阵中包含一条字符串“bfce”的路径（路径中的字母用加粗标出）。</p><blockquote><p>[[a,<strong>b</strong>,c,e],<br>[s,<strong>f</strong>,<strong>c</strong>,s],<br>[a,d,<strong>e</strong>,e]]</p></blockquote><p>但矩阵中不包含字符串“abfb”的路径，因为字符串的第一个字符b占据了矩阵中的第一行第二个格子之后，路径不能再次进入这个格子。</p></blockquote><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><blockquote><p>示例 1：</p><figure class="highlight prolog"><table><tr><td class="code"><pre><span class="line">输入：board = [[<span class="string">"A"</span>,<span class="string">"B"</span>,<span class="string">"C"</span>,<span class="string">"E"</span>],[<span class="string">"S"</span>,<span class="string">"F"</span>,<span class="string">"C"</span>,<span class="string">"S"</span>],[<span class="string">"A"</span>,<span class="string">"D"</span>,<span class="string">"E"</span>,<span class="string">"E"</span>]], word = <span class="string">"ABCCED"</span></span><br><span class="line">输出：true</span><br></pre></td></tr></table></figure><p>示例 2：</p><figure class="highlight nix"><table><tr><td class="code"><pre><span class="line">输入：<span class="attr">board</span> = [[<span class="string">"a"</span>,<span class="string">"b"</span>],[<span class="string">"c"</span>,<span class="string">"d"</span>]], <span class="attr">word</span> = <span class="string">"abcd"</span></span><br><span class="line">输出：<span class="literal">false</span></span><br></pre></td></tr></table></figure></blockquote><h2 id="限制"><a href="#限制" class="headerlink" title="限制"></a>限制</h2><blockquote><ul><li><code>1 &lt;= board.length &lt;= 200</code></li><li><code>1 &lt;= board[i].length &lt;= 200</code></li></ul></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>dfs即可。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">exist</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">char</span>&gt;&gt;&amp; board, <span class="built_in">string</span> word)</span> </span>&#123;</span><br><span class="line">        n = board.size();</span><br><span class="line">        <span class="keyword">if</span>(n &lt;= <span class="number">0</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">        m = board[<span class="number">0</span>].size();</span><br><span class="line">        <span class="keyword">if</span>(m &lt;= <span class="number">0</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;m; j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(dfs(board, word, i, j, <span class="number">0</span>))</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="keyword">int</span> n, m;</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">dfs</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">char</span>&gt;&gt;&amp; board, <span class="built_in">string</span> word, <span class="keyword">int</span> i, <span class="keyword">int</span> j, <span class="keyword">int</span> k)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(i&lt;<span class="number">0</span> || i&gt;=n || j&lt;<span class="number">0</span> || j&gt;=m || board[i][j]!=word[k])  <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">if</span>(k == word.size()<span class="number">-1</span>)  <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">        board[i][j] = <span class="string">'\0'</span>;</span><br><span class="line">        <span class="keyword">bool</span> ans = dfs(board, word, i+<span class="number">1</span>, j, k+<span class="number">1</span>) || dfs(board, word, i, j+<span class="number">1</span>, k+<span class="number">1</span>) ||</span><br><span class="line">                   dfs(board, word, i<span class="number">-1</span>, j, k+<span class="number">1</span>) || dfs(board, word, i, j<span class="number">-1</span>, k+<span class="number">1</span>);</span><br><span class="line">        board[i][j] = word[k];</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>搜索</category>
        <category>DFS</category>
      </categories>
      <tags>
        <tag>DFS</tag>
        <tag>剑指Offer</tag>
      </tags>
  </entry>
  <entry>
    <title>【题解】剑指Offer-13 机器人的运动范围</title>
    <url>/posts/312167b6.html</url>
    <content><![CDATA[<!-- build time:Sat Mar 27 2021 11:59:41 GMT+0800 (GMT+08:00) --><h1 id="机器人的运动范围-剑指Offer-13"><a href="#机器人的运动范围-剑指Offer-13" class="headerlink" title="机器人的运动范围(剑指Offer-13)"></a>机器人的运动范围(<a href="https://leetcode-cn.com/problems/ji-qi-ren-de-yun-dong-fan-wei-lcof/" target="_blank" rel="noopener">剑指Offer-13</a>)</h1><h2 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h2><blockquote><p>地上有一个m行n列的方格，从坐标 [0,0] 到坐标 [m-1,n-1] 。一个机器人从坐标 [0, 0] 的格子开始移动，它每次可以向左、右、上、下移动一格（不能移动到方格外），也不能进入行坐标和列坐标的数位之和大于k的格子。例如，当k为18时，机器人能够进入方格 [35, 37] ，因为3+5+3+7=18。但它不能进入方格 [35, 38]，因为3+5+3+8=19。请问该机器人能够到达多少个格子？</p></blockquote><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><blockquote><p><strong>示例 1：</strong></p><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">输入：m = <span class="number">2</span>, n = <span class="number">3</span>, k = <span class="number">1</span></span><br><span class="line">输出：<span class="number">3</span></span><br></pre></td></tr></table></figure><p><strong>示例 2：</strong></p><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">输入：m = <span class="number">2</span>, n = <span class="number">3</span>, k = <span class="number">1</span></span><br><span class="line">输出：<span class="number">3</span></span><br></pre></td></tr></table></figure></blockquote><h2 id="限制"><a href="#限制" class="headerlink" title="限制"></a>限制</h2><blockquote><ul><li><code>1 &lt;= n,m &lt;= 100</code></li><li><code>0 &lt;= k &lt;= 20</code></li></ul></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>BFS即可</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div><div class="fold_hider"><div class="close hider_title">查看代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">movingCount</span><span class="params">(<span class="keyword">int</span> m, <span class="keyword">int</span> n, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!k) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        <span class="function"><span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &gt; <span class="title">vis</span><span class="params">(m, <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;(n, <span class="number">0</span>))</span></span>;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">queue</span>&lt;pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; &gt; q;</span><br><span class="line">        q.push(&#123;<span class="number">0</span>,<span class="number">0</span>&#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> dx[<span class="number">2</span>] = &#123;<span class="number">0</span>, <span class="number">1</span>&#125;, dy[<span class="number">2</span>] = &#123;<span class="number">1</span>, <span class="number">0</span>&#125;;</span><br><span class="line">        <span class="keyword">int</span> ans = vis[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(!q.empty())&#123;</span><br><span class="line">            <span class="keyword">auto</span> [x, y] = q.front();</span><br><span class="line">            q.pop();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">2</span>; i++)&#123;</span><br><span class="line">                <span class="keyword">int</span> tx = dx[i]+x, ty = dy[i]+y;</span><br><span class="line">                <span class="keyword">if</span>(tx&lt;<span class="number">0</span> || tx&gt;=m || ty&lt;<span class="number">0</span> || ty&gt;=n || vis[tx][ty] || get(tx)+get(ty)&gt;k)</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                q.push(&#123;tx, ty&#125;);</span><br><span class="line">                vis[tx][ty] = <span class="number">1</span>;</span><br><span class="line">                ans++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">get</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> t = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(x)&#123;</span><br><span class="line">            t += x % <span class="number">10</span>;</span><br><span class="line">            x /= <span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> t;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>题解</category>
        <category>基础</category>
        <category>搜索</category>
        <category>BFS</category>
      </categories>
      <tags>
        <tag>BFS</tag>
        <tag>剑指Offer</tag>
      </tags>
  </entry>
</search>
